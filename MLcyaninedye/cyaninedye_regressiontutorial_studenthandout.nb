(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3602170,      65899]
NotebookOptionsPosition[   3552210,      65173]
NotebookOutlinePosition[   3553985,      65219]
CellTagsIndexPosition[   3553672,      65208]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Version Date: 25 Jan 2023", "Text",
 CellChangeTimes->{{3.872766276295149*^9, 3.872766298415247*^9}, {
   3.8728579623795547`*^9, 3.872857977150217*^9}, {3.8731432979387712`*^9, 
   3.8731432980857515`*^9}, {3.8733831032664824`*^9, 
   3.8733831035523453`*^9}, {3.8735601376796846`*^9, 
   3.8735601388796263`*^9}, {3.87381475652825*^9, 3.873814758133382*^9}, {
   3.8739021477325687`*^9, 3.873902147852553*^9}, {3.8801269233161044`*^9, 
   3.880126927301694*^9}, 3.880194993618189*^9, {3.883645700673868*^9, 
   3.883645702665185*^9}},ExpressionUUID->"418c2fce-ad73-40c0-8f91-\
700a63a02cd2"],

Cell[CellGroupData[{

Cell["Cyanine Dye Regression Tutorial Student Handout", "Title",
 CellChangeTimes->{{3.8231070081588717`*^9, 3.823107011860821*^9}, 
   3.872242900435793*^9},ExpressionUUID->"e78cea1c-9510-4ff1-b7da-\
1e06c990e6c5"],

Cell["Part I ", "Title",
 CellChangeTimes->{{3.8727711784304447`*^9, 3.8727711796224403`*^9}, 
   3.8731435696344585`*^9},ExpressionUUID->"e4bc22fc-ce52-463f-b9ef-\
47c19cad53f4"],

Cell[CellGroupData[{

Cell["Objectives", "Section",
 Editable->False,
 CellChangeTimes->{{3.822149137032115*^9, 
  3.822149140700242*^9}},ExpressionUUID->"82a53d30-79e3-41e7-90ff-\
5b5600ac9493"],

Cell["\<\
Build regression models that predict the wavelength of maximum absorbance of \
different cyanine dyes.\
\>", "Item",
 CellChangeTimes->{{3.822149146525083*^9, 3.8221491600613403`*^9}, 
   3.8722428892589817`*^9, 3.8728580488551235`*^9, {3.8801290112303*^9, 
   3.880129014236439*^9}, 
   3.883645721169324*^9},ExpressionUUID->"5845d42f-156c-4dc9-98eb-\
7668f1b86f39"],

Cell["\<\
Understand and apply different types of regression models, including simple \
linear regression, multiple regression, penalized regression, and tree models.\
\>", "Item",
 CellChangeTimes->{{3.822149146525083*^9, 3.822149165621443*^9}, 
   3.8722429080598383`*^9, 3.872858055071031*^9, 
   3.8836457236069603`*^9},ExpressionUUID->"7f6147b8-9a0d-446f-b45e-\
50bfb8ca387b"],

Cell["\<\
Use feature selection and the evaluation of feature importance to improve and \
interpret model performances.\
\>", "Item",
 CellChangeTimes->{{3.822149146525083*^9, 3.822149171565956*^9}, 
   3.823008025340351*^9, 3.8722429132811193`*^9, {3.872858061361403*^9, 
   3.8728580780807405`*^9}, 
   3.8836457197650537`*^9},ExpressionUUID->"163625f1-74fb-45fa-948c-\
8f0bb7d0b1d5"],

Cell["\<\
Use regression model analysis as part of the scientific discovery process by \
generating hypotheses for factors that affect cyanine dye absorption.\
\>", "Item",
 CellChangeTimes->{{3.822149146525083*^9, 3.8221491749168243`*^9}, {
   3.822974352685799*^9, 3.8229743536086826`*^9}, 3.872242920409349*^9, {
   3.872858142906238*^9, 3.872858160881381*^9}, {3.880131280969778*^9, 
   3.8801312848505087`*^9}, 
   3.883645718350218*^9},ExpressionUUID->"2f697c54-758b-4d1a-baf4-\
5be606cb27f4"],

Cell["\<\
Gain proficiency in reading and writing Mathematica code in a notebook \
environment.\
\>", "Item",
 CellChangeTimes->{{3.822149146525083*^9, 3.8221491749168243`*^9}, {
   3.822974352685799*^9, 3.8229743536086826`*^9}, 3.872242920409349*^9, {
   3.872858142906238*^9, 3.87285817445758*^9}, 
   3.883645716850095*^9},ExpressionUUID->"d1baa35a-be51-4558-b477-\
5805d3503148"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting started", "Section",
 CellChangeTimes->{{3.822149186324263*^9, 3.822149187780306*^9}, 
   3.8230446650335455`*^9},ExpressionUUID->"426ecedc-3f25-4457-b7bf-\
48bdc37e1e02"],

Cell[TextData[{
 StyleBox["If you have limited Mathematica experience,",
  FontWeight->"Bold"],
 " you may wish to watch this screencast (12 minutes) which will help you get \
started by introducing basic concepts, including entering input, \
understanding functions, working with data and matrix operations, and finding \
functions.  ",
 ButtonBox["https://www.wolfram.com/broadcast/video.php?c=86&v=327",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/broadcast/video.php?c=86&v=327"], None},
  ButtonNote->"https://www.wolfram.com/broadcast/video.php?c=86&v=327"]
}], "Item",
 CellChangeTimes->{{3.8230081442832003`*^9, 3.8230082012543187`*^9}, {
  3.82309760833932*^9, 3.8230976155260344`*^9}, {3.8230977081328497`*^9, 
  3.8230978492440367`*^9}, {3.872754943321055*^9, 
  3.8727549465369043`*^9}},ExpressionUUID->"a0d22247-f172-4b29-80a3-\
6a06412b3a3f"],

Cell[TextData[{
 StyleBox["If you have experience in another programming language,", "Item",
  FontWeight->"Bold"],
 StyleBox[" the ", "Item"],
 StyleBox["Fast Introduction for Programmers", "Item",
  FontSlant->"Italic"],
 StyleBox[" is a good way to get started", "Item"],
 ButtonBox[" \
https://www.wolfram.com/language/fast-introduction-for-programmers/en/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/language/fast-introduction-for-programmers/\
en/"], None},
  ButtonNote->
   "https://www.wolfram.com/language/fast-introduction-for-programmers/en/"]
}], "Item",
 CellChangeTimes->{{3.8230081442832003`*^9, 3.823008203167594*^9}, {
  3.82309779698158*^9, 3.823097799603918*^9}, {3.823097854147244*^9, 
  3.823097888938476*^9}},ExpressionUUID->"ca4f4368-3d17-4bfe-8245-\
80bd9741ca73"],

Cell[TextData[{
 "Mathematica notebooks consist of text cells (like this one) and program \
input and output cells like the ones below. An input cell is evaluated by \
typing ",
 StyleBox["Shift+Enter", "Code"]
}], "Text",
 CellChangeTimes->{{3.823097902138246*^9, 3.823098018407836*^9}, 
   3.8722432314689627`*^9},ExpressionUUID->"cbe30ff3-81ac-4389-a928-\
6550567b9974"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic of Mathematica", "Section",
 CellChangeTimes->{{3.8221492038866053`*^9, 
  3.822149206840592*^9}},ExpressionUUID->"a7615bac-c2cf-489b-aa3c-\
865be226f48e"],

Cell[CellGroupData[{

Cell["Variables", "Subsection",
 CellChangeTimes->{{3.8230984808787003`*^9, 
  3.823098481890037*^9}},ExpressionUUID->"7eae000f-7f0f-4b8a-80f5-\
e46b9a61e7ba"],

Cell[TextData[{
 StyleBox["Variables",
  FontWeight->"Bold"],
 " are reserved memory locations that store values.  Think of variables like \
a container that hold data which can be changed later in the program. For \
example to create a variable named \[OpenCurlyDoubleQuote]number\
\[CloseCurlyDoubleQuote] and assign its value as 100:"
}], "Text",
 CellChangeTimes->{{3.823098067218698*^9, 3.823098144840785*^9}, 
   3.823098478657102*^9, {3.832673080899906*^9, 3.832673112860669*^9}},
 FontWeight->"Plain",ExpressionUUID->"4b1ac693-939e-4969-9400-2cafa31ce268"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"number", " ", "=", " ", "100", " "}]], "Input",
 CellChangeTimes->{{3.8223956155801487`*^9, 3.822395616882503*^9}, {
   3.823016807586953*^9, 3.8230168242348433`*^9}, {3.8230169375983586`*^9, 
   3.82301694936567*^9}, 3.823017081155941*^9, {3.823017197234457*^9, 
   3.823017198213146*^9}, {3.8230358823943205`*^9, 3.8230358826313734`*^9}, {
   3.823098156341127*^9, 3.823098175958355*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"a69a7eb4-0588-42ff-9e6d-f459edf5ef6e"],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{3.880114816346592*^9, 3.8801300708025007`*^9, 
  3.8802128428847103`*^9, 3.8802134105120726`*^9, 3.880213729966197*^9, 
  3.8802140637161555`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"e9820155-50b2-4627-95cb-1e30a07c358c"]
}, Open  ]],

Cell["This variable can be modified at any time:", "Text",
 CellChangeTimes->{{3.8230981639606953`*^9, 
  3.8230981685473537`*^9}},ExpressionUUID->"5419f0fb-f9ee-489d-b812-\
cc09e315c320"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"number", " ", "=", " ", "99"}], "\[IndentingNewLine]", 
 RowBox[{"number", " ", "=", " ", "1", " "}]}], "Input",
 CellChangeTimes->{{3.822395633397341*^9, 3.822395641498336*^9}, {
  3.8230171288512506`*^9, 3.8230171626590652`*^9}, {3.823017779522588*^9, 
  3.823017816053735*^9}, {3.8230964137761602`*^9, 3.823096419609075*^9}, {
  3.823098174252268*^9, 3.8230981861053133`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"56488ee7-ec40-4a2a-9773-9df13e487dd6"],

Cell[BoxData["99"], "Output",
 CellChangeTimes->{3.8801148164313655`*^9, 3.8801300708464336`*^9, 
  3.8802128429964104`*^9, 3.880213410537006*^9, 3.8802137299911127`*^9, 
  3.8802140637415705`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"ba7be460-76dd-4097-bbe3-aeaadf17c45c"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.8801148164313655`*^9, 3.8801300708464336`*^9, 
  3.8802128429964104`*^9, 3.880213410537006*^9, 3.8802137299911127`*^9, 
  3.8802140637545757`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"3643dd89-26fa-4a11-aee0-8174149b7775"]
}, Open  ]],

Cell["The value of number has changed to 1:", "Text",
 CellChangeTimes->{{3.823098191894617*^9, 3.8230981986497803`*^9}, {
  3.823098246818089*^9, 
  3.8230982482874823`*^9}},ExpressionUUID->"67cdca8b-f77b-4eb7-aae0-\
5e6357c270f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"number", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "see", " ", "what", " ", "the", " ", "value", " ", "is", " ", "now"}], 
    "..."}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.823098249335236*^9, 3.8230982594888887`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"6bc22c94-d3df-4b19-8dee-dae36d5074a6"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.880114816516823*^9, 3.8801300709162216`*^9, 
  3.8802128430682244`*^9, 3.880213410570613*^9, 3.8802137300276575`*^9, 
  3.8802140637754793`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"53a2be64-f2c0-458d-bfdb-1e598ca72265"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Subsection",
 CellChangeTimes->{{3.823098485925439*^9, 
  3.823098486649734*^9}},ExpressionUUID->"2bba8de4-c060-445a-bfbb-\
4dc0c973df8c"],

Cell[TextData[{
 StyleBox["Functions",
  FontWeight->"Bold"],
 " are sets of operations that take an action on some input.  Functions are \
defined using the delayed assignment (:=) operator, and the names of \
user-provided input values, called ",
 StyleBox["arguments",
  FontWeight->"Bold"],
 ", end with a underscore (\[OpenCurlyDoubleQuote]_\[CloseCurlyDoubleQuote]). \
 \n\nFor example, let\[CloseCurlyQuote]s define an ",
 StyleBox["absoluteValue",
  FontSlant->"Italic"],
 " function as below, which takes one argument, the number for which the \
absolute value should be calculated:"
}], "Text",
 CellChangeTimes->{{3.823098271896504*^9, 3.82309833914855*^9}, {
  3.83007454529137*^9, 3.830074552538457*^9}, {3.872245135121677*^9, 
  3.872245135745368*^9}, {3.872754986816079*^9, 
  3.872754990322309*^9}},ExpressionUUID->"848c2029-db7e-450f-bea1-\
0afc2f9784ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"absoluteValue", "[", "num_", "]"}], ":=", 
  RowBox[{"If", "[", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"num", " ", "\[GreaterEqual]", " ", "0"}], ")"}], ",", " ", 
    RowBox[{"(*", 
     RowBox[{"condition", " ", "to", " ", "check"}], "*)"}], 
    "\[IndentingNewLine]", "num", ",", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"if", " ", "true"}], ",", " ", 
      RowBox[{"returns", " ", "num"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"-", "num"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{"else", ",", " ", 
     RowBox[{"returns", " ", "-", "num"}]}], "*)"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.822395652067272*^9, 3.822395693235593*^9}, 
   3.823010144210717*^9, {3.82301717577075*^9, 3.823017205574666*^9}, {
   3.8230172364176383`*^9, 3.823017293102391*^9}, {3.823017330631357*^9, 
   3.8230173940302267`*^9}, {3.8230175311028004`*^9, 
   3.8230175703760557`*^9}, {3.8230179123987246`*^9, 
   3.8230179154744115`*^9}, {3.8230359329172025`*^9, 3.823035933283441*^9}, {
   3.8230359709082127`*^9, 3.8230359712943907`*^9}, {3.8230361980987673`*^9, 
   3.8230362000914593`*^9}, {3.823098345801241*^9, 3.823098356645176*^9}, {
   3.832673136166507*^9, 3.832673139384898*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"8ce4830f-282b-4bd0-a088-3375a6080990"],

Cell["\<\
Functions are called by providing their names, for example, the absolute \
value of 2 is:\
\>", "Text",
 CellChangeTimes->{{3.82309837222108*^9, 
  3.823098414959811*^9}},ExpressionUUID->"2ee95303-b3d6-461d-ba62-\
c69016a7b165"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"absoluteValue", "[", "2", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.823010043698063*^9, 3.8230100726339993`*^9}, {
   3.8230175727437572`*^9, 3.823017585182753*^9}, {3.823017895005603*^9, 
   3.8230179052347345`*^9}, {3.8230541645949864`*^9, 3.8230541683730774`*^9}, 
   3.823098362676044*^9, {3.823098394384104*^9, 3.823098398947564*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"8ac5098f-3d1b-4165-a804-1ab828bf636e"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.880114816594616*^9, 3.8801300709938393`*^9, 
  3.880212843131055*^9, 3.8802134106035247`*^9, 3.880213730059617*^9, 
  3.8802140638062487`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"f6ff6737-77c3-4a79-b74e-78578006804c"]
}, Open  ]],

Cell["And the absolute value of -4 is:", "Text",
 CellChangeTimes->{{3.823098401944828*^9, 
  3.823098413194357*^9}},ExpressionUUID->"96fab1d4-f8d4-4731-895d-\
5c2a296859bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"absoluteValue", "[", 
  RowBox[{"-", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.823098417311329*^9, 3.823098420582196*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"e2925dda-2f6f-4a69-8a09-83b13cba73fa"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.880114816666419*^9, 3.880130071033113*^9, 
  3.880212843177971*^9, 3.880213410626466*^9, 3.880213730091005*^9, 
  3.8802140638332524`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"8ede5e61-0fc4-4de9-bb4c-d77e0c08e68f"]
}, Open  ]],

Cell["Functions can also be applied using the `@` operator:", "Text",
 CellChangeTimes->{{3.8230984254205627`*^9, 3.8230984345275583`*^9}, {
  3.82311266664618*^9, 3.823112680151184*^9}, {3.8231132033749332`*^9, 
  3.8231132086192017`*^9}, {3.832673152895005*^9, 
  3.832673154418582*^9}},ExpressionUUID->"ace56d17-9d17-4adb-a4a5-\
a4b7d49b14bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"absoluteValue", " ", "@", " ", 
  RowBox[{"-", "4"}]}]], "Input",
 CellChangeTimes->{{3.823054174216381*^9, 3.823054207982397*^9}, {
  3.823098436798739*^9, 3.823098446585104*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"f7895eac-a2f5-430c-acd5-4c435b4f3ca9"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.8801148167272124`*^9, 3.8801300710730653`*^9, 
  3.88021284321986*^9, 3.8802134106552467`*^9, 3.880213730118932*^9, 
  3.880214063857193*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"c5d863e9-2f04-4672-905f-fe5d1496fe03"]
}, Open  ]],

Cell["\<\
This can be especially useful when we want to apply several functions \
sequentially to some input, such as:\
\>", "Text",
 CellChangeTimes->{{3.8231132111927137`*^9, 3.82311325899857*^9}, {
  3.830074515027478*^9, 3.830074516135653*^9}, {3.872755020698306*^9, 
  3.872755022069807*^9}},ExpressionUUID->"48eb0b2c-5b90-4fdf-9efc-\
41c0b5e94ba1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "@", 
  RowBox[{"Exp", "@", 
   RowBox[{"Abs", "@", 
    RowBox[{"Sin", "@", 
     RowBox[{"Tan", "[", "0.2", "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.823113232741788*^9, 3.823113246601519*^9}, {
  3.823113284016675*^9, 3.823113284860978*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"b736d4f1-1914-4074-ba32-670ae3513301"],

Cell[BoxData["1.1059031225296696`"], "Output",
 CellChangeTimes->{3.880114816836665*^9, 3.880130071107943*^9, 
  3.880212843268301*^9, 3.880213410684065*^9, 3.8802137301444917`*^9, 
  3.8802140638781757`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"a08f76fa-7d94-413f-9145-a4bf4cbb1ad8"]
}, Open  ]],

Cell["\<\
This avoids having to write using a set of nested square brackets to achieve \
the same process:\
\>", "Text",
 CellChangeTimes->{{3.8231132606517687`*^9, 3.823113265541319*^9}, {
  3.8300745254775887`*^9, 3.830074532005588*^9}, {3.832673184654729*^9, 
  3.832673198115384*^9}},ExpressionUUID->"eab0bbe8-71ca-4af1-ba6f-\
599a5fdfc63c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{"Exp", "[", 
   RowBox[{"Abs", "[", 
    RowBox[{"Sin", "[", 
     RowBox[{"Tan", "[", "0.2", "]"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.82311326636314*^9, 3.82311329078962*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"a7ac1285-4c7b-468e-acc6-b250fd2b7b68"],

Cell[BoxData["1.1059031225296696`"], "Output",
 CellChangeTimes->{3.880114816897747*^9, 3.8801300711439457`*^9, 
  3.8802128433122125`*^9, 3.8802134107110796`*^9, 3.8802137301694255`*^9, 
  3.880214063900338*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"77ee777a-995d-4cd7-b4d6-ce37bb80ddde"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Advanced topics", "Subsection",
 CellChangeTimes->{{3.823098536165729*^9, 
  3.823098538154701*^9}},ExpressionUUID->"7dafd19e-ceb7-47c3-8e1e-\
c67bae0a806e"],

Cell[TextData[{
 "The code below uses some other features of variables in Mathematica.  It is \
",
 StyleBox["not",
  FontSlant->"Italic"],
 " necessary to review these now, but you may want to refer to this if you \
need to modify the code."
}], "Text",
 CellChangeTimes->{{3.823098539321776*^9, 
  3.823098625271035*^9}},ExpressionUUID->"65337ce9-5b2a-45e9-9d02-\
f5a57ed78cc2"],

Cell[CellGroupData[{

Cell[TextData[{
 ButtonBox["With",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/With.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/With.html"],
 " defines a local constant.  It is often used in the definition of functions:"
}], "ItemNumbered",
 CellChangeTimes->{{3.8230360148613195`*^9, 3.823036025706134*^9}, {
  3.8230360692923737`*^9, 3.823036094524412*^9}, {3.823098631229024*^9, 
  3.82309864199258*^9}, {3.823107041088027*^9, 3.823107046698374*^9}, {
  3.830074504793816*^9, 3.830074505355762*^9}, {3.872777072573372*^9, 
  3.872777076808907*^9}},ExpressionUUID->"06c255ac-c48f-4fa6-a388-\
0de08730de9f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"number", " ", "=", "1"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "set", " ", "number", " ", "to", " ", "1", " ", "as", " ", "an", " ", 
    "example"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "a", " ", "private", " ", "copy", " ", "of", " ", "`number`", " ", 
     "inside", " ", "the", " ", "with", " ", "statement", " ", "is", " ", 
     "set", " ", "as", " ", "9"}], ",", " ", 
    RowBox[{
    "so", " ", "t", " ", "is", " ", "assigned", " ", "as", " ", "81"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"number", "=", "9"}], "}"}], ",", 
    RowBox[{"t", "=", 
     RowBox[{"number", "^", "2"}]}]}], "]"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"number", "\[Equal]", "1", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "global", " ", "variable", " ", "number", " ", "is", " ", "still", " ", 
    "1"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8230105058704066`*^9, 3.823010618983302*^9}, {
  3.8230177446675725`*^9, 3.823017770899206*^9}, {3.8230360968430953`*^9, 
  3.8230360972383733`*^9}, {3.8727550670771437`*^9, 3.872755107582131*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"fe5775a6-677f-422f-80cb-181f3b2d3bc9"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.8801148169735885`*^9, 3.8801300711912613`*^9, 
  3.8802128433599443`*^9, 3.88021341074104*^9, 3.8802137302012353`*^9, 
  3.880214063925293*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"f34614ed-4c7d-4ed3-aacd-4b4fe512a814"],

Cell[BoxData["81"], "Output",
 CellChangeTimes->{3.8801148169735885`*^9, 3.8801300711912613`*^9, 
  3.8802128433599443`*^9, 3.88021341074104*^9, 3.8802137302012353`*^9, 
  3.880214063936208*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"863ada20-2255-4b32-ba4b-6e58f22f9f92"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8801148169735885`*^9, 3.8801300711912613`*^9, 
  3.8802128433599443`*^9, 3.88021341074104*^9, 3.8802137302012353`*^9, 
  3.880214063947239*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"cd636eff-3861-42c4-bf10-2b042f1aef7c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 ButtonBox["Lists",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/List.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/List.html"],
 " can be used to store a series of values.  The list is defined by the curly \
brackets, {}.  Each entry in a ",
 ButtonBox["List",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/List.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/List.html"],
 " has an address that can be used to identify it.  We will see some \
list-like ways to access Datasets."
}], "ItemNumbered",
 CellChangeTimes->{{3.823036120059204*^9, 3.8230361691013875`*^9}, {
  3.823036299988651*^9, 3.8230363028669853`*^9}, {3.823098660413261*^9, 
  3.823098715408175*^9}, {3.823107051611909*^9, 3.8231070747831287`*^9}, {
  3.872777048859209*^9, 
  3.872777057624839*^9}},ExpressionUUID->"6cd00602-91c4-4c46-a367-\
a5d4a8067005"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numberList", "  ", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
     RowBox[{"-", "2.2"}], ",", " ", 
     RowBox[{"-", "42"}]}], "}"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "here", " ", "is", " ", "an", " ", "alternative", " ", "way", " ", "to", 
    " ", "declare", " ", "a", " ", "list"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numberList", "[", 
   RowBox[{"[", "5", "]"}], "]"}], " ", "\[Equal]", " ", 
  RowBox[{"-", "2.2", " ", 
   RowBox[{"(*", 
    RowBox[{
    "double", " ", "square", " ", "brackets", " ", "used", " ", "to", " ", 
     "access", " ", "item", " ", "in", " ", "a", " ", "list", " ", "by", " ", 
     "index"}], "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.823036786323456*^9, 3.82303683253045*^9}, {
   3.823098656144388*^9, 3.823098657415516*^9}, 3.823107056208263*^9, 
   3.832673540232666*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"d0d468f9-12dc-4fdf-bae2-59dbe4ad3caa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "2.2`"}], ",", 
   RowBox[{"-", "42"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8801148170732775`*^9, 3.8801300713290277`*^9, 
  3.8802128434528666`*^9, 3.880213410796435*^9, 3.880213730254364*^9, 
  3.880214063973787*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"70eb1e73-0790-44d8-9225-266fa9d9173e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8801148170732775`*^9, 3.8801300713290277`*^9, 
  3.8802128434528666`*^9, 3.880213410796435*^9, 3.880213730254364*^9, 
  3.880214063984788*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"ee40178f-6835-4159-854a-17d0ba914b44"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 ButtonBox["Map",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Map.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Map.html"],
 " applies a function to every item in a list.  There are several different \
shortcuts for performing this operation, which can all be used \
interchangeably:"
}], "ItemNumbered",
 CellChangeTimes->{{3.8230363068348274`*^9, 3.8230363425352707`*^9}, {
   3.8230986771747*^9, 3.8230986800390244`*^9}, {3.823098717780612*^9, 
   3.823098726436274*^9}, 3.8300745072159243`*^9, {3.8727551475848093`*^9, 
   3.872755170358782*^9}, {3.872759339872325*^9, 3.87275934423225*^9}, {
   3.872777087402009*^9, 
   3.872777087402432*^9}},ExpressionUUID->"85601fc7-a619-466c-a066-\
8ed09f2195a2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"absoluteValue", ",", " ", "numberList"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "apply", " ", "`absoluteValue`", " ", "to", " ", "every", " ", "item", " ",
     "in", " ", "`numberList`"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"absoluteValue", " ", "/@", " ", "numberList"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"`", "/@", "`"}], " ", "is", " ", "a", " ", "shortcut", " ", 
    "for", " ", "`Map`"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", "absoluteValue", "]"}], "@", "numberList", " ", 
  RowBox[{"(*", 
   RowBox[{
   "operator", " ", "style", " ", "way", " ", "of", " ", "Maping", " ", "a", 
    " ", "function", " ", "on", " ", "a", " ", "list"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8230112862722425`*^9, 3.82301129545341*^9}, {
  3.8230113352588296`*^9, 3.8230114520054283`*^9}, {3.8230178542510743`*^9, 
  3.82301786066897*^9}, {3.8230179252185473`*^9, 3.8230179673321037`*^9}, {
  3.8230180067478685`*^9, 3.8230181027385006`*^9}, {3.8230343010592847`*^9, 
  3.823034301782214*^9}, {3.823036114235358*^9, 3.8230361181658077`*^9}, {
  3.82303617628937*^9, 3.823036176643631*^9}, {3.8230362220117207`*^9, 
  3.823036295469431*^9}, {3.8230363493822775`*^9, 3.823036355717428*^9}, {
  3.823098735343869*^9, 3.8230987383866997`*^9}, {3.823113102338196*^9, 
  3.8231131031696157`*^9}, {3.872755129271421*^9, 3.872755145018608*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"ad7bdd12-8b89-4dc5-b450-fbec4be0d88b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "1", ",", "1", ",", "2.2`", ",", "42"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8801148171575685`*^9, 3.8801300714147058`*^9, 
  3.880212843505553*^9, 3.880213410827757*^9, 3.8802137302952547`*^9, 
  3.8802140640097265`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"26bcccf7-c990-4160-a324-fb1eb79a6e77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "1", ",", "1", ",", "2.2`", ",", "42"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8801148171575685`*^9, 3.8801300714147058`*^9, 
  3.880212843505553*^9, 3.880213410827757*^9, 3.8802137302952547`*^9, 
  3.8802140640226517`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"d6eaaa4a-7282-4ec9-bdd9-0c84475972c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "1", ",", "1", ",", "2.2`", ",", "42"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8801148171575685`*^9, 3.8801300714147058`*^9, 
  3.880212843505553*^9, 3.880213410827757*^9, 3.8802137302952547`*^9, 
  3.880214064034624*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"6a8a2ab8-c85a-4b0c-95d6-c85e1c167604"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Arrows denote a ",
 ButtonBox["Rule",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Rule.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Rule.html"],
 "; these are often used to define replacement processes of other relations.  \
The rule symbol \[Rule]  is entered by typing the characters  \
\[OpenCurlyDoubleQuote]",
 StyleBox["->", "CodeText"],
 "\[CloseCurlyDoubleQuote] (the notebook will convert it).  Rules have a \
number of applications, such as replacement patterns"
}], "ItemNumbered",
 CellChangeTimes->{{3.8230365522599225`*^9, 3.823036561997404*^9}, {
   3.823044212068757*^9, 3.823044213341448*^9}, {3.8230443584005466`*^9, 
   3.8230443600753107`*^9}, 3.8230487286357756`*^9, {3.8230489512048373`*^9, 
   3.8230489812198696`*^9}, {3.823049201532323*^9, 3.8230492187894325`*^9}, {
   3.8230493197716703`*^9, 3.8230493416206446`*^9}, {3.823096431138476*^9, 
   3.8230964620182734`*^9}, {3.823098756952813*^9, 3.823098765987256*^9}, {
   3.8300745658419027`*^9, 3.830074590087557*^9}, {3.8727551777542877`*^9, 
   3.87275520325378*^9}, {3.872759360264737*^9, 3.8727593750720043`*^9}, {
   3.872777102293147*^9, 
   3.8727771072580214`*^9}},ExpressionUUID->"90dc95ac-02da-49aa-ae9a-\
fce992270823"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"exampleRule", "=", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"-", "1"}]}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"give", " ", "pattern", " ", "`x`"}], ",", " ", 
    RowBox[{"return", " ", "-", "1"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "^", "2"}], "+", "y", "+", "1"}], " ", "/.", "exampleRule", 
  " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "replace", " ", "`x`", " ", "in", " ", "the", " ", "preceeding", " ", 
      "expression", " ", "with"}], " ", "-", "1"}], ",", " ", 
    RowBox[{
     RowBox[{"the", " ", "operator", " ", "`"}], "/.", 
     RowBox[{
     "`", " ", "means", " ", "applying", " ", "the", " ", "rule"}]}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.823034303590892*^9, 3.8230343543752375`*^9}, {
   3.8230489887653055`*^9, 3.8230491106951647`*^9}, {3.823049230995871*^9, 
   3.8230493041356616`*^9}, {3.8230493475538282`*^9, 3.8230494014488506`*^9}, 
   3.823098773560217*^9, {3.872759350313663*^9, 3.872759354744506*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"27288820-d70f-4f68-a173-9c53ec6c2c10"],

Cell[BoxData[
 RowBox[{"x", "\[Rule]", 
  RowBox[{"-", "1"}]}]], "Output",
 CellChangeTimes->{3.8801148172562575`*^9, 3.8801300715038123`*^9, 
  3.880212843573952*^9, 3.8802134108792334`*^9, 3.880213730346118*^9, 
  3.88021406406054*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"691b0d1b-3069-4a6d-a042-66031d2b9374"],

Cell[BoxData[
 RowBox[{"2", "+", "y"}]], "Output",
 CellChangeTimes->{3.8801148172562575`*^9, 3.8801300715038123`*^9, 
  3.880212843573952*^9, 3.8802134108792334`*^9, 3.880213730346118*^9, 
  3.8802140640734625`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"91fd2b75-0c28-461e-ae48-73551a1610a1"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["5.  ",
  FontWeight->"Bold"],
 "Rules are also often used to denote optional arguments to functions.  For \
example:"
}], "Text",
 CellChangeTimes->{{3.872243097533516*^9, 3.872243121882008*^9}, {
  3.872759382392543*^9, 
  3.87275938288789*^9}},ExpressionUUID->"b6cf5b94-c872-4ee2-922e-\
c7c547af0364"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", "->", "Red"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872243124788719*^9, 3.872243140690155*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"dd6bdd6a-9361-4aab-9509-4c97a871a26a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwlmXk4lN/7x61ZUmaeISRF+0pKaaH7VEKRUqJFSFpIEhGSSiUk2SvZUpb4
RHZJTpSikKiEopAsM/NYx8xk+Z3v9fvrXK/rmvMs7/f7vu/zXKNhf27fCTER
EZFsURGR/63iWLauc921Lbyy/18X9ZZtnhtpC/cKmobnkFX4XMuhOeIcnI/O
N/hC1j8Kp/mFEVfg6tNyn2SythjeqEiJuAtq15Jq9pP1q23EkviIRFi/Y4bF
gfBE2Oes0nI/IhvWYeEr7zvZED5knRcTgWGD4lMDNT8Mmyt3yW5zr4ebpa92
yO6oB1cfs2N5rt+h6OIbndLmJjhbfCJUbMEvWJw595Mxuw2+9OyUSbPvgq7u
5kOV0p0QrMUTKTzUAxpSGaK7mN1wfkVV9OsUNgjd36/L5PdA14muq0mFbDjv
WbxgnXgvWCaJOF99z4bnV2eoFc/ohU2KG7ehXjY02Oksfjq/F8SmnnLxSg5s
7521Vde0FyIabhvhPA4cP5WsIJrQC7neewSvyrlg1tzkoavXB8LjZ7J+ugzA
f7N66u7Z94Mdc9ir1HMASqeOzHvh1A+VZT7bH/oNQKRDZG2jWz+EqQR/Pxg6
AC9MPDeP+vfDkk/pYl+eDcB6s+DFPcn9YLGp2/IDewByji+6HfK7H7IYx6YK
nQZBJcbibMUhNiiU9VRHuw1CSrlY9fRjbPA+4xp1wWcQTH60GJqdZoPBuyvL
1gQPgnujeHKZJxtaLyXsf/Z0EO7muqWYRrJB+m9r2uOeQfhoMNNuzkc22L+y
3Bt2cggCDmCe3zoOrClUplTODYEbb0Gwux4HxLJbGh9dHALv+atrbLdzIDnJ
xiovcAhWPbKzmGfOgY7rJ22+ZQyBbnL4lk3OHLDf5ek8hx6C1xt8a38mEW6K
Dky/OAyMM5s4deJcWFNvtUv76jAc7WrKLZDhgli1ilxJ4DAEOhSxI+W5kFwS
f/fjg2HoPRJeuF6VCx3xKTHcl8NglX/7guIaLtg7FDzRERmB329cV6+34cLx
wS+vXweOgKO/Y7sgmwt2PmFWxWEj0JY757hPPhesxU252fdHwFO3dudwMRcs
Fd+oJqaPQGhc8eY64qPxxhzPy1Uj0G60IHJpIxc0r91ZuUl6FGQmPmu4jHBh
uezON9qMUVCLdba4wOfCkkiJw8uUR+Ft8bJmt3EuqKdcuqW8dBTugNLXgxI0
sKodO3hGo7AlzPdSFYsGPsPwft6tUVifGZe1TpuGkQeiWpl3R6H9Y17Yax0a
Bue/qky+Nwr+osKC7Rto6NPRGQ5PG4Xi+gfv1gANPw/ON3N9Pwqiwfo9eaY0
VCRNiq+S4gGXrXxh60kaypaVxC6U50G1x5eFex1peJnroT1HiQec8sLpVs40
5L9l20xfwgNactBrtxsNaT0tL3oNeXB/QW7pj8s0hKwuOpcawIMjWudMbkTS
8GFNU7dHKA8GdyavkImhQXrd2NEdMTwwZovcDLhPw42NuqZdKeT6rM4kp3ga
Lm0rWjq/kgejV+XPfk+lodigKXGwhgf72k5O03hKA89wbFb5Fx7MkD6qYJ9J
g5uJrqRdFw9aboqG1GbT4GRR9DtefAze7Ypo3VlMQ7pl08Gz08dgVcym6ZYl
NHQfHPukxxqDMpHTmYdLaTh2VLesdf4YNESc2rz7NQ0HTxbFqmwbAwfdkZCm
9zQYeRXtj746BjrzxKOufiXP69P0wSFwDFac3hTDaiL6+Y5t1Qkbg6JINbHE
7zRsuaa7ujFxDJ77uComttKwPrhIjonH4PUyZ3WD3zRcCGm6/uvdGKRcUzkZ
20FDbuiYMLtuDFZH51G9nTSsitTtNWsbA3aZa+K5bhoWxhVVhkyMQf76Kj+N
fhrsE5r0rCX5cL351vAmNg1JSWN5K2bwYdZAT40ph4Y5KbrJH+bwIXdbyH+H
aBoOp1mpxC7kg7qzea7FAA33n14Mc1zJh01dr1SNB0m+sor8pPX40HwnVVl5
mIa9z5tGm7bzYUAzP3OEcGjumHOaCR+GJ24/qh6hQbZI94jhET7UCerzrXk0
GL+walA8zofps9s+zx6jIeDlxZ1/nMjz7Bnd+5mw2Osi3Rs+fDD/Gn1hiYCG
jBlU6oQ/H0Ikfu/9QnjfEWeFi7f58DO9ScdLSIMw/Z3/QCQfwqtM1Fn/aHjM
Ux90jOODFpfJSiFsanDJtvMJHwKWis7QHCf5D/9aa/2MDwWywzOyCBusCs7Y
U8aHiXTzhZETNLB9upSr3/HBTMNvI59wVNWWW9s+8WH8xcoDFpM06M16MPqy
iQ9WcdsvphH+c3z4+LpffFjvmZk4SDg0Z3dDVg8fprz31K2ZIn5OpaGlg3x4
ZqMmfoZwm6lY9iMBHxptJbfEEg6ItVZTFRNAir7Q7zVhzZ7C21GyAhjTG6z8
SfjbOqZwBksA25d0UEOE/a6fOX1LVQAZu96fmCC85HPlN5GFAhjxji+bIlw/
V32Hz0oBRMs5qAkIezn75A3rCCCzbY5/L2H1ki8aZ/UFML63hl1PuEpKK6x7
hwB4xt5Hswm7HgiatDUTQPbqVV9uEFZ+3OncbCmAdt7wXnPCrwf0W/fZEp75
o1GBsOOW+ztrTgngsSvP+hN5fypkqGiHqwBe3LdkXyVc0my6GHsJYEsg5b+M
sP2StKgN1wTw4+22udVEX1kPUfHcIAFUHBQrtyWcW3Hk/IoIASQ0uDhxiD+H
GYXtT2IFcHdH+mw3wmI2DLO5jwWwYOfnzxzib2amU+m9TAGYCGaG2RG2ELxd
zswXwG5e4IEPJB/jhvMeBJcK4JWD4/wVhE07Gj0u1wrgwiuq8TOf5EFLs4v3
lbz/Tb0iJcJxlwP3ubYJAPmGPrYgeeQo62sdpwVw5UhgdN4o8XdPao8xU0jm
j8sfySHib7yIVYWKEDLH7JkSpD7a+g5Xbp4vhGO5l4wEpJ60AuSTNdcKgdYx
bqwi9VZf6nVE4YAQ6kxU3cZ7iD+yjdV3jgpBXZoey/1L/Dm4aoPUSSFo6d8I
tiP17Dr8W0HoKQRxi/NNSaTemctN6trvC2FPlKVq4U/Sn6QSmVVJQug/66aF
fhC9/wxZPE8XQkKk76WKFhocHsW2Xi0WQm54Q2k26T/Fyn09Gt+FcOSYFr3y
Mw13ePorZX8JgWF5uNbrE/HnS/i5ob9CWBIT0V1aS8P0sI28ijEhcIPaPq76
QIONVJC4g9I/YJ/XdcmtoGHtnx+GpvP+gWcGpf2a9EPpN6uDdZb8g7qEyDXv
yoifft8Zkrr/oHXEc7iE9FNJ3pK5qZb/QGqwzMcol4b/ut5t6In+B8XCE4qc
RBquVcz2rY//B5/9skSukP5umeSCi1P+Qa3sxrUyD2kQsZ5lGFTwDypOXnad
RubD/sYT+5d//QcfB+SOPrlN+kG5hIuzwjgk8SpCXTxIv0nc9nggYhzeBcpt
3rqdhltV9T/9H45DsarHoigy394N2igrPiG/37FauW0zDTsMLt3ZWDAO8651
zrYi83Fbb95F/6Zx+HkjJ+/nQlL/axeZKsyZgMygMc0tZN6ufi81qpsyAddi
OnMtSrlwbiBa68OzCYDnN3uDi7iQpbLQybpwAt5a3dhTnMuFVc6o/er7CZCR
XZDNTyfzneldXd07AYV3dnTJR3Nh4ZG++COak+CceczxwRkuKNE1hleKJqFC
ssN3AcWF++H4WC+ehNBrxko2clxQ1sn13V81CS/TltmHTSPsfS93SfMknOms
lv8h5MBscfu59cJJWKUlwZfv5MBcpbFR9S1TMNoxfK4/hwOLQSOl4u0UpHqN
MS/v5EDs+xJRcUcRdETh1yJ3OzYM/HruTTuLIPvncema5PxnJEwdbHUVQScz
Yg91mrNhZGXk73wvEbRQ7djuDdvZYBZxpvxkoAhSdE56FraIDWJH51z7kCaC
ShoCOsZ7+uHM0GWRiG4R5NskIlJPzqd6alun1B1EUf2twEO1h/vA2PqLm/1p
UfS9/U23hnkfWDw81f3YWRQdFtwUPWfUB2dUQmsXe4iitn+xfUNr+yBWsfXh
ygBR9Kn4xPdHcn3An+GxYUO6KLpUZhiVUNoL+ZPp5/ewRdGtCMPAJUq9sOIX
o+vyBTF0SHe4S63oLzxLp04XuIkjOZ7UJ9f2LvBtO9q4IkAC/dx3Ytl1l99w
Xm+DSUKUJPKtN4pa69cKwkQD+/6waail2/RRleYXqHeNtbuYLIXmynkvdfvy
HjYazZ/8+Ugaff4md3JS5DlU79iYjuJk0MZ6m7nZIVk4JefBxo5MWVTPUtdL
uViFFResdLJ5Oh1ZLMldaPinETeISvurlMohiQ+JT3VaWnGBtHtqffUMFOW9
uuBNzG+8UpHhZF85E60Me3zQ+mUXpkN5Cmu/ySOtO8zOxdV/MXtgbsWqFnlk
mPimpLrxL+7bZ3RuaZs8qqT3PzvZ9hd3zbpfrdZNePzu99Dhv7glYaOfNE8e
bYownbyn1oPtrcqGubIMpL7cfttt1x68+5To0bfLGWh7vENTJ7MXL7h1S+uc
EwPJVFv6N27tw27fdPzsnRlofaF47Mtdffj1oo6aAy4MtLTt5Pn4/X3Y5q2e
k54bA4W3tlmanejDsaJDT2R8GOhM/+dyh8A+TPlaz34SxEBeZmGG9rV9WOy8
tmRzOgM5HhuvD9/Xj81ft+2vyWCgVUGKf54d7sdJ8iHJ+D8G8o3R83pj34+3
ZHVD6nMG+pEjqdDq1o99+h/6uBczUNBfFvtlRD8eOjFtYEYVA9V/Krm47XM/
7jjc2rLtLwNp79g6x3InG8vpW6XZ9TJQwqvWT3rmbLxuXqO7Xz8DcWbKx6ge
YuPAzg9yJTQDzbZ0My8/zcZaziVbtPkM5FQ0zejZLTb2vfwgeZ4ME2XYRZpI
vmVjxSQrp/HlTLRPOkQjbT0Hb/FvXD97FRO9OtUwM0Sfg0877BHfoMVEhkuD
a04bcHDpUqM497VMpNeXlCOzj4Ptc9bX9W1mojf12pweZw7OqlBc02zKRBrq
ybdUH3Gw8Z9GQYELE3UtMM0xEOfiyytCL2W7MpFRadTwS2kuzj1vPJHuxkSX
w9W7VszkYtXJUpE4TyZ63174YVSZi7mzUqX8/ZhoMkwnSFuTi6OMvRTNQpmo
YZX0f0ZWXPwrc4529zMmqk2UZ/95zMWKQ99y27OZaM1zw0DXdC7etSFcpzmH
iVIvfM0c/o+L895KbqgpYKKsP9E3Ogu4OOAnd0vuKyZawTCxcXxPPmXly039
aplIkFddKdfLxV5uJ07P4jDR/mR728zFNA404Z7aRDPR1urV0yKW0/jewoun
bAaZ6BRb7PU5TRoXfgs8mTrKRMH9RqcZ62k8vOk/h/WTTNTpPurcbUBjF/Fh
O0t5CoU4mlp32dH48o9Ldj5MCi0em5W/2YHGIQUSdgksChn+PTYz+BSNM0/N
su1WohDFy3k33YXGPR83HvVUpxDH5PDKxz40Ph519VCMNoUYciCpEUFjt7My
h0rWUqj3nqJKTxSN/Q0jDrato9CBiUsaqfdonMR/bLV4E4Ui877JScXTuM36
/YHCbRRaEOK4wTqNxpx1ew+0GFAo0X9fa8tTGo/PbLaYNKTQ5ksfnff+R2PV
8r79hiYUOvct4aB6Do0PLpq579t+Cmm6F6L9JTQ+PRljLjxAoeAQvkFQKY0v
Ns0zn3uQQsskz68pLKNxTJD23pPWFFrxPOjdSAWNGzkWZjwHCjnKhFRIfKSx
WeHDXbM8KbRJdfj2uWZyvWH7KUUvCm2Te7iX30Lj66uX5yv6UEhvtFXd+weN
izOK1RT9KORmmtFh307j+YlfB1gBFFqU4v77WxeN9X7EpbACiV7i9fx53TS2
UnE4zAqmkN22ceVjf4nekUNvqFAKvXxw0+1jL415t+TvMWMoxMIsf8SlMaPy
mwnzPtm/+UHTTprGK8QSRJixxI/aJ2tNBmhs57vSiZFAoScqeybXDdHY58Xw
XEYShTwM3Z3nDdM4mlfSKJ9M2GnpL5ERGn9w3akvn0qhBIeTTZmjNO56xhia
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
       "]]},
     Annotation[#, "Charting`Private`Tag$5237#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, {{
     0, 6.283185307179586}, {-0.9999998592131705, 0.9999998782112116}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8801148184553037`*^9, 3.8801300724274883`*^9, 
  3.880212844822471*^9, 3.880213411320011*^9, 3.8802137307687106`*^9, 
  3.8802140644821014`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"76893dbe-9a3f-4bb6-8823-c644bd536fa3"]
}, Open  ]],

Cell[TextData[{
 StyleBox["5.  ",
  FontWeight->"Bold"],
 ButtonBox["Associations",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Association.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Association.html"],
 " (sometimes called \[OpenCurlyQuote]dictionaries\[CloseCurlyQuote] in other \
programming languages) organize groups of entries in terms of key-value \
pairs; this is especially useful when there is no numerical ordering implied, \
but we still want to group data together.  For example, our keys will be \
names of fruits in English, and the values are the corresponding names in \
Spanish:"
}], "Text",
 CellChangeTimes->{{3.8726101315702953`*^9, 3.872610204279051*^9}, {
  3.872610279101162*^9, 3.872610326030534*^9}, {3.8801314076467094`*^9, 
  3.880131408118922*^9}},
 CellTags->"assocHref",ExpressionUUID->"53b37954-8871-4f58-a3a5-587149ae0751"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"translate", "=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<apple\>\"", "->", "\"\<manzana\>\""}], ",", " ", 
      RowBox[{"\"\<orange\>\"", "->", "\"\<naranja\>\""}]}], "|>"}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{"define", " ", "a", " ", "dictionary"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8726102083917437`*^9, 3.872610228348023*^9}, {
  3.872610267330463*^9, 3.872610306222577*^9}, {3.872610379605241*^9, 
  3.8726103892860203`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"82409608-e3dd-4f5c-8a6f-6667e1066f57"],

Cell["\<\
We can access the entries by the key name, analogous to entries in a list:\
\>", "Text",
 CellChangeTimes->{{3.872610330343699*^9, 
  3.872610353768683*^9}},ExpressionUUID->"1edf6e51-b931-4ec8-b7a0-\
590dcd679882"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"translate", "[", "\"\<apple\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8726103402706823`*^9, 3.872610342552593*^9}, {
  3.8726103815528393`*^9, 3.872610382492852*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"8f39ef8b-83de-4ae4-b015-f666e71ef2e0"],

Cell[BoxData["\<\"manzana\"\>"], "Output",
 CellChangeTimes->{3.8801148188269835`*^9, 3.8801300726597743`*^9, 
  3.8802128451386833`*^9, 3.8802134115514402`*^9, 3.880213730990576*^9, 
  3.880214064713718*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"40eb1ee5-6986-4aa6-a1a7-46eb8d208927"]
}, Open  ]],

Cell["\<\
We can also access lists of the keys and value, by applying the relevant \
functions to the association.\
\>", "Text",
 CellChangeTimes->{{3.872610355865161*^9, 3.872610366698859*^9}, {
  3.872777158005124*^9, 
  3.8727771677253942`*^9}},ExpressionUUID->"44a806eb-202e-4e45-9b46-\
52de376f5edd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Keys", "[", "translate", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Values", "[", "translate", "]"}]}], "Input",
 CellChangeTimes->{{3.872610367876828*^9, 3.872610399004281*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"7e32a5f0-6d9b-43a1-ae49-1bf77c8decf1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"apple\"\>", ",", "\<\"orange\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.880114818896358*^9, 3.8801300726987057`*^9, 
  3.880212845171732*^9, 3.8802134115741863`*^9, 3.8802137310124846`*^9, 
  3.880214064739012*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"1a04ad34-f182-4fc5-821b-b72de6c90f35"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"manzana\"\>", ",", "\<\"naranja\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.880114818896358*^9, 3.8801300726987057`*^9, 
  3.880212845171732*^9, 3.8802134115741863`*^9, 3.8802137310124846`*^9, 
  3.8802140647507777`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"46e4fa08-f13d-4b34-a5cd-27b0e3e90e56"]
}, Open  ]],

Cell["\<\
A Map performed on an Association return a new Association where the keys are \
the same and the functions are applied to the values \
\>", "Text",
 CellChangeTimes->{{3.872610403779121*^9, 3.872610414763023*^9}, {
  3.87261061504352*^9, 3.872610637203293*^9}, {3.872777175444942*^9, 
  3.872777180381184*^9}},ExpressionUUID->"d3e1d44f-8df7-4c1d-bb8e-\
a3b66d5a1759"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"define", " ", "an", " ", "example", " ", "function"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lookupImage", "[", "name_", "]"}], ":=", 
    RowBox[{"First", "@", " ", 
     RowBox[{"WebImageSearch", "[", 
      RowBox[{"name", ",", "\"\<Thumbnails\>\"", ",", "1"}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Map", " ", "applies", " ", "the", " ", "function", " ", "to", " ", 
     "each", " ", "value", " ", "in", " ", "the", " ", "Association"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Map", "[", "lookupImage", "]"}], "@", "translate"}]}]}]], "Input",
 CellChangeTimes->{{3.872610419493053*^9, 3.872610444114974*^9}, {
  3.872610476370275*^9, 3.8726105109058027`*^9}, {3.872610582283633*^9, 
  3.8726106075419188`*^9}, {3.872755244969692*^9, 3.872755270831553*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"ae7921ae-1be8-4fba-9a7c-3612442db967"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"apple\"\>", "\[Rule]", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
e3GQ1VuDpn44aPWIfz+o//tzji/Gzf+wYMOo0t0meYenB2+dsmOWiZP5aF3d
UepGOmpmZirGoLGlroG5gZ6xgba+rrZEYzUdLUhV8+Fo/GtvxeOa0aFhEfEJ
ScjLyMIiWAF73HvzNtfFeELjB7z+QP2T4ZbxAOUTdV6/cZMx5MamFlRJxJxv
eBEAMqezEMtPc7yGu8cJTvwuRzHXc+RsM1zPUb6YIxwvBPCSuo2tV74Hr0LN
be0t7R2tHZ1tXVclXbvW3t19pae7tbur5VpnU1d7Y2dbQ0cLdLmtqaalvqq5
pqKxqryhsvRyeXFtaWF1cXZhblpORkJaSnRiPJgcGhkReCnENyCQXaE8T5x2
dfM8ctgFJhlM3rvn4J69knbvOQDt2r1/56591I6de7fv2ANt274bEtAG6DZs
2bxx65ZN27Zu3g72btuyY/vWnTug7bt37dq3d+/BAweOHD507OgRF0DY+ejx
40c83F08PZ29Trh5eWHreuLEsROe2Hc56YX9o54eOOegmyugvf/oUZCZEqYa
dhpIh9MG5IFrkhZGmlKw9/v74Z1s27UTd4IbwxEcX7cJp6HsWLtizWpIPswQ
WzGuhz33SGYCGbwFkO8jAhkCurleBm0zPTOBLCwxw9QMRIu1vZDr5YFieb8O
+Qyr8tAx8YvzGUPmMEyGoKHx4yY7jp1oYWYNaA776MN3n39q8B8GffLHQaP+
PEj/L4McXx+07ItBB3V+5+/4ctrCT4s2aJUfnpK8d6bHSvt5DhpGBmPUDLVV
TExGG5ppGVrr61sa6ZoYauvra+kpaKyhoqvxsDT+tfdwE7PNx8UnAgXIy5xw
HjRGbZpteYLG9wlW/Fpo+bPRWInJf1MsJsVGPXZ+E5NaXGnrQH2Ek3CCqFwq
EW8kIDCIvSwIZC7MwR4UYHVYeCSXNmBoghN/EcUoTy/XN6JIleZeliH3SmcX
kItqj1DHte7O7p6r129cu9Hb3XtT0q1bV2/f6rp1o/Pm9Y7enrbr19qud13p
6Wy51t7UdaW+o7Gurb72yuWa1jqSuaCsKKcoLy0nKykjLSElOSYhPjw6Jjgs
HDepWBzQx8PzlKuLx9EjrjDJBw4eFdp/4Ai0b/9haO++Q6R0H1DvIet27Nm9
c+8esHfPAXjgA9C+QwcB4cPOx5yPu7l5ehw/4enudeL4SYnArqdOup0+5e59
hjp+5jSEI9h6nPX2PHcWWxzHEZx52FnqoSc56qNH4JzBczhqF3fI45ibK47s
P3wIlJb67+3Zi9vg/fCWeFcU9nEQPwWfBZnBbXaEENNKC3vJZVyAZbHWAB2y
w9hx/YorYgDIQjiZDlnQWO6NxXgZrgoqBngqdZaWD3sREJZH3XGQ8Qoe4aTc
EFvx7MaPt3EYa2ZhrgMfO2r4sI/fe+/Fp17/zaAPfjto6O8GafxpkO2Lg5Z8
NOiAxp9Cnd4rXKdXsmtcueuS2EOL9i4dN8nRRNtIe5SOnoaxpaqOmY6OmZ6m
gb6mrpGuoa6+nrqu5j9D476jP8TQDwo05hA8Tv9OSAKYADLIORCNgWLOGiSo
K4Z+CDKTyTgIPff8i6++9sZbg995+533cGVymOuAoCDAH2VqZoH3iEJzxcrV
XPsDjgv1YvgxcAA5GraqvqGpueUK12Mijdm54p+c5v1xUPHXIvlzo0kWMWQ8
ZzG5EHCKGgqnROYMnIwhizF0+IiD+BFOwGnpGVngMCdXBIfhh3EpLiHBZXrw
CvvVjdt3+tX1O9Stnts3oe5bvddu9kCd169CHdc72nvaW6+2NnU0XW69XNdS
V1pdXlRRkldSlFWQl5qdGZ+aHBkbFxoZxWEjF/wuep/1PeGFAsXLxdXD2cUd
26Ou7tARl+OHnd0OHQPxXA8eddl/+Fh/OgIY7j9yYN/h/RB2Dh47dMT16FG3
Yy4erm4njruf9KA8TnmeOON1wvvkCe/TnufOnPDx9jp/9qTvuVMXfE77nT/j
78t97Jy76H8+OBBbHMc5YLh0hT5bifBe7hLhvdyxj6/jaBepI9+RwygLUC6w
aMA+bhJbFhMQf7R7/z6Ik+hyXmgxPIQj3DmAUSz+woUGIE7FAzmOm8DwBY9g
K47IV5TDL3LRLvmqBFxOkQFe9oIQwQcGKORjyTnAk80TnI1E9GdmfzZ26dmz
dz+9MY5wxIrd5Ak2ExzNbS31TfS0NFVGjxjy2btvvvPCU28/9V/v/3bQJ/85
aMxvBlk+O2jhe//mZvhawnyNir1T673WlHhvv3R07fbVc8ePs9MxNFHXM9PQ
MdXVNdXXMtTTANe1dXR04I1VtTUfN425GAfH4j0OGuMXQWN6Y9IYHGYrnqAx
3iNojJSAZ7v/wCEX1+OoV3L5D/Y6RqZuaGyGZ+P0QcIe378h7wmNH4rGYpmn
q9d6OE0957JAgcgAsnDIHJ7MYc4oN2GMI6Ni8LJSUtPhirkgBVAMnrMYxYvj
+ph4fddv3e5XN+/e61e99yTduHsbQP6ByTcgMvnarWtdvV1gMoHc0NZQVV9T
XltZXFmeX1oMIKdkZcQlJUfFxQPIcMiBF0PO+wac8T4PIMMkg8muHpCni/sJ
mE/n454wosfcPKTQrjPk0ncL8FLHjjs7g+WeboAwCAl9T2CFvLxPnsLjOe99
zv+8d8B5nwC/s4G+5wP9fYL8fC8GcHs+2N//UlBAeHBwRFhgxKWAkOALQf4X
Q4MCLgX6BfmfD/D19j2Li+BSnqdPnDx7isJHXB9H8HUS9k96wYe7erjDk8M8
Q9iBl+YOjkvodj/ODthA9KHDR7liOFe/En082NkMqOR6tciP06bPhMsFXUFa
TsXDdTxJY6JY7o3JYfwWIay0rC3Hb7K/MW0tAcuR7GJCD/mkrGKcoHx0CQ6K
uZjwV8APc+VQjiK0nzrRboqT9Xh7M1szYxM9XR11lZHDhn3y0edvv/3xSy+8
//v//vA/Bo34z0FmTw9aO/zF806q2VsnljkvK/felX5qv8+h7asXzrc0t1JT
09PSMtKBKdY20NLQ1lTX0NbW1NTWUtFQf9hWvJ9AYxhj0JjDokFjYPMR0viF
F1/GdWiMlfpUCBqjeOWa0XgXDFbAd/n5Bwp7DCDX1tUjX3dd7WZXN9H3+P7z
Njyh8QPSmMuh4qmCyXjC8LGcEhlAZp83AJkDQ0LDIoKCQ8SgZuyg3MRxYYzh
isFwuuKW1jZcCm/tWvd1XFYKNH319UPp1teSbn51F+q9dwe6cffmP3TvRs8d
icmdNzrbutvAZMaTKxrqSmqrCstLswvzU7KyEtLSouMTImJiL4VH+QeF+F4I
hEM+fcbn5KmznqdOu5/ycj91CtvjJ08ytuDm5eniCbn33Sp8r7vnaQ8vbxDS
69S5k9Rpn1PevmfO+Z2lfPzP+Qaev3DRNzg8KAgPLPxScGTwpYiQS1GXQiJD
scU+joRGhYXHhUfFR0fER4RFh4dEXgqPCYNCo0IuRQRfDA0MuOTvF3QB1zkf
4APhsuIr+C0A/mmfM6A0EE0+UzjC4kCcAIBL8ROPE+w9zgmXhFUWS06AnEuW
LieQhUMGhzl5Oy2xcMU0w2zOY7cKhoi5LowcxVyDgOTkNBrc4gZYIoiigQND
xAqJYhpVsbALp0M5eOgI759g50ht22mT7adOtpvoaDPW2trG3NLCxMjAEETV
UtUe/cXwz98Y/PHTf/70N/826jeDJrz9552GnwctsozfNDXt0Jok5+3Bh/c5
b9w812m6oY6Rlqaelra+tjQ9hZamprrkj7W11dTUHjeNgWKxiDPjxkAx4Pmo
aIzfff2Nt2iMcX3OUEEmk8bGJmZ4udNnzOLEQXiwKPXcjnvAHiPXo/6bkZld
UFgMoyW6uiFTc408pWnYHweTf3FsPm4ac2VVMbkQmIzCjrNYcNw0W/S4AjWX
nw6PiIJJ5qKKgRdhOSNhjNPSM7Nz8vCmGCimK8ZFvrfEogz99rt+dfebb/vV
nW+pr29/8xV06+t7t76+c/Or29/r65u9X/Vev3tdmOSWa+2Nna11V5qrmurL
a6sB5KyCgrScnMTUNBQYETHxwWGRcMgX/C76nPf3Pu/rdfaMFwynbHvCWxrQ
53nmlCcsaJ8tCCzAKyekf7BfYEgA+BkUdhEChIFTQDUiNjxS4m1kdEJkTGJ0
XHJMfEpcfEos9nkkNgmKiUmMiowDkENJYwj7+HUIiIZwZVwfcMYXQdjhd8FF
X7joByN9zs8HXhrgBYQhH//zEA6evYDbw02exzm+gdIMPKjUeJ44SSZzYiia
T9FtjJN7zF+wCBYXXhdABnu5sJEcyKSxiBWzzU6gWCwKww4PyNqcBJsZnLNe
0Kj3nUn1mLOrfG5/TsEq9p1d3I67e3JMNH6XIQtOcGQ7aZr95KkOTk7Synh2
VpCNlbWFmbWhgYWWusGoIaO/fPuDT5995pPf/R+Nv/zHxI+fPzxWw3eRffS2
ZTF7NkXs2x+w7/DBVZsUQDbQ0AKFNbQUSNbT0zHQ0dVU0XjY0R8/gcbyMAVR
zIa8x0pjCN+OP8fQyASVILxNvEQUo0gSKO9Q9p08dQbuCxkf9hjZHHYLdWcu
1S1WLKWpU1q39AmNH0Tf/bUfeyxmFuJ8yHTIYu5NABnIZchCzGQYfCkU+ziY
mZWDWgyMNMpNttkB5uwJQ1eMy4L2A9H4q+/+el99e+/bb+5+8zV055u70O2v
7yh069ZXN2/e671+u6f7pgTk9htXW7s7GjvbalubKhsvF9dU5pWUZObnJ2dm
wiHHJCSHRcUGhUb4XbzkGxDk4+d/GtbR9zS2Zy6cOeN7VmzFcaWtgsPe5wPO
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
7JtZ2Zpa2JqYWmlrag379P2PXn166Kt/sPz05XnqH++00nKZbO0+Z9L2SY5T
zUwNtHRGaul8qfnQNB4oUiHm1RTBCoaOH9XI6IelMUsB3ABuSUVVXVNLB/YY
xRYKX5TCXB0AKQH2+MDBwx6eXihhQ0LD8QbxdkpKyy/XN3L2g4ddE+QJjR+Q
xhR7IHN0Hp52S2sbux+XlVcWFBYjjyBHwMwkpqaBxnklJYxU/II0ZtxYicYN
Lc2gcXl1FWicW1iQmZsDe5ycnpaUkZKYlZqQnZyUkwKlKqTo8ZualZsCZeek
ZGYlAcJQTk5SXl4KCAxXDGGnpCQHfhgEhgemGSaH6YRpg+UQFgTuvXH11s1u
3COFfRzBj3CCQDGFj2Dyte72rqtXIJBZqKOzBersaoZEcIPxDfBZxDrIajAZ
iK6pLS2vyi+tkPo5469LTouPiY8Ij5Sa8wKDAnx8z5046eXi5gqiMnTMdbdh
jUhjQFgMu+McxbRMnOeH6yRyZS5k2FOnvVGl5fx+gDCb4ZCFpTbfH1bm4mIE
xC8lViXAFpUvzgSIlAblFxQRyziCfWxxMgEOSQsZ5BcORGPK3NrGxMISQAaK
FfvWVlaOZuY2evqGo0YP/fj9Vz567Q+a7zw17ouX12h/dtBSy2Oy7aHJYxfb
Wlrq643S1vlSWxs0hndkD7cxKmrscgw97PzG4mQxqSaZ/KhmDXpYGrMUAI1x
P/DtauqasMemZnhO9hOcJs1ANUjRVrti5WoUuLTHKMJRquL14dUACJyOpud6
L0eCPKHxI6GxvDGUO4xXcI1pJXuMF8EaYkpGZnp2Tk5RUWl19S8bqYAx7r1z
+/oPgJPTmN6YNE7Lwj2nJ2emJuekJ+WmJuempuSlpeWmpuelZeSmZeal5xV+
30shNy8tNzcZys9PLSqSGuwooBiWGH4YKAaBsSWKW1vr2trqRSACHBYoJodv
9l6DSGPcKYoObMlkHL/Re1Wu3pvXbt7qhrCvxGfYZoiRDYY1hLrw1YojBDWw
DCBLQebL5RXVBQBySXleflFmRnZKYkpsVEw4gAxYwh6fOnPazf04R0yLrm4w
wLPnzJs+YxaXCOFUmUAx58bkqrXIpIxRuLq5c5FE9hNGlZZ+mL0mgGJkYaBY
RCG4HgFZSsxyYYKi4lISGFvsw4BBOC6WLYBwHCdQpWUV0EA0hh8GfsFhY3ML
AJk0NsN/63FmZnYGJubquppfDvvwo7efHfHm783ef2b+0De2aX/hYm9wzMlm
tYOlrZGeiq7OMF1d0liM/vhRGt9/fmNxJi009Khm1PzJNMY94Cbx12nr6BkZ
m5qZW9o7OIrJoFAu413DHqPig3KW8wihfKyoRKWsGUCWr9D0hMaPlsbf/TBi
mn2PORhEbo+RHZinuNJodmFhSVVVVVN9fXvrL0VjGGPQGMYYNEb9/z40luyx
gsbJeWlAcWp+uoTi/HSgmDRmb7G8/HRYYqigIA00LlV0WmODHYxxdXUxvDGM
MVvo6IphiUVMuK8rJoqFQwaKhSRHf6sbBBYovnW7R5rH7isYjusQPvKnAsty
IMt1o7ez53o7dkBmBp8bm6phj0njskrwKycnPyMlPSE2PioiKjQ0PCTgov+Z
s95S6NjZFTmOI0HWrd+4dNkK0hhZUswhz2kouLbd5i3bcDJ+BcZYrMzF5WCC
gsHiyKjoWIoRY1SmhB/+fkWYsgrCliJayV4IP0JiK6+oYoMFfoQdEAAHeSZ2
8BGyHTvefpyTneMEK7uxlrYO1vaO2DG3ttMxMAZyjc1BYysjM0tDUwvsgMbm
JrZmprYGppZq+npDx3z5+advDnv7ac3Xfuv03jPrxnywz3DUPiu9rU62s8Za
6RrpjdTRGQrnOEZVXV1TQ0MxSlpNQ45ipS4TAsIksIgV4zh/S85kNudh+8WQ
ofDG7HLMYIWYcx5ABksB5B+dbX4gGv/luReA9DfeHIwL8vqcrQJSorG6hpam
lg7tseO4CRMnTUECgENetnwlKk140bDHqPXghSL70x7DqnEBU/Y95jgyqO/c
bvKRDr9qPW4a/022qul3ssnqRbyCC0zDHiPxIyPQmWTk5KZmZmXm58Mb17Q0
1l1pBoqv3u4Fim8phjDf/fYeUPztX7952FJvoPNFqaG8ELYiUkFvDBpf6exo
bG2pa2yoqqsFjQtLS7Lz89Kzs4BieuOkbGmRU3pj0DizICO7IBOSwhR5qTDG
oDE5XFycCVVVFbHTGhvswGG4YqBY9Fhrb2+AMWZnCQnIEoe7bly/2nsDlrj7
1s2e27cA3hvcQig9oHt3b1IDTPP8vTj/6M1bPZyJH2SWhzX6isTuunqlvaO5
9UpDc0ttaUVuWWVeeVWhAsh5WblpiclxMXGREVHhQZcunjvvc+KkF4fm7d6z
b9v2nRyUN2/+QrHANHY4ZTEyJowxUMzpheGohTE+7+sHVwwUh4ZFAMJxPzS9
gcP0wzBU9L0CpwQshGoXhX0exH5VdS22BLI4R/4RNICsrGGGHSyt7AhbMytb
CxhbM0scB5bt7OGZx9nYSqDGVvpo6WBrNdbCdqyprb2+hamG5ijVz97WeOPP
5q//bu6nL2/R/GyPhdb2CdYLx1mZGOuNUpds8OjRKioqauAwmKwKh6zwxhwi
LbpJCAkai3MIZPn5lJzGACMtq6CxUkPez0ZjQyPUJKxt7RwAZDrkBQsXr9+w
CfUgzkKP94vXitoNXgR7VsCzPaHx46Yxm/NQEwGNYY8v1zcigzB6LI0HyS+A
N84qKIA3ZqTi105joFhO48LCdAhMZi9i9mFj3wlBY9Fxgl3XaI/7RTHw+7A0
vnO3VwnIZLJSZKOvAORr3e2dXa1t7U2tVy5X15VW1UqDRxTBiuzMnNSklHiF
PZZo7ON73uvUSdKY3njN2vWgMXsdo67K+Si4mhKM8YaNmxkxhjHmylyeJ07C
GHOInDxKnJqWwXXDxfpctMSCvUhOJGpN7WUK+zgIyT8i1/Nk8ln8IuprkNOE
qY7jJtnbjbeydrC2AnIdbazHmoO2Dk5jHSeOc5w0bvxkbic6TZs8abrT2Inj
cdxp+oRpcybOnDPeaYKtvo7FsA8NX/uj4+A/LRz25mbDkVvHGq92snayNdPV
gSHWHDNKZcSwkaNGjB49cozUTjd0OLbAsqps5goRE2Z0AgdFWINAxj5PE15a
icbsViHv5yan8Qsvvgyu/gw01tHVNzI2NbewgkMe6zieQ0JQCqMIRgrxOnka
1R+Utni5qMJwVjcuYIqq9BMaPz4a3/vqG87thsqI6OoGW8JlPvKKirPy8rML
C4srK9nf+NdO45z8NIg0zs9PFRKdKEBj0YMCYg8KBo1FBzYIKJbTWBB4IBqD
uv3q7r3vf9SHyd396tbtHohxDwD56rW2js6WNry3lpq6hrKK6qListzcgsz0
rGTQOC4hGjQODgk6f8H35OlTXBwcjpdTuiH3wRGhlkp7LFZ8hm0Ww+4OHznG
Lm2owHKcMgMUcfGJySlpnPgafphBYEAYKYfglZZKrKtHRoZQxFPgKrY4wp/y
ID8Sv4LYvAJ+CocATZk4A0AeP3YSkDtpwrSpU2ZNmzxryuSZ06fMnjZ19oyp
c2bOmDd31sKFC5YtX7J61Yq1m9ZsWLdy/YoVG5au3LJs1dbFi1bNGDdxkoGO
9SdvWb71lNNHzy3S+HCdtebmaXarZ0yc6iDNmmxkYKyhpqmmoq4yWnX40BFD
hgyFAOQRsuAwu64Jb0wai4mG+FEpxDHsh+5woLFoyAOQRbeKtwa/8/obb736
2hsvv/IaafzMs889bhpDBobGJuCxpbW1YoD5xElTUBbj1aMIRql99tx5lLnx
CUl4v3g1zS1XOIkQ7PETGj8+GoN4d+5+xaF5nGkTWYBzu0ntKWXl+cUlucXF
RRWosdQ3drb92mmcW5AOSUHjH+LGFHu1sUsbjfH9aNx1pae786EiFQMsgfIP
KQFZoZ6+unMXdvoGQ81wyIxXAMit7fUNzZVVtSXwxnmFWaBxQlIsB70JGiOX
7T9waOu2HVy0bvmKVcAvh0hzKDTDFJzBABYaJx895gJjfOq0NyfwQQWWIWKg
OCMzGxxmqY2kAnMLnBKhNLQUynclkcA8DR+JaOBXHBQ/Qh0ZaRKaMVnC7+xp
cxfMXbJ62dqN67bu3LJ757a9W9Zv27R+G7ZbNu7Ys33fwX1HXY8c93DxPI17
dvc67nrm6JFTBw+c2rXdZcOSDSumTJuio2Lz2es2Hz47fczgVVaq++eNO7Zq
/tZFc9YtWTp3xhynsRPsrezMTMz1dPTVVTVUx6iNBFFljXeS3R09ZsQYFSUa
i7Y/7JDGSvSmQ5a35YGWpDH4CYqSxi++9Mpzz7/4M9BYS1sXNDY2MTMzt5QG
ztjYjRvvhMoRo8dHjjrjjaPkjYmNR60HNWW8jrb2Tk4XxhmEODTvCY0fLY3Z
uYITu6H4Q5WksakF2YERv5KKSgC5oKwM3riy8fL/AG/MPhWksdwbi45tNTUl
YoTdgJEKqQmvo/sabuTq9Z5rN67jpnpu9uLuQOPeO7dvQnfv3ILu3b1N3f0x
3blz6/btm9CtW71A8X0iGxTO6b3Z3XO96+o1KV5BGlfXlZZVFhQU52Rkp8AY
h0VcCo8MuxgceO68jzSDkLMr7O6Wrdu5dlK/NF66bMWq1Ws3bd7KJepAY/Zq
E+skxsUnJiWnpqVncp1Eltpi9XCkHFAUSUioL43lvJV/xMnArxCMAed1hFYt
XbNm+bpNa7fs3rb30N4jzodc3Z09T7qf9nA5cfyYBwiMLT76evsF+V0KDQiN
vBgUExYRE5YUdiklyD/N53TU8QMn963dvnis7Xj1L6w+e9Fp9Btr7dXdlk46
u2mZ56Z1zrt37962a/2qdUvmL545fZbT+Il2NvYWZpb6+oZaWjoArAg4gMaj
VNXYrULJHkOqahoMVgggi4CzfGgeHDJpzIY8UFQpdPwzRCoMjUzgjUFj2GPI
Yew41I+WLF0ughUcCYIXjVeMQhY1FLblPaHx46Mx9iXWyYbm4bEjXzB8V1pZ
BQHFpdXVoHF9e+v/DBpL8/BIXYvThdiborKyUE5jdmwTKBbd2xQDPR6OxoBt
v7r7w4/+geJbvTdv3hhgmcHrIqyB/Ru9qDx2dl1tk3vj0op80jg2PiokLIh9
Kk57n3E97sYmPE4RP1CkguM+RN820liEKSIio+MUMQoYYy4dziixMMYCqmCp
4Kocy/wo9sVHgBdOAAYMW+wjEfII/Bi0Z+vefdv3H9l71O3wcddDbsf2O7sc
dPU45nnq+OkTLl7uRz2wPeflE+QbHBkcFRsenZkYn5+WXpBRnJtalRFfExda
dOFEuPPOY+vmzJpurmk29FX7ka+stVd1XzbRf/Ny/z3bzx5z9nLzdDvqum/n
3q0btmxYvX7ZkuVzZs0dP97Jzs4BHhIEA2MB4SHDR3w5YiSHfnDwHTnMGIWg
sehr0XckCKetEDTutyHv54kbg8amZhYAMgfoTZ02Y/GSZRs3beFIkAt+AWHh
kXjXnGNTtOU9ofHjozGOgHuiq1vX1W5kAS5mKs3tVllVVlVdVlNTXlsLGv8P
aMWTwhQKGhcUZrJDRUlJFlRVVSSfAkgMuxMDn4ni7u4rPT1t13ukMIXgsBzC
A9GYsO2rvhyGensHWvT1H4Ixvn7jKoxxR6c0pq+ts7G+qaK8qrCwJJtxY8U0
m9LUOxf8fU+c9DrqfAx0BWO5MNNArXiCxuzb5uzixvU4fM5fgFkS3pjjMhgr
Zj+06po6pBkylraWUIXkZOZBHJGfw7Ak0h6ELA8mCzh399yAXPc6ux9yO+18
8qz7mZMA5wEXtwOuJ456Qu6HjmPf84iHj+e5EN9LcSGxSZFxGQlxealpUvNs
WlVJekN+Ul20f9pZl3Pbli2f42Bm9OWbZkNeWWmj5r54QuDGRREHd4V6eISe
vRDi7Xvu+AmvIy6eB12O7T64e8O2jSvWrl66cuGcBVMmTbW1tjM0NNTQ0ACA
hypCwcIeS9EJxdi9Meoa8umR2aInpzGBDEL2pfGrr70hNeS98BLQ+rN5YwKZ
Hd4mT5m2aPHSDRs37z9wyN3jBMflJSQmi47H7R1dT2j8M9BYDJRm9Pj7hfNq
JW9cXl1VUVdXUVcDGvfbw+2rv/7L0VhSVppiFF5qWi5onJ6VDxpnKWgMe5xV
UJhdWJRTVJxdorDEpWV50pC+mrKa6jJs62or6huqmxprm1sut12Rxix3tDd3
dilGfHS3Syi+0dV74xqYKflh4lcBXhhd0Pi2gsZ3FDS++0OYYiAaK6EY16QG
grCs08W1nutdMMbtHS3SHV5trW+qKikvyJV68aWlZSTLmvB83D09Dh05DGO8
fccu0Jhj8frt4YaD+NGWrdtx8sFDR1xcj6PSevbcecaNYZZi4xJIY2RS0JgR
LRGmgNEFWgFYgJQSXpcEFkcIWyQ2shf1MgpAxkH8lEKahLyPeJ467Iatv6d3
yJkAP48zXgfcPPe5nDx43HXn4cPb9rvtPebtcjLgpG+oT1CE/6XEiGiURhkx
aRlRmTnReflxhfF+CWcOee1evmGB4zjzkUPMv3xviaWGx5JJIduXxBzYnOzu
kertm+0blHrWL9bzbJT72Qh3n9DjZ30OHj+x6/CB9Vu3rFizbvHypXPmTh43
ztLURF9XT0NDCxAGkD8fOgxueYSq6kg1tVHq6tIIa3WtUaoaI8aoDRsFGktA
liA85Avoiy+HQJ998fknn3zygeLfu+++O3jw4DfffPP1119/9dVXX3rhxeef
f/6ZZ597+pm/iAEgv/9hYvmBaIyTX37ltdffeAtg59J4kJhRE24cxQFuA75d
TV1TQ1NbV8/AwNAYYs8KSysbewfHKVOnIwGgmN61ey/eO8pfvO6U1HTOIIQ3
yG4VnM+No6Sf0Pin/RuIfvJ1pWGP4UM4j1DTlda65vrqhsvVDbVV9XWVl6ux
c7mloaOn62pv9427NyUaf3vv7ndffQV2/v27h6Xxj1JazmQxLbNYSYqDB9ng
yMmZAQfOPif1fc3MSEpPTslMTctOT8/JwDYzOy07Nys3X5q5Hdu8guz8wpyC
otzC4rzikvzi0gIpJINKQG1F7eWq+oaahqa6pubLTS31be3NV9qb4T87JRR3
gBZwpNd7r0nkvHWj71ZC652bfbcPq5sAb3/qvdVzA6649xqF+8GN4Q7r6qtx
//hD8Hfhb0zPTItPjIuIigwMunjB34/r5cHwHD5yDPYYNF65ag3AyyWZUEXl
DPNcwlK04tEbM27M6dqCgkM4H0ViUgqAzFW6ikvKkFu5ZiKRyzVi+hVSFwmM
LfwwXiXwyx3SGDv4iNMg7OB1Q6f2HoNO73P2c/aKOO0XdurCxeNn/F1PeR9w
dd26b9+qrXtWbDy8fpfHniMBbt5h5wKiL4bEBofFB0ZGnw+N8Q5N8o2KOhni
c8Bz7/LNCx2cTIYO0ftg8Ayt4QemWwdvnp96ZGvuiROlPoFlF4ILzwZmn7yQ
4nY2wdk7wd032vVcmMsZv0PHPXceOLhxy7blq5bPnj1r4qQZk6aMs3O0MLPU
1dWXIhijRo8YozJszBgwGUAeo6ENjVbTHKmiDhoPHyH555GjR8FNfzlsKGj8
6eefffzxx0o0fuO111975eemsbGJGWks1jBFWYxXj/eO8jc0LIKRCtIYb+oJ
jR83jZVYhyzQ0t7W3HYFNK5prIMUQK7BTn1rY780/uZnoTGSQb80hj1D8c3J
jjhLWEZWpqIbbLpiihpJChTnKKZDkJRfmFdYXFBUUlhcWsSBYlU1ldW1VTV1
1XX1tfWNlxubG5paGlG3RlUb9Wm4PLCk61rntZ7/x95ZgLWRrn2/69Xdrbu7
UqEUaXGH4lIKxd1JggQCIURJSEIguLu7W7GWQlvqbtTd1885e853J892Thbp
lvN2T/d9v871v+YahpCQTOY3/7mf+76fJ+Jb52cA3lH1+vtXo2r8j38+lgDC
z18+EbvIh+Ai796/BVeN60PX4C3AG4H3BW8Q3vvBrs7m1pbq2pryygo0C1JG
ZjacZahVBTYrk58/DoWO4UxExhhNYQkPQwXRqAQPdZJHc9di9hhojHKMwR5f
vXZDcvxuLBpjvheOIOItYi+KVCA4IxSD0OkPEgSR40MosE4i0Qs5wkphRrkg
tZiXlMuMTY2MjguhcvGkGFw4NygiNZKTy4nPFyQVCVNLhBkl/PSymPTa+Lza
+IISdgrbN9TffL/BdinV5Qsst60iG6sU4u0PskmH4+NOZuYfzyg4ll54Mqus
P7WoOyH3WE5Vb2pxd0ZJW1phRVxaFouXSGXGRlJiwiMpgcQQP5yfh5eTnb2p
sZm2tq6qqjqwTkZeQZx0oQiSldsjMsYyCjI75VHRNNbVbYvUNmwqEFFaxcrV
y5evXLp0+eLFS+fPXzhXnFbxZ9NYS1sXozGqBLF3cIJvAlym4QYqXpiIktzg
sguH+MLFy1iSGzYx00cav3caD2t6jLq63Xv0EIAM7L166zoIARk2hu7d+lA0
hn8PvgYvxTBC4RSg8Y2hW1gjUDS1H2r51X90AFXoivvTHEUcPnFqUFzRckJc
lXsSwHX2/JlzF86evwg4Pwccvnr9CkLx0K0bCMXg8sShzbvAD0TjJ88eo1vq
8dJVDJVRJL4RH1XPxhKgGAuvAopv3r5+fUj0n1+8fAHRGN4v0Lizu6ulrbW+
sQGADCAFnObk5oM9RmN5qFsFmrcUIByAI8AG6p8JrEZhCmSMsY5taEaPpubW
dvFAHqr4QAXOcLYiGmPxYSxSMUySg3TIIWNWWRLOGJ/RZxEXEBrrF8Jw8SXb
ujFd/fi+wdHuARR7jyBz2xBL+7D9TiDYCLK0C7dxobn4sP2CePjQxCBKSjA9
PZCZFxqTG8ZNJVBp9p4+e00MN29UXTzbeO18f5VtCba65QSXuvCwNkZMPZnZ
SOH0x2X1C3MOx2edzas5klLYl17amVJYK0gtihbksbh5bF4Ol58QxeCFU9lh
IiwHuPu42Dkd2GcDWFZXRxEMJfDDO2XkgcNAY9ldu1EHISxujGiMmIlSjpeJ
abxITOM5fz6N1TW0JGmMykCwSZrgCwD3UHDc4VYIpRzDGQJXWDgo8NXHJib+
GDf+82iM7DHKrHjw5DEAGdh7/c4QCEwyoBg2bj248xehMcr9gNMfdTpCrWZQ
+y/Q8RODqGMNwi8iMMIvIjDowqXzgC9kiUHgLRGHkSsGDosHoO4gFCNvDJAA
GosH+Z+MTdHRhRz1uwuLRQwTssQIxfcf3kHG+MbNq3A1gbcD706Sxq3tbU0t
zXUN9ZVVNSWl5QDVzKycxKQUIC1YXzDAwF4gMDAZWWI0ATTqKo86tsEpiWIU
gOKa2nqsOxDcg4g+58GTqOIDrolwZQQII8yisPCowgLIsCGZRIG5ZRTKQDRG
Ca6gWFd/vosfxdKBoGsWvNeSZGITpG/ho7bXX9MoQMsYr2MKgm0/DcMgPfMI
8wOR++zJlnY0Kye2jQd3vxfP2pdt5R1l6hRmtN9TRcNo7Wq1edMNl85037mK
oSeXZm9S7O1VgQvKcfXOcfFpJjE6qfwOquB4fO7xxPxjyUWHk/JbY9PrOIkV
bEEJi1/I5Baz43JYvAxGTFIUk00kUwnEMH8CwcvXwdpuv7mVgb6xhrqOkqLa
bnkluV27gcnYpKVoOA/wCJxE2EQ0XrJClOS2YMnSef9FGqOBPERjE1Nzaxtb
F1d3HD4QdRDKys6Fgw73QWBr4CijUTzUef4jjf88GqPQMWaPRcGKZ08ByMBe
sMdIgGKA8+2Hdz8sjcFlvhC7Q5QaDac/1icfvjBY769TZ06DTp89hbEX4RfY
ixEYM8OIw+gOG/lhDMKIwxiKkTdGNB7L645XbwavhgsM8KiSRDHSvQfAtpvw
RiSBDPcFvYcPdfV0A5AbmkTz0IE9Li4py80rAMaC6UXtgyhRNAAyCPUxZkVz
JPsYox5BqDEFuGKsg3FP72EwxoBiMMajDuG9RxqjWw6muT3D0iFC35Kgqhei
aRyuZxaqbRqopg/CKev4K2r57tbwllP1kFHyklXx26MZpL4XduL36BKVDUlK
xmRVs0gNS5KmGVHT0FtByXz1Ss3ZX++dP9Vh/YIIFSmhuWaJu2u5p3emtWOi
qU2enWepO6HMi1gXSOumxnUzEzujk9rZiS3RCc1sYS0ztpzKqWDFlrPiqvnJ
VYKUwpiEdCZPEMlgESMi8MRgX7yXs5e9tYOFsaWOlv4eBeWdO2SlxB01QVjz
eVSOh2i8bJWIxouWiWg8Z8HCWfP+dBqrqWtK0hjVgFjtt3FydkVpFTFcfnpG
FqqPPtzXf/rMOawABLXW/EjjP4PGWOhYck4Q0Vje0yd3Ht27ef82EgAZ1ncf
3x9jFG/MiQDeF42RdYeLBQIylvuBFQ+ibjOoJSNsnLtw/vzFc4i9SCgmLElg
zAmj+PAwM4yEQpjiG+h/oxhoORZdx+uB0ROOFMovGKnHT1HkVQRhWAOWEZnh
vcA7grcG7xQ+A7gvGDgGDvlIR+fB5tYWNF8zildk5+QBkAG5KOGNzmDBGlli
8MxJyanwW8nOmWheD9EkiWIUi8Lyb6rwsCZsqL0P3Kdg+cbvK1KBAj1x+13i
DrjFmNlR9cyidM2jdE0jNI3D1PRDlHXwCuoBsip4eTWCgjpOThWEl1fx3bnb
e6us/7bdwTtUQ7apkXZq0VRMonUsyWp7gxXVnTZvNl4we++sSfuXTifsXMXT
3VNgu7/c2SXfxj5B31SgbZxkYJVuZp9p6VLsEFDqFlLuTSrzDa/AU6pDmXXh
7Jrw6Coyp5LKbYxJbItPbxBm1MSnlQlSc7nCjBhhPIPLCqdHEEg4L5yznYuF
8T5d7b0K4uwL1OgYK44GWq7ZsHHl2g9P470GRrDeZ2Xt4Ojs6xcAt0tw64RS
jlEBCPgcOMvgMKEj8pHGfx6NUbACix7/lnj8/Lfo8e3790C37t2F7fuPH4Ft
fvryxasfvv/+559+/NsvP/39b7/8+o//Ao2xWAoCMhptRGc3mmj16rUbly5f
Re3CRHC+fElMCMDvNSSECqSbt+EG/zbcWN+5dxc8GoDh/sMHIHBnoIePHyGJ
x5GeIj19DuR89uzFc6TnL1+MKuwBw4T+/J01OqJBcEUAgMElA7t2oG3UCmIY
jY8M9Hf39rQf7GhsEgEZuAp0BbsLpjc1LQOAzOXFApMBwoI4oTAhSXJqDzgT
JVEMd6zIFQOKjx4bPHHy9G9XvTdd2lCXCawW732N4iEaZzr7Z7vi0hy94vc7
xVnY80xsovdasvTNGLomJCUtvIxigLRCoIxi0C4lULCsMmGHAn6rXNgOJYq0
OmmLIklKibnHIFbHkq62N0pDFy8ne2DlUuPZU8znTvbesIChLJ1mpFdqs7/M
xi5ZxyBaXpmnqJOkZZaobZG690CasWOaiVOiiUOSmUuWnU+JV0hFQHgTOaYm
nF0bGVNHj61nJ7Yl5fTmVfaW1DbllpWn5eUI0oTRgpgoNiWUEuQX7OPuZ7Xv
gJGxqbq6JiBxqzhMgeZjgvUHobGqmsZIGqOOxz6+/mGkiGh2DGrmBt8cuP4C
jVHvoI80/i/QeJQZmsRzzwGBkRCNHzx5/KFojP43FK/AUqPRXS3YY6zXAWr8
JSpdEaP42o3rAGG0Fru22+/OYSSMkG+H8B/SGG67R9VYQBZXQowiADKACgiM
1RCDtweHj3rtXL56Ce4ITp05efT4AEosAYmG81rb0VzMKGQBQAaHnJKaHhef
AEpITAYOI0sMKEauGDUxRu3aUG8KlEfRD75YXPeBqqGxxpjDvPH7ynBDNK7E
karw4cXeQUVegflufqkHXBKtHHjG+xg6RhFKWiFyKkQF5fDdqmHyyqAIBVWK
ghppx26SlFzwWmnypt08BT2+oiFfzUigZx6jZ0hWU/WUWm8+f7rJjInOK2aR
pNcl66iWW5lX29hk6ujz5BT5cqpCRZ04Rb14JcMEVbMkTctEHatE/QPJRrbp
5k6Z+z1yHALALZfjIotxZPDJ7XHpfbnlxysaBqqajzV29ta21+VV5CdlpwtS
4hixDDIzwI/g5enn7OgGWDbQN1ZR1pDeIbtp87YVK9cuXbYKad4iQPFi0PTZ
v7VxAxoDaVHpB6AYfoTtiZOmfPnVpK8mTp40eSr89utvpoNmzZ47d94CrAAE
NZxHFX8A5M1btm7bLo3aL+9RVAYgq2toaWrpDGtVYWZuidIqgoKJcMcE3wr4
MsAXBo774IlTcC4hGqO4MQgMEmo+jzj8jzfFAv/BWf9X05+9vOWl0QSmWKob
Ch2LgQA354+BUZK8Qlx6+RpOke9++OlH8dH4+99/HXfc+C1Xh1FpjAEZy8QT
5RaIgYzKB1AMGWFZFMO8fQsJ2IvwiwiM3gUCL+ItoiLmgYcJQzGC7YtXL+G9
Y4If3w7hUR0yPC1G45GvAs8JQtFjzA+DULQEBKCCm34A8p17txGKh27BFecq
QjGW5NZ/dODwkb7ew4fAHnd29QBOwd8CWmtq6ysqq8EeA5Azs3LSM7JAqEsb
mmIJcRgeBvRGKG7v6GwXl+BJxihQgAKjsaQxRlW0kgEH5HtRfElyJwIv7ISj
CccULrLPxUOV6MGwgeLGjeGMWmJUoU9QgXdgkRc+19U3x9U7+YBTvMUBjoEp
XUufqqEdpa4VqaoRqaRGUVKjK6pTZPZEblUgrt0Rvl6Ws0sLgByraphsbBVn
ZEbX1gqQ2bp/yRzjGZPsFk8nbFomVFcoNzdotN1famKcqqwqlFMWyqvFy2kI
5HTi5fWFewziFY2B51wlQ76KMU/dlKtpEW/kkG7jXeQTVh8R0xqT1JOcf7Sw
+nRdx8WOvos9xwbb+3rrOlorGqvzKgpS8hJ4CXx2LDOKFUEkB/oHubl47t93
wNjIXF5OcfOW7cDkefMXT58x59tZc2fNWzhz7gJs1g/AL4AX8IuEdiKfjCr1
0APASwONFy9ZtmLl6tVr1q1dtwFNGP0f0NjD0zswKIRGZ8K9EnxD4JsAXx64
/sLxhbMM88Yfafxfo7FopEyMDsAFojF4SGQjkZ0DaLz67jVG43/889f/Mo3R
WB7KMEAhC1F6wZuWCCITLGYvMsDIAyNhBngYisfyqJKhiWEoRjQeBuQ/jEJg
KMb+gVGxj8UrMA6/wRv8/w9GpfGVa5cvXDp/7sLZs+fPgD0ePHni2ODx34Dc
c+hgZzfQuKm5FcWQS8sqwACDSQYCg2ADcRhADXYIOAxeGsWK0TTQaKo7FKNA
s3ig6ATWEx4ZYyytAosJY0xGBB6LxiO9MXoMonEbi99Mj6kkUmrD6c0UZh0p
qjo4PN8rINPJLcXWMd7CmmtsGmNkEmNkxNbfy9LWYapqUeVVaLtUyJvlorYo
xO7WS1Q3yTC0ybS0SzDbxzbYS1RScFizzGjOFMt533itXshV2Jqvr1pvbVpp
bpypphonIyeQ3h0voyLYqS7cpZMgrwdMjpXTBapH79RgymhFyWqRZbXpKkZJ
Vq4A5DIirYEZ15dZcra242rXwK2j524evXD1yJlzPSeOtx/paehsrmyqKq4u
yCxMT8gQsOOoEXSCX5Cbs5f9AWcTY0t1NR2ZXbvXrd+yZOmq2XMWTp02Hc3E
BLwF6gJ+wQ8jJsM2WGIk5JlhDdtgpOfMnb9k6XJkjLFIxXhpjJLcsHlA4F4J
viqoOBqONWochKZk+kjj/wKNUbtj+MAR7pD5RCMvSOg0QaYFDgrKAH8LVP8M
GsP1AqW6oZEwdP5iI0RI2LDRMCBgwtwagsBYw2xocA7lWWFZxXA5wLbRr9DD
0AXiLUKviCiE/RuS1vFNRsUzhGiM21gIBYSuj3CJgWsNir0M3bp5feja1etX
UNIICEzy2fPnTp89A0AeOHb0cF9/76E+gCqyxwBbFEaGc628ogoEG/CjpB+G
RyIO9wDNDx9B2cUoXIzaBGEBiitYUF6cU/H2z38sGmM70WOwv0UfbyOTW0/n
lIdTa6nRrdH8ZianmRFdSSIXE4KK/PGZ7u4JB2wFVvti91myTYwZurpUVU2K
vDJ1l0r4ZtmITbJsWXWhunGmiU2ujXPiPusYE+NwTTWXLWtN5n9rOu9b11Xz
qNtWpqjsKDPWLjPWyVRW5G/bxpPaKdy5R7BNKU5aPVFWO1FOTyinx5fR5mxX
Z2xXjZJWJ0opErerMjVME/a5JTv65eIiallxAwU1YI+vHDx6pXfwUs/Ji70n
Acinuo6dPnRioONIV/3BxvKGirzyjMRMLoNHIVED/YO93P1cHD0O2DgaGpjt
UVRbv27LnLkLJ0/5Bgj8xZcTP//iK1gDiuFHEIAXkRltgxClgd6z58wDGq9a
vRaMMcrWQBoXjVHbedTJTRAnzMjMhu9Ge0fnwNHjcLjRLQ8cDkAEmiPvI43/
JBpjqW7IfCL/ibq6oVAAyjlAgy8oERSj8VvmK3zvNJZMdUMMlMzBxTTMkmG4
wyQJYYy3IyVZ2jGyqGMkkN8FxaPSeNh/iJlnjMAIwtitiiSNxUC+gYCM0qfF
QL6AgHzytGhS5v6BY8BksLjAWHC84HuBuvUNTYjMsIZt8MOIw2h+JXgwyqBA
UywhV3xOXC2DzZQk2alYsl+QZKD4Xbyx5IgeurBK0vhQWk5nYnoNi1dBY5VH
MUrIlCoqrTySUkoiFYeG5uED0jzck1wdE10cYu2sOeamDF19ADJdUTNiuyh6
TJdV5anqp5paF7p4ZTg4xe23ohroeslsNVs612j+DNsls4gb5scprCsyUAYg
Z6rs5kltjl6/mbtpB3ejLG/L7rhtqvE7NeKkNXnb1FiblSgbFELXywZvlA3a
sjtcTpOla8mzcBI6+qb5hzbGZhzMLDlW0XKyoetUc9/ZjqMXu09cPHz6Uv/Z
s32nTvYcP3aw/0jroY6atpqCqqKMwmRBCpfFp0cyw0LIvl44ezsXo71mSopq
K1etW7R46YyZs1EgAqPxJ59+/ulnXwCiYRv1EULQRqFj+BPkjTGNl8bWNrbO
Lm6okxs/Ni4tPRPuoVCXYzjicIjhoKDiaDj34WT8SOP3S2PJjxElV6AaZOQ/
gVSSXVyQ5/kgNEa9g1DWB/r3EAyxeAU6qSVP/1E85+8JLAnh0SvoXo/SYwLb
PxLI6Pr1h/ZYEsi/I7AEmUdF8Ugao3i42JMClocQkFHiMRhYcUThPAB58MQp
cLYIyOB1gbTAWxRJhnMNCIyExSXgMWj2ZwzFqAIauWJMqO4DdZhHNB6WOfzu
cWPJPZI5b+gwXW1uv9zYOlhaeSS/uDsjqyUhqTVeWM/jNvJ4tWxWWVREYWhw
DsEvw98r0cM5zuEAx9QMgMzWMgAg0xTUAcUJ+uZ5B1zKffGFvgHpHu6c/RY4
ld3W61cYLZxtPncqbuUMrsyKwr17Ks21CjSVBdu3MletpS9fz98iF7tFQSCl
KNiqwt+iwtqwO3KlTMjSbbilUrg1O/zX7MRtlCPKaVF1zDmWzgIn3+xgejEz
rimloLug5kh527G67rNtA2CSz3YPnjt08kLfaRBsDHYd7Wvp7azraK9tQxGM
1IR0wDIlgh6ED/Xy8LW0sNbV2wvwBJCiPm+A2RUrV8+ZOx8QPXXaN8BngDAm
oPHMWXMWLFyMRvHg8ahB3HhpjFKO/fxxEWQKjy9AaRUo5RgOPVxz4eDCuQNf
ftSt4iON/wwaY0LN5wGzkk0hsFMGO5X++5EKSRqjfw9LdUPBCoxv6KQei73D
Ig9voS4SvBYSvCJ60ZFwlgTyWyIeaGOYTx7VOb+dxtg2YjLCMgojIyCjEb0L
ly4CO8EenzpzGtEY7jcBrQBYOLnQGrX1APaCDQZhfhhNdQeCP0EoxkbuUA4h
NvGoZG4bojEWMR55ZXyLN8ZwLXlhxboG3ew9cqfv6M3ew/f6j97v77/e2Xmx
uXGwrOREWcnh3MyO5LiGWHYFg5wbRkjx9xQB2c6WZ2rOMzLnaBvGaOwV6Jok
Ge7PsXWr8A+sDA4tDgpMdncmG+q5yW43XbHYcOYk94WT6FsWZGlKlxgp52sq
Jshs56zfQFu+RrhVXiC1m795N3fTHvb63dTVu8IWS+HnrfdduNF3hZTX8i2e
K7f5btlNkNcM0zKjmtuz7HwEPsSMcHZBdEJZbFZtanFnUdNAbc/Rxp4T7f3n
e09eHjgHOnfk9OlDJ072Dh5u6T1Y39FS21pbUV+cV5qZkp0QmxTNjAkOCvPy
9j1gaw+QRLVyqEZDf6+hqprGDmkZQO7ceQsAwpg3BkrPm78Q7DHKc0NAHi+N
JVOOY7j85JS0ouJSuI2CrwTcFsEhhuML32HREP5HGv/5NIYPE6AnIh6QBzgD
+AKAgLd8oydPnj179uLFi1fw2x9//PkXoPHff/31v0hjFKyQBDIWQ8bwOyzS
K8nbUXeiO69RhV4Oe0UMyNiGpEOWNMmjCgsvY//tsIDzyGgGVp6GHOOwH9FN
vXiAFbAMPvkWmmFDnHt8/cq1q8BkEZBPnz2BVYmfFMFZVDc+eBJIizwzgBfx
GZtyFPVXgsegOe+wuZbQlKPY5HdoG02Bh+IVKKcCK8fDIsBYetu4vDH6rB6c
OAO61X/84ckzT86cvz1w/HJ390BNTX9lRXdBfltWemt6amNKQgWPU8yglVCj
CoihGV6+ac4eQis7vtE+kMBoX4qNU5EvoTKUVB0RnhPgx7G2xKkqWm1YZTB7
qs3Mz4lrZsXt3pyhIZeuKpcoJ83bIhW9ZmPc5p389TLctTvZq3cyV2yPWrw5
dPbqgG+Xe89a5btoA275Vty6nYTNCj6bFbx2KAco6YYaWIdbOlKdfJnegTG4
cGEEuzA2oz67vDa7vLW04UhTz8me42f7TgGNLxw9d+n4hYuDF84OnDl95NRA
z9H2ho7ffHJ8anJ8Cic6hhwaifPH+3n6erp7uTu5udg7ezi7w9rW6oC5kZmW
quau7TJrV6xZMG/ht19Pnzl91ty58xcuXLxkyTLkkEX2eMPGdZs2b5TaKrVD
Wlr23zTW0NDS0tLR0dHT1zcwNDQ2MTEzM7MwBxrv2w809vH1x2hcWFSCUo6B
xnCI79y9D99SRGM0kPeRxn8SjVEA+bfBsjc0foEKzMSD/djGq1fffffdDxiN
/zG2Pf5TaYzhURKDiLSYd8VIi6A6DMXYk7yFxsOAjD2tJJBHbyE0QhiTMc8s
ueddgIxFALA9v5FZNK53500/S5Fu371z8/YtICW413PnL6K28FiQQRLLQF3w
wAjIsIFmf0YPQHMtob9FFdBo4tGRE9uhAhxsDmis/HlY54rxxo3Rp/T4whDo
0fkb989fvXfuyp1zl6+ePHt+YPD04YH+loNt5VW1uQXlKRkFsQmZTG46hZFL
pueRKPnEyIIQch4uJMsbn+0VkO9PqI+ktbPYrSxmVTgpw9sd7LHN5rV6s6aZ
T//Sbf43hFUL6ds3CHfLJsjv4m3dxt8kJVi/NW79Vu7KzdS5q8K+WRQ6dX7w
pDl+X8zEf73M++slPjNWBizYQFi1LWD9Tl8peW/pPd57tAJ0jAPNrIOs7YMd
3SL98VwKPZkTly5IyUvOLssubiir62zo6G7t7uvsO3309NHeoyf7T54+cvLk
4cHBnqPdjQcbimtq8iuKUvNyhBmp7AQehR1NpEYFRlDx4VE4UhQ+NNw3MMjN
19/B3cvGwcnMykrX0EhNV15qp9TqzWuWrlm+aMXc2Qtmz5q/eMmKFWvWr1i7
Ye0mqQ1S20Gbt++Ukd+joKS6R1FVRUlVU0VDV0PHUNfA1MDEwtjcwszS0nzf
/n3Wtrb2np7eoW+mKy0oKa1raoa7J8wboyglluc27O74/0YByPui63iFfYAI
yyhSIRk6lhyZQjcpGMoQrACVw2aPfZcj8i40lgQyGsBFORWSrngsYZgdprGo
i75aIzXW48d6/v+4YwVmmMcswxNrpFtGQiELFEMGCN+4OQReFVW+IAFHgcyg
y1evgC5evHjhwoXz58+fO3fuzJkzp0+fPnXq1MmTJ0+cOAEb8ONZ8YL2w05s
8A7LLkbzPktOSIr0W773rXugW7fv377z4M7dh6C79x6BHj95AXr0+PnDR88e
PAQb/PT+gyeisiKJS4+k7UdfvOsD50DXjp2/ceLSrdNXh85du3n++tD56w+u
37t75fb1M1dO95041NTVVtZQn1dRk1FYlZBZzhcWMrm5FFZ2ODU3NKooglZJ
Y7XE8A8KhC1cXnkkOc3Pl2xhYr9rh+mqJWbzpzsvn4/buJosLcVW2MXaJc3Y
LMXYtCVqxRra8jWURavCZi4KmjoHP2mm7+ffuk+Y5vH5LLfP57hPXoBMstfS
Te6rpJw3SjtvV3DZrequvdfL2Mzbyhrv4kLGB7LJVDaZzqPFCNlxacK0ouyi
ssLy+or6ztaultqWrpauw229R9oPDbQf7q3raCmpayqsrk4vLkvKy+elZTCF
yVG8JAoX1qm02HQ6PyUqRhjO5AVTGH7BYc7eAZb2rsb7nE2trXRMDVX11OVV
t23YtmzJyvnzFs+cu2Dx8lXL16wHIAOKd8gqyO1RBhor7FZWVVYDa62nqYvR
2NLEAoCM0ZhIDGOy2IlJKfnFJbWNovmYEI2xLsdw9qGz5iONPyyNMW+JYkdw
ON4ylzf25MM0Xm+M0VhyFO8t+lA0fnuMYqRGDV+8RaOGL0Q2ckSuBZb8hgR8
lkT0JfGCmAxABvCeebPANlD6gniBDfQr1HpJEsgoRoHYO3Ke6BtDd4Zu3gUh
JiMsgwDCkhy+d/8x0r9NPoq9vElWRO+6v6atr6rlSG3bidbec10D5/sGr584
f/fijbuXhx4P3Xt8/e6tM5dh5+mu/lOdR04e7Bto7uqsrG/ILa5MySyNTynl
J1YKEmsTUuoSkmqFiUXR0UlhoRw/X6K9jbuhnrOGstdumTD1PUx9Ta6RXryJ
AU9Xi7lHkSYrH7JmQ+Cy1d6zFztPnmn/5TdOE6c7T5rh9NUMhy9mOX4x13nq
IvdZq9zmr3VetMF++Sb7NdvtNsvYySi6a+j7m+/H2zj62zsFuXmHBwRSg8KZ
JBonkhXH5Kfwk1LiUrISMgoyCwrS8spySqryy+uLqltL61tL6hoLqloKqusz
y6pSCksEmbnspCymMCc6sTAmqZiXUh6bXsJNyWfEpoUzBfhwtncQ0w1HdQ8I
c/Yl2Hv427l52ThZG5jrKGvI7ti1cePmpUuXL1m6fOnKVes2bd4qmo1JHk2r
qqqqrqmupaOlu1fPwNjQxNTYzNzUwszMYt++/QcO2Hl4eAWHhDKY0cKEpILC
4tq6hq7uXrhLgosv6nIMX1cs6/gjjT8gjSXTvVDsCNEYaZg9fove0Rhj6W2S
NB4ZMRip8dL1fdF4rKvDeOPJY2msCAaWlixZrYPIjIRlXyBKXxUvV65cuXz5
MoZlWGADfoSdV8QL9lssiUIyzRg5ZBS1wAIXqPpGks9oTlK0H2vmJjlxnjia
8QgJGWmEbtCTpy9BtcLsytjUqvis5syijsLqnop6wPLVo6cu9p0YOnHuxuD5
M91Hjjd3n2zvOdfZf7az/2TXkcPNnQerGltLqprzK2qzCqpSc6pTsppzihqy
ckuFSems6HgKhRkYSPTwIDo7kG0tea62yT6uuXifkhB8Mc4/09kpeb81V28v
TUk9cIu069LVdnMW28xcsO+beZZTZpt9+q3ZJ9Mtv5xtNXWR1fSlFrNWWCxY
Y7l8i8nKzcbrt++XU/bUN/PbZ+tvbY93dCf5ECgBYfQQCjucwaOwBQwe+ORo
MpNDiebTucJoQQJLkMyKy+Il58Sm5semlcRnVSbmlwiyAMIZ1NjUSG56JC+b
FpvPiGtJKWxKyq8VpBcxBJmhjERchNCfJMRHcP3CmD4h0X6hjIBQknuAr52r
ramVoc5eEZPXb1q+fOWqVWsAztu27ZCTU1BSUlFRVUeNg7BRPBNTc5CFpZW1
ja2bu2dQMJFGZ8bFJ+TmFVRV1x7s7B48cQoON0o5Rhz4SOO/Ao2xgTBUsY4i
+SOBjMX238Lbt2hkxBijsWTc+O3x3pEai7rvi8Zj5Wa8JZ95JJDfIsl0OEkm
DysVwQrAJcksCeehoaEb4uX69evXxMvV3y/Ddg7DL0ZgSSBjQ3hoIgBJFGO6
LRnaFutNg/r7SCjEgQlFNlLwkQl+oUl4clYEs5AhKOcltmQW9Vc1nG0/dLGr
70xb76GKuo7Cys5iUHVrQXlzUVVtbnl1VkltTkl9dllNRmFFSm5Fck5TbllT
fil45tqcoprcotK07My4xMzY2MxoWiGXUcJjlvOjmxIFzXGCchotP4SY7YdL
dvGMsbKlGZqTtPYG7FZ12iJzYNVmsxlLTKcuMJwyz3DaQr1pC7S/XqQzc5nO
/NX6KzZpLd+kt0l63x5NBy0jJwNzL0sAsifJO0gU9Q2MoAVHMsKo1JBIUgAx
zD8kKphMD40CUDOCIjmhNC6RFhMUxSfS40KZvCAq2z+c4U1keIZwvMNi/cOF
uMjciJgSenw1O6mGlVgeFVsQFp0TTM0JpmcRWSnBdFBiCI1HINP9iWGeOH8H
dwcLGwMNXbkdu7ZulNq8cYvU5q0y0rt271ZUUlZVUlNX09LW1t+rZ2hkYGJq
aGpmBAbZct9+6wMuru6EwOAoKj1WEJ+Tk1dZWd3e0YnK8VCXY0ABqgH5SOMP
S2NJjKDQMTwejggi50ggjyWM3sM06uCdJI0lifoW6qLHj9R4KT1eGo+ldxng
excgj1VLIlltLVm4h3LhRjL59u3bt94sN98sgOjr4uWaxPLbHgkCS/resWiM
lahjknTIo/327kgBjVFkg2RgFapvGWpoFbXPke3oFeuFTydGFtA4DYnpjSmZ
9UnplYLEcr6wXJBYwovPY/HzouOy6LGZNH42Q5DLis9hxoHyooWFMSkFvORC
fkpZYlZDTilAu620tru2YaCt+WhHw6GGyq6q4r6ayv7qyq78vObU1KqY2IIo
RnoIKSWQmIQj8j0Dog44h5nsJyjr++xUdtooa7Vyq9GS9ZpzVijOXKwwc5HS
wtW7F69WX7PVSEbJSlXXRsvATs/MwWgf3smH4OYf4Ozj6+SFc/PDufv7ufj4
OnsTPHEhPoEhXoQQd1yoBz7IxQ9v5wnC2bj773f1tXDyM3cMMHcK3udGsvGI
tPWmHPBiOwck+ZIyCVE5gbTcIHoRkVFKii4KY+cT2QWkmFwSJ43ITCWxEsIY
nCBypHegn72btYG5nqqW8q7dsttldkrtkJbaobBbUUFFRUlDQ11XV8fQUN/E
xMDMzNDc3NjS0tLaxtHVDfWc5/JiMzOzy8QFIEePDcKdEepy/JHGfxEaSwY8
USQfhY5HBfLbre9bNKorHpc+FI3H8sZvj3IPA/I7jvf9rtT6TdO5YZI0yZIp
ynfFy50Ry5B4uSH2zLDABtojmUohqbEiFdiUTJIoRgkYI8MXoBtDdyRDzZhQ
hNlXVsNnl7qPnAZOWS9Y2yQcsGxpT7dxph9wodu7MRzcGU4eLBevaA9ftqcf
x92X4+rLdvQBcZx8OY7+IK4bIc6bmBJITSRExeMjU8KYhezkqoTclqzy7sr6
Y91dp4/3nz3Wf/rI4QtHj147PnjlyMCFnkMDtc3teSVVwrSy2KSS2MTcaH4i
iR5HIPE9cQxb11ATa389U3c1PetdKvobpTXWbJFbslZ+2Xqlddv1pBXNlXWs
tYxstE2tdEwdzKydrexALjYOfq5egX74IH9CcEAgKDQgKNA7IMDVG+fiHeDo
4WfrGmDvHuzkG+ToQ7Bzxx1wxVm7EPa7hOx3JVq5Mhx9gcZ8V4LADR/nik/y
CMrwCcsJIJeFcSojeHU0YQ1dWE4VlDLiihiCLAonNojMDiSRvXF+ts72xhbG
Gjqa8oq7d4i6a+7as0deTVVZR1vDYK+uqYm+udleC3MDSwtza2sHF9cAHCGC
TOFy+RlpmSXiApD+gWPnL1xCXY6xyaM/0vgvRWMsCXy8QMYCwsM0KoolKfqO
dB0vpT8sjRGQ3z7e93Ymj9WJDsPysEKSe2MsyDMjnwwLbMCPsHNojOXGm0Vy
J/orzHVLRkUkH4897Bbg+sadm0N3Qbdu3rt96z7ozu0HoAf3n4CCZNUCd6ni
d6kEyqmFKGmT1PeGaRoQNffiVLR8lTS8ldTdFVVddiuD3FXUfTX0fBQ1/fdo
4lX0gzWMgrSMg7VMwV1HmjkwD3hEO3gDmdOCqaWsxBpBZnNywcH8itbqmv5D
3edOnLh44uTV02dunDl3/cTpq0dPXTp87GhTR3d5XVdZbVd5Q1NeebEwI5sT
lxLJEASFcfwDObgQdkAwxd0XZ+3gYbLPycDcWtvAVEnbQF7NSEnLUtMAUGyp
a2plZO5gbefh5EbwxUVTmcnxSRnJ6QC6pLhEIT+eTWNRQ8k0IpkRRmGH02Kp
7AQ6Py4qhhdOjw6JZASEUjwJka4BFCcfpmsAxw3Pd8PFuuL4Tv6xjn4ggYNf
gX9UJZHTwkjq4Ga0xaS3x2a1CrJqY1Iyw1nZUTFpkdHcoIhIjwDcAWcnIwsT
Td1dO2Vl5BXklZVVtLS09u7VMTEGGgOKEY3tncGjE8hkSkwMLz01o7i4tKWl
DRVHA43v3X/4kcZ/QRqjRDJJGksC+T+jsWRXCizB+C04/b9EY0kgv+Oo378H
+MZoPYdheVgcA8Pv/d8vsAc8MxbHgA34EXaCbb79+wU9YCw+Yzy/8fvQNAZk
SRrDs90En/wGxYjDd+88BCEaE7YqgAK37Q6RViLuUgmRUw2UVcbvUnKXknHZ
Iu24eYfzNhk3GXkP2d2usgou0rKeO+S8d8j57trjr6Diq6DsLafss1vVT1k7
3MSKss8WbC3LyZPnEZAcSCqm8SrjU0tSM2qKS9qq6zvrmo40d5zqPHz64KFj
TV39de1Hatv6alpBh2vauyuam4tq6nJLqzLzq7PzqrJyS9Oyc+OTk6N5PDJN
NBOTXxDRG09w8w1w9vJz9PCxd/OydXE/4OTr7o33xZFDI2J5gqyM7Pz8wsrK
6o6Ozq6D3Y31TdVlVRXF5QVZeenxySk8YbogKS85E1SUmlOclpsXl5pC5wnD
6UnhDAE+PA4fFu9H5HsQwPazbD3Zdh58O68M95BiXFRFMLMugtfDz+xLzO+O
z+4S5jTGJNdxk8uYgowIRkJQBM8/JNzRw910P1wdtLR0VMTzXKtpae81NdUx
NDQwMwOZ7d8PNPb2DwgLC4+O5qSlpAONGxubD/f1nzl7/srV66iTG1aRh0aO
4HyXJMkHx+lfhMbvUoUhmdWAFdFIzseEJZJhrSqw0SJUwYqwjA4HGlrFNlDg
AgPyWLGIsaj4vjTe0brxPs9448Z/SOO3w3lYT7lRrPI4u9w/evTooXh5IF4w
FA/78e6b5dYfLZgNfkPgq6Pqxo1ro+kGUH9UPXz4GITfsJOwUTp4i1zoNvmw
7XuCt8oGbNzps1bKffUW55XrHVZscNmwxU9aPkhRJVRNO1RN009a1me7tNcO
aW8ZGa9dcp7y8t6KygEamv6a2jg9fbyhMcHIJNDEgmR1gOHqxQsIFJJpGdzY
ksR0kYRpFYmZ1YlZVQnZDWmFSHUphdXJBfWZpQeL63tqWo60dR5qbettbj/c
ehDWgPGK3MLcpDQBI4ZHjeZEMkDcKBafxhb9GMWMCqdQKTROdAz44aqKaoAb
oBju/QcGjnV39rQ2t7XUN9dV1JTlFhVn5ZfnFVcXlVcVltUUllcXlFVmFRYm
pOXxEvJihFk0Tlo4PTEwAoAc5x0c5xkY6woO2SfTg1iGo1YHs+ojeF3s1EP8
rB5uRjcvozc+51BiXmd8diMvpZadUC7KxKDF+AYF2Ls67DtgYWSmraaloaGl
p2+ga2BoYmFpamUF3tjW0cnT148YSmKx2KnJaQUFRfUNTYcOH5Gk8bCKvI80
fi80lkzufXcao5JeNJCHOCxJY2xcTzJFbZj+ajQebzz5fwuNx+qi//jx40fi
RZLJkgsGZMwtv2XBgPzGIF8fg7pjCgtZDFuLafwQt2IzYdXm4LXbQzfsIK6X
xq/c5L5wtePsxQ6zlx6YtdB27lKXlWsDt8tFqWgwdQyYensD9+z2lZVx37nd
Q1baS0HOR0UxQFsz0FA/0MQoyMwk0MIUZ2rka2TgZ2wYtM+CZGvL8cUlhIRn
RrIyycykIHI8LiyZEJEeQkvERaQGRWWQmDlkbh41toSTVJeQ05hVMtDa2dfR
dbT70Mm+gbP9xwd7+robW5sBp9n5hWlZeUlpuYmpBSkZhamZsJ0lTM5Nz8zJ
yCzIya2pqu7p6u7v7z9+/Pi5c+fOnz134vigqC79UF9vR2dbbQM8SWtVXX1Z
dUN5TUNpZV1xeX1BaX1eSW1WQXVKlsjGc+JzKayMUEpqYHgqLizRNzjBk5Dt
TSwLpFaHAo1j2ujxXczETkbCQVZiLzftsCDzcHxWtyCjKza9g59ayxTkhbN4
hHCyF8Hfwd3awHyvuo6OuraOlq6RsanFfmtzq/3WduDpvYNDQukMVlJSCjj5
uvpGNB/T5SvXbt+5Bxz4SOP3QmNJFGMBHxQ6kIwMIMBK0nhYd0qUX4GAjOX9
DgPyWzTeCMN49b4y2f6303jMWUiePn0iXh6LF0kyY3z+HZDv3HqL7ty++abW
5AbS0I1rQzeuvLOu3Ry6LtKNoWHrB/fuP7h/F79sA37ZuqBlG4OWrccvXuc9
Z6nz1/OtJ35rPXGG1cRvDkyb47ZoechmaaqCElNZk6qiFqqo6C8n4ym93Ut2
p6+iPE5DOVBfm2iyl2hhQtxnCgo0M/Qx0PPU0/bS1/E32BtlbR9t7x7r5sd3
9WXauFIs7Bn7nNh2HjH2Pnwn/wSv4HQCOSeMVRjFK6ELCllxrUUVbVV1h5rb
Bzq6j7V397cc7GtqP9zY1lvf0lFZ11Rc0VhU2lxU0VxS3pBfWp1TWJlXVFVY
Ul9W2dnSdnLg2IUzZ69dunzv1u2hy1evXbh07eyFq6fOnRsYhGc71NDaU9fc
Vt0IaqmoqSsqaywog5dryi2qSc2uS86qFaZXcoWFVHYmkQI0BmXiw3P9SeUh
9JpwNtC4mcxrpcS2idXDSuqLSRvgZw7EZvXHZYO6uamNDGEpIy6DzOERyCFO
3o7GVubahgba+no6+qam5mbmlvtt7dy9fYDGVBojISEJaFxTW9/dc+jkqTOX
Ll9FKcdoOu+PNP6f0HgYiocl9w5rBPHbJCBv2rmPpDEWPZasfcOA/H5p+b7o
Ot448PvKcPtQNB5z/r43y6hYHiWOce/OqLp397a4suTWm5rsIaRbN6+NqhvX
L48qDMvD1uJXuSWC8JLVAQtW+s1e4jV9odvU2Q5ffGvz6RSbT6fC2varb91m
LwxcsYG8RTpqhxxZWi5om7T3Fin3TVu8t+3wlZX137M7QEUFr6ERqKNN0NMJ
1NcN0NHyVld3U1Jy26PosVspWFM/VMsoXNc0Qsc0TNMoRG0vSd04XMuMa+nM
2+8aa+sZ7+SX7BkI3CsIpRVSoquEaVWpWXWZeQ3ZBaDGnMLWgtKO4oru8hpY
w3ZbUUlXSVVPZXVveW1XWXVLYXl7WU1XVQMQe/Bg74mevrNHjl05efby4Olr
g2eunzg7dOLc1f4Tp9t7j9S29FY29DW0AZY7K+ubCsub80pbckubMvNrEjMa
EjNFU1TzEkrp3LwwWlYgOTMwPCeInB8UWUZi1EZy6sicWlJ0UzinNTymJYzd
FSU4TE84yk49zss4FZdzRpgH635+Zmdsdh07tZgWlxLGpHoQfPc72Rrv09cU
leYZGZlY29h6+/gFEkPJVFpcfEJefiGaj2nwxKkLFy+jKWg/0vh/QuNhRXBY
RHdUFP8g0dFdsiWvZLvgYa3ShlXG/cf0e18aL43/sKPm/zEaw/JcvGBM/gO3
/ODeqJLE8u998vXbt66N1NCNy6PqxvVLYl0etr539+a9u0MhS9bi56/wniHi
sMvEGc6ff+PwyVS7CZMdP51m9+lUu8+nOU+e6TtrcdDydaS1W0gbt+NWbPRe
tsFrxUaftVJ+m3b4SEn7bd/lt0sev1slSEk1SFUThFdS81NQ8pFR8N4p7yez
J2CnSLidewi7lILl1IkKmiHyGhGq+jRdC66pHXefI8/aOd7BM8M3JJ8YJYoV
kJkpYdQkMKgkWmYkK5cWk8/gVQlSKgWiKuwqYUpDckZTek5bZl5bdkF3ceWh
iobDlY09FfVdZbUA56b80rbiys7yWhF7a5oHalv7K5t6iqo7skqa0guacksa
80rqswpr0/LqUnLrU3IbkrLqhOn18em1vOQKVmwZNaY0kl0SwSoiUgHFxeGM
8ghWTVRMHSUGo3FTMLM1mHWQyOmNiO2nJpyITjvLyz4fm3s2Pv8wL6eNnVHH
TK5gJqYQGRRPgr+dm4WesZGeoeFeIysraw9Pb3xwCCmSwo+Ny8nNr6is7jjY
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
Vtt6+u36quqjUulsJY3hHwkZE5H3j6Xx4Msp0/jvzu8d91AF3kkTz8YmAI/T
VLvcTNXT/t00BkLCjQw8RC+mgCN0BwqJCudOLuuPjY779OPPlixaumLxciMd
vZlm5u+tXA40NtPQWGZuuEB/2meL7CKf3ad0NIjYVPhiCjjKsi8un0SmIzRm
C16Jw2ePpbFyXvt/X6omdeM0VY89sdkdyt6p0niqHnjKXv21PxMro/9uGgsY
VADyRCa/ihtrvEIxSmOk+kPzlT3epW+xz8R2v+l0J0OrXdqmO6YZAY0Bwru1
jPZqGyPSNNmnZXpQ1+KIgfUp01nnbRZcmbP82vxVl+auPDVj8RHLuXvNZjtY
zNlhNc/RZiGSVgEcnr3m3OzVF2auOmmx6ILN8puz3wBXDCgGhwxLxBsv+8D1
jU+9/vld4Dfrwn7dGrFhR9i6bSG/bglduyXkF3tQ6LptEVsdY50OJh87lXH6
fPrR0/FOhxL3Hsk5daH44vXSq7cAsMWXb+Scv1x87Vbl3QfV9x+Bah88qXvy
vPbp8yYfr3ofzwYP9/rnz2ucH1fevFd+9XbFldvVV+5VXr1XculW9tkrWRdu
lN9/2uEbjI2M7Y5L7E5Kw6dndyWmVgeGFnv6lnn6VXgH1PmHNodEdUXGd4TH
tgRGNPmHtQVHYcLje4Lj6dFZrPhsSmQqPjAG4xpMfBrAcQkTPg3lPQhkPwxm
ukYRfeM7QhKao1NqU7IyYhMzktOLCoob65t6sHiUxjxlz3kka1RJ477hYfnI
SP/o6P8hjdXVWYzj8LiJil4zD/I4/d0ZVn83jVFXDBwG4sFhwJ8PacfHF8KJ
G+zt9XHzeGP5ylVLli2eO3+e7cyFM2bOMDZebGuz2m7GchszoPEsTY2lRpob
P3mX0lYv5zEAyCIuU8RDZqyn0dlcgZTOEdE5U6AxaqEnSh2lp+qxx/7WWJiP
Q/RfHtlQt786Dy/4I8EZhq8bCC58yrZBk+cbvz6nYgpSVnkAk1Esq+LGUi4L
NA7FoC3TENlrGDjomaM0BpO8Q9sEofE0Q0dtEydt4306JqD92mYgoPFhfavj
RjNOm82+YLvwwszFZ6cvPmE9/4j5bKDxodnL99kt2zdjyf7pSw7bLj1uu+yU
zdJTVktOWS6+aLsCpbHKG99f+O6z5R+6rPnE/f2v/b/6FWgcBTZ4486Idduj
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
3xo3NwBypfOjijvOVXeeND31bPMIbvAIbA6I7E7KwuSXYEqrcZV12IrarvJq
EKa8BtSRX9qVU9KdXtiVlNsVk9kVnoYJS+sJA/amkKJTqHHptPgMWFJiUskR
SeSwRIJ/NMU3muwRyvaMFHhF0x/6sx4EyILT+nOrZPXtg0SaiEbD4Xta8Rgc
k0mHazdXLOZI5BxpP18mkyLxCv7IoGB0CKUxCuSxOWavSXt4jcudqN7+oUn1
n0bjqb6OOourjtJqvbdUKgdU0qgvFQq+QCIfGu0bHKEyWXC/AH+SiKCgNYsW
zLE0/XDFwjfm2Cyfbr7I2mK+JchsnrnJLGO9+aaGy6xNl1ubLLcwWG1tuNRI
872Zpp8vmr7KRPOTuVbH7X+lk/DwV0Pr74DwwC7ADoBFlcOgis2iTPsTNEZX
xqIY6NqDJ05JY7E8FsjjsK9i8qRGeuwY4qSjgRM1jsYT9x8H5CklY/9O40mE
XvsmCIkXsem0f1+vpzEaiNiuY7hdR3+blu42Le3t2lqA4t36eoj0DEAojR00
jXZOM1TmuSFSTiqNSAXnPboWh4ynHzOfddR05kFDG5TGSPneNGOwyiiNz1nO
u2g5HzgMQAZdmbHkxtyVD1a+5/7eF54ffu36/ufun3zq/e1XERs3pO11yj1+
JOfUsZzTJ/POns06eTr1yLG0w8djdziF/LY1xt4xc/fxiuOXqo5fBhpXgE5d
qj5/o+bKndrr96qvI8nDFVfuwrLmxoOm288abz2tu/qw/PK9qntP6556tPoE
YUIjusIiWoMC6z09a58h2W7K5ORnTc+9O3zCmv3C2kJicam53XnF3SVVhJpG
amMbubGVUNcEojS0UmubyZUNpKJqQnYZMa2YmFRAjM0lxmQRYzJJcRm0+Cx6
QjY9PuMVjUMTqEHxrMAEhnck2yOC7x7JeBRAu+vDdo2QpRQPVrcNYcm9ZCr8
73aTCVgaHaWxiCvp40rlfFmvRC6VDwqHBkTDg33Dr3qnj3XIr8n7VUdddXm/
8EaT6r+dxlM9TrU1YiIRh8ORywfgPnegf4TDRcaVFArF6PAL51u33lyyeJGN
5eo5MxaZG8411Hpv7oxVtjaLzS2WWJivsLFeaWuzwtZysYXJLH3NOQaaSy0N
vlyz+O05lna6GnMMNA5u+q6fQ1aMDMILAsfQPAFgDhzMX0jjiRxGUYzF4ack
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
kWvpiFDUy+YIuDwRfBD4w6iiFlgCHkckYPA9nVgMrCAfgUABEYhUEJFEQ0Wg
0GGJJ7+SajtIXUWwOhqPq7ZQIVfd9tdnvo0D8muYrA7F6tg7KZ+BeCgAVdRV
OVhgpgqPY5k8DsIquqoTugO6T21dA6imth6Erk+U6lfGwRy9a1BxeKI2ahsA
gccCGbZsUkaMAcVovjE6uzQA+VVrTWV62zgan9SfedF03iWz+ZeM5p7TswMa
gzE+b2h33njWZZsF95e85fLupx6ffOPx2dfuX3wT9P068MPhP2+K/HULKPyX
zaE/bQSF/WofvXEH0BjsMSxjtznCCtA4fef+nN2H8/YcARrDsuzIGTSnovXy
TVDjxWsNF642XUIE3rj78VNCSDAtPg5ozE1IJASEtD53b3/m3uPh1/HUs+WR
W8NDlzZXb4xvKNC4zTcYFxrT7hvd6hHR4h7W7RdLCE9mJuSIc8oHyuvBJPdW
NcobO8X17YIGYDJJjmP2YxmyFry0pktS0CROr+yNK5JF5veFZPcFpsuDMnoD
kvk+MXyfaHlwsiImSxGdNRSW9CI+/UVkvMIzbPSRd989d+EjL2FkkryiUcEQ
KcRDCvHokHCoX4y0ieDKpYKhXmSOPGWW2thYMWIylUlrYImHhpFJguDfMj0j
KzUt49lzj8SkdABydk6hn38I4Bc8MCyBe8DA/oHRjMy8p8/cAdHgohPi0309
w5lkIRXL7a7rSQtNj3IN6yxo7siurY3KqwnNaAjN7EkoYWfUkWIK2/zT2vxT
6jyjO0NSsBEZrf7xlU8Ci+54lj/wa3KPxIdn0JKKaOmlnbFZZX6ReV4hRcHR
hWGxlanpVTk5jUWlrZXVHbXNXY1tXc1d3W1YXDeZhGcQcBRMO667pRvXjsO2
dLbWNDaW1bTVtLQ3dbQ0d9bUt5VWNlXUtDa39WC6KA21HRVFNY117T04Mo5I
acf3tOF72jE9rZ2YlnZMWxe2E0PowhEwPciz3TgSBk/C4ilYAhlWYDvs0NLR
WVVTXV1bA19nYAV8GcFyspi8zg6shC8uzS801dFfMnPmTAPDxZaWSy0tZmtr
z5mmscLIaJGB4QwtzVBX1yGxiEWhMOhUAonY2tlVVFbZhSWCk6dQODgMDd9D
6+rENTe31tc1g2duaexgkrktdV3F2RVF6aWpkamg9qoWIZHdXFxbnVXUXlHf
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
N6RkgG5KT6ex6ryFM9F4qnoMaKwi3kMEIntXtOcpsMdzRbEVMgv1Zy8GQDaa
tdhYar4pZIGl1EKH2Std569xW7TOa8XmgC17SAeOU46exh44Bt+xz2fTbu+1
Oz1X7UBsPYw/eIZx5irj72uIAyf99h9HnfiHfPFGoJJauJZurIHJTxrbJphZ
p9u4JFu7xJs7xBlbxxrZJJjYpJjZp5vbxeubARrn27oWObgV27sW2joX2zqX
2ruW2LnUekIBeIE37kCg21GYVgSmzte/3i+gAYYA4y4ssY9EG6YwRSLThoiE
QSx2CEsATB4hsh6haEP+1CE4/ak/8wUy8DUy6JkvddgN/cQT8wHF+MYI+xEc
9SM4Anjdtz7Yd66IcWeRJtxQwPF+DqAAGn8hskXNbCSOkBIopAYLScHfMexv
BLaQGiQks4VYxmc49aUPEaBeWNr0sXsoiheia2Bobm3j7eqpp6VjbGBuaGSu
q2tyT13b0sLB2cnD2srJ2cGdTGD6+6F8oAgrS3tdHWNzMxsrS0czUxGKbS3s
zY0sPZy90P5YCp7GoQfhEQQugxfFjw6AIsLYoe62br4uPmwiKy0qJZwSmsZL
Kk8o6ChsBMeWnJq27Jo4UnA8iReDYQMaRyNofCiuKDAmEcNKQDLC3LDF1Cig
UkZUFooV6eKfFUDORVBq6dy+iLinsckT2QWTOflD/JAsZ9c3iUnCR4PD4SEd
dPrruIRvGXnC6gZhRk62mWU3AjVCppVY2oxzw4Rp+YP+1GZn5HhwqrCi821c
boEnmnfflK+lH66uHaKoFH5TnnzspPfWXcTTFznyKtCjp/RXrVOfP09v+fL7
85fem7343tyl5lt2exw/Z77roNrKjRrrt+ts3Q9MsurmPRo7jzw4dPre/hOq
e44Znr9+99hZvUvy1/YcXA+RXg+c8Fy5PQvm75CT3TN/zgZRjULu5ubtt7bt
urZm88VFq8/KLdbcusP06FHDw0d1Dx4BNDY484/5VUU/AzM/MxtvM1s3U1sD
dV2kZwDWH9da19ZY3drT1v/iyZuO1p7HQ88G+oZHn71qbm6tq2sYHBz+8GG8
v2/4+bPXNdXNTQ3dDXWd4PqO6pa00OjKlNy6lNzyyOTi4NjezNKGqNSJhu6e
lNzHeeX9GYVgkEvhUC0dGwIjH7Hje1G8l+ykIWpUJ57/PCKzixWT6IYqIQc3
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
89SWrXiwafM9AN6li64unn9t5dIzSxadX7/28pbNRtevJ1BpgzV1r3v7Pjx+
Lmju7O8S9PUOCnoHHz8ZbWnvaWjuamkXtDT11lS21FY1J8WkZSZlxQRHx/Nj
Q8iBKdzowvCkRAI7g8xNRlHB3USqPzmHwOK5+4b7IAIdPEKdoDQDa7/bWrEu
MJ6lk7+qDvq+QToMm+ABj7J2z3SFVcLIfayISiSpAkXqYPGL/dDh+hZh940T
tM0rLb363PF9TtgxbGijmW+PB+lHRF6DByHf0b+THdMSHNcZmzWUX/m4phUA
ub2hvamxraWzp6mrp7G7p6m7q6Wrq7WzQ5z3M2WMxc1svzYzTKPxtEkryXaC
aa22YjL/uiZC/A7THv46RzaTef7tHkm/SvLlv5ZHfi1iz1RpmbZ6+t9Gboon
78QELi+vrPi5ExhQXV0D0EXpf3VTXBL1tklfEy0AkQVmWEVuARCgseJPGoOn
xM/e+L+lsZH0YiuZZbazVtjJrrSbs8px0QaAYqcVWzw27vHZuM9r9U7XpZvd
F22CLtvqu3Sr37JtQF5LtoAzXqtEM33wvSfQJy/iL8sTFZRpGg/Y+kYcE7NA
C2uOlW2glUOQjX2wjQMQz9KOa27NNbGMsrIDQI4ysYgzsYw3Mot7aBz/0CjR
wCTF3DrDzjHfw6sUBq9AIYErBiiuo5ErCNhyPAaoioRvYFA7Atm9fF5/KG8g
mCVgUTqJ2A4ksskNWmpsW3zftFbXpl7buk3X7okldMTSe8TK86W976it16in
/1M87jWP85Ef/IMfIgwK+4gkvXDyfe/q/8kTC+zxdxgN0PijH3UCRp1EMidx
QeM0/vvAyGhtY6u9x1wv3DQ+d/n81l3XjpxQvHDl+P5DR3cdOHPgr+sn/rlx
7Mz5HQfl9/91at3mS9v2XN954Mq2veAov+vg1a17rmzadXP7fuXdR66s36G0
67DavuMqu448OHZOfd9fBkfOWJ6+ZHvuGjha/X3F4+Ydz1tqNhdu6B4+ZXjy
H7Ozl+2u3fJVf+B2W832qiJGz8RHTdfi3A2Lc/Iuiuo+dx/i9C3dlbVhmgZU
c2ffew+h9/Sh9/QC9CxQhpZe9/TxxjZOtzQAvSkmjkRDO7KxA8PM2VdVj/TQ
hqxvD1fR55i6ZcPpJTheKVakJnZUGYnZHhLdFhzfHBgniMxu58V1h/IHIunP
ElAj0e7CtmBhfeALhoMwmdXraj/o6f4WA2tzc6yDI7u4ccJ3QuGrH20xaWxT
M7LqFe6dM4ijyzx2yAAgu+xd+XDdovurFhqsWai3cp7BhiW6G5ZorJ5vtGu9
ye5Nyovkbs+drThnNgCyxtp16hs3XVu+AtB4BwSyEQI5tERuGwSyXxpyBAK5
vmSJxaEjV2fPvSozR2HefLU1oouvLlt6cu7sM0vmXd64+u7Rw5462il0WnNm
lqCs7FF9Y1d5ZW5sQnN5dWtVQ2dzO7j3f/3y3aPhZ/19j5LiM2rKGvLSCkuy
SlOiknE+6KTgGDaKQvYKIDr60J198cZ2Qfae4U6+fCs3rqlTLoKS6Ifi2btw
rRxCrJyibFwjTB1Iqjp0LcNgY3u+qZ37BcUcb2ShFyre2DHLwqPUBZ7vCE2z
cqrwRrWgaeWeiAxTp6yHdtWW3nVmXh028CE34lMf+iM/eqcnvsIOnm8DfRWR
VY/nlaCY7ZFpL6taXrUKHrcLBJ197R09YiBL0FikX2ksOXf2a6VCsrNLksPi
PlvJVlsxhH+L6F8p/Wu5YxqTf214+AMhp7LXJIEsvn5qMk5cFZlKp/91jzzJ
GoXkROQ0Uz2tvaSwsLioqKS4uBQwGQB5isbV4LXVtVdkZwNdk519fdbsmzIi
ARQD3fpZOlaQmQPwe1VkmyFXIFKAxuIJPrFuS4s01VMhznMTbScNkRPT+J7M
fDGNdUR144WmUostpZdaz1puKbvcbv5aQGPX1du9t+yHbTnovWYXoLHL/PVe
Szaj1+3Drt8PaOw+b72T3BqXhRsAqz027PPddwLzzzWCvBJeRZ2k9YBpbBJk
Y8d3cA52cA20sWdZWLMtbcDDcEeXcAfnUEubcHPrKHOrWDOrqIdG4Vq6kfd1
4x4apVnbJltZp9k75Li750N9ylGoWhKxmkSswOMqiPhKEqGKTKyhkhvotLZA
Tk8wtyeIKeAwemmUDjS23gNaZeVcZWhbrWtV939YewuottK17T+4k4S4keDu
7u7u7m7BAwnu7g4FChTaUqUtUHeKW6l7pzp1mU7HzuH/hMzh5dB2vv/3rq/r
WnvtHWSFUH659vXc9/0EJq4GJ98Oz3wcnf04hvYsNvtNct7r3LLntbUvO1q+
9PasDwysd/d9qax/m1XyPrP4V3rVn/mNv+U1rdcP/FLY8rG45ff6vj+7Rn7b
eXDENypHyyTDwNxXSdNUTNpYXtFQSdVQTUtbSVVbQUVfQdVInplLmEmr6BMk
9HEUI5K4CVHcmCAGZE6SZAovboqlaAkiTVGiFlgxZ4q8r7ymh6RyqLJeoo5Z
qp55rKpemJx6tBq4NInW0A9X0Q5UUIvWMvCXU4nRNY7VM0k0sQxU0QRwDlbR
C1HVz7RyK/MOZdh7p5g7Zli70Wzdk80ck0zsGC5+xT6hiWYO4N45Us8iQFUv
St8y1dqV7uBd6B6UZulS4hGS4+BX5R1V4hpS6hLSEpzSFZ55MKv6KKNuPLeh
NyZzLL/kSkvnVPPA7eHTr8bX/px6+PPRC2u9PXd3NQAg/3Gydn2l95fd9M8D
9PWDjevHen9pyr+dl/Jl99DVtu7f5q6vf1r/ML+2ryC/O9S9wUa52YRUoS5U
qYXIU0XHSaP8MHwhGL5wrECsBNIbye2F4ouVJ4eJYUNEse7CAk58vI78Au5I
lCeRZI1EqHJyUIAlhkAUuSDK7BBZCMSQl9+XIuGGxJlx8hlBuCwEBJ3xRGMY
TIWPWxsj4muknR8V2pGXm+bvX0+jRTo4J3r79lVWFyZSd7d2dlXVLp+fWjhz
cbiz/9Cu/WeOnupu7Bzu2TW5+8hg445aRnldbnlfZWtveWNdal5JBDXe2pXm
7NMek1rrF56sZdbgEVJq7VZk4dwTGV/nHdjqG9rmHVJr69HtHjwUENNk51Vi
4lhn51lj49nq7FdmYNtp79tr5zfiEno1t+pOacNyTuXJ6PSp9ILbZc1rOTVr
mRVPi9pWEwrnIunLiYXPKrouxNEvUvMf1vfO0Guv1fS9HJ54vHvi/qHTHxdv
v7v5+M7iNSaQ126tXLu+EVPcWrq6ymqV2DZm7dsdjjZbIX5U08XC8tbzrXze
bJpgdUacOHn6+IlTQODk5KkzQN8CfBui/znQ+BGNt+L0v7zrN5xnfZ9ti4mb
ZR6brXlbl/y2FlewVio3L6cB5DfACwTOgT2+uBEmsx6x5Oax5uax4WIKoNiO
nftv37uFxhYbNDZnOWf2v3G9SWMXdt6t89xYMyv+3hBkIzfeTCpi2WEsGidy
I+O5EAkCmDQUBdC4REIF2OM8DDOaKECIV2Bly9HSBVBynqBojiCJISzKQIoz
sDJFMhrVeuZ11o61zh513n7NoWHtsfE7ktOYXiIlvTsppSsxGVz2p6bvBMeE
pJ1xibviEnZFxw0Fh/X7BAz6BOwODN0fHbs7KnpfQsJYRvpkTs758jIWh2ea
G6+0NE63NoHjVHMDuJxrbQZMvt7dfrOj7WZL87XqmqW8kplU+mxcxnxU2lJ4
6lpE6t2ozIfRWQ+jMh5FpD+Py3qekfukrOx5U/2nzo4/duz4q6Pnl4q6N9lM
Gn+mVa7X9K1X9DxPLv6rpvdjZceXlp1vmvuG3ELKjGxTNAyCFNVtpeRslNUs
NXXUZeWsjUx1ldRUJWW1JOX1JRQMJeSMKbIGRHEDrKgpQRwQ2IwoAU5M8GJG
KJIeHGcggtfghVthxFzFFPzkNQGHvSSUgxU0AyQUXTEUN6xYuJx6jIouk8nK
OhkmNjHq+tlWjhlmtgn6pgDLCYbmUdqGQAl65lFqRkl6VjRz52Qj21QT+1x7
r3xHH5qlS6GzX5qFU5y+Za6TT7FHUJKxbX1IHM3GrcDVn2bpGq9rmWJsn+/o
W+jo1xNNaw9NaQtJ7glPbw1I3BFB2xGRsTuxcFcC4+bg6MWGzjOV3RNFPQvt
E2t9p9+fuvri6LmlrpaZptxXB2vXFwf+fbziWU/8+tGS9Us7PrZk3S9O/veh
wVttDdcHhtYfPFt//PxMa3ODv2O9o3qNESZPHlKrjyzSRsfJwSKkETFkWARe
IJIM84CzeWN44xREQyloXwzcEybkyMsDvLGrCMIeidTm5pSBMAmssBFQaPHw
aHNzmwlB3QkUezjGkIvfAoow4BdS5+UzwGH8TA3L05NKMpKyE6Ii3Nyo/oER
Lm6Btvau+kZ2Gtqh9k5U34BIZ7eCWGp9Vl5VRk4dvbinorE0Pachp7Q2raA8
PrsiIauVVtxOK6pNoLUlMw6U1TdFUMHLW+HiX2LjlqNn1e0d1u0ZUqBnQVXS
qrB2HAmN3R0c0+ccMOobfTgwodPas9bQrsnCtdnSvdXas9HIqdfaZ9DKd8jK
Z8Ij6h6j6k1t93J64aXYrFlqHjDGy6klM1F0QOPryaX3cuqvZ1dfoebP0yve
9+67X9nzqG5gqahtoar77bFLP5+auX7s3Ke7z55ee3Br9dbVFeawNebAzOs3
AJAXl5e+7U3e1u+8tU1465rdNoe8dY7Zt1N0Nj9zk9IsFLNovNVUf9dIfxtl
bALwH/bs2Lr0tgnkb/OQ7+4xunVVcdsw5M3vuYli8A03nyfLDAMOzwK2A8Jv
MHkzqbDl5WOKm3cbjVnuF1yyaGzxn1TZduOjLCAzjTEHc1QFa5gbE8gbezOx
qinAkWWPfdkFgjc2LQU0TuQQYXnjaE54PD8a0DhfTLFUUrWIrFiIly3CyhQi
JUpRUkVwsTwhUiFUrAgmng+lMKBkBkIyn6JcrmFUY2pTbedS5eZZ6x9QFxLW
HpfYQ03fkZbRnZLWSU0B6qYmA+1ITOyLT9wZGzcQFdMfFNLt5dvj4d3n7bcz
MKg3IHAoImI0KXEsM/NUUeGFmqrzddVTzU1XWlum21qBplqaLzc1AgGrvNzW
strastbUvFpTt1RcvkQvXEpnXKVmX4un3Yyj3Y/Nvh+TeS889XYI9WF4yuMk
2uOCwmfVFe+bGr60tf/e3P6prOZ1VvE7WvGvWdV/5TX+q7j9t5K2t0VNv3fs
elHXtdc3LFVWg6qiGyKvbk2k6JPIVmrq5tq6ajKyxppaGjJyOpKypnIqxlIK
2gSKFpakjSEa4SlmJDFzUXFwNCGQjfGiRmiCLhxtgibqCCJs8GLuEgq+0ire
Eor2GApzMoO4ghUf3EoQ4S8mGyAu50mSCJCUj1LVtoZj3MmS4SqaAfLKvjIK
frKK0Vp6UZr6VD2LKCXdCAXtSEUdcEzUNMk0sk3Tt4rTNI7VMGJYuQCzHa9l
kqxvmWZkk25sm6RvUeTsU+jom2nm1BQQW+EWnGHsUOTgV+Ec1OgT3Rmc1B2a
PByfOxBD6wqktgXEH8go2xFN2xGTM17UcbK892Lj3tWdE0u9hz+cnlnq7Jxp
LHm0q3p9btfbffRHPaG3633edWXcK4tfP9DxaqD5cmXhy8mj6z89WR0ebApy
bXDTL9FDpklAqo3gBfrwaAWBeFVsvDQimiQcRYJ6ibD7oHhiZAjBokhPhJAH
VNADKuyNRvuLijpgMYrMdg+IPA+XIjuHEoRNGcKuxsFlDkeaw1Ea7NyaPPzA
M5sSRZPdPGhhoVV0en1pcWNNRW1F6Wj/UFd1U1NheS29oDw5M90/2FPH0FpG
KcraMdjIkurkyfALT3TyyvAMASqNoMZZuBb6RBX5RMSbOoL7iAK3wP4UxrHi
mgtVrVVOPjWOXq1u/jUWzr1uAaeo2fcaOmrNbOvN7FrNHLrNnffY+094RR90
Cm7Xte0zdxu29xvziwM6EUid9I477hU34RJ+zMZ/ITTlRlL+TET6xbC0CxHp
Z0PTLkfRb2ZU3abVrKWUvazqfVHb+75zz9XC2un04lu5TZdj85gFyV0H3o6e
fjgyeX1k4vGZ+ZdLdx8s3rw2v7Iyv7y6unb1BgDytcXV7XN7ttWJbRva8A9z
G7alDT/aI2OT2Jvs3ZpyfJfJ347f2QrSra51q7YBdpOf20rXtj3Pb4G/dTeQ
b8dvsu4atn75ZkaxGRqzqim20diOk8leFo2Zkyi20NgSstE0zcZhwxyq+Xdo
/C2NWfXG7my8rL4PcAQ0Bid+HIKAxsw98ja8MQAyq6AiEYqn4STzxZWAN84n
yuWgJfOQEnlwSjFCAhjjfAFisbBYKUyiSIiSKySaDaXk4uWK5LTK9czKLezL
HVzK3DzKvXxrg8Oao+KBK+5KTu1ISm5PpLYnJnVSk3uSknqTkvoS4nujonuC
gju9fbs8vIA6Pb3aPDx7AgJ2xUQfSE2dyM87V1VxprbyTE31+cb6y63N0x1t
QFfaWwGcgYBJnm9qWGxsWKmtWymrWikoW2MU3sgquJnMuJ3EeJCQfT+Odics
5VZw0oOw5EcJGU9zCl5VVnxsqP/S1PSlvulDSRWg8dvMIkDjzxkVH2nV6w07
P1R3vqztOBAYFS8mn66qFyGv5iIqaUYim8rIGykp6SgoaCsqKZPFNSiSJrLK
tkrqJuIymhiCFpZoAD7nPyg2wpGATIlMOJvhyVaiEkZIvC1B3ElU2okgCVDs
gKYES6vlmDtEK2mGSCsFSSsGSshHKmnEqun4S8j5ScrbowiBcspB8ioAyG4U
yRQTiwJHj0gFzUhZzWh57RgFnVhF3WQNEyDmpZJeobV7lUtAiJRarLJ+nIpB
orpxqo5FmJxmqp5lvrVHrqXbzuiMVv/YSufAMge/Ro/wNt+YOteQRvewkdis
sfTiroD4Ro+IUrugMocwhoVvc1BqZ1T24YLW840jKzsnLrWO3Bo5crVvcL6t
6u2xrgdD9OXmwNvtYe/6s3+qo37cUfDLrqqr9Tm3+1vW15Z+mb44nBlX7WaU
o4VIl4OUGQkxdHmjlHliVOGxklBA4xgy3BfF5SnCGUpBBouivFFQJz7uQDwh
TELSk0gyFhaW2BiVKcYMKNhUuXlVuPjUeARM0HgNQagcF5+9jEJxRGxlclpn
WcWhoaF9w8Pjx44cPTo2PT09cWhiZ2vfwYHR9rK6ipTs0riUcHB/Ye0cbWTl
r6IbrmOaaGzrq6QTrGEUa2QD2FvkEgDuMtKN7OkWrtmmDgkaxhkGlk1eIR2+
YWcYJYdi0nb6hJbpmp+ITT0UGH0hIeNGYdVkUMyQhctR58DpwMTzHtGT9kGn
3SKOOgZNuEXMxdDnYxk3U8vP+1EveCVedI9d9KPeisx6nFb2NKf2YW79WlrZ
bHz+SmrZmcCUqfCs+fj8W/S6m4za1y1DP7cNPqndcS2z6k5O082c5tX85uvV
fdOl7WdKO+7sO/Vu7tbr1QdP1+7eWr62ssQMKJauXV1cW11YWd3WjLzpir9t
lPg2rNg2T/Lb2onvtlRszg3+Nn/+0arf/7EAY5u+uyq3rVxtK5m3meStZWys
n5pF/q3px+blVke9WUSxTSyrDDj8N4o3aMyyvpvuF1yyaMwqRbbi4LL9z4dY
SQWg8WZSwSw5hnCzaMzcm4lTkNUAwqIx8MYxbMxKYwDkOA54kgA2WYSUTZAG
NC6kKNIxkjQ4ORsqmi1MLISLsWhcJEgGKuAn5fOTaHzEbLh4LkWpSFWvxNCy
xMq+xMG5yMmt2M2rwje4ITyqJS4BqDk+oS0pqTMlpSuF2puc3J+U2BsTsyM0
tNM/oN3Tq93do9nVrcnFtdPXd2dkxN5k6pFcxsmK0lPV5cfLy07XVl9qaZnq
6Jju6gKa7eqa6+6+3FQ/3VA/W1e7UFu7VFm9Ulq5ll9yjV54PZV+C5iZRCaN
70Yk3wlNehyZ9iwp61Ve4Yfqyi/1DUCfq+vfFVW8ohW9ySj8lFnxV0HTl9yG
17m1f3aNHPKLjBeTjZKUj5ZT9RCVtMQQLSWlbNQ09OTklMTEdOTklAkkbZKY
qYSsMVkSWGJtHMFEStpGXtFkA7/AFetjCEDGBCafmUzGkwGNrbBkO7y4LZrs
gBXzl1LZsLUAmOo+ZFlHDNlehOAvpRSqoAHOfcTlHdCisVqGaSbWKUaW/jLK
0Rr6EcraIRJKoeJKIWKKASTZILJ8jJwmVUU/XkE7TcM4Ukq1yNwpRc0wVEwx
QVGn0s4zRd2oyMotz8ypzM6LbmRXYuNRaOna4hXe4Bbc6B7S5hNZau1RZObS
6hl+NL1oZyi1L5g6EJ55pqD1THH7YEL+AUZNT2LuUFbl3vymy1377x0+d3PP
kdX+nctdDVe7yiYLgo/R3B50ZrzoSr9XEXqvIvxqSeTV+qyPxw+sP7x9rrG8
wF43TUMkW5OnwJA3Q4ctToc7XJE7RkKQmVQQhf3Q3F4ILkDjUArGCynsBhNM
VFSMVVS0FBaWg0DIEAgBHDkg4uwckuwcKoIwRUGoNI+gDolC9fI70NVzqH9w
pLvv5NjE2RNnlhZWz5+7PD5x8tDh8dHdh3f379/RuKO9vKk2s6AoIonuERxt
YBWsqBOlbhCtrBerahCjZJCkYRatqJ+pZ5Wmblpq7lxgZJekoJWqoldoaJOt
ZRxNkU+VV08Uk6XJqdHl1PscvNpMbHssnXY7eu22cR8wshs1dT7nGnrOPnBY
2fygjsONsIyVkNQZv8TV6Ozr8bkvcxrXIujXIxj34wqfJ5fdjaYvBKWsxtKf
FrW8q9v5uLh9JbXiWlrVUmLJrYzaZWrxcir4H1v9rK7nYWnbm5p+YJt/rt75
pnH3HK1uLrf5WuPuhabh6yPHH52ee7F46+HKzdX5jTG/K0vz18Dpynd7337U
QfyjpuBvrew2z7ktqt2209xW2/wt0v+hxOJH+hGKv+3I+5E2a0g2nxL4npt8
3oTz5uvzN5D/W9PTsyyxaAwAC8Q0vexM0m7SmCVwaQXhMN+gsQUHpzUn93dX
8Zwg3KzuD2ZbNPvfPdEsMRtAOASD2ATD2ISiIcKxEOE4CJS5nMeHpsKJWXip
XIpCjqhcJkosTYiQKUjIFMAVwChMGvMRCniJ+TyEfE5cLg+exoXLFCRlYqQY
Mmr5WsbFZjbFNg759s65ds4Fzp6l3n5VIWF1EVH10TFNCfEdqSmdKdQdKcl9
1MQdcbHd4WFdQUEdPj4tbu4AxQ0uLq0+3r1hoSOJCYfoWRMlhRNlRRPlpSdq
q841NV1ub7/S2bkB5J4ZQOPmJiaQ62pnaqoXKqsWi8uXcgtXsvJWU7KuJ9Fu
J9DuxGTcCqfeDkv6KSr9RTL9XV7R56qqXwGKa2o/Vda+KyoH3hjQ+Fd6zceM
8vXKni9VXWdDqTkKmkEEcoSsojOK4IAlmeNIhqKiOhLiKmSyPJGoLEpWJ5K1
cSRdLEkXhdNG4wwpZHN5WXNZGR0M3gBLNMSR9NB4IABkcNRBYrVF0My8Akmw
RJGsEERA4yApVeBaw5W0PESlnXFiQPYokgte3FdCAQjQGDweIKviJS7nJirl
KSYbJK/mjpdwgRMDcFIRYkqR4srgGCoq74sWdxXGh4sqJCvoxkqqJcpqNTsH
5OlZx0mpF5s6JijopWuZV9v71jj5M/Rt4+V1qcqGgSRZuo5FmbVbkYlDobEt
YNFQWEK7Z3BfYGyre+hUWdt8/c5jObUH6XX9KcX9GWWjRU2T9TsmG7pn+nff
O3TsdHXNhfqa8Xz6vpTwq03prwfpP9WHrGU7XKFar5ZG3+qu+Tp1erGvPcfe
IFkTzTCAMgy4MvQgVBOecBX2eBmhUAxvMJrXH8PjhxGIkMCFiWGdBHk9RGDJ
6mpR8op6PLxSEIgEJxuJiw3HyaaOxYlAIMoobICVLS0iaqil/fyxiYl9h/YN
7525NHvj2u2lxbXjk+fOn5+ZmDg7OXlh/Oj5+urOwsySxMC49IDY2sSsQu9w
mqVLpKJOhq55nLxWrLR6hqpRjo5ljIR6vIRanoZpiqRqHEkuTVo1Q1Y9gSyX
KqVSaWCRp6Sdp6xJl1YuUtBMwYnXaRi26VvUKWs3yKjvUDYY1bI6qu9wSNVq
WFJ/TMVmzjH85+TS25FZV4PT18JpP2fWPkkuf06teJ9d/z679nN+00/p5dfi
82/Tqt/UDXzpPPCiuv9N3fD9nNYnBV23M+telnU/L+v81Lb7eWX3p9qBXxtH
HjCa7+S0/LZj/Kfa4amshueDJy5X71wdnnh8YemnpZs3FplT5i4vzl1ZXpie
/58i3m+rFLbaSBaFfrRr51Z7vNXTfttZvLV14lvC/ygf/rZ++P9nvfE2dP9z
j962qJmVCW/+FKzns2mVN7dqYhXssX52YIO3lhlPTU2z1vVY9cZmW2rbWBMq
/nbFG4nEVhpbcnLZcPE4cfM7cfE5cvI6MPdm4maO1mTuBsLpAuFmTnLbkhsz
XTG3MGtbkECIAGtURRRECCgSIhTLjUiE4jOxEgxROeCQU+GkZH5sCj82gx+b
JyyaJ0TK5cEVcjNRnANBZbOhaOyYNB5cGoxME5XPVdUvMrYqsrYvsHXKtXFi
2LnkOLkWePmUBQRVhobVxUS3JCW2JSUAe9xDTeiOjemKCOsKCW7z9Wlyc2t0
ZdK4xdurJyR4MDZmNCNtLD9nrDD3aEnReGXZqbq6s81NF9raL7Z3XO5kOuSp
tpZLzfWXa2uuVFfPlFfMFJbM0nNn02lLyZmriRnX4lJvRiVfD0m4ERz/KCL1
eWLWG3r+57LyL5U1Hyuq3pdVvS0se5NdwsyN6TXvUkv+LO14lFlGI8pG4igh
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
HEOS6ZbBZY6qFl1dm66jl2NgWAQ4bGxC09WjaeswdPULjEzKTC0qzayqDC0r
dUyLlHULlXSqNU3aLZz6XXwH/EN3xyXuTU/fX5B7sKJ4rL7yaFvdiZ6W0/1d
5wf6zvftuNDVcb6x9nxZ0VRO9uXYuLNunuP6JifUDE4q6p5XN14yc7vuHHg3
IPZxXNqLnJzHdNq78gpA4xe5xe9L65/nVp/zj43gQviyQ925RdxgWCc0wRKL
M8KgdXEYAxJJjyiqTSQBMT0wBq0tRgHGGKCYWWKBQiogEPIwuKwwVBmOAN5Y
A4EGYgFZH40HMgDIRWAt8BQTNJFFY3MU0Xwjr9AXEmHR2AyJMUdizIQR5gLw
TRo7CaMBfoGAK7bngwIsg3MPESw4AksM4AwQ7SKIcOKB2nMIOHIIunIKe3PD
/XmRwBiH8qLDuFHB3CJBgqgQGDoGTYrHkOORpDgRQgKSlIGXzBVXLJBSKZHT
YEgoxiOITCBbOBYr6hSrGucrGVbp2pTpWFXo2xdoWTbZeLc5B1ZZebZ7hvcE
xO0ITgAmudY9tMUvZl9mSX9y3iCtZDS/ZnHowOzA3rmR0ZvjE7/dvvFyfurh
5VOnhjqG6goYMb4hjgbuZipe5mp+RmrBptpFUf6HW2pun5747d6t9VfP19+/
Wf/jt99e/fzx2YtXj58+uvvw2dOff3717sHDpzdvPLi2emfy2Jk9g/uri+sq
8srTopJTQhPKUnOzQhKT3YLoPlGZjoEp1p7R+g5J+nZhctqhksreeEkXONFV
hOSFJnuKEB35RFx5EeDewYNDOFgABd6kwnmRsYIYKhcyGwIvgIiUQtANPOQ2
IYkOIckOQYlOIck+hPxeiuaYrOFussZuca2jqqYHlY1GZXQuGjnPmbnNGDiM
UVROS6s/cfD5GhTze3jC16iUz/EZdwKin1IZX2t3fG4eeljZ+X5g7NPh02/2
n3w1cOT9zqN/AYc8cu5z15HHVQNvu8Y+DB4H3vjzwQufDlx8NXj8Zd84OHm2
5+RPe0++PXzxxcjJh92H/nVsZv38jc/9kw8r+h+V979t23enrHuttGOlvO3j
6MmvlxcfzS1eXVgA9/PgJn5maQnQ+Mr88mXgjedXF/6bxlPz05fn/p/ReGv/
xbbWaRaNWRDbnGvxDwnGd6svtk6fYyH67wW7/+TD2/QPocQmijc5zAqKWQQe
H588dmyCJeb5hsa3YJn1/LfRWBfCoQOB6ELYdDeYDGjM1N97gvxNY3tOZv8d
KxMGBAYnALPMTHjjZCuNWXkFC8XAGztzMJOKTRr7Q/gCIbzhEKE4QOCNxJiF
YuCT04WJzDCZH5fGg0nnRGVyorO4sQw+QgFMrBApyWydFlUollYD7osho5JJ
lk3HiNOJzBaSfBmVHFlVurxKlqJalop6kb5xvq4+gHOmihpNWT1XTatE27BK
37RK16xSy6RETitPTLlCRqtZ07zXwmXAzX8gMGw4PnGUkX2gvOhwQ+Wxjobj
va0n+9tP9XWe2tFxvqv1QmPtVFnJQn7uQiJ1yjvwhL7FSTWDCVnNM4oGc0ZO
1xz97/pGP4pJ+Skj8wmd/qmy+lVh6dOc4s81rfMx6blEeV+IsCcn1JUfaQ9F
2aBxBgiEOkzYVJxiIiGuTxEDKFbD4YAxVicRNcii8miUIhbDQjFTcBEAZEBj
DRSGRWNtBAbQ2BBLBDJCEwCQgTHWh2MMYEwBDrNkBEMZiqCN4UgTONIUijAV
ErEQFLEUgNsIitjxi7iJ4AFvAYqdBJmRBcsb+6CJDkIi1lwC4BFwCT7ETI95
oF6CKF8BlB8f0o9LJIBLJJBTJIQTAWgM4BPAD4+E4wCKE1GiiSLEaEF0nBC2
VFYjEUYAJ3kSSlkkGcDnUnnNLLJCFlmlUE6/Sd+hWNm4UsuqSNWs2dKzzMC+
wcarwcG/1NQlz8ih3jmwJyi+MyAeALk5OGEgteBAXl1vauFEbffcrrHlgyfO
7hy9cebSwsSJU3tGF86eur008+ze2uM7K7dXr7y4tfr23vX1T2/Xf3n/5v6d
n+/c/PLi+W9v3rx+/NO7Z88/v33//PGze3cfPXv+6v6DJ7NzyycmLkyOndm1
Y3dzZUt+Wn5pRkFFekFdZjHVPTTOzjvOwp3hGpxm7h6jaRGmYJCiYx0hpR4h
puQpIurMj3LkRTgLID2EMODewZlL2I1T2INDMIgfGcAF84EIhPEwu5zyIahq
dnwjN7mRU7QOgqmHYDq5yANQ6b0opRMyxmcVLQ6Ja+2jaBxTMJpUNTupZnZG
1WzFxPWmhcdxMdVxgsxtE4ePPmF/RlHXM/LXc0rvRybdjMt4VtL4umXgWdvg
X+OXPk5e+npx4beT039OXlk/sQjc7+f+iQe1g4+b93zec+bL4Uv/Ormwvvps
/ezVnwbGPx2bfX968cmRqXeTC5/H5x7tOPp66MT68eWve899HJx83jr6vG3P
k8bBR3X99yt73nWM/jEx9Xxq4eb84ur84tICM69gAnl+CdjjufmV+bmV+dkl
gGIAKwAzgOL/BY1/lFRsrRbbWgu31Q9vnWXx3QTjRyEGi/ZT/z2k4m8s/0Db
OLwJ4c2UeFs+zEIxIPDY2NHDh48AHTly7OjR8bEjx1g6cnScpaPHJoBYTDbi
4jXk5NFn59JjYwGZQ5edXY+DAzhkZnaxZYcm5ni3Da6yxEohmFODNjZsAies
8mN7Jo03tpPe6NRjTR9iteyxaMyqdguG8AMaM7M1VsLGyUwtkvmx6XDRFGHm
ul4yNyqVG53Og8nixWXz4RkCxHwR8WKcbDFJoVhcuUBCmU6Wy8BKZKHFcjBi
uQTpHFFpBkUuW0KWLqPEkFfKUVTLUQHSYCgoZ0krZkvL58upFitpghvnChWD
QnFVOlKyECNbK6HZpmHea+XW7xkwFBW7l561SeOJnmagY12Nx9rrJxtrTlaU
XCjMX8zNuZqcthwYcd7M/qym2YSs9il5vVlDx2v2fnd9oh6FJz2mpgN7/Lak
7Flu4YuC8tuZBR06Ft4Q3gA+lDM3HNzVWkJRBsDlwuGqIjBDCklXlKRHpuiQ
RDWJRA1REhDgsAxCBJhkOSRCDg5XRCKVkSiAYhU4Qg2B0kJhNZEYIG00jtWO
x8or1PihGoJwHWGkLhSlJ4wCTGZGFmi8MRxtCBUxEIIZCkCNBWCAxtZCCDth
pA0vDNAYgNdOAGYvCAdHJygSHF3gaFsBmDWvEBBwy4DJwBu78Yv4CGP8BNH+
/ChAYz8OmD87DNA4hAcRCO7QeaGhQqhwQVQMDJeGFU9FUTKxEvFC2ELwOyLK
gMtKRZ3Lsen3i2pHnQOoImKVSsZN2jalioZlysYtJi699v4lWhZ0Jf1yY8c6
K49iY4ciI/tKa/cmN2Y3X71neHtQYk80bSilaCSrZqy8e7S0a7xt9EDz8Ild
R88ePLV0aX5+anp1Zen6jdXr11aePLz38unj1y+ev3n54v3PP//y7sPXz7/8
/stv6/9a//L519+//vX11z/v3X18bPzkyO79585e7mrq66zraS5vpidkUwNj
Y91DqB7hCY4BsZbuAeqmLhTVcCWjVF27LCPHaBndYFHlUJxMGE7KB0rwgxH8
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
i6gIQJX5hZV5BBW5+FV5hLSFEPpwDGCytoCIJr+wDj9UTxCqLwg14Bc25oOa
C8DNeIWN2HkBjYE9NmHjtuQWcBBGAPbaC4kACBuzcZvzCIBzRygS0NiUuR8i
rw8M68INZRZU8CK8OWG+nPBAXlQwL8qPG+bPJ0IlSSbixEL5EWFAPPAY8OvA
SdJxUlRhfJqIKLiRqZLTKpPVYKlWUb+ArJQkRMghKeRSVFp0bYrldctVjYqU
DGnSGgVqxtXG9pXGDk02np2ugU12Xh3OPkX65vm6FhWWXq3eCS0BGXUBtO6k
6t0l/SOVg/tbR4/vPnH22LmF6cUL55h/X9du3nv26sPXv9Y///bXk+ev7z96
dv/Bk7Vrt+/cfnjq5PnzZy6vLqzdv/Vw+vzMQPdgbgqDFpmSG51emZLPCE3K
8IqkOvr7qZoGq5v5SGrEq5mma1uHkFVcBUghWNlUWb0Uaa0ksmKNgfWBgJhG
E9tEvDSVJJ2Ik6ASpGKQooF8cKAALuEwAWQimgzenkIhgpnsiGIObBUXvo6L
0MZD3ikoOQqTPygiP45RPYZWOiOmc1HO6JaF92PXkCVT514B7EGY6EWi/DMT
h1fWbg8MbZ5aOr909n7lF/o0KOJNKm29a+ef3QOfe0f+OHj867EzN/p2X+oe
XH/yav3OT+u3nq6//PLv+Tufzyx+Ob34Yv/5d0en3x6bfn98/vP5tU8Xrv25
/Gj9wfs3F298mLr96ez1t0fn3x6Y/nh45tPY9LtDF5/tOf527MxvJ6f/deLK
vw+f/dfI5K9te+6Xd1zv2f3szNTDi1fuzc7fX7s2D6zv3Pzy9etMhzy/9D8d
bcAbz0wDfds0vbVnbRt4v+10/lbbkoqtdRSsHret6TFrdWxi8sQ4YOCGtlrl
rQnGVkRv9cybS2+soghWXcTWzey2dtJtqyXe+lWsDx0HT2bi+CaKDxw4xEIx
C8LDI3uGdo0MDg0DATgDARQbcQvoc/BqsXFp/jeNtwCZ2Q/CnFPBxmn7v6Ix
YPhWGvtv0Bh44600BvhNEsDG8iLBn3M8P5q5TxM/Np0fl7mB4swNLGcJEpmT
hUQoWRvKFiHTBbA5vCg6HypLEE2H4xloUTqekkWg0AgUJorJkjlkyQKKNA1D
ykQSSqWUSpW0SuU1mZuiQsWKBcjVMKlmMY0uTfMeW9e+wOABasKevKyxyuKj
1aXj1aUn6yoPlhUMZ6ftTkk6mJRwNCLyZHDEVGDEjHfwRVuP08Z2E5qmEypG
4B5z3tjlrmPwY9/YO+EJD1JpT3MKH9ALhm1dgV10gfA7cEFtBRBWIhgdIfj/
x9p7gEVxtm3/W2d3+u5s78vSi4AiilhQEESKSJHeOyKKYq+JJcYnvZnERNNM
jL3G2KImGrtYEzVNjb2AgCBim/81O2YfHtTn+7/v9+U4jzlmhwUlwm/OOe/r
uu7uJN1dpQoxGcLc7YEmXR8P955mM1fGBnKu3IHghDPGalUAwwnw60/Svijh
j1MuGnNAplXBpDKYUACNg+RkNwR30RhMciimBBr3pVT9aaYfTofLCPDGg0nV
EIKJxhQDxVgsqix0eI8ODk3RGMESD1fpgcaJjDYGpwdJ0IEi2WAxGi+nh8no
oQIUbijpmBqAnCqmwOpzTEaYdCmVJibySXUhqcmRK/JlinwJVSpXcQ3vQCrK
WI3r6lS2aSbvl926zXQLAES/bAuYZvCaZvKdYfGvxPTv9or6CPAbPGB2QJ8p
nj2m+/WaEzJwds9Br4RFvz4w4a3IhNf7RS8elvbJsMzpPQZN6hH9bsrIJaUz
Ph05b/HY15e/smTlm0u/fG3x1x98fmjX/uP7jxzed+T48bMnf/nryvU7re1P
Ll26tWvX/g3rt27d/MOOrbv37tq3dcO2tUtXLf3w8/fnvvn1B599PO/t+WOm
jx1RkhcRPzI2fUpq4bjY9JLQyHS37pm2wHy34EJ7cDrjloTospS2arfgsZ49
pvqFAodXZZW8MyB2rNVnrMmrWmMfpbZXKAyFKFNKauFfvJzW1wCNSS08AI4T
q2ZIdC+JNbMFqjdEusW44xvKcxlq36jyX0W6r1F6rVV7HegeeSW1kJ3wMjtl
zma17XuF8ZfAsBtRideiEm4MTW5My20urLhRXNk8cdqTtxY2vf5+86Kvmpeu
ubv6+6bvd59eubHp2K8Pf7v06Ozf7MVb7J/XHxz/o+Pw2fa9v1zbsLf9p9NP
Dv/x6Oj5lv1nL3y//86B38AY3z/8d9ve35q2nGjadLR189GmDQevrdp5eeW2
ho0/3tu278GWvU827WHX7Gz+aMWJGW/sm/v21U0/XN994PzPB84fO366vv7w
0SMHjx3bf+SYE8j/bk/72QnkLiMlO1esPZeuL9Jzp9a79gpxqYsTdlllnsmg
Lh/tzG1XScN/MNnJUheEXRsndeawKxkGuU6eK76OAnyyK6xYs3b96jXrVq5a
A0wGIC/9ehmg+Isvl/I07iNFwyTyXiKkp0DCSSTtJZGGITJgch+RNFwk/sce
S6NEyGDnVLf/HY0ThE9pzO9bWiimXDSGB7pKRDVSzlniCpmqHFXz9thFY17g
k0HcOWEaT5knKqxTFNbphHE6qp+C6gDLkynjZMYyUWMdr7NNMLpNtXlNtXiC
Ztq8J2ltk9XW2e7+84PD5gX2nmMNAG/8ssw8F7O9YQ78sMfA9wbGvp+S9mFR
wWdjqpdPmbBmxpQNU6dsmTlj1aS6L6vLvyouXJaXuzw1fe2wEVuS0nckpv0w
NGVnzPDtEXFbQqN+4BK/Yb/H5vyVVno2v+rcqHENc1/7qahyksUrTYzFCbEY
GR2t0Paj1eBgAylld52+u9nU290R6mYHP9zd2eUBAgiDMfZWMV6M0oahbgTu
iRMgX5zkhBLeMqwbreSBzIlm4KsFAY1xuhtKBsiJYJQKpVScMSZVPXFlKE73
lBG9UQKMcX+MHogrgcaDUXqgFB8sozJNjhkDoxckJBe6+0QheDRG9RNKkxhd
gcO7Jqhnvt1zCEIMkeDDUWWCmMjANUDjVESRJCKGC/A0CZ2OKNMROkOmSJeR
OZgSgMx745GUAbzxZL3HWKUFaAw31hrSwLXAG73AKk/SOKYaPOZ5dgfVqqxv
9uj/enDf8Uaved36vOzfa7Jn0GSP7jMDwl7pOfCdQQmfJ2V+GpNUP2nWX699
sKl07McJuUtzaz/NGTs3rnhmXNE75VM/mfjqBxNfeXfavNWLPv/mg08WvfH+
2m/X7dzy00879m3ZsGPD6k2rv1mzdPHXny9c8tEbH3zx/uK542fOrZ0yf9y0
8XkV706es2D0pLmlY2oT0kcEhReHR+cEh8cZvQoDwkp8e6dqHMNoYwplGkGZ
UzB9GqbLUVqLNG7VJo8JHv7zeoRPtPuWKwyjdfY6g/tUu181bSxGlKB8EVko
oWuU5hqVBf4P1EiYCVLVNJFqpoB5Taz7BHd8hTu+EBtXyO3fIpZVmG05Ydnh
EXIqIp6d9DK7dPVvvSJ+Nnn84t/zZlT8lYFDLg4aejslu7285npR5Z26ac2z
F1yeNb910dKWz1fdXfEdu/fYn2u3nl637dbhXxuP/9Zy+i/2WjN7/ubDM5fY
329d3Xb44ZG/Wn8+07jn1wcnLl3+4didQ7+zZ2+zvzY8qb/cvu+P9j3n7u85
07S1/vIajsY31+1s2rCrbeMudtsB9sd6ds0Pf761eO/0f51e+MWVjTsaDhy7
eLj+zNH6UydO/nzwEBcdHzl24MhRfqwQV59w6CAA+dkZv3uf2b20M2O70NVV
vdal78N13VVQ4eJq55qKLrx1JRguSrts83PLzLZ3KkvjN3R2kblzIXFnV8yV
EMPXcVKXL58AJwxy1VHwuTFPY9BaJ5BXrV67YuVqwC8PZHDIfHoMlhgUIhD3
EIhDhP+mcS+RBMQv5/0byELp/4jG/HhkPt/oQmP4oS1wjtkEGpeJudpjAHKV
TF2OMGVyFThkgDOXJOOG8bhxIs7VvAGH6+T6cTJngoEbJ9CWqbRtJmWdiRun
YvpJThpPUponqC3jNJY6vW2S2R00xewx3eI5WWcHzXTzfzkgZF5Q2FxH0FTK
OkWknYEY52q85nv2eLVPxIKhca+np71blLeksvzrqqpVFSPXV9esqq5aVlK8
NDtraUraN3FJK2KGrYtN2hyfumNYxu7kzN3xadsGDN0aGrWvT9yZyPRzcbln
8ip/r5346+gJi/oOypVRSSIsiVBFoooIhbYXwBOnQ/XGMLu9p93W19d7QIAf
oBj0NDR2rt+505SdwL2UCneKBBT74GQAxWUUPZUa8MZAY5cAxTyNg5z2GIDc
HaOBxpwxJpgQTMHTOEyG95WTQGOuoIJUxeDKKDk1XGUs8epW7OmXYbQNwehw
gWiAWBYlJ8Ael/t0ezkqtq5HWAKqGCxAUlAmFVOlypSgFEQxXEIlS2k459wy
zuRQ2kyUziVVxUp9MaEBQ8hRSGMfrTSDNwYOw421TMrtLABoAk3UuoHqVNZx
jGWK2ftlj6BxWjfQJIvv3ICw2X69pnkGzw3sO7/7gNmBfV8LHfg53PIKqw6O
m/Zd0ehP4jPfik6bH5k2rV9SXXji+EEpM1JK3qyc8M7Y6YtmvfLupJkfzHxl
xqiJ789964N5b8+b8NK/ps59d/brc8ZNH5VT8saU2S9Vj69ITJ+QXfJK+djS
qITyyITSAUMrB8Ym+wTH233zAsMKAkIz3btl2nyGoOpUpSWJG9ahHUEaUnHd
MEQ5TKqAb7xAoS2gNOUqUyGmgmeBKtowRmWdavEZSeq5H2aJgptViDBw63nF
t+e7PfpXSxW1EuUUiXqe3PgOalmE25bi9uWo23rS8zva8wed/yaV+3Zbt22O
wNOD4tmqsZcjYn7xC74eMZjNKmxNGnE5Ou7G8BGNeaW3Sqsbx05peenVa7Ne
7fh0Gbvqe3bjbnbHwcYdB85v3Xvz0C8tZy60nr/KNraxd+6xVxrZv++0Hv/r
8enLl7ce+n3D3oenrz7+/dbjszfZ8y3s+bvsH03sr9cfnbry8PjFtp9/ubX5
wN/Lt134YsOFxWuufb7u3uqd7M4j7Nb9d77edO61T36c9MqvH33dur/+yr7D
Z/YfOHv6l0NHDh+qP3bg6HGuyuLI0zaK/YcPAZA7T3LoPF/o2QmZrg7o55YQ
P/c6nwPDCSCUt76uIrHnGmPQcxEN6uKl+TcDpYGrvHjMugwwn0U8K9f7XREx
z2R+zQ60du16PqMArXIiF8Snx7wf5tNjQDQoRCAB9XAKaBwikoZKZL2k8lAx
R+MwoSRcJO0nFA8AIAslkf93NB7mHPKW8bQBBM93jtl0ARkcMgh+c0G8VXbR
GMzwZNICQAYO18q03OoeeGYnjWeBCMtU3DSJNE2mLRMZ63i1bazaOo4zLY7x
RveJJo9JRo9JOscUvft0m+94d9/Zwb1e8eo+Bd4sVE2V6qZSljqt/aXQPnNi
ol9JTXo9a8TC7KzFGVnfpGWvzixYlVe4PCdnWcqIb+KHL4tJ/DYqfu2Q4d8n
pW9NztyVnvdjSs7WqKStvQbv7R37S/+UszFZp3LKfh83aXlM/Bi1abhAOkQg
HabQ9JORIYBKiunO6Po6PPt5+fRyuPf3940MDuRRzHPYU6kAwQkILnLRMUH6
EpQ/SXPRBMWANwYy+1OKAKe6kZy4sIJU8ulxD1zBLeeRKkAxqBehiFIbB9Iq
QHE/lBqEKWJozTCVIVlrHiTBkxhDDEoNECKDEGwoxQxT6WJwmkuMKdUItTFV
oYuXksNkdBqu5gkMKE6TM/ByBKEBPidjTAqqSEO5OSRZmCIbVWTL6BJSW600
lWOaCkxTKmO4ZxxcBycg4FWNwjTR4D7N6jXD7gPPL9OsPvByJK0frTLXqm3z
u/We69ezzuw5w7P7K4HhQOa5fr0+iUhYGB79cUT8x1HDXu0VOTWgz6ze0fOj
U19LypmXlPtWXtWSuhmf1E1fWDf1tcox70+YMbe89qXS2lklY+ZU1L1UPnZ0
Wl5h9LDiwcPKhiRlhUcW9R9SGjFkXGxKYWhEQfd+k4emFof0yfT2rw7rn+MV
MFxnLfLslmV0T2PMmWpbttqarjAmo2pAcaJMCcdkOfxPwNLEaLacglttIaos
w9Wl8DiAaSplTImIrEE1vCar7dNNXnPdA2tQ1SgJDfZ4HmZ+EzUvlBi+wexb
NYGbCM/NpMcPat+NhHWXudtPHj2OhkRci0t9kJbZEBXTGB3bNjzt5pC4S4Nj
mzPzOiprmqpqgcYdc9+4MnXuzXnvsUvXsxv3tHz7/YMfj7O/Xm4+/vujv2+x
zR3tN5vZlo6Om80PrzSz19rYv+7cPfLXha1HGg78xl5suf/rNfaPRvZSK3v1
3pO/mzr+vHX/t6vt9X/c3XOqcf2eS0vWn3//2ysfrbj95ca2VT+0f7fn/vpd
TR+vOjX9jaPz3ru4fNP1PYcuHKk/e+zkiRPc3ONDx48fPHaMk5PJB44c5vSC
3TmfrZrgg4vOcxs647cLijuvyj2Xxq6XvPXd9N33fOWYK0B+tu2iM6Jdn9vZ
2fJo5THLO1uwuPx1Htd8FvFceruiCaAxcHjlytUrVqxa4QyNu3CYF19o8W8U
C6SA4p5iBGgM6ikSg4DGfYQSrkdPKAYaDxL8z3JjoDE/CO5ZGucIuK1LXTQG
lQi54KJETPNtetyQNzkXVvA0nkSYwRuPlet4GgOW60jTJMoyg7JOJ8xTMONE
AtyyuY6xAIprNdZarW3sP0Aeb3BM0DumwOOzxavG6j4toPscn+7TGPsU1DAN
ME6ZaxjT9J695wyJmZ82/PUMbiL9wiEJn0UmLI9N/jYx5duk1GXxw7+JTlgR
Gf/twKErY4ZtTsnemJqxNT1nR2r2lpjhW8Ki9/Qa8mv/lN9ic05mlx4prZ7v
1S3XOX5/sEAylFL3w2k/oTRYoepptPT19A738g51c/Tx9gz38vRRqwKcWTGc
eDFKOPpq1JzUKrtc7oHhAbQSaBxA0OCrvRAUIOxH0n4EBYKLPI0B1MHgkHGu
yA1o3BNXdpdTPVC6N6mMVBkiKAZoHIHx5W3qeIUWgJyo0A2WUREiWT+BpLdA
kKw1VgX2SDNYYjE6RooPFsqHCNF4CcE3RPOumDvBVCMoLSgJVXKt0wieKMHT
UGqEnBqBcCP7iihtGaUrljOjFCb+GYdzyAoTr2oKgKyfavFc2GfQS+7+Yxgz
XBmrtZVhqgkGj1f8QqfYfEsx9RiNG3D4X8H93ug+4M0eg14LGvBmSOQ7fYbM
9Os9xuY3zrfnWP/QKeFR8xJGvJtX8U7ByOnDMsfHpRWHRRaGDXq9dMz8olFz
8iqnpOaPik2pGZo6cXjOlLTc6qiEvND+5X0Hp3oG5fqFgg1Os/rnewWl2txL
grq/m51XG9onidHlWBzDSXWuluNwvt6Rp7E7RyfpR9CGFBq+cXWSRJ4qkY2Q
YNlSooRQV5LaclRVDXcf+LkV4KMQ1WipqkpAVYkVlSK6WqaqJbQ1UsU4iXIW
onlFyLwlYL6WWXcbe5zyjjhu733M0es7zLyZtm/VeWw3ee9192+KS2iJi2sY
MqQpIbEpcfjNYclN2bmtJZVPJsy4P2U2+/rCa5Pm/FE3u/mtJey325o+W9e0
cQ979nrz0XMdf99k7z2+c6OhveXe3YbmR7fvsQ0P2Est7PX77ScvX9x1vP2X
q+2/Xus4e+PJ383sjbb715rvXr7VeuFG+5m/Ow791rb54O0vttxcuObOovUN
SzY2LP2uacOuJ9/v71iy7sEna3+dt3DvK+9d3b634fTZU/sP/nLq9JHjJw6f
OAFA5lR/DHTw6BFOz8w6e+6GdM9WFHeZpfPctrutzjkPz00qXBB2cZiv5l0H
SASQOut74aKr+aJzF4arBQO+ZhcOu2AL/ha4ypcNwxv4D/GLdK5znsN8gsF/
BT6mcC3hdfbGPI35tbylXy+DKyAOwgJpTyHCbQcm7iQnjXsLxEDjvgIR0HiA
QAw0HiKS8hs2xYll3OR5iZzX012cntGLaJwtQPOcQ4/59BhULCC5eZudkuTO
NOb6QZzGeLSUG7xZI9OMQXVwcTJqnCQ31Ml0AOqxhLFWYR7NWOBhuUZrA9Ua
HHUG9zqdg0syTV4TzV7VNvfxPgEzPbq9bPLhNuBjHFO1jglWr8k9er48JPrV
EcmvpSW/HhP7eu8BC4P7f9E76quIId/ExC0fHLd8UOzKQRyNVw1J+j49b2NG
Lmhzaubm2OQt4TE/9ow+FZ70x9Dc45mlS/tFjVXoMgXS4WI0Tk5E4oownPJD
5L30xt5WtzCHBxjjnnY3ALK/Tg9mGFAc5LTHPlq1t4ZjsjtNOUjCJpMFqjUD
3NzhEwMpZQ9aBdTllvMIik+SOSBTiqcfci7nAY17kgw45CA5ydO4D6boIyfA
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
MVaPsTbPOrvPBIffOHef8e6+k918p9p8pho8xivMEzX2uR5Br/iGvB8etSgq
fuGg2H+F9AW3DIhYEBS2KCphyZCkpYOTvoqMXxoV90VM/BfDk1blZH6fl7cl
ecSWAUN394/fEjJ4d+TwTZEJB0tHzfbrlU+Z4oTEIIF8oIToK6cDJXKgZS+D
Kczm6GG2BpnMPe2ObgaTv0YPJjnU3d1bp7NSwGGFr04HcqcVVjnmq1B11xnD
LW7hJnuISh9EMKAetMa1fteN5LZy88epAJQEBTnLKgJlXFlFT1zZi1T1wple
KNUHISMwBdC4L0KES/G+EmyAjBwMHEaAyXQMxgCKY1DlYCkZJSEHi/FIARIl
4IAMVjBFqYuWEeCWo6RYLEa7FIdyipdzSsZVaaQGqJVJa7NJXRbKZIgVGUIi
W0IXytXlhBZ8MsC5AqjLmOAEnoz4PhF4OVptLcXUFbi2mjaO1TjGqOy1WkcJ
qqnRuL3ZK7JcYRpv9hlv8JtsCZxkCxqt9apiHHW2wAmePSoMXqPsARMCeo/y
CCqz+Va4B9YG9J4Q0r/MPajCJ2RUt7Bi98ACtwAwwFXBffI8uhV6B8Ixy+5d
7BsM9K4JDity+GcaHOk6e6bBLc/qlWd2wDcbjymG4UyqQpehNBQZHcUGRzat
TUeV+ZSOG8dBaKv19mKlLg+nc2VEMa4crTSNV1lrCX21SFEloMAP10o18Iw2
mbHXUWZ4uKtAlCOl5FiEmiAkpgrkC4T0EsKwlDB8IVYukzI/6L1OBoQddg++
0T9+v957B2bcKTMcVXj8bg+5Ex7fFjOiLSnrTkrW9eTMxrzSh6MnckUXr77f
PuP1himvswtXPvlw1Z9zF97b8OPD/afY89fYtva2O3faOu43P+hounevrbXj
wd0H7N1HbMsjtunhw5utN3+7/Nvhkw1//P24oenerTutt5paG1vu3br7+Ebb
4z8aHh650Lju5+tLvmv6YnPzkg3X3l96e9G3Hau3Ptz68931P7Qu29r69Za/
P151ecWWO/W//HH0+LH6I4ePctOBTx8/cfrYqfojxw7U1x84wTH52X30usD5
2TD52XkUnd1y52aNLotorhII1xW+/MxVePYiz7zpn5ERXdR5Va6zy3Vd76rv
Nj9XwPr1a9etXb1m9cpVq8D1ghsGT7x6zbo1a+EIgpcguM4L3g8C99tLIOrl
tMHhTgjzHO48TaifQDJAiESIZIM4GmNOybsoElAslPKT6kGREmmkE8g8jeP/
oTG/uzQAOU0kHyFGgclZIixHJM8VowDkXBGeLSEzpXSOVFGIcXWblUrDSHgM
JFSVKF0hp8oRrEKCVogQ0EgxUiWRA5YrxHiZBC+V4mWcXWGqGH2VzjRSbwUa
j7I4QDVW99E2j7F27zqHb53Dp87Ne5zFYzw8IGtso0l9HW16yewzx+K3wD34
dZ+eC3xCZrr51xkck+w+r4aELxqa8llC2texqV9GxX8WGfdJdOynwxK+yUxb
nZq6cWji9r6xe8Pj9vYfdmBYTn117dq8omKtI0GqipLQAyVUuEwRgpDeYhnw
s5fZFmpz62YwgkLd3LtbbEDjHla7v8nkpdd5qNUgT5UKUOxBKbwUjCdO+SlU
wSpdsFLrjyt8EYIT+k9NhRPFPI27YRyQuzsX8gDF3TGaq20jmFBMGSonQwXy
fgBhhAD1k5E8kwHO4WIUrgOTo2R0tFwRI1MMlSnj5coUWp9IMEmUOlmlT1Ro
BgONpWiUnBiMkqBoOacYOTeHcyjCaTimTiG4JJlrnSZ1mbgmE+GAnIso4V8Q
qFuEqQoxVQmpLSY0+XLlCLjn4poCVF2lso7RuY/kkiVbnQ5csfdEs0+NylZG
GuBDL/mFVmntM7x7jDP6TLYHgzeuVntUKOw1Bp9aa8AYi/9oq/8oq3+1xW+8
T8/RnsFFevdyq+9or+5lNr8yt4ACi3e+zafSt0exZ7dUnW0YY8xz803T25M1
llStNZkxDVca0zRW8MbZekeOwT3H6Mg2uKVrLGkqU4aaiybADBeqrZUm94me
gePd/EtIfYFUCfcUuNFXa03VamM1o68h9TWoBh7Tqp3pxFiZZoyEy9CmqB0z
TD7jGGuljKmRUhPlytmk9jVC94ZY8ZYA/VhMfUNoVyr0W/SO7UbHbqPHSa+e
+7VegOK9MssRmeM45fu7rfdf/gMu94u/kTCiIT3v8ai61ooxLVV1HRNmN4+f
3TjltUdvffnogxWNHyy79OmKpu172HMX2Tstrbdud3S033/y5N6jR61373e0
PmBbH7HND5803r93o+X2xWtXf/vr1tk/7l+51nb5ZtuNhvsNbe037z663vrw
fOOTX67d3X3q+rLtlz9Zc+X9r2+8++WdD79u+XJ106add7778e7ybTc/XnXr
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
4wkvs3PfYl//oGHOG/eXrmd/Os4e+u3W+l2/r9zafPQMe7PtUUPrnet37jS0
tN29f/PKrWt/Xum4cZe91cpev/v4/I2Go2fvnjjPnm9oP3O5488bd8/fvH+r
FWj819k/2m42sh1s86k/m/eferTv19vLt7UsXteyZM3lxSuvrfyuZcveBzsO
ct1/a/fc37jv6rqdv2396dTe/Yf2/Xzo0IFTR4+BDh064nLCrto2bsLb/4m6
/4XGnYH8v6Cxi8mdgczz9tnswjX2x7Wh0rNTMV3D2UAvSoz/jV9nyfG6NWt5
uUrauoj3xjyNn2Xy0xU9iazvMzR2tk6LAci8eCbzOzc9l8Zgj6PFshgJ10wd
K3bOrxBym5kmCKUAZJ7GKSIpCGg8QsDJta4HynEWv/EOGYDMK1+M5QrlAOQ8
4b9pnCUUZIlFWVJppgzJwVAQz+RCnCoi6BJSUUopyxWqCoqpJJkqkhmJK4HG
NXIFT+MJUuVkiRJoPElAAo1nAo1Rw3yt3zt+fd8Pj3lnQMz7UXEfRcV9BjTu
F7cyYtjX/eJXJ+cu6Dc4UoIGCgShKOYpFIIxtiISDwLzVdKAYgdJeDHKIJOR
77PjUKzReKg17iq1g1F5OGkM8qC4pg93knYQFE9jB9BYjvMZhRdKgjgUo5QX
gvrJcOCwvwwHdUNJDsUyAmgcIqfDcKY3pgQOA41DEY7G/Qmmj5wA6obJcOAw
HxqDQ+YvcoaZQyvZX4JHiPFBUhIELwHL/ZyNe32c4oMOfl49aICzVnmgjIpE
FVyHNc7EEcrhtCYZVyUiFNA4VabMobTcsE1cCcoimDQZmSLF4TxFSmYQqiK1
uVhjAaOb/c8GRmligtvGCFMBitMRGkwpfHqB2lSgNmSSTA6lLtVZQEVqYxGj
5yCPkPxYDH7HjWwZnQGcR+hUTJWAUHxnShKhAsceLcFGqI0ptLbY7AG+t8To
Dpgt1thKtPYqk0+JzqMQaKy05Kqs4JarHd3GeAVNDgpLkzOZhBYs+kiDY6TO
rVxhKsa0hXL1dEfAWJ3bKKVxHGOpY0x84cQkQgu38pmEdhaqmSYmZwiJuXLV
a6ThX5T+VUILNJ4ukMwWSF8TyN8USN8VIh8h6CeIfLlKc6Z/xEZGt9fk2EUb
Tui99mL6vbhpN2Y4qPPcThj2mb2vDIi9OXj446zSa5HDrw9Jv5tR1phd2VpZ
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
3b0Uirt7cY27GyEhIUCh3kK9UNzdmf+zz06GaSC87/v7vrXutdeeMyeDTHLl
nmc/YihU3c54hJyvXPeUT6UzwdVOBVQt8gm92bKLrc/wvxq0+b1+qystul7v
0Pd+/xG3Bo16MXXOy+Xrnh2IuxeVYUPti+/Zis/9eCj5Qs5p272Xr+4+u3/j
/qO7j21A43svnv916/UvV0HP/7gOenj29wfHf7qZfvrF8fO2s3/bfrj04vdr
D367fP2nP19du2+7+tD2+42rmWdsv9x4kXPibnz6zYjk+wlZTzOPP8858eLo
aVvxd3eTC67G5fwdnflbYva5rIKzBYiUBaeLC0+UHreVO4x7P28rUrn2m4UO
Hric/lca5+UcBZUDMshxgpIje8s1k3+TVlFGXTtysQcux+FSY1yWQfG2HOPG
b8cr3kPjmvQ7aFyfJEENCALUUFcjXU0ICttjADKgGNSaZFoRNND4Y4rt8BaN
e9Bsb5rrxwqA0P6sDEDGNO5NsH1JHuUe8+obGlNcf4rqR6IYBdC4B0F0J4hu
FNGdhpXsTlO9aBqsMoAdXnAgCzCXhggqaKigjhC0kbw2SigFMthjHK8AIIND
nsWaZzPmOazTAtlvlU+ddfVabPyow9aPOwON9zf+OLphh+j6Hye27TO7Up0P
CLoySQeytDtBVDZoATznx3MBohCiKpVN5soWS6jJhIBsMAUaTQEmJD+T2ddc
Kh+DAeSraUiKiiQpSJwIQjRmpSBODgEa86hVhT1GgVMpwBhjGpfmGINDZhVA
MaZxXU7p7BfSwuoCfrgWwwOKcYwClUgzEvhbFJpglNaU2p41duBMAGSg8Yd6
jR6guB4tgKlGLlovGIEN2GMkVic5ynzTWqAsZQ1o3EGzdFTM7Th4KRU1oud1
oipmoDFQFFwxCCU3CoYuuu/ta3DuziP2AoTRcZ7uk+FhF0YBYgPJexucQT01
cxdRBRT3UE3gkMEngzFG00ZkM3LCvKGnXk3/iWgeBGDXK1D6Wj27qU5tKQk4
DDQGhwx/K7jS2+T2qZv/YCt4cleUm2HwHOMWNMo1ZJDZd5DZ51Or3+TgWpOC
aoIlHuUVMsIjCKA93NlnjHvAKGdflHcnOYM3HiE7j1RchgnmwaQymBBHM4ZJ
vAk+VX0mWWfRhs8odQFjWERpCwllJWvcoLmtMrqvMLkeDKp2OCB0BS2upNk9
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
Bdc86VftlHeVX8MaX67b5hu/Wsecg6+06nqjS7/LPfrfGj/jxpJNr6OybCkn
r2yOPrtw2/XD2bazf7/+/p+HP114dem+7eYT240nT89fvXP6/NOvfr9f/PPT
ny7bfr/1+MT5VwXnXmd8Y8v4zpZ25mlC8TOw1qd+uZ139s+E/Ovpp345kHEr
vuTioazzuyL/PBD9JPWoLfeE7dip10VfPcgvelL81cvjXz/OLEEt3Q6k/JWU
+31WHsDy2FclucfedPhx7PxjH4SHlVdQKvv00nfq7bHR/yuNcTYFCk3kvcGv
ncb4iiONcXKyHqzAKE5LT0WNJrDsXYDsCWwZKcnpyUlpSYmpiQnJ8XFJcbGJ
sTEJMdGwYsE+PjoKFBcVCcL7hKh3r7XA7iLMMnVJIDDfgBE+YMWGnFSP4uAh
vgIrHioNd9bWx+fVpbl68MmXwdfhFUgU36AprLoUiQVuGRXoEdSHBNWMoFsQ
FMhOYxw67kRx9jAFqL+i9pOVvpLcWxB7sWIPmu9OcXqWhfCvfsikAhpIK8g5
k0wPgu5OUF0JqhtFwsNeNI3Vm7KLhLUvRX7Cc4M47lOOH8rxwzlpJCuNZmXU
J5mQJpDKZEqbRhmmE5p+kGdCNOZdV3hU3lT5gy01P9zWoOXW+h9trd9qV/PO
R7oMHGT1/ZCSahJcIEEFCZIXw4On9RYkP0UGJxxislQyW2GFvb+GwsKwooaZ
erzCXw8XA4TxUwBhL1GCr/XlJb+yVIogQT+/40uFIxXgh6uxIqi2pNVTTTU4
qQrF1RIUUE1ehocg2IBqsVJ1dKdcnVP0IIZUG53KoZO45oKhBRhjRvyQ5FrS
YgdJa8eILQgCNammpGY0yq9owiABdXHcuKGowgowr02hMTFgm+F6Y5xZUa4u
T0Dt6D9mlI6c0pnXukkmYDJ4XaAr4rBi7iub+quWT8yug63uwOreRiv4XnC/
HRihEyeVopuVALw94Gs11DKiM28EtnfjTb1Va0/O0JkQByiWIWa3wYqlDyP3
pZHgG6MvbwDk6mXOrv3cfbtb3OBfB0Dua/XsKpvAloMhH+cbDIAdpKJQ8Cea
yydmzwEmj/5Gd4DwQJPHJL8qY9yCBhlcx3sEAYT7c6bhRrdJ7gFDFKeBjDbB
4j3N4jtRch1JGUYR2mhCGQffNoQ4lRBnkdI8RlzIyItoYTHBLiWY1ay4SdS2
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
+NpW/M3rrBNPkgvuJ+Vfic85H5VyPj7z1/wTpwuKHGlsd8ilHtg+XRQ70jJX
XM7NOjYifg9+HfvG2+cr6dM2suxYfnvWkj1jDVbAr13pqRlpKaW5ExnpqXAp
Oz3tP0YqwBsfz8ooys6EFceQAct2OJdjMgoppyTa7bGjN8aUrkExNVBXXrqc
ajEcGGDsgWGFh3BbNYquwqCmkWEUBapMUlVJqjpJApBLe3KSVEMKobgZwzVn
eVBp3+O3aNyOZnGGm16RRwONUVoFzXVhWVBnhgmn0dEepjGoGyV0p0X4oevJ
SD1puQ+tgPoyKlwBUHcj+a5lveDKWiVjGmP9i8YDaITiT2juU1IYQomYxmMp
bRypTSA1ncamGYzT56LHAtVnkcFvodHvM6PvAs+wxUG1NzRus6rZx+Gac22C
qkJQwRTjz3AeFOvKsG6i5CErfoZ/WV8sHEx+5ykezqyw51S8h8Y4vS2M5PGx
XTBBAIQxlmEDHIaLIEzjOpKGgYwjyf+msVJKY3DInNSMFduphnCrc1vVgLo/
sVJD9l8xCmSMRbmOBISXa/LwakItVqhdVtaHpzi15LXWorGtaGojGHGkohXB
gz3GtR7AYSAhABn8LZC2GyOhgVzAZP20DrtiwDIOF4Mx7iMZ+8vmfgJae3IG
QDGYYbDEqH8Fh04A8Q1AY7DH4Id7MDJeOxMi0Lgtq3WUTDivAwVMWBVo3Mfo
gjoRGZyHmd3h9/gI1WWi1Weqe+Boqw+eBw0arLkO1dwGiebhivNo1XWKxWea
yWui5DJFdJnCO09hzcDhzzQPMMaTSMNM1vyF7LJYdl7EmRcy6irBsoozrGTk
lZQINF5DC6C1lLCOEFYSlJ3Gh2SXXaQCijV6JFi8D/LGI4p1H6cVVKpRUq3e
6WofpKje2eagE4F1s72qFIU1SHWvlOIcFM25JNAu8YQlk/dKl7yzXCqda9bx
xsARt0aMvzNx1sOZC+7NWvhwwar7SzbeWb3DFpFuO3rWlnvmafapZ8U/vvzu
L9vvN2yX77+68sB2+zlqrXnl7ovfr7z+5Z+X3/56M6vw94Oxv3x5+El89v3D
yVc2Hb6+8fDVNUeurzny96I9l5cd+HvhrsurD9gSC24dSr6wN+bPfTHP80ps
xd/aSn5Ax3/Jhc8zim8BjffFnDuc+Ed2wen848fLSjbyj79RaYAXzxXNLY0a
o34R/6ZxuZ7w76fxfzPtzj4k+s20aIeCjtTktJSkVBBsQEDj0iFK+i4rLRWf
4iEsV0BjjOLinCxYMYRhhYv2YLI9fIEFKH47WAF6D42rEdR7aBxGM5UoEmgQ
goBAltKYoutRDKC4Ec2AJQYOf8QKoHI0Bn1EIhq3pRgQSquguHCaxfnGoE4U
ZRegOFxHsZ3G3ctojFrEMEpv9n+mMaDYTmNAMaIxJY2gpLGMYRxtQMN0KMNk
yjyTdQZXvFDzXWIKWGoNmm8NXOJXfVmVDzY277igceu6BFGTYLAx9uMFT05w
5ThPRfU1otQ1RxoDh7Ecg8k4noxveyeN/SumMXjjKhSHj+0AuYDfUILGxrgc
jTGQ0UNWqsPKdRkJpaWV0fhDRmrOKUBjffKdAm8cfK5pLqkN9VZCjijGNK4r
A9vBk4P95mrAByVWgGdRm3qdxmCM20imdpIZaNyGU1CwguDa0TKgGJV7lNEY
1YOAJdYDwuCN+5uc+xmdAMUdWRFo3Eez9JZN3YHGekvkrgS8pzxqoSZZcB4F
WOKulNyFEtCLUGJf0Qg0hpthhfu7g/UFY0xJreAezamzau0kGDvyhvbgqBWn
AWa3SYFVPq9aZ05QtaGSdZzJc5prwFTXgEluQcMM7m+kuQzmTSMVl9lelaY7
+Y7hLWNp0zTZbQpjnUCoMwXnpW7Bc+AhoU6nDPMFK9B4iWBZxplXMIYVlLKC
BG8srqGl9Zy8gUd10OsJcS3BbWU0oPGXNApW7CAksMeHRSsIUJzpHXxEdQIa
54fWyPOvWuRb44RvrRPB9SJUj3S/qineYZlelSM5lyxTYJbql2sMjGVcYg3e
PzbveHfEhPsTZtydNPPlvKVPPl/64POlV2cuujB78bPth2zJx17F5z5KzL+f
Ufyg8Fvbb9dtN5+jeufrj1Ant/vPbNfv2377x3b+gu3c37bTPzzPLr5zJPne
oaR7uxNsSUW2QznPd6dfWX7g/qa4R1vi7m6KtkXnPYvJuX0k9UZMOmp0nHPC
VvQtonFa0cuME7eiM3/efvinnRF/JOeeySssLYLTE8yOFZXKMZ+hIBepUF/t
NP4vXbHjTCVHFDsOhsbUTUpO1RuqvZvGpXUciSlJCckg2GAmlzZhS0kCOmem
IiBjJr8nboxpDATG1IUVX4QrGMuOZAZvjIWZjLEMwvsaDFudZsDiViFIEPK6
NFOjLBBRTtUYNoQggykqmCZDaWSPq1BAb7ImSdYmSyMV8HPdVPfGLRgeBHsQ
nprXVM+hagkcprk2JA1qSyB9TJCg9ro6km/UgaBQEENXN0bE6snKvXkNfgaR
OM2O4m762FMU0CDY7gRT2r6eZMqpP8kNoPhPaGEwq0+apsRhpDyMkEYQEtjj
CbR5AmGcQCAgz5U8FpsDFhn8F5oDP7cELQ6otaZey63te3S1eNQiqKoosY3w
IigvhvcUJB9F81I1V0HEBc7YEjsGK9w5vrKLa8PgkFAnZ0+4TVEBvwjXSqns
VXi4kWaIpAVwkh/FBzJiZUGrKhnDWCWEYCtTAjhhUGWSBfbi6ATmMD7Le5Pe
pl8HE1tLby+Pm2c2RROXNHtXzA95CauprsaC1EAvDwFuo9RittQGY0sMa+mG
gV/TAm5b0YDgWnBae80J1Jo3NKdQ0LgtrwKKUVEeIyNRIhYAeYBmBXvckeDA
Bg9z9xni6tVTNnZmgdUiqp7We1AAZtFvW1IaIJnBA4Pp7UoKsPbWI8MgeOu7
wu9lMMl6BV8XUgonBAB1d97QkUN95sNFE3AYvDEKmDBKOGcYYHSdHVZ7Z7su
25p/DBAeITnNdA38IrD6bN8qAOTxLr7jnH0AxZ8Ipk8F83DZOs7oPtnkOVaw
6uNHLeMJFSAMNJ7MGGYK1s9l1/mK2yLFdYXmtkJ2Bhqv5s1LCAFQvJoBJgvr
BcNGybSUYNcSwkZS3sJo21jDNkrdTqq7GW0vZzwkWuPMXgcE415WLapc++cm
rWzjp2V4hpwKaZDjViVa84mxBhRWb1JU80PYREqeea5V8l2qZJmCj5BOEarX
T626Phg3/c9BIx5MnfNk9oJ70+ZeHj/j0qTZl2cuvLlw/YON++7vjHwclf4s
vQiA/OL0eduft2x/37Fde2L787rt0m3br5dsv12y/X3DduYnW+EZ2583bLmn
n0ZlPdyT9GRv8uv9mbYD2Q82xZybtf7Z1oSbaw7f35FwYePhC9ujHiUfu5d4
9GFa4Yvsk/Diz1KPP0469jAh9+9dUT9u3HM55egvJ84UHjt+7GgBdsj5xwrB
BWflHc0rKDxa1tkSIAzGuEC3xzllgeJy85IqmpSEPfDbNvht6lYkjGJc14wh
jDms2+H00saY8ERyYlrSG2WlJmWnJeekJ9u9cUFWOuhEbjaOUThi2Z5fgf2w
3R6jYIXOcBDwHF7nKMpYTsRRCxCmMZjeqnrYATbvp3EQSQbRiMYhTCmNq1HI
HmMa1ydJHKlA9phGwQqMYuyQ8dQ8VI5Hs62p/5nG3VmpB3yeFdAHVRD8bCJH
9L/QuA+aEsICkNFQJ0bENB5KSKBRpDKG1sbRpvGUaSJpmspYP1M8F5n8l5iD
gMYL3MIWh9Rd17jd4qat2yhm+LVViWR8KcqHFbx40YMXvQCkqgGY7BijcKSx
By8Emcw1PL3AGAOZwS0DkwHIXrJsF1zEhXgoWKH3C8KuOIxXAchA40okBzQG
Dr9NYxwxxnEJe34FXEQxXhT512nMoZaYgGKwx7iJcVNObKKrEY/UUJDxpLwG
rIRT2kB2GmMgA59rOdAY1fTpkQqwxy1RnbX8ESWA2pB66JgSQR1IoQOaiiiC
Q+5AwCcgoRO8ZSwKTXTllQ4kBzTuJqg99CAGWNy+vKEPrfQg0BSY/mKZ72XQ
XCd407HgTpS0rDcaAg53IkVYu3LGcN7cUbJ0lvRmy3qYohOrwfWBmssk39AV
dZosrlZ/rMF9BG+Z4eQ/37vymhpNZ/lUHm10H6m5jjJ7jLZ4jtRchgim8SaP
SSbPSarLONYINB5LyLNElzmyC+qDLVjmCE7zRKclmutKg/tSwbKAkMEbLyT4
5YS0ltNW0fIaXl0raIsJZiXBr6WkTYwKQN5Cq+CQd7LaPt5UFFon06sSeON4
q+f5D9uAN4b1TM3GRYF1cjyqRmreuyXXFP/qR6s1yvCrketfK1byynWpXOxb
J9kceEjzKm7Y6tqICVfHTHoye/7TOV/cm/rZ5XFTr06cdW/usvuL1gKQb6z+
8t6XESj4cCj5VnLBk+PfPzj+w8NT52zn/3ny9Tnbj3+icaVgjL/73Xbuou3X
q7aSny9uOHBlw6Fne1Meb0u4tHTP/Y3RN1YdvL5s383Vh25ujPx5yfZf1++/
cSTt0qHk2wm595LzH6cdf51zypZ96lXa8at7486t2fXnocRfCk+eOFZ0/Cg4
Y70UTrfA2UfzceVdaQlG3hsav+2NsSqisSOB7WS2++G3hR2yo3Bps53GdleM
gfweGutATgIgO9IYs9ceoLDT2H7dMdcC5SRnpAKK8UEePssDCNtP8aqCMaYZ
gGplEsWBYYOvvFNVGOY9NMbdKuyneABkcMiA4kYE1YggQU1QSzfyIxLZ44po
3IEg7OpI0nZ1YcVuvNxLNvTVzH1V9JEWHbhzCnxi7Qa+iOBhLaMx353gcJ/k
nqWisXoTdF/UnZ4dqNvjIZQMwjQeTRpAY0gD0HgybZ3Ou85RvOZpvkucQhZY
Apf41FheteGGVuGjQ6vXJdlQkgqgGR+WAXgCQt1YHoDsr5oDjeaKaIwfApBh
AxwuDU1IMj7789CF+MyLPhySL80HCUqYZAAaV2JlQDESLWAagxxTKYDGjgR2
JLNO49LT2Ea83FhQAMV4rBIWXAQBh7HAFePmmaj4Ti+mrsNLtXSTjH1ybZ3G
KASt1+I1ZZWmlNSE4D+kRIRiRgEUNyPYlgTXmhA+JpEwjXGwoh1BhVMCoBil
sekobk+wsOnGKXARQA3U7ScY++nFzgN5Y39e6ytovTmlJyP1ZlUEaj2O0YPV
cFOLrixqNITCIDTqct9ZABRbu8gIyOFC6TgSoHF/xWmY2XOqV/AkF79hrGkk
Z5ll9f/cLWRFWL3pboEondjgPtO70mf+VSY6+3wqoEnlw0XTWDDJvHma7ALe
eCoDH5rkCaQygZQmE9IUQppDq4sEy3LJaZXgtN3ivYozrWK09ZJpFasso8Rl
rLSE5JYT/GpKXEfL6xllM61uZbRdnGGPYEpw9s32q5zlE/IlIcSa3Q9K5ngn
r3SP4HyfmrneteKcQnZJ7lFulZKDaid4VsnwqRlvDIyTfZMMgbHGgASvql+3
6XZh2Ljfhox+PGvewxlzH0z//MaEGVcnzHwyb/nzJeuvzl58Z8mmR1sPPdmb
cHVn5D9742/G5QKT72aVPDvx/a3s4scFZ58VfnM1Lut6TCbg1JZ79mX80Xu7
E14fyXqyO+n+5qibqw+8+jLpwfqImyv23Vl3+OKKvWdmrzm3cs+V/SmXD6fd
B0ucWfI89ytb/ln48pcpBTf3xv6xeuf5HYd+zS06dawYgHyiQG90WVgEEEYx
iUJE43xcD6J373GMG78N5P94eFcuKFERjROTUsrJseePncZ2h1zaoFiPX6Qm
vlFmCgZyItAY21ocN7af08EGn+jh6MQ7aYzuLDPDjhluydERdhoDUcvpv6Ex
jlRUpktpjEPHdSmyAYUO8jCQQTqKEY0b6g02Acg4dAw0tgPZkcbt30VjdMbH
ij1EtZ/BMsDk1N/ghAKMvIqm/FRAY7DHoB6lorB6ofF5dD+CGaDb409pRONh
JALyCFIbSaijCWSPp/AusySP2bInaKE1aK7Zf1lw3RW1mq5tHd7Z4h5KEKEs
68cyHhwLRAWKujKcJyf6y6ZAzeSnGt5JY7DEsMExZJxcgTLfNM1VEEDuusA/
g7xZJD9GwBHjYFoMJoVKtBTKyEBj1JiC4hxpjAnsGJ2wRy1q62UamMb1WTS/
A8CLh3pgoSgxj9TALhqNkEZNjCVDY9kAQK6np7cBinHRR2ktnkNlNEpOJnhQ
MxIBuSUttiB5O43b6zEK3ERIz1JDR3iwwtvXQzJ04WQ0RhxWQDQtonAEi1pP
9EJlPvJg3tSPUQYIBpS9xki9GAVA3Vc0oniF3nuzMy3jbA0QoLg9JYM3Dhd1
FIsmTOPODPyhqCvRQNlphNFthOw8lDGOF10+cw6c715pcUCN2e7BEwwe402e
Mz1DZvmEjjV7DOIMYy1uY02uky0eExXnuU6+8yy+X1i8J9HaaIKfwCi46GOm
3j9zhey80eS1w9lvJWtcQogrGHUxwX1OkPMJejEjLKX45ZSwkkLB5I20Ag55
p07j3YyW5Rv2Z8sOCU5euygpUnMGJseZvdJcQvMD6uWHNkwNrJ1WqV5CYM0D
Zr8oS2CiNWQ3YQFFGfyOVmvyZ5+hgN8rE6ffnjz75oQZQOP70+beGDfz8exF
rxetvTt7ybVZS5+u3WXbE/twZ8y1bZFX9yTcPJJ5L/HY3eQCAOnLo2ef55y+
GZXx13b0lC256MnhdFvuN7aEwofbYu9sOPJkW9yL7Qm2yPx7aw9fW7H3r6W7
zi/Z8dvaA1f3JV+Pyb6ZlP8o++ST3NPPc04+zzj+IjHvwaGka5sPntu071x6
/pn8E18dO1FSUFx8HLUjRnluhcfzjuv6N5Bx+wjHYo33ZKaVY7KdxoBiPHTu
nUpITC6nRAdhGjsKd8JMSowHpSS8UUZyAigzJQGADM7WHmrAWcS5yYm4Fs+e
8AZAth/e2VEM92TD6yTE4jyKVFQQHY0FF0GAUywgLcj+sCIBjYMpqhJVnsal
zdz0Ejycb4yZjGncsGIa60Am2+pA1kVgtSeJDhTdkWawunBST9nQ3+T0idW1
v8m5p2yEH2F0NO9IY1IEldGY0x0y46heBNOHYPsR3EBSHAQoZpRhjDqc0kBl
NDZMYKzTRLdZqtdMxXOG7DHXGDDHHLCkUoOV9VsubNKmCSMFAo0lwZtjXBna
jeeBouCNvTglUDT6i6q/8m4aY1fsxnJggPF1ALKPqrrwvLPAw4peikPyYpAC
eTmAEf0pPpDkgcYhlBhGoX5BmMYgfGCH4xLvp3Hdsioe3IEEINyIEd+mcT3h
DY3RgA/Z2EQxfiBruPQDF9/h+jvU9JhBcY9mogH1nEdtOWXwxkDj5pTUipFQ
OR4ptqNlHDfG53eA4u6iEQxwR4JD8QpGQu8gK3WkeLDHCNHooBYhFyXMUHJf
QupF8H0oCVAMQO7DyL1YGXwyeGOURMEZutFKOCUhzjNoXHUHWvmYlDqyxo48
ChrjvveomxyldCTQyNRPROsI1WWk7DxacJpq8JrnFrLQq/Jin6rzPUInaG4j
ePNYk/skF1+g8TDNeYzVfbyTxxRnb/gOGScYZ5nc5zn5jKWU8awyTbHMt7gt
sXou1Fy+4M0LWSOKG4vWBYS4iBTXyJbVimkhKy5ghGWStoQVl9DCMlpYQQrg
kDez2nZO28Ubv2TUnZRyqnr9E2G109z8I2TrdoJNdvEvDKx3unrLktqt0yo1
SAioHeVbPc63RkndNolOYQc4jyjVP8GtSnpYw9Ptevw6ZOytmfNvTvns0qhJ
tyfNejRzPsqvmDb/1efLH85ceH3y548WrH+1Yf/LHZEPtkXe3hH16GDqw6js
p4nH7kRkXN2XeGV3/N9bI86v2n1x05HnkTmvI3Ns8QW3N0faDmc/2hZ9f+OR
fxZutUXlvd6TemXFnj+X7Px9xe6v5m38fuWeGzG5t1MKryXn30otuJ9WADR+
nXLsdVz2491xv6zb9X185jfHSr4uOFly9DjY46JCvQzkeFEpjR2AjPuq5ZXV
073TIb+t/5XG8QlJ5YTHdpQ2YUtILqfSdvEJcaDk+DdKTYhNS4xLS4zNSI4H
ooK/xVkQmfGxWQlx2Ynxjky24xfnGNtTjlFRXlI8pjH4YQxkLFyjh4mKUWwH
Mk5ge6fwKZ6dxjhSASpr6famJhoLA1mnMak3n9ebIdBMRTRuRxDt/k3jTgwL
6srLvVXTQIsL0Lif0Qn3lgFDVRGNYQX1fBOsYHGT5D5oph4PNB7MKENZdRin
jWSMoFE00njWOlV0m615zzX5zTH4AJNnab5znIMXhzZY2aj1+Mp1ahBEMEFU
UkR3jnXiaLC1nqLsySt+ghYsGP15pSIawwZcsQvNIPdb5pA9JQlewUUUsEN2
9MZBguJH8UDjMF6twmvgjSsRAnjjarQEsLUbY8eC6LcjFbVQ4zVEY1xZiTuQ
NARbS/EAZDTwTi9vr4+Sh8U6Alpx32MUghANYI9RX3pBwd3bHNtpounSqLmx
EVD8EW9opbchAhqDWrPyx6IBn+LZqz/Au2IaA4SBxjhYgTkMaweSQ2lvJHoT
+7EaONjJrv7jTJ79CbkPIfSl5f5gmFkFAxkns/VgUTEIpjHuYgE0bkuK7VkD
qANAWKcxULojKbcnhB6Mimk8WnUdr7jNMPl84Rqy2LPyPOcgwPJkzX0oYxhr
gD/Xb6yT1yiz+yDRMMrsOsc3ZKRsGUaKAOTpmssoUprAaxN5baZsWmB0XWJy
Xyw7f0Fr8wh5MaksImRA8Zdufjs8fVdq5gWsuJCTlorKUk5aTPFLUdqbtIFV
t3LqDkY9qDofEC1JTt7p7gE5PpVgs41g0t2DwBifqtmquHareL+ahzzCDntX
SQqq+22zLvkhjaINgfGWSml+dY7Vb32mU5+v+376+9jJt6fPuzh6ytWx08Eb
P5z8GejJlPkPJs19/tmyh7OX35275sGybXdX7rq9/sDzfckIuVlnrmyL/n3N
vitbIi9tOnJze+zjA+n3dibe3R5za1PEpeW7X+1NvbZi98PNkZcXb7+4YIvt
YNb9zVHX1x+5tOFwyay1xz9bd/lIxs3kgjvZJbfSj99NK3icnv8kNuvp4ZRn
u2LOr97xTUTyd3knvi04eSKnoBgorNP4aFERKLe4qLxDLqsNyf23Q35PJV1F
kYq3IxJY/w2NdSOMBAwubQsfFwOy92EDJQE/46KT46JSE2IAp/YsiPTYaDuQ
7Vh+w96ygmgQ3AY3O3pjXBmdGHk4/shB3LPCTuOqLAv6b2hciaRCSRLnG7+T
xhjIuLtmE4qxO+QmJDrFQ301GbYiGrd9F43DWa6LqPQymPtbXUC9DBbcnrET
DTSWuxHS2zQuHXVKcI7qQ3B9CW4AIQymJEDxcN4wQjCO5sygcbx1gug8TfGY
Y/ab7xT0hXPwF9aQeeYgoPECr6qLwz5Y0aRND2fvUKAxRfmLrAtLOwusl0Hz
NZp8RYO/aAgRTSGSoSIa40IPgC0OF2OHjKIcFdA4gJN8Sa6SoNa3utc3u4Uy
cjDBVWElTONyGRQYwm+f4tWgufqolwiLhggwbANGQBCm+AYkVzp+tJTGeg8K
/cwONy5upAO5kYBQjPsFoWQ2EQ3Fw5OYPuRUQHFryYyaVHBaS14vtaYkoDF4
47a8+jGjYBp30ks/7Pa4G6d0InkcqQAIf0ww8CaCwBgDjXvS8ieieaKb/6Kw
Op/5Vh7MGnsTPLxxqEUbpwKNu+u/f4HGpWEKSkHWl1GRMabUdqQCxrgDhxLb
wkVTV9mCelwgbwyuWxnAm4fw5hG8ZbzoMs3g9ZnFH1C8wK3SisBan7sHj5Wd
gcbjrV4jTS7DTc4jLa4T3XyW16gzxzdossl1utl9gVfQfI+A0aw8iuLGUcJM
0bhAdQYaL+bNiznTYtTWWFnOGzYYXdcaXRaw8iyC/IxklquGJYK8iOYXkVyp
PWbkbZS8izNk+YYBh2MMrgdoNcHofpgzHuTNB3n3TN86R6s0BWOcUqVhevUm
kZ5VIlwq5Yc2jjAEJLlVPV69xU+d+v8xaMw3A4b+OHzs5UmzL42bDjS+OX7W
/YmzH0yY/WjC7McT5trmrnw4fdHtaUseLd58e+Hmf77Y+GhL1Ov96Y92Jd/Y
En1rW+zj3SnP9qW/PJgFm0ur9t/cGHl7Q+T9LdGXlu26sHDrg00RL3bE/jVv
4+21h17uSXm0M+ne7qQLGyO/W7H7tz2JvxxMup//1d2ckgfZxU8zC+4cSrq1
PeLxtohfV2z/am/s93knvjt2sjgz/0QesLgIVX+U0RgD+WghKgnBPYXstdK5
FYQsyqmiU7yKaFxRpKIcjXUvDChOKO0SHxsNSoh5o/ioIwnREYkxEUmxpRGG
9HiE5bSYqIy4GMxb3CMIqAscxuzFnYJw46DU6MiUqAh7oBi3p0iIOBR7aH/0
gb24jxDmqiON4SG+GEYBlunQf68hBK3TGD1bGZXmAY1pBxojINchCXu740Y0
g4GMIslAY5puTjOtWK7lv2hM6zRGAeTWBAFqg2hMAY0BxZ0ZDtRdVPtoZvDG
A8zOvRQTfMiFH2HdG7+Pxro4+4o6JBNif1IYRKtDOA0NYRcso3RNkF3AIM2y
+H3uGrzQPXSRR9git8pfuIbONvkvDqi1sGrDpc3afiQZ/QkikGM8ONqJJt1l
IdBqreTkAgRGNFYsIZrZT8+s8JGxH8aJxxqmcbDZYuczADnAYPSSZTuNy8WN
fSgOaFzD6PSRb/CH7n5hrBJIMPo0UtGeROGYz/b2lRq0UJ1iy2isN3rS2+4B
jetR5WmMgVyad8GVGmBcA4LnfaDYBcqOQ5NBUBdNTmslmtrIluZ6yyB0eAcb
lFCBMtxa0xKqvEBt5wGVcgdawqFjYHI3QQUCI3vMiGCM0Z7i2xE0XAF73Fc0
DpQto61enwVVm+IZhN5H9BmHw/GKXozSheBB3VkZjDGiMY04DGpPyaB2YJUF
lE0BAhR3V516iJYujBYOX0LK/Rh1IBrYoYxhLVNl95mq12yDzyK30PWV6i3y
rjxOdBolWsea3Ce4+s70C53o5gdYBm880eo2TjRNNbis8K+8uUrt8bQ4iZFm
y+bFJvcVZs8lKqLxUsGyQjAvYbQFhAD6ghI/J7j5NL9cMa7STMsFBbwxOtGj
hFW0BEDeSIm7JHN+WO2fm7X7sdFH+1ntAGcAIO+h1EOCW6JrWLRrpV0Gr7Sw
+qeahacE19ste0VZgiONgUXVmn/dNLykZZejrcOTW7Y/2XfQr0PGXh8/8+bE
2VfHTLkxdtqdcTMAyC+nLXw1ffHLWctty7607UmybY64tmDzvXUHn+1MfH0k
y5b/vS2l5NHOhGe7kh5vS7ix+tD9TTEPNsfeXHfEdiDr/pZYW8yxKyv3PtwW
+3Rn4rXVB23Rx66tP/Lbsj1XtsX+sTnyr13xFw6lXo7NuZac/yTvhK3g9IOo
1JvbDj3aHvH7yu1ff3nkXFbBtwUnCrNyi3MLio+dOJp/PLfoRE5JMQjMMupA
XFBGY4e2Qo7xivf0qagow+1t6lYkRxrjeaNAYzQAOjbhPTSOi4iIizyMmZwc
DUCOTouLQYrB3hjhF/aA3PTYGB3FMTp+EYHxmhwZodvgQ+CEYdV7uGEaH4ja
vych4jDsqzFsdZarxvHVeQHWqiynl9oh5FYiGVAw9WYF4VbnYSTqlqMf7qPO
FVVJCn0cZvVO9RTTgNSlT8prSJEN9UHS9lnSTQmyGUG2pBg8BwTUhmB0JjNt
S6tCKFjtg/PCCaQejNSbV/tJRlBvUevOSuE03xk+4RJCT0LsRaJyaRBsAMhw
EQvxmRJ6UBKuGYF1AGcYzBuHCpZhkmW45ISiiKrrWIP7RKPnZLP3bNegL3yq
LPSuMtc1eLZTwGcuIUt8asz3qbG+eaepdZuEgDHmWTeS8JQ48MaeAu8nq7jn
j6+kAnX9NKOPYvRS0eotq16S5iUpnqLqKcpeKPuitDQPZWIIkicnuHO8pyQA
1WEFeYlIvgKSj17lV1nWapmdahksYbwcTHGVSK4KGGNGACZX1ZlsDyBXAVaT
XE1GRGV3uMk8wVUlGHTixvBoikeZ8FCPBqxUF7BM8ngUKexBKCZc1kYV91a1
R5hxfnLzMuGmbZjDqPKuTMBhUFsKqZ2DPiaxhPY0D0IxCpq370GdaRH1CBI0
VGenWsZ7BU7yDRkgmXGND2rOpndvC6ck1DhIt9zvFPwKaMeIHVgZd/Lsxmk9
Wa0/ZxhAq4MZw6eUNoSQx1DGabLbHJPPXBPqB7XINWS64o4+HKnu8J0wzSNo
bd0PZ3pXGkgrwOfJmus4Wp0pOX1ucJ3JGKYS3DzWuERxWW3x3uEXtjew2kYX
v2WyZQGrLuYMi2l5CaMsY+WFBPcFwaxklVWssoZVVzLyEoJbQNCLCGYVK29U
zOt47ZC7z9kPW/3Y4uNE94DdlBqpOMWbveItfvEuwREm322M+aDZJz2wTqxb
6EHVO84p9FhYkx+ad/+qRdfCVl2OdeyZFd6rqPfAn/oMvjp0woUhY/8aMur2
lJm3Js+4NnrKoynznkycZ5u95sWMNa8Xbnu1cv/V+Vuvrdj/bH/qwwNJtqwT
t7dG/LV468ONR55sjH68LuLmsr3PdiQ93pF4a3PsyyN5j/Zl3t6ZfGdXypND
OY8OZL2OKri/O+3CmkOX1kdc3xZ3bXfS/ejsW9GZv3x5+PXRElvR2XsRyS+i
065u2HNx/a5TS9f9GB3/9YnjuQV5RdmFJ4+W5OQcTy8qTvvqZOZXJSXFJ84e
L/qqsLj4uD4+qayRBcYv7i+R/a5yace4sT3VzR43BpUr+niTQVEWQLb7ZByv
sDvnuPjEODStLj4mJi46unRgh6NKxzpHRsdHRjoqMQIpIz4hHdgbF4/IHBsH
lE6NiUWdjaNRi+PkqGjU3DgyCsCL7o88EnvwUPThA9GH3r1W07OIgcNYZYXP
dBmKuXIKJUWQTmMep1pV1VsJ1aE51NpCH6v3H2mM8tzof9MYoRitOILhSOMu
BAcCkPbh1f7wo4oyjVWAcxcKbNJ/QWOQnq2Kjn7wDDXBhGZNSlY0ykF2HqW6
jjG4T7B4T3bynekRPN+3CmiOR8gst6A5bpUW+dRcGFR3/UedR1SpFUQQ/hzt
whBuEuvK0F4C7y8qgTKa8owy1lTN22j0UsxIqtFTMeg01nQaq/8ljb3LaOxL
s34MF8JLAOQqohpM80EkGwL4/S9oXIeVa9EONKbfIUcag2CD95jGDWkU0wA1
QU2EkMpB2BHFmMB2vY1iByCjFAs7hx1p3EUv0OvOozmkoCHOniNcvXuiN1rt
zRp660OawA+DwUbHgpzuusuEOdxZX9sz0se0CJuesrm/wWWg5tJfNMGv4E85
01DePJTWBhPiMFTpY5zEO00VXGbJrqjYWXCZwFnHiM7DWNNwyWW2d+WxRg+4
f5aT33zXgFmy8zzVZb7k/BllmEvICyjDQtq4mLesMXqstXit0JyXSOblinUJ
b1xESQsIfiHBLEIN5/llBL+GktfSymq9hcViggNKL2XEVaK2WlC3Gp3jA0NT
g6sc1Fx20epB0XREctrPWQ4Izvsll+20YZ/kluQRFmsNPih7JbpWSfasfrZx
+DdteuU263S8a/8TA4fld+tT2Lz9+S79fuv76W+fDPt75DikYeNujJ1xfcjk
+6M/vzt6weOZ654s2Hldp/HtrVGPDiXd+vLIH0u2/LNk263FOx+t3G/bHH99
wZcP1keBMbZFF9gyzt7Zl/n7hsg/N0Xf2p/5IrYIHl7fFn95Q9SF1QcRkzcd
+XPDwYs7o25FpjxOzbXlnXiVkvsyPvPu7ijQr2u2/Hzg0OnjOfnFBSfAE2ef
yMg+nl58Mv6rkrTTxSUFx7/JLzx9rKC44BhORS7XBrOcNy53cufYmKKcHBOP
HYHsuHeksX0PNI7FNI4F6Ma9l8b/UmIEEpAWC8M54UgEKP7wkXIP4w4dxoo6
ePCdQjQ+dKgqzdhpDMYYFT5TdOgbY/zf0ri085s+lakcjRv/dzRu40BjsMpv
JoM40LifaAD14pTu6Aj+DY2R+6URbGHzNo3tz9ppPFiyfKpPGR6uOI/UXEcb
3Sc4+Uxx8Z/pGTLXtzJotlelWZ4hsz3DvvCusaLqh+tadu7p4Qf/LV4M4cqS
LgLtxjKYxoDiAAmFIzw1zctg+D/Q2C5HGgOKAcgBNBfI8IEki1ook2wlRqiI
xlUJtjrFA41rsRIINjVIvhrB2hPSygmBl0I+GdPYvgcON6S5RjTXmOGbsMKH
jNCMFUEtWAn00VtytMSONK6AyRXTWA89ddMbCqHCEMnYV7XoOW9qLwb5WzzA
NFxP0tA9sGyXPXMD1rYkb6fxQJPbEIvnJ4q1L6MOZLRBtPYpqQwj1TGseZLg
PFGwjKMNcw2enxu9ZsjuU2W3KZrnKNFpmGCZYPYawplGS87z3IIXe4QsdvJb
ZvVZKLt8wRqXCU4rBecVgnWZaF2hl0Uv4g2A4hWyeQEtAY2XsepyWlrNqWCJ
FxAk0Hgdo6KSEFZZSgpAY3Six4hA482adafJeadq2ckZUHWehFofRyhuQOMo
s89BzX2P4AIm+bDqs5t1OSL7HlR9syo1yq/fJq1B62Mdexf1/TS7Q7fiNl2/
bd/zp+4Dfxk4/PehY/4aMf6fkZOvjpp6bdiUG0NmXB82+96kZbdnrrv++ZYH
6yPub4m25Z65v/Xwb3PWXP1iy7W5m2/N3fJ81ZFbC3beWXkIleDFHrflfvs4
9ti1falX9qffjch7nVxy7cvEG9sTwCpfXHv40sbIe/tTb+5PPrd+z5PkvMsH
Yh7EptsyC14nZj/aF3dvV9T1HQd+2LnnZE4amgidW1SQVpCeVZhWVBJ/qijl
5PHi/IIzecdKjqKMCtRO82h+6WyOt7oTl3PCFUHYLsdgcrm6j7dRjPzwvwVA
LlUFNI6Liga9zWQgLRaGLVhfUMyBg3iD99H7D4Ci9u0HRex/t2IOHwaV5hKz
HBY2xv8HGteg9J6cJPUGyDqNG1dA4xYUjZIr9J4VrR3UiqRAjjTuSvKgXqzc
m1NQghPYJ1buRgn/NxoP+DeNh6rOww2uI03uY528J7j6wadU+Ig6yycUVhB4
pC98a66r23p5s/YfScYwmvGgCDeOcuJIN5715DlUNKfT2E81AIo9/g80FngP
EQk2Xrp8eCSgMRKNmif7oyrsUhpXZt5NYzDGQOMatIBpDBugMdjj99C4AS2C
MI3xHvlhSgAUN6V54DBGcXMG6T0o/v+LxrDiqpDOtIjbCumleQqSjmLcC+49
NAa1JTiwx+F6CkcvyQzeeIBkhg9NgzgjaohNCEModbzkPNXoOVlxGc+Z5pt9
Zitu4ynTGAolIY8WnMAeA5OHc+YxvGWGwf1zi9cq1//H3F2AV3ll++N/3Y6f
uJNAcCta3N2hUNw1hBB3d4EECS5JSEhw97gBgRCIAAVaCkVaqE+nM507wn/t
dyeHQ4QpvTP39z/P9znPyYnMvQP5sGbtvdd2TjZ3ihFNgeI4Rh/LaCEAcrLS
MklpscXENs2p4zZzO9SmoBUpStNkXp0iaDbxGtAYUwxJYhRY42gSgZzISjt1
Frs1ptt51R5WvZ9HGp/Q2502czqktD5r2fakRZt0wQJATuMsdxH6DNb6uGn7
s616nu3QL3fA+PJJc8pmLaqcu/Tr1V51U+fdmjzns/nLH69we+bi9drN/9Ua
31/dI75dGfDtqmDQ+Pm6qGe+G/+x/dibzAtvTpf9sunAA8+4b4K2/BlqZp9N
Pwbv+i3x4F+3Hv9t79kf95z555mr/zxf8Y+LN/50svj1wUt/O1X2y6H8X7Pz
fk47/2RD5sOEvS+2H/7uwOmHqWk/Hr3weE/W1xlH/3riItTGP+zOeZ6865f0
QzXbd944f6aq4ur13JKSC0W5uaXnSspPXi87d624vLjkRkHR1SJ4FADFlwsL
0TG9hls8GnUtmi2MjcdZGI7mGc+pMKzuGZ/+aEqxgd9GLB879mEaGxfAxiY3
QvhwegbkUFp6dnrzwRrjsx5QEuPCGDRGFMsnf5vVuB0lQhq6x2817kpQaDIn
UX8oD4H8Xo3xBCE88XjkOyFHorU8Cms8heZnoKU6AWsMFM+WC2PweSqJoMbk
fqjGiyWTJQrTpUqzZSrzFRrLVTrrNSa2ruYO7tatPWzaeNm19XFo79u6U6BT
18i2vbf0Hx/Uc3AfggGNrUFjnjbnKawxGkeMmhUarLE1lMd/SGN4bqQx6huz
fBtOgNrYmeJw4L9/Y42hTu5kqI3ljRaAMFTFqDBGS3g8gIw1No5BY0MGvI04
mIbwQ2kBTT+WHW5q7/vTkswotACF63iaxzE2eQojTiQ5fBIE95BB5lm8Cq3S
UorpFLypmNrQjgCBgVxDJtIok+XAi2kCulBvGodUnwn/gvMaqI2XKU2X8NpF
lHIZrV4laNcpzTxUFt5qK1+FmQ+vdyVUqwnFKlK9nFavZHRrRXNXwdSF0Xly
JsFKy42mrTdo7CJIdZJolsDqY0h1JKGIoVUJvC5O0G3W22Q5d81x7pLAa6II
IZHXxJNCLMFtoBUJhLBZ0ALFxp0KXBtHEfQOtdkutck2TrmLU+9hVPtoRY7C
PEdhuZ/SHtM5HDN13Mea7qH1+2mzPYQ+k7M5bdbxrH2PM617X+wxomTUjFtz
lt9f5vaLT0TN1Pllo6fXzFp8f8HqR0tcX6zx/ma1z589Il4t9/tudcgv3glf
rg7+fG3YP7fmvDmU+2bvqV8T9/8QmvpmY9ab5MO/+Kf+6J/6l9i0H+LTv9t0
8Pnmg389kvc/Z8v/dfnmX8+V/3Q0/5djBW8u3/rXybLv95yG2rguavvt8K1P
th98sjPrq705r3NO/XDozLdph/9+9MK32w48iU/9ZV923ZbtVadOVZeWXr9Y
WH65tKDg6pn8wjPXyy9eR5eSVhSByWheRW5x8aXioisFhcaz6A0UG291M2b5
QzU2LN4ZKH5bBregseFhbDLWuDmTUQ8ZrfEdOnQ8JweCXT2cmYmDS9+cjAwI
qHswLa3Z4E4F3qUGDuOgjjFBtiOI36lxR8NCHkFCPiIIfCsT1rgfTbfUqTDW
2BjkEQTRVGPgF2sM+RQXxgQHGkN5PJ38AI3R3IPmNF6ht4astrBfa+3oauO0
3t7Zp02ngPbdgjv0jOs8IGXA+DWtu3ST97bZsVAV05YiYy1woLEDJ7aWNXZS
a0FjK9WH1cZoKjLPwY+CZ4itHHtODkmDxm0FyZkXnVmhHSO0pVHL4t9qbAho
DMFDKprVeIC8kw1rPEjeSjGQFodQ4jB5Cv1wqIdlihGweEhmc+r+pzTGFTIE
b5WB4F1wyGFCnEzWn+bDHWPQWP459cHTMPBgIiiJZyn0nypNPuE10+TtcLNZ
1XxRN4eSlgo6V521p5mDh97aTWPhpbcJsnBcz2p8JFN/pZWnZLaa0qA+BmcK
lfM63tSN0QaIFhEq60StXYJoDgInMfpk3gydgOZ0KQrzzSrLeA7qZHWS0myn
uX0kIYQRTByjBI1jCDaRFAFkqJA3cqpEWoLCOJrkYygBHQZhpViC3SJqt0ka
qI33irq9nGYXJaaxmkzedA+hylZYZatt9nNmAPJe0gRygLU+wNmcNO90xqFH
pnXnsz2H35m9/NbMJS9W+VRNnlc+7pPbMxbenrm49tOlXy5Z9/Uq71crfZ8t
9ny9KuBX34QXrmFPXMP+vmHfm70n/7U5+0+RO/+ZkP4m5dCvAdteusR+vT7p
sWvsl36bvt1w4KedJ/5xvOiXw1fQvaWnS9/k3vqf03LvIifv2ZaD32w7/MWG
tNqYbS/2HHm66+Cjbem/nS94c6Xsm73Zv2Se+G575svk3d9v3Ve3YVPNkaN1
uQWVFwuu55YVFpWfLSg6e7Xs4tXikhJUGJeWFOUXFwHFF4vQjaX4TiXj0x+A
bV5zkzYhH9qpaIniljoVH6qxscBYVNwHbpZiSNb+/c0GfxfWuJNcHtev3/0h
jTsTBKS7kcZ96PdpjDO0IcMaAhqPQJvc3mqMB2kaNJ7FSFASG2sMv3F4na6p
xrMI0XiND2u8sEHjxSqzJWrzZVrL5SbWkFWW9mttnVztWrs7tvPt0C2ke5+I
j/on9hqWNGDsJ3rbbgTpRJCtBA6qYhulPFaCE1qxkhOvdFbqW6tN7NS6P6ax
IU01Bopbs7wTxaLuMVOvcWdW6MKJ8Iw1hueuDYc+8OY33LLA6cm+TVON0dbi
Bo3RxAkaHaYbQQkjaRGCdR3DKCCNluoMgS9oqX3RzALfuxo3MnkiI0wg2HEE
jY+EAMhykSxNIoSJBEAtGjSewCnGMSLEoDHaQUeigOG43YGC/uFGI1jR5SAE
u4hVu5lY+9m29rFstV5vDSYHyMfrPHmNn9LcU9BDebycEKEkdufN3DlTL1Yf
qrCOFC0Tldbb9K02S5YbGG0SrUlkVBs4zVat5S5z+01q81hGGU1JEQQfjkpf
ATTewKgTKWWCPNJtA6tMYhSgcQKN7mmSg07nJTFSMotGbu4Q1LsEzW5GtZdV
Zoom2ZLFAc70oGR5QLLIVFgfkKyA4n2UaQZjBeXxSZMOZ+w+yrLoeKrTwFtT
FpRPmF0zc9mdGUtuTV14ffK86xPm3J6++ItF616u9Hk02+WLua5PF7q/cgn5
2jX05frIn0NTvg9O/i1h7z83Zr7ZevRNUtZf/FL/7LPl18Dt3/tv+T5i159S
sn7ceuh/Mi98u/PIy23ZP6Wd+dfJkjfnrv79dMm3e09+tTnrxZbsh3G7aiK2
PEre/8W2jC93Zf35xKU3Jbf+lHX61Y6Dr7ekP0/c/jIptS4m6W569sOL+Xcu
F1/LK8svKL1UUnaupORiaSHUv8VFeQVF+VeKCs4XFpyDwri4+ZvsWhpb8aGr
eIZDHwZ18YJdS6t4x5o8sMbHjhw9ZgSyweRGDhtKYiywAWFcALdEMQR/Fx4W
BA7j4DbFh2oM6Shr3A0N/iX+gMYGk4c3aDyWoOXRx0jjmYyENYbnmbhNQbD/
e42hNjbWeI11K6B4rX0b99YdArv0jOgzILrvkKR+o+L6jR4j6LoTtD1BtFII
5jxjp1ZgjR0Y0VhjS6XaVvVhGltzrCE2cuxY1p5hscZt4D+CpB0ICoMMzx3Y
92lcP+KYegvyezRGB+54FdYYXgzhVKAxopgURlEiBPzEFLekcVOK36/xaEaQ
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
bL+fvKs6fuv3GcffnMr/Je3Ei4377gbEPg6JfRwW9zA65dWR848Ly8tyi4qK
yy/kFqBFuoI80PhK8ZXcwoIrRQUXC4svypvcmr3rudk9FcbLdr+H4vdojCvk
pjFQfOyEEcUnTpw+eerUiZOQk8dP4GK6oZ5GFEOO5mQba3wwIx1i7HC9zy1o
bFjF+y9pjGdWGBoU9W0KisIZQtMQ/BreH9gw4W2o3Kkw1tjQqUDn6VrQGP8O
GmuMuxNzKMXsBo0X0KpFrGYxp8VHP+B5qaBfpjRzMbFdb+WEN1R42bX1duzg
79wltFPPiK59wrt9HNV35GL7jt0IypEg2qJr7FRWCslSEq1Y3p4V2yr0aHSb
oLNX6EBja7UeNLZV6IBiG8Vbit+jcX2X2ChY41Ycj55ljRHI72rcUoXcWT4e
YqxxN5bvzgmGe0VBY+M9FZhicBgHNAZjxzH8FEk1VaGGF2ModgzLj2Y4fHZy
BP1OhtEc8DuYfif1JuNdGe+mkcZNTQaKcQMZMokVIROb03gUzUPpDsE73Orn
YNBy5DUF+OvxiXxv6TxONY+R5tMi2tvGKJfT0gpG4Sr3KNxEjZdCv4ZgvHml
N69aTwketNKH1/rwem9OF6axiVRbRarM49QWyVqbTWpLKHqhHk6AglZQJ9Ii
WqfjlfG8AigOp/lAgohBGvPhpBBDK+CLIwkekiCogOs4TpEkaaA2jqHQPDcU
kscab6LFzZQA2Urx2yhpD63ZRapTCWVex95X2vfeyZmkK223EZp0xuqIyum8
WRfQ+Jhpp4vO/S90GFjQb3z52Fll4z+tmrqwYtzse9OWQ2onLysbOrNu5ura
2S61c9feW+D2aIn7o/nrXqzw/ltY8t9T0n6I2/mVT/wvYak/eCc9Xuz/YI7n
8+Uhb+LT30Tv/yVgy5crQn/02vjD+sTffLf8I2LfI5/Er2J2/LAx/dct2X/b
fuT7DWnw4cvk/c82pz3fnnkjNPH5zqyf0o//uOfIl3E7HoYmPfAPexwY+SAo
4dmenIeXi64XlpWWXb+YW4AuwsvPyyvOv1yam1tcKNfJpRD0dkEzIDfdb9xo
NkXTpsT7d7I1CpS3zQZTXK/xyROQk/LjFH40gAypr5ZliqEwNtY4J/MATvaB
DGwyOHxg/z5ISxrjdsd/ROMO5FuN8axjg8YDSJnZ5ih+j8ZN+8bYYXwLnmEV
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
cvV+tcrjYvfBRT1H3x+36P6k5XVTV+UPn5U3Zs7VGcsB5FufrKiatqxi9OwH
M11qPnGpm+1ePWXN49le9yasrhy6oGbM8hfz/aFC/s4t9qtVwQ8WelVMWPL5
fK8nC30fzvf8NWzb9yFbfwrd9teYvb9G7X4dsuVlWOo3cbvB3mcp+39KP/4m
9/qT5L1fJOx8mby/yjOs1t2nbq3nY7fQH7ZmvSytqLxZUVBWVlZ+rbKorLKo
pPhqSf61wuLSkuLi0uIioLhMTjMgG1fIjTRuiWJjh48eO1G/R6IFjVuqjXOO
HoEYr+Vhlg0NZCSy0S4LY4rBXkwx1hg+NLyDQYb82/3GH6pxa/oDNO4nazzA
uDZmmaEc21TjfrLGI1o4GT1dLnhw/pjG4DAUxkvkLGe0qwVTV6Wlm9oaRWnl
obF1V1itlyy91Lb++lbB5m0ibTtGOPcAjfsQXBuojRl0UM5C5EwEDtfGoLED
owCQnQSdrLGphaSzkjTWogYothKVBo2tOOk9Ghsj3Ehje4a1o9/R2JnlmoJs
MLmpxnj8CAYZ3WfHS2hovKhqpPEQg8Y06kuAw2M5AU+iHsMLkGHvagx/iDjA
74AmIEOaajzUSGOcd0AmWQgGeYJRy8KgMeYXUcwII1vWWL41TzmT5meRHGg8
jxIWEMJiQlhJii6UwoXg3QgB6l5fSuVDKPwoBWjsx0k+nNJf1ISozQIkHRTM
HpToxSg8CB40PjVgWO6Y8fvbddjbtm12py7xghhD0zEsEyvykRwXTJH+BOlL
EMEsH8qLkQpVoolZAMF6E4QfQccqtDGCEkAOk02G2hgSR3CxBIs1Tib5jQQH
hfE2Qb2J4eF5C6WIk89Tb5X0mwX9BloFGmfqHTOVDqDxZZseea36nLHsfs6h
926FQ6Z1x9KRk75b7/PzOv/THfqead33+sdTivtMyu07+Xz/KacHTS2YtKh4
2pIbnyy/NXVp+bBZn013qZu6+s74FeDw4ynrHoxdVdZzeuWgOZXD59dOWfVy
deg/Ine8Scn6ckXgkxWBXyzyvjfP/U9Bm78P2PRr2I5/xaf/JXLXS++kx15x
j/wTH4SmfB6z7WnKvh/Tjr3YmvFkw57vUrMeR6bcWed5b533V+vCXm3Y/yS/
+FbljcLy8qvXKmpKr1eXlJdeLyu4XoSGahaVFheWQa1chAcgvztX03jWMb6x
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
cnG45ZgFGl+UNGdZAbzxaYY5xTJnFAm88WlWwbtNBatvZIcLyOJHeRDY45+1
7tf0Hld1w77mB2a5THg4cNzPDr7fOY74dsCoeyNn3/Wfd3nwmK/cJ14fM78s
aENd2LbKBWsf+M657zXj+sCx+SPm1EwK7Qrd0hS07unK3WB9/+P81d41e5+v
P9C6bFvJvAigcdvSrS/XH+xZsas1ZGPz4vXtYRv/5WB8zeKVBfMW1yxd3btt
f/nW3T13bvY215bWVRbW11dXNdVUNlVUN1XVNTbVNDTX4v0fDU31za1NwOTW
9hbAMrXHKn5NbTOwurPLWKNQS8dGb0xmRnr7q7WnvRFobArkzpY6AHJHcz2o
vakegNxSX0OZ3FhT2Vxd0VRV3lBRCmqsLAPBTV1ZMVAarkBmcMtlednAZLiW
4SLGI6qC7If5WQ9AFM4AZFPbTD0zEfbApsUNqswHAPA72Lj21Rl+DY3dEcIZ
QeSwj7Yl02d+isajOAzkUQwz0jgWzdAxvQ9pTEUd0ftJBVifofFiXgnhcd04
1ITGKySz1ZK5MZWCx5EUOL1NMN/KmAGK90m2BxR7gmLXGKvBcfZgjIenuvqe
chmRNmhkykAfuH7pPSnBd/J/QRoP4t6jMa0b+4haOo7nhSSQn2SYYe200MUN
aPxhpQJoPI5XQOM5hdKYaiIjTSYxFDMZY3FgJi/hwB/OuI2OHt5N78uQxwz8
O9MYPgQPzhMkvNiUnCbgEXiT3BLTovRclgMah3BcKMsBjSMYltJ4LWK28eJO
MvpxgLS0HeWlY8BVTo4X9Am8WYpsla63TRLNjiM5llGOM8oXDgNTDFaxguYY
IxxG6BAOz2T2kQIvYBbcb6reDNgLNAYUn5b1KbySrjU7JWmBuska3Rf2jukW
VgBe0HGGi8JEZQDF5J6BB48BkznjtHWapdVpK2sg8wmtLs7Keh8n7kAIv2TI
8kH8rTG9gcbJvJgmiOm8CN74kqy9IIipCKUwKE3kwRufQuJpJJ9FhsuC7Res
zfey6xWd2z27UVd07jctvR84jn40YOwVy+F33CYUTFx0Z8TM615T748L/NZ9
QpqDzwXX0TkzlhbPXXXTe8ZVt4mXLT1/dhhVNnrBi5Btb1bue7p8V8/S7X/c
cuzf4y692HCwPWJbXdDaP+2MaQzZULdwTcXcZW82HPqH7TH/eiilZm7E2y2H
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
/CZ5o8b46tWr+PyO1CiKCvHi5tLCPLC4eNdGWkpuxkUQvNIHV5wSH5UUE5EY
fQau9CYrKQGADKYUhM/X0lPys9KLgZPFBeVYRZdKikGXS0uoqPUFwQ2w93bl
dRClce3NSnoPQAZW0xYLgHD1lXJQBTnRgyswGQis9ckUzhTLlwqz6fqPT3Wp
MB30JRpTM6y1xB/0WxrTXFxKY7Ie+l+isTPZeubSFJ7ZnMa+SPRH0gQkT0KK
aYzia1Y1m9OZw+oAirU0Xq5vDPgN6dBlU5ceGzp1g5uNnbvv6G6xp6f13u5W
+3tYHzHvBTra0w4UatH7lE1/oDFVdL9hSYNGXxw+JsfZtXysz7VxPsDhq+O9
ctyd0n3c06dOKQ5eVxkecScj937l7Vcvvn3z7u3bH9///JdfgMYrli+VeQ5Q
bCDJgOIWhMZ0BkRLY8pean3BDFMggxn+02ncmcWBxiBAsRmLadwN9yVyNoKE
m9lERT+Fqrcof0Rj8vPCNHZAJCQTIfrTodVgYON/msbwDzVlZ+CwIOG9h03e
+P87jeHqS2gM9pjSeAbLgT0m1WMO7ydifo/GgGItjQGka8lEM169JMpBvLBZ
rdpv0upM5247ZDU+y5PVm+HTSGmCjunRSgVwGK7gmfGHBJluMt0s45m+jYwY
wghA40BOCJCVi8Ab8+xcgZsL3yRCi1khQK2XOGzEno5d1qh0wczPRQjs8QpJ
CUxerVAvwGd5KEihGyTprET8Wl4JQF5N+tyAxmsEJZjnxYJEaQz0Boc8jxEB
xQuRuBAJy5C8Eik2CHpbJcMtguEOscU+ZbsDina7+bZ7uLZ7+fbHdXvWe8xp
8Jwb27H/GRNbAHJCz8HxlsNzHf0yh40tcZ2SNcKvzHtG2nCveAen1BGeOS7+
OK0CgDzCu8DJv8xtfMlIr4pRnrcmTLsaEPjXy+X/ePzkObD48fPGh08aHjxu
vHf3UV3jgzu1jbV36utraxvvYm/84eyuvq7ZG+2pqKqq0rpiXOAFJBfkF+Zm
AYTplg0AcnbahYyUxISYyKS4c2mJMVkp57MvJmQkx6XERiZEnko+F3kxNjoj
IT7rQiJgGYCclwb0TgUgl+TnlObnlxUVUhpfLS8D0d42IC3cNKfxrYprcG3u
luEemAzIBQKDPa68VAqiZL5BKK0tKWuLyVeKc0mqfPqnulKcCaI0pmuYmtMY
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
TGfxAkjCG3XOWiwDe0PbdigeMXqvvhFd4RGI0DaFere+4ZdoDP/p5jSezXHz
OM1x3nxwv6RAsZjFw3ekXMzgfmlBBiCDtw9U661R6qyUlEtJjYIOelMak3ES
/HWWKpSLJXk+I6yUdba0aL1RryWgOIBXr1fo7TA02d+i/XGTbiFItU9sfVTV
+aROD6DxYbkL6JSxDdD4VNvepzv2iTUfmu7gkTHQM9J88K0JC35ZdyBpgCvQ
GOxxyhDXhAGjwRsXu04oGOVbNMa/YKR3tdvEt+NmvVka8CIj4a+v779/9fT9
69ffAZKfffvk5XfPnz///v6TbxvvP7h/F2jc8PDh3YePHjx6CJ753r17FMi0
XPxZGuOhjzwcDZGXdjEzGfvb9MT4C7HnEiJPxUeExZ4OjTp59NShPSf2bj++
ZxtcQ/ftOLl/59ljhyKOHgRFnTgSdyo0OeoMcBhM8oXoKGByGq4nJ8EXpD4Z
sEzP72g5AgQ0piiGK9xrqhPNvDF1vFrqNu9z05aUaflCU68oyf+sqi+XgDTz
swzTk8RTAJCBxmCMm3qiaD+bQNIX8dWe7Lj8lMaD8QE9p50O0PzpccKXaEx7
20gyjKzd6+HHKcYheTKnmC7isbt5Cv0Fsv4CSQ8DWVTNU+ou0DdaatJ6daeO
gWbdg20s1ttZ7ejba2/f3nvse+22tt5tZrm3h8XeLhZ72vc41MniaGerE13s
TnazP9Wzf5T1kIS+o1MHO+eMGFPg4lrg5Z3n65c61i/W0+/8xOlZiwOvbT9c
c+r80+zyH2oe/fzt+9dvf3ry/ueXf/0r0BiM8fffv/3+uze//tc/LucV9TRt
b8hIGhRzsimvoXErCdPYVMAcBofcTlK0I1aZnuX9uTTuxgigpm2kGhrjxdAE
xTY4Xo/vJ8h9eQHHOjGfofFghEaLkrMkgzcegRBw2IllnUha5n+UxuCKnfA/
5ECevMJfpT9W1nFB/AcC/2bnyx+msR/PUBpPaKLxNNyQwH6JxisZvjmN1yKe
jEXjaE1cdlCqQesFCWi8BiEcHIQQDRTSxCDzEk2k36nWi+zWEwBOQQ2P4LVK
Onp4hSgJmSfNyfiIMITH66SXYvayMzk0g0OzeG6uIMzHbpnDU9K8BOylheKF
iF1IisazEQKHDBCmTch7OnY53MMc7DF88wE4kxN8Mv6aQGMcZ8ELs0npA7zx
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
kWHrIsNXBgWAGUZAdnH2s1voNnOG09Qp7nPmeNnZAY3jAwMAxSvDQldFhK+O
jd6zcT3Y40M7tgGQzx89fPX0yZvnz8L3RwPvkm89vp8MKH4JwHzxNOXVi9cp
L/EqXmZmpjpuDixy5puMkoL8guyM/Kw3OFYIgAwmGa/fAY3xQD0sDORn9+48
v5/8sjkYWd2rjN0yJnAHDf2AxjYM05emAMV9aURjQDFoCEODcO8T/ovDKMaZ
meMoFoSWacAPM8JUVjKdkcxgpcBhhGKCm95MY1SmoCQLWJkdK3PglO4yPaCx
N6/rzer4s7oIxYxeGG8YKTWJUZiCDY7WMgMsB0r1g2QGkQqT5bqWgOLNph03
mXRATG5pvaNjn509B+8cOGz7sDGbRozc9NPYLTNnHgsNv755e8qZ87l3HlSm
Zr4trnhX2/ih6fOnz7+///Tb+8+/gj59/uXTz5+Bxh8/Im+MCxfvP3xqaHz3
88+//vLLL//f//wfXw9PJStosZyJQstUioBsSPP/i94YZ7h1FIHcRQQy0Bjn
VGhOacFh1DY014+g+iMIA6gpXLLAtQuMYtBAAqEYEA0oRs0zzF9orK4ef5PG
Y2nui27kPyM0/0mlAtP4C+HrM1luBsPOZOgZNDW9GchAY1SpoNm5BLFEEEIt
WoDcpfIvKhWoFNDctOCHqrIcXikDBYlJ7yE0GjANJ/FK/UhB6YVsJw0PBVEs
0DiQpkEBFAXyJ1H9AeRNEHAXTnwJIohhEI05bp2Z+fEevVbpGYQzgH30kA9B
oO9G0v6sAC8AaOyGUMy605wbi2jsjjqEUW9bMCeNkmnDC0jSNVlv1GKbWWsw
xkGo0Y4Bn4xL3NGcIl5Q4HBmYHIA2iXNhIhx+t+jcSShBcYYULxWZrGSN1lG
GwCKYxnDaMYwhjdeb9JlvVnXTVY9dnay2Ws95OaoOU9GLzrbZfTpXqNP9B11
uPfQq2Om3Bkz/WzvYXeGTrraf+TZ7gNvDRn9cNRPRfMXNrm41UVG/vLk0ceK
0rrywrLSgvKaipKqioqa2uqahoriyurCyjqRxtWVNVU11aV1lSW1FWUV5WVl
ZcgYIxgXgDUGb5yXm52bmZGVnpb2Eq2RAcTu3rx24zKaOnf1+JELB/ed2Lnt
yNZNhzas271q5foo5IpjPZdGurlGuLpEe7hHu7uFOCzxnjcXgOw8Y4bzrFke
8+cHODqGe3jEBfivi43ZuTppy6qV2B4f3bXj9IF9l08cA3t87zpK3USzR5Nv
ATzxWl5Oxht4MYDirMw3udk54NxRzQLt3c5IT02DRwG/AGGwx0BjbJLhCkax
eogeLlygsXrJt57evY0ShMRsN3z+4sFdXLX4tzTuzTAAZJRjrEFjQDGm8UBa
zL8Vp3uopixRbHP/EpJ6pUZNY0DxTE72PRov4uQgR17LQ66PaezFaPsxOgGM
bgirH8EbRUlMYuRI0TLjKJlxAKcTLNGPkBvHKc2Wa7dYo996o0mHjRZd11l2
3dyp/+bethsHjlg3Ysz6CRN32S08FhhwfcuO5+cv5z58Vvw6vbag/H39u/fv
Pr1r+vThTxr//PHTz+CN36PK8TugMRjjmtr6X379vbqmDu5+/vz5X//61+nj
JyyMTGQkBTQ25KX6DG9IcpZypTH7v0ljsWn8b9G4LwqcR5Xk/uJa3nBeNkKQ
2zICZqymMe5NEiCgsRrIf+msEN+Lv/gFQNFAf+1t+3MTUDOKMY3hd+M/o/Es
jgcgz2IZDSCLNCYooPFsglhI02CM/fQNnFh+MUljGrt8RWNfNAeExQQOEXsV
1ECGY6xcF9wpkDkCffZHaZZB4I0ZBtNYjWI/EbNwHSMaOAwPwXGtufmejp1i
5ApwxWCbg1k2mId/kfKlUdvzUjy2j+KWsgIIaIywTFDwwgJ5aRArCSC5MFYG
KD7cuWfK1LnHOveK57XAHkeKM0zBBscKWsskSlU4My3glb5gNASE+B6NYyjt
RM4YtbcJpoDiWEovjjWKF0xjBZNV+m32dLABFK+36r6r88AdnWzO2Uy4azvr
gGW//W1tzvT96YzNTycGjDo3cPSdUVNvDB77cOTkV+NmZE2f/2LMxKxpsxvc
PN6vXv1r+uuG6vLyssKyiuKK2sry6ir4UNlQ966hsqGxvL6+tLaqpKKspBwg
XFpXXdFYAw/W1tZWVVSWlZQCjQF3AD2EvvS09JRXGMV4OvPtayit/frJYxcP
7T+5a/vRbZuPbNqwd/WqTbHRq0KClvv5Ao39F9n5LJjvM3+e55zZbjOmu0yf
5jF3rtvcuZ4LF/otWQJADnZxifT2Wh4SvHXlit0b1h3Zuf3E3t0n9+05cxDt
0btx7syT5Nt4HvSju7efP36A+o3fpOdlZYJjhzeM8tIyUGFhobiPOycrIxO9
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
hoXzTuCKWQ6EqxNY6sKFNcn8UxoDcpErFgMzh3McABkcMtAYz0nUpDGuUeDx
TF/s2UT1CgYBWcVkmgapUoO+orF6ZhM8cxYnWSjTspdpL2BlmMbzSBa0gGIW
0qwdw4likCgazY+mSBAAeTFNL2EYx2YaYxQjM8wiOYGdZlgQEBsXNzCQnUg0
pEMNW1xndhMzJbA3BuGddPgEaBzAS3F+BWrAkEi9ANdilByuTqDNgGJtBM+H
wn0auCgNKA7T1g1RaqPxeeKkPJxWpMayP4Xy3IIoNoKVBBBkrEI7UlBGy3XA
GAczkiBaGszIUHYQo4igFCuVJrutOicqjGN5XbDKQOMoRidRarFCMEtkzddK
WyZR5nv0rTfwVqda2py06rfPoMvJln2uWg8/0aZf+iS7x2OnHLBqm/fTtPJx
s0rHziya5Zi8yKXx7KXP2bmlmdl5Wajul5lbkJVXmCH2tsGfkuh70wDOmMzA
ZFzESElJBejCZ1Lc+Yb72TB71Tdco8B8fiPecO8xAPnl8xfPnjzFKH6QfOfe
7Vu3rl29fvnSpbOnLpw+cfbooeP79xzevWPfts1b1yatXR6/LiF+VUxUXEhQ
hJ8P7kMGLPu7Okf5+wKo10RHrY2JXh0VCWSO8vEGhXp4BLu5hXt6gkneuXr1
0e3bT+3bd+7QIdDFo0evnTmdfPnSwxvXwSFnvnhelPEGsJyb9lpjq90b3DuB
Cxfgh/E2EEBxUVYGXAdjjL2xWpjGuHbxYxqrO9yAxqhojEsQzRweRqP1O8Rh
Tm7LoT5kGzDDnChBPlCq7KfQ6qWl1V1Hq4euNhy7aSu7KuWd5dJOMkkHCd9e
4EDtBK6jVOgkl8JD1lqKXvo6fY30+5sZ2bQwHWhpZtPawqad5eCOrUb36jK+
f49ptv1njxw8d7Tt/DFDQQvG2tqPHeIwdrDTOFvn8UNdJwzzmDzSc9oYn5nj
fGdN9J412X/ezNDFCyNdneK8PJOCQ8Akb121eue6TUd27j175PjlU2evX7z8
4Pa9V09fgl6/Ss18k5OfV1xSXFFeUVNT3SBuFXmrKXVdQl210Nw6Dff++ON/
oiJDdBUSfbnEUl/XSlvbTCLBmcYtBNSHDCgGe2wik5rKZT+gcTuJAoBsRfOY
xgjIJGNOc9+kMagVo6KxCOQ/adyZ5zuyLKAY01h9vROQuVk4+Q2vFPxTGuP5
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
UhobUhTQGB3hkZQkRoGixOSvAhRYKIWG/LfjxpjGu1g+PF2ovCNJPAhvKYr3
cRs8PHqxZpOy42hsTzN7KQrkQCI5kjys/TzegXehGHljmt3Po5wIHgIyJw+C
8aaE4I1BqJ8bSWMBjUHvpHEgg2gMAhofoxCNAcUBYKF5pD9H4yMckDGN4QYw
zyEEhTOQl0oCYViDuVb2IaghBhEjFKHxdgKpeFYYybU4RmdzXL0JBjI22DhG
gZsOwQ1A4wU+4wRmboo0pjEW7qiMaZwhlEqjBad1DdrXWkehwXw8hGKKn8wg
ewzGOFekmElKA43LZNSbtI1LFTVTaGmg8WWTjS1aa4DG+cSyEmY50LjL1O4L
v4QLOtZtBhtuWey8ZrL1pvmO64abUNax2caX2x0+32r/zb6Dnx0KGA869vr2
rS/ff/H08ZMnD198/vyzDx6+AmP88NV7s48e43yJx0uwvDS5Ah/egSPGgeWp
qSkA8ujo6MjIyPj4+OzsLPhhiU/GmW+4fwUOWUxNTE6MoVw3+M/s5AQIRy2G
+3p67nR2XmsHFAOT21vPXj7bBA75/JnTYJJPl5+sKi6oLMiryM8tz8spy80u
y8k6mZVRnpWJwxTZsTEZERFJISG5scBk9CW6qbTsXHX12aoqWFtPnao7efJM
WdnZmporLS3dV6+AN54eHHg8MY4zkDFvcTD52ew0CMArEWAZXgIXzR3/zYBe
PpyV9KbAldF4ZvS/rv6Q0HgLI8bJxsDhrXz+VqF4i0i8WSxeLxZZikQWIiFw
eJVIsEIs0pcR68tJGSjIGACKVRV0lGV1lslhaavILleW1lAQqymIlsnwVeWF
GkpSmmpy+suVDHSWGempm+hqrNVR36irud1Q39Z0FfbDbts2HrLZ6mdnc8TO
NnCXbfBO2zDbnRF2u2PtHRId9ye4OiV7Hkj3OZh1+GDmoQOp7o7JrnsSD9jF
OtrEOO4Ek5zi45IZ6J0VGpATcSw/JqIgNj4vLrEgIflkWmZ1blF9aeXF+qYb
rZe7Ll/v7bw71DM0PjQxP/Xovafvf/zq9ccffvrF51/jlhQSkyzJvvh9TgVX
vvfdf/+fv/c9uLvWzFiGJsEDr1RS0hKJAcUgMMm4bYUis6B/6xRPlaQxjbHU
6HfQmAMyCcI0NhcI10nLWAhFiMZcNgU3QY8wpdCZHe69abFE/y6NcXzYlkY1
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
MWhhnDSYYa7QQ4vma3Nd3XQoPnbLyAnj8Xlcd3rcl16XZpd2oedKQkiuKoRc
RQtQ0TS3GlMCY4pdTSK9i8bc5CZJkhvFrqNpa5pZz7AbaHYDQ2+ikYDJksmk
yBvzSMmgJSx8ivebDDfMZFjh6c7F60tlzwqAyahej4dG5oH28KjdJDrvw8IJ
cqhBK1czsn+hZoR15S30rMBFIgBkd4JxQzSmDlHsYVoAQmd5PPowQR4meP4E
D0WAKRbwe4ygwggadJxgwggmhOu9eQRQTBAogPyboDGPW1l+EMvCCjpK8A5z
WcQRQuEJPh8NfSYJ3AY5jEeE01QUw6SIZY4DIbmOxLjzDzjkMNQsjoerSAC8
uC4bF4kEc7nKC5OjWa41HI9OZNBQvIW5eASbRLDJnFIJNoNTOo9NIZgUUgD3
ALTRnCaCnyWlmE5LZzIyhQIlQHEhKZdC0CmEoECgmitUTSIVChR0X4elnZQ3
KBFpF5Pq7ZrWZxWNW9VMW9SN72/e/WFw5CUT6y7TzR0aqz/Z7/knn2N/2Of9
iYvvTHTs96ODH7968eh9FAd9OPNqZubpzOyjh/PTjx7OgP19+OjJ/MPHc4Di
h48fgRl+hgg6O/fw9wIgP+beAHr25OkCaZ8+e/Lo8ez0zPTk1MTYOGhqYnJm
ahqugHByMqD40UPA/ezc7PTszBTS5Bh4Y6Dx3c7rd25efXC3C/b3b13vvn4V
gHntwvmzp2prS4or8vNOZmYWpaXBWpGbW52XB6TNS0jIjY8HCJ/KL6jKzKzJ
zi5PSS1PS2spLb1cV3e2oqIqNwcsND7ma6goa2s809l28f71q723boDu37h2
50p7V3vbvetXR+7fnRkamBsZejY9+WJ2+r352ZdzM08mxx+CWx4dBj0cG300
PvZkcuLZ9NSL2RlY4Snq2zk2ClrwwyQftJTGa2kpENDYmpZez2kjLWPFyqym
hStZ4Qq+UJ8VaPP5gBc1PqPCp1UEzDJgspxYQ2EBxWCM9dWVVyxfBhAGrdRW
M9LRMNZdjmVlvNJ6teEGUyPQZlPjLWart5qbbLcw3WVp4WBt5bp1i6ftdm87
28P2O4/uszu23x5QHOJod3w/0gnnXVFu9kmHnLL8DwKQE132Jrk6JBywj3Pa
He+8J+WgI0C46Kg3qPDIISzYFwf6FAYeLos4XhEdWZOYcCo1BZhcl5Ndn5cP
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
d2x13brJfetGrx1b/Ox2HN2LjDHQOM7DCRTtah/hbBd5wC7OzT7x4L5kt31A
YPDDAGEgMBY8BT6DANQFAV5A4/rY441JMbXxMXXJiQ1pKfVpydVJiRUpyTWZ
WXX5+XXFxU2V1ZcaWq61tt3suN59605f7+DI8AT6lH/0+DH8brz/wfsffPTR
x68/ef0ZMPnLN19jLcUyeOa3P/z0xdvv/uO///H111//7U9/ToqKEBDEMiEL
Xx90ZEQrFGT0pEXwhUKD5Ybisfzfz2aS0Bi0lMY4hgwcxkL/F0hKneAtJ3gA
5H9GYwMes2JRhgTSKoLCnYXeSWNzHvUbh/yrnhW/nk+6mbdwWreTO8tDlSD0
r7SUxjhS8a+BjB2yPcViGtsQPNt30XjvIo2dyN/S2JVkFo72aIEbj3IhiEMU
C0D2Y/j+IIpFtdIUSpwAA3wUfCmPBYVT6CwvjBaE0PwgmgU/jJPcfk9jfx4P
OIwTM0KEQqBxsZFhpYVZGJ/FNA7mLdA4hLcwtgm3PoZNloJygaoG0DWSZrkA
BY9z0TwcPQ7j+lQAimGNl5ZJUVBECcw8Kk4oxh01Y3lMHMHEc0rklEQwuXyp
TEqQQqAaEHDOsRyQYY0j2BSeKJOUyqFkCniy5axyrVCtklGu4KtWibVKpbQL
xZqF0jolcvoNGhY18oaNCsbXdTf0mNreM91+f92uq2Yba3UML5uuG7OyebFl
77y17XsObp8cDfkoK/uH3rtfP51//vz5/NNXczOvpsefo1OpyTlgMBd+QBCW
CJzvvxYAFpzwcy6cgWkMKzyFDeAXO2e4AnB+9fK9V1xn+mfPnqH0Ni5oDDRG
oWOA82DfcH/v2OCD0YHegZ7uwd67mMm9t26CN75zpePmpYvXWy+AQ7505kxz
VdWp4uKq/HxwxYXJyXkJCbCWpWcAkNtPnz5fUVGZkZEVFZUeHp4ZGZkfH1+e
lVlXXFSVm1OZjwY2XWqov9zU0NbU0N7SdL7u1EV42tx45VzLzUut3Vc7AMuw
YnsMVrn/didgGeC8cOX2bcAvQBhQPN7TA5v+zs6e69fhOkhjsR3N8sV/+Gj2
BMWJ5IP0CVaPYHQJGqRNoEAl5rAyhVwxoFhFwKiI+aBlMkINOSktRVldFYVV
6svMdDQtVuia6WuuWakDfni9ycqNZqs2WxjbrDMDDjvbbnHdue2g3Q63Xdth
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
eiX5eMZ7ukW77Y93PxB5wD7M3iZ41+ZjuzYft98e6bgz2skOIAwoxtGJHN+D
IGyGS4/5lYcGAIoxljGTS0OPlp04VnI8+OSJ0MrYyPq05Jb87HPwYVdc1FBU
dKa4pOFkeUt1LY5XdLZf7bp2o+deb1/fwNjI+MzMnKTtyYcffvwFoPhdNP78
q29Arz/9/Jtvvvvxhz/89ac/vv38c+c9dtI89DeswrJaMjIrFBX15eXBHsNH
ofLvumsuHOcRpCR6jNpp8hZo/G+d4oEMeIxEi/EKCoTbChkTSCYLQlOZJEV5
uLu1xCH/PgMZ0xif2UmEm22C/gWNf6Olp3gLHCapX8RbmLr4/0vjBUvMilz5
4gOM0JHHOBDEPgJlLLuSjCdf4MUiIHssZiP7AHUFoiAeml6KJkozghC+8JhA
GMwXHGX5KBeOR/pzCiBIHNaA1ZckD/EIsMd+NH2Ezw9gWXDIwGQ/gvDn8iuA
pcDkYGoh8y1JVi5BWiZOLCVpbYG6uonEILjhKOeEcZocEPi4gB/GRx3eENVJ
NGMaaBy2eLQXymViRBBk5BIs58kpXrHeWKOtl8wIwBJLDvvAGCcSdLl4Wa3s
8mr+snqRRgNfvY5e1iSlc5KQq2LUz8jqn1UxOS23okZar03H6o1//MCG/ffW
7OpeY9NmuPbcSvMLJut612+fX7P9o00Ob938nxw+OldZ9PX80Oun088eTqGT
tbknkzPPJscfPxp4ODcwOzAx3Ts1NTo9PTk1g+PGwGRYYc8lRMy9UzPcA+ew
PeQeuHkmfsAe103j6g/crQLdOT8LAggDpsEnv//q5bNHc7OTY7MTIyAJkIHG
tzva71zp6Gq/fL31AtD4YsOZszU1Z8rKKnJzi9PTC5KSQMWpqaUZGWXpGSdT
08qzMotTU5KPh0X4+8UFB4ElLkpPLc/Nxsd2IPDGBanJ2QlxWfGxoLyE+NqC
/Pb6+q6LrfeR0b3ae+UK4LfrwoXrZ1uuNDQAnK81Nd08f67z/HnQ/faO260X
bza1AJAvVtUAkJuKT9YXFV+oqDpXWQVforGkSUKGQsSQp0gQ5oMSvViewLJq
fL4an1ETMepiVl2aryEjUJMRqErzVaRZoDGgWF1eBDTWBhoryhgtU7TQUrcy
0Fy/Sner+cpdVmb2m9bs22LlsmOD154dfvvtDjvaHXbY6bt3p7+jXeABh1B3
J2SJvd2Sj/gkHvYCFCf4eqb5+2QFHc4ORMoJ9Mnw90w9hGrukj32Jx7cF+O8
O9zBJsrBNuGAPbjioqPeQGAwwGCMAciYyXARroAxRmEKAHJ4YE1UWHX0icro
CKSYqJrEuPqM9Ka8nLMnS1qrqi6dOt1W13CxvqG96dyti+3d127ev32v9/6D
4cGRibHJ2emFnifA5N/QGKMY9PqLr774eqF8D274+1//9vM/fr7X2akgECoJ
BAo0LQs+maa1paX15ORg/X2v439NY5zSBigGwQaeAoR/n+EmkR75v6cxHheC
HfJaWHnkOgLJmhOeCo3z3JZy+H9HYy7DDfF2J4/CGRo4yiGZgbuUxvbcmGkM
5KU0dmH4ThR/D0HuIQigsTPD4mZEBxmBK027M6wHy/egWVceil24EQRgOZBi
wBIDikMFolCR+JhIHCwUgf4ZjVEVCUN7cW93Jwhg8jGxCOTDzfLw52iMW8rj
vkAnuIAwbiiEWwmBH44WiuLl5OBVf67pPeIwywKHQQBhzGQwycge0zSu8gtf
bEQvGcyElSOncH+3fcMqYzDJYIzBLafQolRKmE6IikXKN4ysO43WN8hq19Iq
9Yxqi1irnlGvJJTOiHRq+MtrhTrnVc2aFI3urdn9c8nZOxa21002X1m9/qye
aZuJ1VlD05Hte97bvPczW5e3h4Lng0M/uHHp+0+fTo31PH0yh5LLZh5NzD6Z
nHzyeODhbP9M3+j0vfGJ0alZoDHGL6wTk9OjYxMjo+PjE1Pv1OTk5AT3mJ6e
nuMeAGe4COAFDwxPgclzXGoy5jDuVgF+GAQOGWgMAof8yQfvAZAfz06CpseG
FlKOr7UDh29cbMXZFGdP1cLaXFUF3hhUlZ9fkpaWGR2dGBoKyoiIzIuLL0lD
JSEn09NgU5iclBYRHhl4JPyIP6y5SQmniwrPlJc2lZc1V1c2lpVW5+VyKcrJ
RQkJBQkJ1VlZF6qru86du3f58v22NgTn9vY7Fy/ebG4GXLefPg1qOVl2rqzi
UnXtlbozNxqbQVfrGzpO17efqgPJsjyQDENgydILQmdzXFhYVcRXFwtUhayG
lFBXQVZXSUZbQaQlL9RRFOsuk9FTldVWkdZUEmvIC9RkWQ0ZdrksX1dBbKgi
a6ahbKmttsFQe+MqrW2mK3ZbrXbaauW+c6PHzi0HbTccdbYPcXMIc3c65ro3
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
Zu7M3Dvn9H3XXlJFcZI+fe4dP++zsvaqLeWf7Z/f+vYHjSeLy4/nlzXmFFam
q4riUkriUsoTU2tTsxozVMeU+U2K7Jqk9PLYpNrEdAg0ropLropNqoxJrIiO
g6oTkqCq+MTKuASoIjYeKo+JK4mMxmVDavqpLNXp3HyoRZV7SpnbllPcosw/
npbdlKKEGpMzm5IyGhLSjyVnQvb7deGKAWEqp4PbXEFj/d3+bBgh1MogWmqW
KLdJ85BleDspvOUKf68UX/cUH4/0AK/s0MCCmLCi2MjChMis8CBY4iR/zwR/
9+Qgb0VUYF5CZElKrDLEh7I3ycsxxcc51tUu0skq3l2qDPZM9ZVHy22CbI19
zI+4Gx1wOboXZHbT3w15Ge6DYQ63MUpwtlb5upRHBhQFeFSE+R1PiGzLSDqb
kdyWnoi1U6XAJQQgN6fEgslnlSkE1zmK7nzl5eKc/rJ8CJuegiycdBcq+6vz
L1Vmd5dlnS9StBco2vIVrbmKlpz01rzsMwU57SXFXdVVvceODTU3Dzef7m85
PUhqpS+PXuyb7Btanpq9Or90bXn19vUb+Gf5tVdef2sjj/3O3Q/u3vsYevjo
Cezxp599ASZDJNfil6QV57MvvwKcweTf/PZ3f/nr37BpbDrOYZjtGpoaDGO8
d68mrKym1pGt23QY5oCm5k/RmENpvIcnZGks/HE8+cc0plV7JBVZ3ayPS7SR
X/H85BdjvtCIR2hsxNIYVlk9rxb6CRpzONZcrg2PR4BMaMzZKAwBjQWgMQtk
vicjBI3ZPmxCkurGJ26Zxijo+7ufyqb4vvGFmsY+ahrDVAPsxP0KiB/mAbZE
FL8UtpS9uIR+jsakMTKALBBBiYTGwlSuKI0nBodTGAHWDIFGOl+STKagcsHe
BJbG8f80jZViUY6WpFBHq1BDUiQQlmy0YmvV3UkLmXFJRuZtjPwo5qwPNmVj
wmybID4ZgcfexoGAYvjhcoZfBhpzhJVcjWNa2xuEOk1CrVaxbitP8yxP4yxH
0snRHtDc1Sve3SPY0SPaO/iC/uRey35dw0UDx3l92fg+89E9piMHzCcN7CYt
ZJf1zSZsHQfNbCbMbYeOGN10kP9GmfNpVPzb6ZlPbr6I5/mje/dpbOHV194A
Tm/dfuk2m5GGSxCVJg/TEg+cvMpaFPouj+ZOvM6+kMMJvRMmGT9Lfw8bWn6D
JiPjz9tvv/3mm2++/johMNiLFb8UP/k6nDUg/tLLuKSgBpPhuUHja6tX1pZX
rq9cWVtcvrawfH1xZW1mYXFsanZoDFoYmZgdHJ2BmxoevzI+Ay0OjE1fHOhr
OXsJQK47caa8rrmw8mR+eUNWYXVKdllcanF0UkFEPFQSmVgek1IZT1QYGg0V
h8eURMSWwxvHJFbFJlTHJRaHRZaER5VFxpRHxVbGxOOkJj6pNiEZoMYhPqKf
4ub6pNRjaRmn0lUnUrMA3sZEBSBcH59WH5taF5PSGJ8O0aCE86HtlMZyvR2e
Bnt9TQ7CFUMRtsYxMvNkVzt4VKWvPNPXNd3HVRnknRcRXBgdkh8ZkhMRoAoP
zIrwL0mOyYsNyQzzTw32BJYV4b6Z4QGZEX5FcWHpfu7xbg5QnKssydM5K9gn
PzIozddN4e+BXwWleLuEy6zcDQ/Z7yf/HMj2bpHu0XE+uM3r6N5As8PRtiZJ
TtYFfm6F/u6lgV7lwT7lgd41YQEwxj15SlhfsBfuF0AGqxtjw6D66BBY5Y7s
NNjjocoi+OTBikJgua88r68q73JVLtRXk99XV9xXV9JdWXi+NPd0vqolN+tk
jup0YcH5qqqLDQ0kiaXp+OXWtv6OC4MXegDkudEJAHllbuHqyura6lVSMc0G
xIjeufOL994nvd4+fvDgk0ekR/3Tz8BkEJgmJGMDIGP/za9/g/1//P3v3/3u
D96eXkKG0eFyXxAItovFulzuNgGZW7qVy91M49183p5N3ngPmRwtZJn802/3
fo7Gej9D4x8w+WdovD6nicOnNGZFOlfYsii25/MhOw4XIi0sOPznaOzOEXpx
CI39uSLaGJOkUrCNKUgpNFskArlveotHX+SpmfwcjTc6uYnC4IF5kki+RoxA
E6KwVfNW7ZB/jsa0rVAcny3N4wog0Bj4TeeJUzlCiGy4ItA4keGTG0hbe+KN
Y39I43SBKI0vpG/xSH4yl5exQeMsiVAlFuYI+Dlsi+M6TZ0zO/dOWUvPbN9D
GrLxCXjXB5XySOPNUq6Adqen9hg3QM1bd4LMBQxTzFZAr5fdCTRA43qxbjkj
qGWErcItp3maF4S6fTq7e8Xbh3X2EhQLdvRqHuzT0RvaZtS/zXB4n8WSqcvI
XtPh/WZDB8179huPWEovG1uO2si69QwnjK3G9U0exiY/U2a/7Of/+MSJ3937
GI8rHukPP/r47gcfAZqgJyhK39Cp6ar2vTdu3qahCZzQewBneoOa3hTL9Pza
jes3bt0E2l95DfwlsYmXX375JYLaFyHqjfH/AIrxhfTWjZvk/KWXcP4qG5XG
//Wl6zdvX72+Mj23ODG9MDoJDi+NTS2OTmJdmZiZ6x+Z6R2avjyIdb5vZPby
0FRX7+i57pmuvomOiwOnznZUNbUWVJ5QldQr8kDjqqSMitjUovD4vODo3MBw
KCcgTOUfmh8UTlUQHFEUFFEcHFkcHA5VRsZCFREx5eHRZWFRpaGRUElIBD2h
e6z4CCe4syYmuTY2pS4uFWtNVFJ1ZGJVRALW+qhkyNPkgLvRPtcju4BByI11
xSHWBpFS0yiZGVAc52gJbwwgp7pL4ZBT3B3YnDQfVZhPbqhfTrhvQVRwcUJo
bmRgbpQ/1pxoUvKcHemXEeqTGuhBwQsgZwZ6pbIkL42PqEiKBszzIgJBZjAZ
NE5wd4yR20c72rgf2eu4/wW7XVpYPfX3BJjqhVsaRNsYpznZKOR2KnfHAh/X
Ih+3Yl/3qhC/ppgw6odB4/bMZNjjE4lRoHFdVPDJpOhTyTFANFjdV5o3WlM6
Xlc+Vl/WW5kPFPdW5w3UFQ81VQwfqxw+Vj3QWNlTXd5ZUdJeWggatxYVnSkp
6aioPl9Td77pWGdza+/ZC6M9vTODowvjU0uTM4vTsyvzy9fWrt++TXoKrSe3
v/seHDLtsI2nl5rkp59+Tjn8y6++/vqbb3FIaQyH/O//8Xf8679H94UdEomY
YfR37dJiGPjkA9ra2gzz8zQW/pdofIDHh9RthQ5t6kL/z9PYnLupZwVb/QHJ
uKTTJrHE7IgQAmS2sxDOnbgCZ1byH9LYmwv8itYnKwHIAhHkw+V7MMxmGrup
A8gMo6bxesuLDRqTMAXN0OCJw7lEkVywV7KZtzECIFoDm39AY7YZMg+AjWdR
nMQRUG+cztpj0DiFFc4hNY1juITGsT+kcTqP0Ji2tsjg8EgZNZ+vEouVArbD
G1vHUcwXtu09MG5lN2PrACYDswS8Yk3yIo9NhyMVdnxRjUQL0K7V0Ca1z0IN
eOOOfYcaNEh8A64YDKc0Jp0zhdrVXM1aRnJKsvW0SLdNoN2jsf08X2dYd9+g
zr4LnBc6BTu6xXvPcbf3bdGfN3B4xz/+JZeQvl2G57T3DRy2mLByGpU6D1hL
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
qDSHZFYQh8zS2ALg5ROfbMkwFMKgMbBMc4/pjGm1ZOAw24pts+h7up+jcahY
M0isESiS+AtIawvilhmeD8P9ORqHM/yojWAFjRj/pzSmOcakBI+lMVCcyqKY
VnxQJwwUk/d3DBdwJllwHIFCpJmj9YJKUzedJ4wHUYUamTyRkicAkAmN+SLQ
OIvkV3BggAvYsDBEohN8vpJhyrS1gV9AWMGaZxzW7dhx2caGhjJo7nEhl99l
aDxkYV0l0qjiisoYXh1XfFJD96R4y7mte47zNOsZfjMjPsNoAsXn+duB4gvC
vRckB7s09bq09Pu2mc4byW/aBwzsNp3Wl44dsrxi5faXwmNvBMZPe/oNeni1
mVt0G1usWLmumbldcwic9Yu6Wnvsz48f//LLL548e/b4k88effzk7vv3aF6x
OruYdmCjiW3UDFMa04Ytm0FNLTFFsboob90VL68uLC4vLCzNTM1TFM+MzwLF
8MYEwkOToPH0yPTM0NT04ORE3xiA3H+ht+9sd8+xM5dPnOk71Y6VvqeDJYYx
hiXurGwCijvLGi4U13UU1gDIcMXww6BxQ1J2TVxGbYwCqosmqglLgdQ0rg5K
rAyIr/KPqfSJKPMKKXXzL5L7FDh55crcs23lmVaO6eZ2RKa2aSY2aSZW6abW
CjMbhbl1iqlZqoVZmqUl1hRz82QzE6zYp1tZpVtZbF4V1taE0rbEOVNhr1a2
vQOU6CmNc7ONk1vHu9iAxqleDuBtsrt9JE08tjaEYI/hjZNcbFPdpSnuDjFO
1mF2pkFWhgFm+n4mh7GGWBnFO9kku0qTne1i7S1ibc1TnOwUrg6wx1GWelGW
B+Nsj6Q6maTLzbBCac6mWFMcjZMdjKAkmeGGjBNsTWCJk23NFQ42eR7OMMag
cYGXC5wwwKt0keZ4OBX7e9REBMLoVob64RKkpRXT2FOrTIEcbW6ADZgMGuMH
8eOsnPK9PMpDAo8nxrUrFRdys2GP23IyYY9J6Bj2uDCHOuSO0sKOiuKzFUVt
lUXtlSXt1aUddVVdx+ovtbT0n20fudANGs+PTC1OzK5MLd1YvHZ77cXb115c
Wb6qznWfX1jCgwczgOdQnYdMcy3UmW8wxl9/993HDx+RV3u/+hW4/P/+X//t
q8++iA0J3SIQasDcamjvFUn2iTXgjZ+LG2+m8U4uh9RQr4uhQGb1X6OxHpcL
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
pB5Fdu7gcKmte5GVS4GFc56ZLNvINkPfMvWQadphk5RDRomg8Z7DcXv04vce
Ttyvn3RIP+mIfqL+4aSjR6BkA32IAjnV1AiCZ6ZAVjM5zeynlWFpAcU6Wcax
1dBqk4wT+pIuSmaGfTwbu4D7BY1VQe4AL84DzA97G+33Mz0EewwO46dAZqwZ
vs5AMYQNLsNtDKNsDdLdrLK8ZGmulsnOZkp3m1wfWY63HQlcsAKWC/zsK8Jc
aqKAYvdif8fSAJeKYHeo2M8518M+10NW4O1UFuxVGUYaBBX4uNJwRIKNaZyV
MTCb6WRHbTA4DN5SG5ztIsN5uswaAo1hmHFJsGxnkW5rnobV3jJdZpvuaJfu
IE2R2Slc5VleHsUhwZWx0VXxsRWx0RXxcZVJic15uaBxa2lJW0X5hfoG0Lir
6XjPqeYLx052n2rtbD7T2dJ2+WxXf+eloZ6+0f7h6an5qel1AcsLi6tX1m7A
G9+6/QqYTFsAgsxsF+13AOT3Pvzo7r2P6Vi99Y4WTz9/9vmXX3767C+///M3
z35VlFMgYQSaXNEWoSal8U7OP0Vjqr0cPvQcjaEDDF+tg5sEFB/mC+l8vYMM
h9IYMmQYEy4Pxpj2rACQSRkIjzQIUtOY2mMqqYAHEUTDJG/Q2IlhXPg8QNiB
ISJjTHlcdZc2+kYPNPYXiQMlGrS9G6Xxj5lMaUzCFHxREE8EY7xOY54ACsY5
h0+Gk3KFSTpbc/ccjGXz3GIYYfSGN07iERpn87eouFo5PNBYR8nXSuNI0nga
CpEmGfNBqqRJi7YULn89o5grBI0LSXGHOE8gyuEJlDw+kUCQweMBmBAdTqrk
cKFstidbPpulls/l5TCcbB63QCIGjbFJZ5PcykQS3FPOEYDGtQKNCqGEJlTk
C4XlOjol2qRNfakOiW+UiiX4FPc0Ctj5dzytFq5W//bDo7sMhnfo9+ke7BDv
7NHZDw5PHDCb1be5ZuX6imPAuJ7V0G7j6aN2I3tNQeMLpra9zu4tBha9ti5n
D1l16NuuBaf2ekU+HBj//UcfPnn64BeP7t55+uDO/Y8fffz4s48JjQl7WT8M
gcaA89NPn2FVUxpABo3fuvM+IAzBFb/46hu3Xn4Nzzy+G66uXFtavLI4T5LZ
lmaXSVo+i+Jr80SLY3NLo3NLQzMLA1Pz/ZNzfRPzrOYujs52DU93DEy0946d
uTTc0j108kL/sXOXar/n8IXihvNF9efyatpUlbDELYrCUyl5xxNVjXEZ4HBt
VCpccU1IXF1wHDgMCBM/7BFS5h5U7sbKJbBU7ks4bOdeYOOaZyXPt3QGhPPN
nXJNpTkm9ipjO6WBdTpc8SEjKOmAASAcu/tQzK6DWLGP36+XoHc48bAelHTk
B0xONjaAUkwMiczWsUxkavKTSjc3g8BS0JjGimnSGi5BYxIidrLEp/R1Hlac
A8WkzaaTJXXU2IDGvmxSXIi1ARlpxza4SGNfBQLjZAKpnbHSW1YU6pUX6JLl
45DtI1V6SkFmbFRethmuVjDMWR7WRYFOJUHOBX4ylbu1ys0WEC7ydSoLdGWx
7AnlezkW+rmWBniUBHoUertmutiBulEm+lgpdWF9AWGY4SQbM7AX90C57k7Y
41N8hH2xr7vKyU4ps061NU+yMkm0Nk+RWiscZUpX52RHWbqrPD/AvyImCsa4
Mi4GNK5ITDiVm9NaVNBcXAQgn6upBY27j5241NJKadzV0naxrWOw8/Jgdy+A
3N/TOzoyOTY+DRTDGM8vrCwuXaECk2nUgp0n86baG9+5+wGA/MHH98nUaUrj
z74AjR/ff/TH3/7ht7/69umDx9FB4bDHoPE2sc42rvj5YMU/QWMK5HUO84RE
P0PjAwx3PztTD4I3Pszhk3bHfCFobCkS20k0LflCgmKe0F5Iij5IwR2XC8nY
eAXwS+UoFLhoSNw0NVyEpOjDlctfn/vM58l5XFdWdKjHujbyK9RtK3wFQnWb
zR/TmKI4WCgJFWuGiTTplD0AGSj255CReaAxmBzOF0cIJNEizWg+26eCpXEM
Mb2SZL4WnHAWTyuXq53D0crmSBSMOJW8pOPTuUtYWXHA4XQen6YTg8MFXGE+
TwgUA7ZAsUooyhIKM/n8VDZGARrnCIQAchbwyxPksYPtSDUHm2lMKkFYowtj
jDWPyysXa+AG0heIL6nkkWZuNAk5h8crkhAvTcPLTTt31erowkLXcMVAcatY
t02o28bf0qO555L2Pqh3y4FujT3wyUtG0gVD+4mD5rdk3jfsvUHjWWPZkoV8
+KD54BHLC4YWY3LvNj2TbiO7Dj2rKZfQW8n5C8qi37742u8f4Qm89+4nH37w
9PH7Dx6Cx/fvPXz0kI1L3H/00b1P7n388P6DxyAz5bMa0fDGd+5+9Npb79x+
5XVwGOvNl16lAbq1qzfJm5SFVdB4cWZpYXpxeWb5yvwV0Hh1enlpfB4oXhie
AYdnLo+R6MTFkZlLoxTFU+cHqCUeau7qP3G+t7Gdorin4hSxxMX15wpq2/Oq
z2RXtGSWwhW3pBWcSMppjFOS4HBkCgRjXB0QDT9cD0vsE1HmGlTs7F/s6Fvi
5FeK1cGn2N6j0NYNHM41d1SZylTG0mwj+yxDAmEqGGO44uSDhkAxa4z1gOLo
nQcglskHEg/qxR86mKB3iDCZNcnrNN4wyRCwvB5PNgWcjf+BAi2OBFsdBWM3
E5jusYENpmlsgC3uoR/BQit8nGCV070dcRt+g5fhPvmh7cAy7qEBZJqWjD2Z
cOdur/SVZ/u7kG5C/s4qP7nKz6ki2q803CPH1wlkTpGbY011MouzPZLrbUeA
7GKZ62Zd7COrDnGrj/BpjPIrD3Ap8Xct9XUp8pUXeDgp5TYKqWWKvXmcpWGW
i32Ou0O2q1TlJkt3sEqyNVXK7cqDvKpCfSEAPNfDMdPZFoe4ocLPo9hTng1E
E25bJNtbURrn+Hjl+HoXBAaURobDGNNIRWNmxrEs5Ylc1bG83JOFBW2VVefr
6uGNQePzTSdA4+7W9t5znWOXBif6R4iGxkDjkdF1IMMYLy2vgck0hrx65bo6
akFp/M6du7RHPa3xpw3fnjz5FED+5bOvvvryV18/+9W//eVfX731spmBibZI
cwtfYytPzAJZ+Jx+olZ6U7zieyCzKD7IF9Ho8WYmU6nnTdNIxX9KY1L7zNKY
AtmBz6OScjkeGhp+uro+Wtp0zCjkwRe6MIyHUOArkfhpaHiLROqOQJTG2Hvx
Bd7gsICU7G1G8XNMJu/7+Os0hrBZt8dcHhknzSNYDsINPGEQw/NnGDIHhCOK
2Hi7F8+VJAu1FcItmYw4mxGrOJIsjjCDIX3YMnkiBV+QxADCfCI+L0sogvvN
4gsLJBqV2rolQo1ikUahWCOXL8wRiQs0tXIkEtA4g0yX5lIa54nEuUJinot4
gmqJFql05guKhCI4XnhjkoRMU44ZDp0KTTsClTGkIBqGmZSHcDjUHpdqaeG2
UiGZHA3/3MDXOAka87TbuNrtHO1LWrv7dfcPb9cb3a0PJl9+4SBofMXc+QP/
+C+S8q7ZegLCE0ftR/SsJw2kQwY2l01tJ508Bk1lo2bOo7aeaxFpa1nFj8dm
/vbw8befPb1378N3Pnj/vY/uv/vh/fc/fHD3g/uUw3c/+Pi99z+CsMElDkFm
tT786AF8xWuvv02dBh5vfAF86cXXoNu3Xrlx7fa1tZvXVq6DwCuzK2uzq1fn
rlyZWYErnuofXxyZXRychiWmgeLJ7qGZ7mGizqHJjv7Nrri3vu1iTWtvbcul
ypNdpWyAIpegmEYnTiuKmlPzTyZmNcUqGiJTSYAiPLkxLLnWL6reL7rON7LK
M7TU2b9Q5l0k9SqWeQPC8MMFVvI8C6ccM0DYFuzNAn6PWECKw+ZYM/UtsaYd
Mk45YJi072jiXv343XqxOw/G7DgQvX1/9I69UTv2xu07EH9gf9zBA2AydcjJ
+gTI1CdDm5n8n8rtyC53dg4dqbwzP0zbGsPxqrFMvTEE0gLOwCwt+qAOmdpg
bPAbfIwPBLCjn2kMmb4KzAn2UPg6p3k6qYPPecGeJZF+xRG++aHu2fjIzSbJ
2SrRyTzO3jjS+nCS1EDhZEppXOBpV+rnWAGHHOhaFewOVQa5lfo557raZziY
ZcgsspysweFCHxfwVuFonWxnlmhjkiazxCVoTFUW6Fns55bv5UyJXe7rXubj
VugpzyGhDGmGszTbVZ7j6VYaGlwcElQaFkq9cU1ifH1aKmhck5pSn6moy1I2
5qhaSsvaq6o76hq6Tpy82Hy698xZGjce7u4b6x2aHBidGZuampwbHZsaGh7H
CggDyKAxDVksr1y9eu0WtcfshJm333zrzpvv3AGQaZss2oTzwYOHjx49ofGK
b7/69W9+9e1ff//ngYt9e7fvhkPW5YsB5K084TZW/ymNdzLc3QyXApnSGCg+
JBD/HI3hjdUd6fUYUqxHciq4/J+LVLBtKLhEPJ4zl+fM51PZM4ybUAQU+0g0
wWG4YncOkMuXM4ynQBCoqRWkpe0rEtMABQ0aE2/MziGFyJRS9qOfozEFMo1U
rOdaMDT5jRPAFwQJRVhhkgO4xCGHcoXhPLazMSNQl4ekiHQyxDq5fK1ioTaU
x9dQ8cRALqQUCNM5XDBWJRZnA60SDRhaMPZ/cvaWwXFla7rmzsydKGZmZmZI
MTMzY4qZZcmSbEtmoSUzMzMzs8tlu1yuc+r06T4dfe9MTEfMxNz5MXFj3rWX
rPJxV9WNmIg3Vuzc2lb9yXjq0be/9a1WZdVuNU3QuEWi1CRVAmxBY4VMCW4M
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
DjdugpA3y67QmGzr4LOhAiEiZ0UIfNifYXy4BmMyuk0IExZ+VwoO55GxFYH/
TGOK4hAeD/kjGq+MEqI0XulAjhaAz2wkpJqT5GSpLFkoiWX4QHEyT0hPlP6W
xrWstEWk1CJRrhOIQVdS8hWKAOQ6qbhdS6NNTbVJSdamAhMWN4rYHg21IW39
dqlKh7Jau6q6QiSpk0jhxpTGhMNCIQmP7LDjWtQE3apqoHE1w6y3st7q6ATG
lnDNEnUsi4+jBob0NJA2gaiVEfTIVKDQzWIJaEyHCyn4AtJ0wWMHJCoDrGyY
J13Dqm6R6cwq68+ItTfx1XZomew3stlrYLPXyPacs9+rhNy3KUUnnAMWjRw2
qpvutPLcYeW52cBhztx9u63vfrfgRTuPA+5Bl0KSjvpG749MPd/U848HD5/f
v/P45dO7L568ePn29bO3T++/fPrkzYPXP9x59fohp77UjUFj/DV3+9b9Wzfv
0UIEQmZ637h7++Y9rDe4a6zXrty8dvH6lfNXL52+RJX42J4jx3YfPrrrECAM
FJ/ed/zMnmOndh05OLtrOVt3wIp3r5/fsWZ6aXzLwqoNC0NTs/1rZ3omkK1d
Y1vaoMTDmxr7v6K4Y11Fy7rSpokixXhB3XBG6QiXVanFw0l5/XFZPZFp3WHJ
QHFPQEyHT0S7dzjS6ilvdg1ucPaDDAPCKxxGaixJQGMOyATFv9HY2Porjc3y
9U1zdY1B4wwNvXR17SxdvSx9/RxDosegcYG5GWhcbGVZTFFsZVlkbUXCobjY
zuaPOFzqYIdQ0aVjgkBguZU+gOxjoBpgoolrCmRaDSaimxwBGgOzeHLFomnl
GffB6qb0mM68ZEVKZHG4L35zjJNlkKWRp5GOm76mr5lBpKNNsrdLRoBndrBP
pr9HipdjsqdDfqiPIjm6NSue7DcJ962P9qsJ9ygPdi7yswOTC7ys8z2t8jws
Cz2s8lzNcxxNkDxnsxJPmwa5Z1eivDc5qjMpAmlPCCOF5bhQrHVhvkhNqHd1
iFd9uB+93xQdhOtGeUBbVGhrtBx6XB3sr4gMbYuP7UxJHCsrGSrM787KbExO
rImLqY6NrkmIr01OKouJVmSkAcVDdbVD9QpkVWPzaFv7aFvneFfv1PBq0Ji6
MTK7aXp2Ztv2HXv27D0IJgPI9EUeUAwxPnX6PHXj6zfu4FsN2QCQqRLTuvGb
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
LAPZ2KLU0KxY34QCGcnR1qVAzubqFX8OZCLJf0DjIhtLBPhFILegLhgLONN3
c7RFDcn0c8YD9AUfcA0UU24Dy8AvfZ2HAM74h0BxdoAr7cQgO0TkvjkhvjDh
JC/njADPPLl/bqgfrRgHW+gHmetF2Jjg4aq4EKBYkRRRERVYEuZbFRPUnBbT
lZvUl5famRUPJitiAoHl2nDv+kjfpugAMssiwKXA0zbXzYo6c6mfU2WQW324
T1t8SGcSZDiwKzm8NS64MQo+7IePuI+A2KCxIsSvISywJSq0KSqsLjwYbtwY
E1kdEVYZLq+KCG9ISujIzuzMyWpITSmLiW5IT+suKRprblrX0T7S2NRdUdlU
UFSXl99eUd1RVdtZ19jb1DbY1jPc1T/SM7iqb6i/b3h8YnLL1jkQmLYcHz5y
Yt/+w1Bl3KGIPnb89IWL+APvPtcv9OTpsxewXzr3GBCmJ4MgwDKF88efv/zw
8dPLt++evHj56t3bv/3bv75//y4nI11ZwMKNv6tUfEtjREfwfZfFb51vfNaE
FZuLZYiZSGrCAZlOE6IdbiuVCuQP68Z80l0cIBIGCUkrBXgbIZJEiqWUxnTH
x7c0XhngRusPoCusGG4MlqYoq4LDtEGCO+CD/x2NyTgLdpnG+OfwZACcuLFE
SnaLCITUjVc4vGzFHI3T+eR8UnC4UlWnWl0vny/LYoSlIuUKnqSKJ2pR1hg0
Nh0wMqmTKZXyuJ5hqbRDS7tLS5tUMBgB2TQnlYGiEONWsVKninq3pnabilq9
VAZu0414ADKVZFo0rhOJm5SUV4bMdyir9Kip00nypKmYO/kONCYbQzgUI+Bw
L365QNzJE3UwbBvDdDPsCKs8JlKdkmhO8JQ3SbRmlPQWVAy3qRotqhju0bU5
5yY/4hC4ZOQ8o22z39rnnE/kKQ/5GmWD7RbOex28FszsN+qb73HyOujuey4k
8khA2K28ynstfZeHx//b86d/+/z++Y8vX33+9Ojdu+dv3j99+vbpg+fP7j9/
dPfxrRu3L16+dP7ihRNnCJB37j2wbQf59u7Ze/DQwWPk3LGjp08fOwMTpjJM
TJjjMGSYvq07sv3AgYU9e2Z27NmytGvTtgMzO/dt3b5nw8Lu9fN7puZ3T84R
Kx7fCg7DiimKFzgxBodXdnlAjEHjLc3DmxoH19f3ra/t2lTdsb68aW1hHS1Q
jGSUUiteFZ8LFK+KzhwOTxsMTe4PBIrj+vyiuz1B4yDQmMTNH2l18W128m50
8kAaHN0RhYMLUm/vDDLXWTrXWzjXmTshtWaOSI2ZHVINJpvYVBpblhualxmY
leiZFOsaFupCj3WztXQytbQRYBmSTIFcaGKKUCYDyEixxQqNzf4oFKdgKWUy
ggt8pC/vaLmYTjymD1AaIxTdYDiEGXAmw5A9bPOCPQBwWmEmA5DJ+HpLua1Z
pKNVur9HWWxYXWpcY3pcU0Z8dqAH3Bi/DcEvzwl0A4fLIvyr40MRWuhozYjr
zEnqyUnuzUlSxIXWRwfUR/o3xgQAyABvdYgHbLnYxwFYLvSyA5BxB/gFq8v8
nQHhWrkX7tSFeYPG7Qkw5xBcDKUl9CZGt8WEtUbLW2Ii2hNj+tJTh/OyuzLS
mhLja6Oj6uJj2zLTewvyegoL2vNyqxLiGzLTu8vLVinqQeOB2rq2kjLQuD6/
qLW8qr+5fXXPwJqB0dHeoYH2no6mtu6u/tHVazZumoYeA7+Q4eMnzoDJBw4e
BZN37zkAWwaQgWi6GeTmrTv3HzwinUXcjE2YMGj811//5de//R0rmAxP/vGn
z29//AAak7MYnj15/vb1v//HP06eOCb39VNm+KoMz1RJ7TsaUxT/CY1JAVlA
WizAYRpCY6jyVxp/Wzf+Ixq7Mow7GaTJ0H0fQQKC3HAh+CldQfFK/xttfgtk
mGCuFEyzQtR4sRTf6hwN7QTSAsEmCLj9zqz420rFcjiY000iy+eGcC/1gGLQ
+3dRTPso0hlhDk9SpqRZqaydy0gyGbZMqFwlVKoRyRqV1QeMzXsNTCrFkmIe
HynjCxTKys2qaoBqBdmmIaCn19Uz7MpePKSKFZbjeW5qEG1yqxQKQWMEetwg
ldXw+fTQJRgygTn0mDtliR5F2sg1JJO9eFzpGDQekKh088RdjKibEQLFZGym
WG1CpLaGr7KGUZqW6S6oGREUqxnv1DA9Yu76P7rXnfWOGRPpr1MyOeQQtGTu
tmjmvF7D9KCL3x57jy36FofcfC7Io/e6uN9OTHmcV3K9oPpcTeuv5y/9x+cf
3315/+Zff7737vX7v/wKFL949Oblk9dvnr998ezlw/sPbt+6cePGtdt37l26
dvPEmfMHjhwHivGH3sLc0vSWuR0LO/ds33to9yEyKWvPN+FofHzXYdD44La9
++bI9jqS6R27N23bOTm7Y90MaWBbR7Z1gMOA8NzQFJR4hitQTPdOTHePk8CK
ORRDjCmNp+p6p2o6QeOpssaJ/JoRDsUQ49VpRWPJhUDxSEz2SGTGcFjqYHBS
X0B8n29sj08kaNzlEdzhFoh0egR2uAcsA9nFC2ly9kQandwaHF2RRkdXhbVr
g5WrwtIFAZYJmS0cEMrkKhMrCuRSfdMSPaMiPcM8LULjDE0tmhVDJnrMGfK3
QC4yNyu2+jMak4Ohv9Z+aacEZTJtmYDugrEpnnYI4Ez3R+Mm8OtjoOqtr+Jr
qAZnBlHxPKAKDhfKvfEMHsZj4bZGgWb6AeYGYTamSR6OucFe5TEhjamxnbmp
bdkJUOIsX+cYe9NIG8M4R7MMbwfAPMPPFY+VRgVVJ4TXJ0VBmOsTwxsSwxri
5dWRflVh3pDkptjgtsSwrtSIvswYCHBNqCf0OMfVMs/dGoYMGoPAcGbwuSLQ
lW6yBocpqNuj5Z2x4Z3xkV0JUV1Jcd2pCd0pSR3JCZ3pqa0pSc1JiW0ZaUDx
QHFhb1FhW27OcFVlf0VZR0lxGz4Wl8CNB+oUw80t3TX1PXUNvY2tA62dwx19
q7oHkOHewb7eoVUj4xNrptZNbpxavxmSDCvG1xhApp4MPh88dAxwpv1vZ86e
v3T56p279+mRpmAyBfLnv/z1l7/9y89//fX9p5+AYuTVux/gxkAx8vL1i0+f
Psxs3Ojj5GyhqfNfKxUrNP6uWPGtG9N903RLCA1pgeMqFaZcsYKe00T7jf+E
xp58hg5q82d4gZBerkRME8xNCkICePzljSGgMZ+3wlV6HhOIGs7wksSyZJGM
TAFi2HhuBZbllN5ct9vyEE6uehwjkUZxJ02H4ZcwTDj3e2JY0W+FYo7DFMVI
NndoaRYjghLnkVmaogJGWiFWrRYp10nVwOQ6qUqNWKmIEZSx4hKWzSc9EsJ6
qZJCTPbcNQolzUIpOIw0sRLQuJonwP06CRkcRAsUoDHtcKPboslbPABZLG6U
SOr55NhoWituFUm6lFQ6pEoN3BSLBm47Hu6Az8SNhbIeRtTHlwwLlVeLVNdI
NdZKNMZ4SutYtY1iTbLnTtdyu4bpDk2zvXrWZxz891r6rFU236hpu8PC64iL
fJ2qCWh81CNku5XLLls3oPhsYOj54LAjHl4vsnN/aWm/WlT7cPX6//Hx008/
vX37j1+e/vsvT798/ulv//rp3ZcPLz6+fvLm+aMXDx48uH//7tOH9149e3rr
NpnGdvn6LTD54qVrJ0+d27/30PbFXQvT25DF6cWlmaVdszuQ3VhnttPGCYri
A7O79k3vOMBtdqaj2KgVL3dNcFa8wuGZvjUzPQTFM51jtFxMrRjZ2ji0WTGw
obZ3qqpjqrxlXYliPK96NLtiNLNsNL10mcZx2RDjVRHpQ/KUgaDEfr+4Pp+o
Xu/wHq/Qbq9gcBjp8gxCOjz929x9W1y9kWYXD6TBxR1ROLsBy4227k027o3W
bkiDtbPCyomm1ty2xsym2tQaNK4wMiszMCnVNy7WN8rX1iNurKGVrqaRrqEJ
Q4Ye5+kbLNPY2IRI8teSBaVxsZXZf02JtTmS6u2Q5GEb52IZ42SOkJOYuDIy
bTnmtuZZ06R522f5O5dF+Wf6OUU7mASba/sZqYPJCC4CTDTxT/A8HUMEbgPO
ckvDIHO9UCtDGHKCm22yu32al1NBiE9VrHx5KFxUYH6QR4q7TTT+R2BjSJDu
bJ3s6ZDt7042iQR65gd5Fct9KiMCKiL8ykK9y+U+DbFBnakxfdnxQ/nJo4Vp
nUlhgC2ADPbCkCl+8RHODCBDkssDXIBo3OFKFsEKuW9LRHBrNGly60yMHsxM
Hc7NGMjO6ElPAZA7M9L6CvJGK8rGa6pWV1UNV5T3lZYMVJb3V1f1VJS3FhUj
XRVVffWKfkVTf0Mz3Bg0HmrvHersG+7qH+zu7+7s6+4ZGBwYGRmdGFk1Prxq
DFiem1/auWsf3PjY8dNnzl48e+4SvtUgM2h84ODhEydPrxxs+vjJMwD5xw+f
AOGPP3+BFS+Pd/v0E9z47sNHT169un739rMXz1++fP7D6zdLs7NuNrZaYinX
e8xy+a1M8Sc01mF4NMDySkMyCdm4RzZHG5OpQXwzhm/JTQ2yEwjo4dH/TGM+
OZyUT4bMezN8H4bnww0ICgA/uTd6Qd/QeHmoJjdCkxQcWHZlI14k10ERxfCj
GQGUOEUkS4QYMwKQOYzg/Z863OjhTbhPCfztkXlku8dXFH9H4zRGSM5mYpUy
GEEOGRevVCJQLuXLyvkSiDH0mA6NLwVCZSolgKdEWkkaj4WVDDlNqZ4vBIQh
xrUMT8EjhlzD8Ou5jXiAcB4nxrSngnRZCJenWFRwh3qAxrUANT0MWihqlUjb
pLJOZRUFnxQr6rjJbD0qau1CSTs3MLOd4XUw/H5GRF7bCdUmheqw4nWM8iaR
5k4dix3alnMqRrPKhjs0LY7aeE2pWYwpm2/VdZzRcTxg4z+tZb3XymOnhfNh
V7/9zp7HfAOW7BwPeHtdT0x4nJtzOTvnWkv3//vsh//88su//8e/vvv3X5/+
y5eP//ZvH37+68d3P/30+tOHt6Rv58WLFw8f3n907/bThw8ePiQ9xnS/843r
d65dvXXx/JVzJ8/v33Vg5/zOuU1z0+un5zfMbts0vw1f8/Uz2zct7N68uHvz
0s6NC9sn55YmZ3ZOzoHDixNbd6yZ3sXNnVgc3Uze1g0tWzFC39zN9hIgz3aN
z3WNUyXe3DQ03URovEXRt6G6Z7KyHSheW1SzJq96IrdiIrt8IrN0LLVodVI+
R+P0EULjpIGg+H7/GErjXm85aEw5jAtCZi8C5FY3v1Y3n69M9mpw8aSe3GTn
0WzrASATJtu4AMg0dRZ2FMjQ4xUaQ49B41xNnSw1TUJjNQ1gOVeH0LjoWxp/
A+QSyz+jcbKfc5KvE9Y4Tzu5nVGIjUGEk0mMsxkS5WiS6GGd4e+Q5m2b5G6Z
4mmd7mOXH+JWKPfICXRO9rCKd7GIdTILsdBx15Z46MigyqEWBsApEmFjEmZl
FGVnhmtS+nC0hGMnOFuGWxlEWBsmuVqnuNtmeDtm+jjRNcffFZ6Mm3GO5rEO
ZngAN5F0d7scH+cyuW8DVDlOXhDgXhjgVh0Z2JkRt7a6cLKqsD8rvjUulMwU
igrEWhHoXuLrXOrnguCiyNux2MepMsiD27LnXx3iVRfiXR/qw8WvLsy/MZKc
fNqVltCfndqTlYb05mQNFuQNFhf0F+aT/dFlpb1lJXDjloL8pvwCSuOe2rqu
6rre+sbB1s6Rrr7R7kHQuKe5o1XR3N3Z09vbPzQwPDS0anhw1fDwyOrV4xMT
azdv3jo9Pbu0fefhI8fOnb944eJlQBgoPnnqDHLq9FncvHL1Ov4whCQ/f0F6
LWjt4v2PH394/+Htu/d00Dd+imfuP3j0+u2bt29/+PLly64dOwUMg2irKatL
RBKG0RKLETUeoyeVgM/kICc+ayiSmMtUEBNWos/AjZejwx1ITc6k5gu0+XyK
awMeDzEk44N4JgxjyjDcdjzWScA681lKYzce6yEQefGF3l/jwxP6MQI/RujP
CHzJ0DYAWcitAjkrChOKw1jRPzWtcViOEImixZIQzm9j+UJSo+CL4MaJjBBr
FAjMCsJ5vDCGCSPP8CIFAtyMJtPpBREML5Jhonn8OFaYJJGmyZSLNHTSYMgM
k8JnM0SSVIEQF5msOI0RZPFFuXxYMVvAiCoESpUsKRorxMqVDBmnVsZNYCvj
8wHhMr6gkGGqROIqVlTNFzaKlRpYUj1uYWUNjKCRK1aQMW5iSY1IXC4Slgrx
O5lC7p+DxnDmBlZcR44CAX6BYu6OVIYA1PQFX7NMedLGrl+LdGgMauoOqmn3
SFS7xLImHm9ARXmDvtG4WGWEEW4QqKwHhxnVdYzStERvvUDjgInzkpblLj3b
7ZqWW9TNVquYjahZzBi67DT12Gvgctzca0nd/JCZy3EX/2NeASdC5SeiIg9F
hB2Pj7mYmXa0MP+XC1f++6cv//jl159//vnzr79+/PWvn7788v7Hn376+OXT
h58/fPhEGix//Pj2h3evX78Glu/defjg3uNHD54+vP/k/q0Ht6/duXH55vUL
108fOX1sz5H9i3vpwRyg8ebxDWv7x+YmtmxbM719zdzSmumF1VvnRjduG926
NL51cTWB8LaRLduGNiwMbpzrn5ztm5rpXbu5c2xL1/h098RMz5q57gmSrvFZ
6HHbqpmWoa1NA1sb+mcU/dP1PVtqezZXd2wsVUwWVoPD4xnFY+lFY6mFQPFo
fNZAePJAROJgaOJASFx/UExvQFSfX2SvbxjcmOixZwjS5RHc6R5E4kEKF7Rq
gbS5+rW4+ra6kLQ5+bY6+rQ4eDXbEzJDlVeYXG/pWGtqU2NijVQZWVYYmJfp
mRZq6yMFWnr5mrp5GqTUlq2uBSbnaOvmGxiWmJqVmFsUm5kjuCi1siq2MP/d
QJuRRD/nBNA4wDUl0C3Rxz7B2y7R2zbOwwocjnUxT3C3SPayjnMxjnLQj3c1
SfW2ygqwzw12yg1yyQ5wygt2LQh1hyqDyUCxu7bUS1cVQAaEw62Ng80MAk10
ou1MomyN6dnTYGykjVGoua7cQg9rmKU+yIwHcD/bz6Uo1LskzDfb2ynV1SbJ
yRKJtzeLszMFkEtCvKujgmpjQoqCPAFkrFWRgR0Z8d1ZCb0Z8W3x8qboILq5
ozzADRAGk8v8XXFR4GmPgMzgcFUw/JmMtij3dSn1JmMuqkN86sPJGSJ14YFN
cRENcRHNibEdaUk92ZlgcndWZltGWk9xUXdJUXtxEWjckJunyMlV5ObX5xc0
l5S3lld11Db0NrXBjUd6BscHRsaHV7c2tLQ2t7W3dnS0dXZ1dA/2DwHFGzZs
Gh9fs2bNuqn1G2fnFvbs3U8Pzjt67MTZcxdozl+4dPHSlctXrl29duP6jVsP
oMlPn9N2C4riZ89fwpzv33t89w451Im2vf36t7/funM7LSOdAZD5jKaqkqpU
JGYYdZFQWyqWMQxh7Fcam0qUEGOBWP/3UKwhIOvyhhF6bsgykAmNYch0f/TX
A/IgxgJ3vtCLL/LmLQc05oBM4kt8eJnGITwB3RJCBlZwKA7+GgrkcKGQlIIJ
Y7mNdQwbx7CgMbBMNtYJBBF8PjhM2EtO0CMoptOBwGEklkcGaSaBvWJZrpJK
hkCUzBOAw8AyLpB0oTidx+YKpQVCWT6pUQhLGHE5I61gRHTTHBm2xvVRVIvJ
QDZguZJck7EVNSJJs1SlVaoCIDcKJM08UQtf3CKUNos5ukqlVVJJhURcwgrA
ZFKy4Lbg1fHYBp4QpKUVZlLTEIkR/CeA62purFC/rn6rVBmm3SNT6xIpd/Al
pLtYXX2jhdlOB8fNmrprGekWvuo0T31WoDnN05wV6y2omk4rGW6VGe3Utdsg
1B0X6IyrWazTttuobbdk4IKbh4ydDxs6nnfyu+QdejMq8WxkzMHw8IMJsXuT
Ys+WFb2c3vT3l69//unLuzdks+ePXHM77WmnLe74UtGjG2nrO24+uf8UeXzv
yYObD25fuX3j4g2g+Ob561dPXz5z6NThnQcB5AOLe/dv27N7dgfEeHpk0+yq
TfOrNi+MbAGBl8ZmdozPIgurNs8Pb9o2tIlD8XqEo/EkpTFQjMxTIHM0nm8f
mW0dnmkanG0YmFX0ztT3bK3t2lLVtqGkfqqwel0OrLhkPL1gdWreWGLO6oTs
wcikofDEIXkCR+Oo3oCIPr/wFRpTIIPGK0D+7iMtLCOgMQdkbwpkUriwdaVA
Bo3rzGwpkKuNrSoNLcr1zYp1DJAiMJkDcq66NgUyaFygb1hsYlrKoZjSuMzy
D2lcamWJ+Frq+VnpR7pYpga4Zss9c8O9s0M8UnwdE7xswh2NIx0MY11MYxyN
ox2MQONkTwtIcqqXTYavPfS4NNKnNjGkIiYwL9g9yt4kwETTQ1vZW0/N30gr
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
MZ6GEtd1w4pJjaKybUNZ01RBDWg8lVcJGo+m5K5KyKI0XhWZPByRNByWOBga
PxAcDRr3+xM97vMJo/ldJn/nxu2uAZ1cOlz82p0hyaRk0erg0WLvDiYTQ7Z0
UFjYUyYvA1nPGCnVMwKQC7+pV+Rr6+Xp6kOPAeQiYxPQmOrxH9G4xNICUWTF
F0QFxHvZB9sa+Vloyx2ME73sUv2cMoJcIp1NQ6x0w2wNIuyNohyN4lzN4t3M
weF4FzPAGWuGr2NBqGdRmHd+iAfdwZcLNQ32SHa3l1saQowjbU1T3G0TXazg
xsAvpXG2nws0OMHZMs7RHCsCCIPGvvqq/obqgQbqYWa6iY4WWV6O4G2mpwM4
nORkGWykGW6uh/tgcmGgB5iMBzLc7dKcLNPwsKtNaYC7IiqoOU5OUw6XDvTA
zRJ/N6xIrod9sp1pso1JtosNaAwUVwR5c4dQBymi5Y3x0YrYyOrI8MpweXlE
WHVMVENSQlN6SndRYVdxYVtRYXN+XkMuSVNBUVNxSW9dQ299I9y4vbahpUrR
WtvY3dQOGvd19g72D60eGRtfPUFp3NPT193dOzg4DEken1i7Zu0kBfKGjZu3
bJ0BjWfnFrYtbocnHz5y7Oy5CxBjCuSVk9Bv3LyNFdfA8gMw+eHjW7fv0pN5
8fCte3cB6RcvXty+fbulQaGhRKZY6Kqo6iqrkENO+XwN8l6P1WaFAK8Ww9fm
QlH8uzRemW5BxlkwAkpjS77ARkDGBzkKRA58oSNP6CRgXVkRNz7ot3gwiMCT
EXgwPDDZjxSQyZy3YFaMgMYREjHYCwKDw7DiEKwcjcnwea5fgjsdjwGQaZ9b
PCsmOzu+Tmmj04Fwkx69tHIc3tf8RuCVYgXgDBrniKTZAjF14yKehLy/Y5XJ
yaQCURHDQ4oFggqJRKGp0aClWakkq5BJ8bFBTb1RVa2Uxy9leJBkALlZKIXx
NrDi5flCQiHceCXk7FGxZMzMYkjXoJ5hAWS6y6ORz+ICUQjI5Aoyr1giVTD8
DpG0T0m1nSdsJgMz+e0M2y9V6hKyvQx/gpVuEqqBxkDxXnWzJWXjzULtaanB
Tl2baz4x+03d9ho67dKy/zW59lNc+V5jt+1mjgvWDvu9PO+npr7MznmSmHop
KOx0SPS5zMJbPUNfTp357z+8/fLu7c8fP/3ly1///rd/Rd69+eH50xdYnz5+
9uDew7u37928fuvGtZtYb9+8AxTfv3Xv5vnrdy7evH/lDnL3ws2bZ65eO3np
6omL149fvHTozOndR4/R7XXze2hHMWi8b/32PZOcIY9smRlYT614c+cEsqWL
AHmme91szyQy1zs128tt9ACK+9ct9K5dofF08+DWhv4tXIPxpqr2DRWtUyUN
U0X1k/nV6/OrpnIq1mSUjCblDMdnjsZnURoTIHM0HgyJGQyMGgggQB7wi+j3
DUdWmPy7WF6uJ7sHdXPpcgOT/SmQ2xw9ETCZSLK1U6OVI2XyMpANTBEAuUTX
8Fs9Jm/3dAiQ8/R/M2RSsvhTGpfEheRH+udF+GXLvZP9HKPdLIOt9T0MVIKs
df0ttMDhZC/bJE+bWBfzGGezaCfjCFv9MGtduZVOuI1erJNZsodNuo8DQhvh
6C68vCCvJDc7iDESY2+KgMYIaJzmaY8kuVqnezlk+jjBkxHcwTO0mBxhoQ8a
I5GWBhDjdHc7gLdM7otr/CjKyhAXVJ6hx/l+rsn2ZqkO5pku1kW+LjVhfo0x
IZTGLfFh9ZGBYHIB6O3jXOznigtAO8fVNtfNLt/DATdL/T0qQnxqI4Jro0KB
4vq4yLqYqKroiMqoiIqoiKqYqOp4shcPbtxSkA8gtxQWIc2FxaAx3YvXUdvQ
VqNorqxvrKxrqWloqW9qAZ9bO2iNAunr6e/vHxwYGBoGjEdWj4yOja4eR4Dl
yakN0GOgGJmb30aBDEOmJQtIMi1Z0OD68pVryDXcvHbjwsXLly5fvX7jFh67
ePXKFVJpvvn06dOTx0/kZ2epSiQAso6SsrpIrM6ymixLSUtryECxFsNbQfG3
NOa4/VsPxlcgEz025/OtBKwtK7QTCKkhOwpYZ1a40mLBdVnQ8N1JeFzJgu/F
lSwCBaIgVhzIJztEggT8YD6PHooXyPKDOSbj43LnG3c6XjjRYwGBMDeo7et+
EMFvQOb/dkRpPBdyRCmpUUj+qUDBFS6QdB6bxRfls9J8voQWK6plGq06hvVq
GkWsIIdhchkGF+VKsiplpRKRMJ/H4GY+924OjAWQK4WiCj7bJJKSN3QsqTZU
8AXUjRE8U8znkbM/ePx2VXVyZB7DkM5kbq9HMytaCe0xbmT49QzTIZTAh3uF
sn6hUi9P3MHwe1hxN8sO8YUbpGqbReqbGNkOqcFRfbtJRmle2eiwqesVj7CT
9gHrRXp7DBzP2QU/9Uq5Yh26RWo4q2950Nv3ZnrK7Yzk6/FxVyOizsmjjoXH
Xa9u/tuR0//59sOXD5+ev37z/v2HL59/+fmnLwidof3XX34lfRTPXj5++AQQ
vnLp6uVzly6cu3jp7MXLZy/eOHsVBL516goIfOXIuYsHT9NcOnj6/L4Tp3Ye
BoqPzJLtdfQsUYjx3qklSuOFVZspisFkcJiieIXGQPFc37r5/klwmAY0nu+e
mOsgNIYYb1H0bK7p3EhRXNa8rqh+XUE1aAwxnswuH08rAo3hxqDx6riskagU
AuTwpGF5wnDwbzQe9I8EkL9jMvJHiO71DOnxCO7xWAYyJLnD2Rtpd+Ik2dYF
QKZMhiGTGrKROUKB/K0eEzfmWpHB5HwDwyKuuYIA+U8rFcHWhuEOZhmBrtXJ
4Y1ZcbWpkblyryhnc39zbS8jtUBL3Vg3K9gy1mhHM3iyn4l6gJlmsKWO3EY/
0sE42sk0ztUiwd0q1dshwc060d0mw885O9ANH+NdreJcLBNcraIdTEMsdGkX
XKSdMZ0Ih/sru0syfJ1oYM6prjZxdqZyU50AfTV4MggMH05zs83zc8UFfhRj
YwwgJztb4SLB3izW0gA0hveCxlSDQeCKYC+QuVruWxnijeuqUB8EQM52s60N
98c1nsHHIh/XYn/38mDfyrDAmkh5TXRYbXRkZVR4Wbi8JCy0NDy8LCqyLCa6
MjG+Jj1NkZ1FxDi/gNK4uaS8payytaqutboebgwa15VWVZVUNNY2NDU0t7W0
g8lIZ3tXb28/xHhiYu34+BrQeHjV6NDwyKqR1bSGDCBv3jK9dXoWTF5c2kEr
yWDy0WMnjp84BTLDls+dv0hD3vedPX/u3AXcP3HyNKANSl+6dv3CFdKxDDd+
cO/+8cNHinLytFTUKJA1JWINoVCVz4ckL7fAMXwN/OgPaUye+Scgf61XcHul
ySnSyNcmZE6Sv+afsczAkL14LFYw2Z8VIQF84fJBIeS4Uh65ELJ0Y7UvwwTw
+CHcLAtu1JsggmEjeaRvjRaToxg+bYGjQE5kJcScyfmkAiQOIs3ROF0opW/u
VqwYKM6XqeRJlHKF0ly+OI9Hmo2LWVmtqna7gVmDjn4BK8xgmCyGyUZ4vHwB
S1PIZ4HoPKBYwJYLRWWssEokpsfhcd1r5IUdOX2Jt5wyITmVqV4qa1FSaZTI
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
QuOzR7vW/ojGc+XNoPFUYd1Efs1kXuVEdvm4hsajKfljKfnjSQTIY/FZAPJo
TDoyEZuJjMdkjEWnI99jshbLWiZ/KDITIFMm94fGIlSP272DtECGHp908T7h
6H7SwQ2GrNVjCuR6zRQLOnWTxMKqxkrzIu/PujG9d4neTJrm7VQWHdSUldBa
mF4YEZjo4RhkbRpqZ5Hs41YUHVqdngBDrk+PzQryoEx21RWA5SArPdA4xdc+
2ccuzt082sUEa4qvLYJNbpB7QahXfognmA8UxzlbgLowcMgw4EwrHvRTeDK5
+8lm74VdiLEKsI2yNKCqjB+BX9C4KNAj38811cUaz0nVwkgn0swgzto01ckm
38etPIS8lSsN8kl2sMLDaAsjrIl2FgiepDnbZns5lwT7gMbVUcEVkSHFIf6F
Qf7FYUElYSEFIYHZgQFZAf7ZwcEFERFlcXHUjQHk4rjYwpjo4viE0sSk8pS0
6uyc5uKyxqLSuqKymsJSuDFoXF9WXVdRc6ChBWJMUbwH5NNEj7u7e3t7+4Hi
zq6evv7B/oEhrAODw7QDGUxeWl6lb/FoaQJwxo8wZAB5Z/fS7sXL9L3erRs3
kZs3b9My8u37D+4+egoOg8aPnn/09MWbl68/fv360zdvPvv4PTlD/fLl82++
/fLi7lZESKCMYXQF3lCSjOVybaH4u4rxXkQEQDbkJQJkUQSQTUTJmOMokLXz
hSwEHkB2FGUOvGjH8rakksyDyW6i5CGT0xn1lMmedNwQmXHBh+qoAhUyH4Hz
4hhvnvUWOOyxwerHcwE8HyKKISwfAjFmhVhJEUFuehKBZSSKEejsi1hWiuNk
CYIigZaXOVmyBG1WQpX/FI1Js7Eg19SHybk8fFQqU1bq6mtoLM9myAWmRZy8
QlCUg8kMX8vLKxmWjNYURCrAe6c85FIJw8CcK1jC4RKNQpPbogXxiEp9TKWm
bnxSrYuAxgfJ6DbmpEzo0VV3yGUjhgbrDo5z5hYDMtBY7GS4LpbH2s5yvTL5
hK7+Pe+AXXM7oPispL+tMFtjdHfV1p/4x/1jVes1B99RRhdu/FFE+q8LG5/5
J2xbuN31CX8YFv8gPuNWesGV/PLrTUd/ffX2//i3//fffv+//5e//6c//OM/
/e53v/vqq69ev3790YuXb1+/eXL/MfLo7sO7N+7cvX774e37z+89RiDGgDBk
+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
ZHA4RlJghS3T09a0jhEDRGtonKxQJSt04jlRM7yCy+T4HJ6cj9Z2uAHLuQwL
GhdwYoHmADX0uFSpWygpC0UVvTWvnJdX84p6Ud0kU9cy4lEdgx5rm2N6+qRG
wbFkiLFMqpL4CoGtkUmNOsp6uaxM04dMmiskWQPL1TMcmZnJS5rrP7iDvHiA
Y04oZAfI7SHMSUE4xXPtgnSaYYBfoBgc7pMremVyAmSOJ53GonpB0j+va7Gl
MD3L6V9WWd8wdt5UWQwy4rzKbFbHYl7PaknfbsvU7ZF75EOPyCehyffiMi+k
5Hw8OP7//OyX//iLX75+/OKz91988e7Ln/7o699+9cu/+9Vf/v1f/vavf/2z
X/zyi29+DhB/9u1PfvrTL776/P2n7569+uj+06e3Hjy+dvfW+UuXV89vTC+t
jsysDE+vD89sjM1fmFqGG4PA56dXz00s0WyOL22MLa4Nza0Ozq70TS/1TC50
jWNd7Z85Sy5UWjg/uHRheGVndO3i6DqyO7K2M7z6p2h8oW+a0nirZ/xC19hW
5/BW+9B2+5DGjTv2ufEejRcrDiyUNswVN8wU1mhpPJFOaIxMpxXtpzGyn8aA
8FxiHjKflI+HNFOxWQiF83hMBjxZ03pBgEwSlkgSHt8XHNcbGNXtH9HpG4Z0
+IR2eAa3efifcfVtc/Y54+QNPT5m706qx7YuoHGLjQPSZG0PGtdZ2oDGVaYW
5abmNTY21Xa2tZBhR4d6DY3rNDRudndDQhyNg+wNY71sylPCztQX9h2uOlSS
lhXu6Wul42ooC7AxzInyaypIOVSa2VyYWp+dkOBl72Uit1cyPmbKZF+H0vig
5tyE4+VZLXmJqf5OfhZqFz3WVs5gjXY1zw51zwhyxdeinc3DHIwjHU2jnMyC
rPTg0o5KJthan77XgyEHmKpI0djOOMHJPNHZIsJKP8RMHedgij2dKYQEm6oD
jdUBRiov/BNBLWAfbmkYYW6ERFuZJjpYp7k6JDvZhpsZeilFH7UsyFAHz1Oc
7bK9XPN8PXJ93HO83XK8XdJc7WLtLJFUN8fcAC9SNI4IqUmOB5BBY+A3Lyys
ICKiND6xKjWlNCG2LJF0uJUmxBfHJxTFxRcnJJUkJoPGlVm5lMY1+WWkraK4
qr6sGjSGGIPDTQ3NtOv4wIFDAPKRI8dOnjzd0dlNITwwOIwNyIwNfalHGy20
zRVnz20iAPK5jfNbF3YgxnQI516B4sYteDIeIuTJ7Tu0anH7zoN79x/Ty6k1
efzs2Ys3b968ePHi+fPnTx8/effq9dWLl/Izs8nBELlal5fBkxE9XmbIy9UM
UWJ6VEQbMumCjB7iPpSOGRpTTcwZzooVwGQaW5bA2YGTOQsKSLI9aU4mp0Uc
yEBO0Fh0ZRgXhvgwAhT7ymVBKhXIDA5TbaYNGGByAC8G7xkyF8hw2ESIskhJ
HsoRRIeLAkIuE+H4aJaP5jR3jpAj1WTccYpm7nEyw2SwQrFCp9rAJJuBDIsZ
DJvOMLlEkjWFYk27RZWkqJYpq0R5FSfV8GItJ9azYiMvq+f4I3r6rXq6daJQ
KwnVAgcOV4j8YROjLmfnw0aGZSwHRFeyfJNCUaE5stcsKurI1AumWZBalbrA
smZcG9PCsgd5/jDHH5WEEzL5MZ4/iV/OMOOGJpd9Ayb1DXs4YYCXRmTqfkE1
oTBY17NcEQwvyM135VaX9Rw2VFbTotG4zGhUYTwmNzpn7HjJ3P2akevTgKQr
aYWzKTmvBsf/+yc//tdvf/XPv/7LP/z177/57MtP33329uW7l8/JAfu37z56
//GrT794+9XXn//six9/+6MvfvLm43ePn7+9/+TTpx99/Oj54ys37124fH/7
CnJj7fzZ0enFnmGS3jEIMKh7dmRha3L1wtTa5vjyudFFrCv9c8t9s4s90zRL
vTN4sj6wsDm0ujWyfmH07PbYud2xczvYjKzCk7eHVuDJW4MLyM7g4u7QEtbt
gQW4MUnv9IXeie1uAuTtzrGdjuHNE70A8tqh9uWm4yuNx9dbTq3UH50pbZwt
qp0trAKHp/MrZnLLp3PKprNKpzJLpjMJkGfSCZBnUoumUwqR2eTCueT8H8xM
Yi4ynZCD7K9j7C8vkyJGeMpwWPJweNJQaNJQcPxAYGx/QEyff3SvX1SPd0SX
Z1iPZ1i3R3CbW8BpF5+TTj4nHD2PO5LONzp7s8XWcQ/I5nt6TOcI1dqS3uMm
J+dGZ5dmZ5cGJ2eaAFt9LwuVp5nCz0YvxtO6MD7wcGl6W2Nxa1lGVoSXn7Wu
i5GINSnAqTYr5kR17pGS9JK4wAgnU1d9XkNdLtLZLDfcqyolvDwxpCwhOCvE
PchGH88d1YydgvE1V0W5mBMgu1pgD5KDyRkBLometiAzOBxuY4g1xFIvxEIX
QAaHo+0Mgk1Vvvoi1igbQzpvM8bOJNxSP9oWfLaOd7QEh/0MFK5yBsgN0Fch
YDJQDCDH2VqEmujHWJvF2phHWUKw9fCdMFODBHsrYDnfzz3TwzHRyTbB0YbQ
2M8TNC6NDC0KCy6KDNWgOCQ7ODgnJKQgKgYQrsvMqEhOgCTnRITnRUUXJSRU
pKZXZWWXpKSXZ2TX5pGW46bSGqS5rLa5oq66rKqmqra+tgFABo3hxgcPHoYb
0/XosROnTreBydSQgWJ6UBorJJkOr9CK8dr6Odrthv35rW3a5Ebe3GkGIwO/
V65e1/Za3Lx1h3505+79u/ceYN372vWb9+8/vHPnHtZ7d+4/ffzs6YMnE8Pj
DlZ2SlZSszJLPRMTuZ6KEXVZuaGk1OH/mMYs8oHGzPdoTAZZsMJ+IGtUWebI
yx05mSMDIJMbnbBxYWSunOQtSpBhT4En1QmBD1Apw/X1g9Xq/TSm3RcUyGQo
HDlbLYQKsjBRogmXsBfCtDTmWA2NyX156XJ5miil8QKyN9uNE8HkDIbLZsU8
XpZD5tiz2QxXJCgqlTqlrFCvVDXp6FbzItBazfC1HF/LsAgAS9/fVXNsvVwC
kCHGZTxfqZA36OiUclwBwwDIFQyHP1snymoFqUGUE4wzQrMgPyRXH5Dkh0Q5
gHxQM9D4oCgcksjdTEcE8bggHGWYbrlyxtQCKO5jhSFeNiKqBkT1AKeGBq8p
La4aOd8wdr1n7XPVzG1GMh5mdafUZjO6Fkv6Ntcd/V/5x79MLtgsqro/PPH7
52/+71/+1b/+6q/+8y//6h9/8zd/8xe//vnXZGDml19++fb9u2fPnjx5+uD5
s0dvXjz96t3HX756/5OP3n3+/PUXz15/+fLdjx69eHrl1s31rTsbO492riLX
lzcuTC6sD00udI/MdY3OdGAdW+qbWhmYwUrBSyG80D2z2DO71Du3OrC4PrS8
MUxQTGmM7GgCGiPUkLeHl3ZGli+NrCAXh5d3hxZ3BmZJ+giQd3oIkHc7xnba
R0Hjc0e61g+2rTSfWm06gSzVts6WNVEaI/tpTKIBMmhM8oHGyFxqwXzKD2Q2
KQ/RMnl/bZkCmbzsi0wbjSBARkbB5JDEwaD4/oDYAf/Yfr+YHu/ILs9wDY1D
NTT209DY+7gmdPAmaNxs40DvCtFWj6strets7BrtCY2BYqwkLq4IzLYsOTQ9
0AWGDIS6GApxHtbEk2vyocqtxWnpIW7uhqKVnPG31MHXKpJCa9IikaIY/3hP
GwAW1NViuTDaD1/Aim9ChvGRtcRApPEbAqx0Q+2Nwh1NAGGocpKXXYyLRayT
eYKrVZS9iZ+xwsdAIhftmeuAwOGWegFG8kBjBX6EGye7Wmf5OGmGcJrG2Jkh
2ERYwZZ13SQW8VQIgQZqsBcEhg+DzKku9hnuThBjYBm2HGykCyxrPjKIszVL
cXXI9nHP8/fK8nZLdnOKdbRN8XBN8XZP9fVO9/fNDAzMDQ3Ni4gChPOiIvOi
wwtioksTE6rS0qsyMspT0goTk2pzC2rzCuvyS2oKSqrzSqsLyupLqpoq6xpr
GhrqGoFiBBuyb2xubj4AFCOtR44ByCdOnj4DJGsKF7S/Ano8opm3qa1X0FY3
BEyGJGubK25ouilIq5tGjxFsgOL9QMZKn+AjrCAz/dqlS1e2t3evXbm+vXHh
cNNBR2t7ieFkDK9kRESXVygYTs3xao6l0WFJ9FgGAY01QGaQ/UAGjSmQLTVA
tuEl0JjqMQkrIU4MiTMrc2bJxCFHzfs7T14g7Ra84CvJEM8P1zx5cwKNDy/6
kXGdZNJFCC+FSYoQQRbEiaGSFKOjEyqISATPUzeO5QR6W1OKuDd+E2uGKJGB
nORUNQMmFyjUTebWSJFMBVUuEBVw42ql+oipxVEzyzqFuoxhqli+hhU0WCYd
bjUsh0255uUdaFyrkGqVynKZVCGKxfiyKB00MGxSquskeb0kr2DYKoaDWpMb
nRihiZc18WIDy9czLGl+E6Vmjsw3bpUkcm8pp7knmmE7OPE0wwyJyhFRMSwo
Fw0tR3jdaZnRksJsQ89uXWW1pWu3IBhPMbqTjN6cwmLZyOGyS9DT6PRXyfkP
Cyp2Dx371eMn/9evfvMPX/70rz/78a8//8nPP/vJb7/95bdffvPLb//iF998
+9nHn7x8/PjZvTuPb954cOXK4yvXH+xcfXL55ps7jz5+8Az56Prdu5u7yO1z
23fP7SDXls5dmlsFkM8Ozyz3Ti50jc13ji10jSNk0zm53DODdbFrarFrZrln
brVv4ewgQfH50T0Ob4+sawMOI5fHz10aO3t5dBW5Or6OXBnDfmV3cO7iwNxu
PwHyfhqfP9l3trVzteU0stZ8cqn+6EL1ofmKFtB4rqia6HFB5WxeBWg8k12m
pfFsRgmlsRbIC+lFP5jZlHxkJjkPmU7KpcUNkn1M3nvTF5FKmazR4wQAeSAw
Dkzu840GkLu9wjs9QtvdA0HjE04+xz/QmA7ePGjv/J0eWxIgA8U1VjbkXJ6d
Q6Oj0x6KgWVXNwRQLY0PAl3rM2MKonyDbQ2cdBhnXTbV3+lgQfJQa01XYwkA
C4pChvGRt6ki1t0KeoxPj5Vl1qZHgd54bsQwNjIG6gsHxu8E5OsyovMivAOt
9cBkU4YQG0DGl2HF8e7WfmYqf3M1OJzm7YBE2hn7Gcm99UV/Q1mImRoQhhjT
Tai5boiZTpyDGSQ5zYOUfFPc7ADkEDM9Hz0ZpBfq66er8NWRI9rqBNZ4O0vA
GUl0sAaT8RGIHW6mH2VpFGtnCT2GG2d4umT5emb5ecU42EY52sa4OKX4eEGM
CyMjc8MjM0OCcyMjciJDs8PDcqIiCuPjS1JSKjOzqnNzKzJzqvIKagtLawpL
K/NKKnKLkcqCUkpjBHpcV1OP1NcTINPqMWh87PjJk6fOnD7T3qY5DNLbNwAU
04EVtGgMGs/MztPeYy2Had0YgSHTVjdtEzKlMd1omaylMR1zQY9XX7ly7Rx+
4bnzW5sXLm9fOtR4wM3BBTQGkxGosoxh/qdojJDmig9ABoq1NLZnCZCdeLmz
oHDlFS6cHDR2Ysj1084aFPvJFT6SzI1hXTSv87Q01gZA9mUFf07wZzgy7EKQ
oMp+LB8kirG6usGCEMILYQKhcYzmRlQ6r15zXx5Lp9MnkMmcjPZykHy5qsXG
vtXOqVihA0MulJSaW/P4CoUSTC7jCGArQWNehCHX8QJQ3CxXYEMmubFMJcfU
yKRqubyYJ7Ms4MaQ6sNGxqAx3LhGo9YVGrsGimHILZISQG4WJKD4gESmKNOr
Sw+L4iFBOMyScZonyRV4fAfDjyh0h0T5mKheM7QdZ3UnRYMpyXBeaT4rM1mW
m08yOlOM+ryO/araZtPK41VqwUf5ZReTMy4Ul71ZWf3Ljz/+9ftPXl678eza
zVf3H5PzdB+9/eT1+8/e/eirTz775kdf/PTjz3788vW7+49eXL15a2Nnd2Ft
Z371xtkL9y5cBpnvb12CGN87fxErrPjy/Bo4vDUxj/X8+NzW+PLGyMLawOxy
79Ri9wRhcufkUvc0DUXx+sDSuaEV0HhzZG177Byl8dbQKkJpfHF0XUvjK2Nr
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
F3DFP249OvFCednTyeE3u+d256eXJsY2FxduXbz0+Nbd5w8fv3j07N4NYPnp
8zuP3j588dVHnwDF728+/PTmo2+evHl/+xF8+NbZC9dWNi5ML64OTcx3DU6e
7l4dGF8fmgSHtycWNoanzw5OAsVY6Z3Oy90T8+0joPFyN57MIJTDG0NLm8PL
m0OrFMXA8odaMS1T7FWMEdB4d5TUijVAXgGQIcaXRxZB44uDMxf7pkiZonNs
q31k68zA1qn+c0e6zh5qB4ohxqsNxxaqD4HG8xUtoPFCSS0FspbGJNllCGhM
kv4dkP8UjbWSrMXyvyNzcj6tKhNP1vRdUCCPR6QCyGMfJFlTsiAv9bp9wjo8
g894Bp32CKShc96OungAyFpDbrZzbASEbe32mGxnp6XxAQ93xF2H89IXkWAL
XdoMDDCm+zjWJoVXJ4Qme9h66gmuKibQTA1sQp67GssOFaZlhXj6mutYS6Qs
7KIn+Jip8aQ8MawmLbokLjjR28HdUGYlEov2MJKH2Bkn+TgWRPnXpsdUp0Yl
eNg5KhlLjolwMKuIDamMC01wtfE2kPsbqeKczNO9HegQTuxDLHRJJdnCIMBY
HWii42eo9NFXeqglTx1ZmKVxsptDqocTDDnM3AiiG2RMjNffQI1NpJWps8jg
R8gzBDjF1SHB0QYbfLko0CvH2yXZxR572lkRbWcVYWMRZWed4u1eHB1Zm5pc
m5paHB2d7Osf6eqSHhyUGx1ekppUnpFakpJSkJSYn5iYl5SUl5RSlJFZXVDS
Ul13uL6loaquJK8oKyWjrrK2pqoWHAaQEWLIdQ0Q4yNHjsGQD7cepaVj0Lit
vZOeBKFnQOj7O3og+vzWNrBJJwhRPpPeNs3UIK30UhpjhSTv7F7Chj7H12DO
YDB+ydnzW0tr60tnz65ubq5sbCyury+srM4tkWII/u16evpoF3Tb6Xb8Zw7w
C1TKFaCxjGVp9jN579z0v2MyiYUomXK8McNitRJlNjIF9Njyw0s9+kYPTLZn
JXvNGz1XQfRVq7yVCjdRcJdED5nkLZcH6+tTOAPIgLMbwyKuGmd2YxhfSRag
UJI6MxlGxNEGDH+OI3rM8vSkXhynOSUtyKIZJpxhIhgmjufTVKosHd1UuSJR
c8dTMiekClKWpMiWKelAzgyOFJbTeC6dYXN4gYymF4Qilsxwq+Al0BWeXMFw
9TJFi1q3TpK36Ok36RpUypXlkryAAY3Zcl4iA99EeTHDljBcBSOUkSlwTCUr
1otKeHKzXEUqybzULFcc1tE9aWh02tD4uFrniIzcc3pckHcq1KcZoYtX9PCK
EYX+hJz0TkzITc9auD0PT9228Z4WzFaUtguS9ZKe06Zz8E5M+kZ+0YOB7q/u
Xn59++Kl1aXzS4tn5+aXp6ZXpucunN14dOfB+4/evnlCxv68e/Ty86dvPn3w
8v3Nx5/fef6zZx+DxtDjF5dvPdm5dmNl88Lkwmrf2MyZ3pXe0YXOweXOIWSx
fQDrWs/oStfwUgfW8eXOsYW24cX2kfXeKc2lz7Nne2ewoc1slLrYUBnWEphm
Z2QZuTK2RorG2IyuwIppQOOLA3NUjLe7x7fahzbPDGye6ts80bt2+My5w23n
Dp5ZaTy+VHt4seYQEePyxoXSuoWS6vniqrmiyvmCirn88rm8stnc0tnsEmQ+
q2Qus3g+o3guvQiZTSv8UzReyS5DtGSmTNbaslaSSUlZU7gAk0kLXFS6toy8
91IvOK4vKJZ2vrV7h7R5BdPp9CfcfZFjrp7/Dsj2Tk129g129ntAtiN6vJ/G
KZ52SIStUZC5Toilnq+R3NtAApALw7wbUqPA5JxAt2gHU0DbWcHAk/PDfYHc
1uKMlrzkvAjfIBtDBxUxYayRzhZ4At7iC4AzPvI0VljwpJ6MT/0sdHPDfQ4W
pDZnJ+KXuOmJkGQ7gfExVETZmwHI6V5O+UFeQWbqWEez3EC3bH+XSFsjf2MF
IOwJMVYLYHK4lUmQqb67SkRAZsRbRw78xjtYp7k7xdha+OmrfHQVIaYGeILg
Ry+1DM+BXyQ/wFvbUwEaA9Fk42gbZWcV62gX7WQX7+4KPa5OTm7IyChPTM6N
jEj09UkJ8suMCs+LjylISACNCwiKk4rTM/NT0/KS04uzcquLymvLq4kYF5fX
lFfDisFhGDICyjU0NJEahabPjfZUtAOB3b09vf29fQO0bjw2Pqk9AEKrx7Ro
rJ2oCeRiA+piA++llQqKX/xIxwrRgNv4EQAHxtc3zyOzy8sLa2t7NF5bm1lY
HJ2cAv9PnDyN4D9VYWFxZWV1cXGpu7unxP1HaUyBbC4RGhsxzH4aWzC8tuGN
SDKzF9DYlmGAYi+F3JljXXgOceU4T0n6Ho1pI5yLZkqnn0oVpm8AaLtqRNpL
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
W1z3TI5LvQ2SfKY1w5OPR7TI0eDogXqYAHkHktzTt9nbs9bbudLdXuxoWeho
vkuhlKE6aX+tGEyu5dHoqyrNE+6rFhq7amfdEyfzk1vpUFDTSxeskDGbBLQG
15eY3CxggK5h7WBMP3I3CkFkeLiuHCYMQwaTJ80acFtVIYFCKyj6Ql1LbcZh
3JoMx3UjUGLocXWJup0Clq6hKqZRZ2wTSwF72qo1tdV3ithNbKqeQfVKhWCv
rbPV2NLQJxM3MiHJnOHKMlNLA8DbJ+V3izjALxmRIOmXC9t5DJVMgBNI8Gxo
sNvT1ayvrxqvKkNraamfqK9Wl0ltnW2mjhZLd6d7oD8wOuobHrb3D9h6e23d
PfaebmcfLcz23n5zDyg94BoenbS6coHIymR6ZTo7H5tNBxMzvui0P5YIxaYn
Z0j1NogxmLywUFxb2wAPNze3gURAGI6KkM7u3gGZYvFtuWOwlEw2JvONSeGg
u+1KkW+nseFZMh2OnkhcAjjZdA+vhpc9ODja2tohhTLwlWSzc6BxMjnl9wdd
bi99587u1OmNoDHcuE+l7urqaWhoqqqoLqVSLpUJuTwukwUac0v1hX5iyGSl
nhz/uAzGXXGh/4TGzSwOQpff/BIydnFX/I2g+G53JxrFbH4Ph0dQ3Mnm0DRm
Mpq+LBvpoigVPeGNTVbqqb/stXe3AR9s2SAUOeRlExzeCEVNlEolj1EUqWBv
ZrDJ7k6gMb3nKZNHtp920/WF2G6K6WVxEBeT5ePyAqXayPBhqG9aLJsVSoBl
EBhHJrmCOIsbL+0nEqJ3fWKB20kcZPITTH6M4kYpTrIUGHKWI5rjCOfZwkWG
YJ0nO5JW7AsUm5RgmxKesMqfVXc9rO/erWg66lY/DwTfzuWeFubO0jPn87nn
+7sfLs7en5+/OTp+sXf4/ujsb959+tXN7ceTs+fbW/cXFx5vrX26PP1wfvzx
4uTDxcmnexfv712+PD59uLv/cOfw6cE5lPjp9smj9YOrxc2j9OLOZG5vOg8s
A8WH04WjqcLJzAKATJh8P79+Xdi4Xdx+srIPIL/YOEUIk9/v35DQWD54+Onw
EQmATFS5ZMt0fnH5AgGK6cLy50/pXDz+LMZkxHiPHqMAjembd6v771d2Pyzt
vCmsv86vQYmRd9ll0PjlzPzLyf8dGv8uimkH/gMc/pjI0ol9BfL7Lzf16DFk
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
8kVKvMiQLPPKFjnyVXlNWiLf7O480088ivifpROPM5Pf763+1bPr3zy8+uOr
0988vP6Tm8tn6yvX83P35/NHqenNZPSyWLi/vPBif/vT5enL3a3H6yu3K8Xb
paUna2sPFpYOJ2e2I8nDydTpbO54Kns2m0d7NJk7mswcJDLb4cnN4ORWKLkf
T+/HZw+TWfqcqfzFbP5ydgFMpmmc23hQ2L6d30EeLe49WTp4tnL0dPkQ7fPV
45frp683z99uX77bufdu7+r94TXy4ejmw9H9T0cPvju++e6Y3g8aSvw9+kfX
Hw+uPu5evt8+f7t5+mbj6NXK/puV3XerpSzvwIpfF9ZfzS0/nc4/m84/n6J9
mCyFRl7GZunEZ0hexb7meTB5lxeBxF1eBZIIsPwmNPUuMvM+OvshlkI+xtP/
echpOB/Bhbgc+Tz6EUi+9Cde+xJoH7vDt+4AcuP0XTvc9+2uK5vz2uq8Z7Jd
GE1nesOpTn8yMXGs1R6Oj++Pju4OD24M9m/0962oepb7uos9nfOdLfn2JjJu
PFzB6xFTagXL1lU5ZVQtBrRp15B3uHmsWTbSrOgs58CQlVBZDlXNZdaL2CNN
StdgW8I0NG0bQ0LavqE6aXlpjjGwXM+laxqPNip8o104ZzHqMva1tCoElfhp
Apm5VE+lzDnUGzdrV5KhtMfqGujpKROTyztlAn1rHWicMY/OGoZMzRVdInog
op5BdYqYuqbqmGZwMeDMe6zuwd4+pbSWRZNcpRCCvdb2Rk2tEpgFhHslvMFy
ibO7FQcB5HYeA52USQsZHigTq8vF0GljS8NQhWKgXGZua/IN9fuH1dNmvUPV
Xbph1wAU23q7XUNqq6oHRwDnpFGfcdqjBn1Qq/GNj5n7er0ajWd83DI4aB8Z
idrtkx5P0Gx2Tuh9Vkd2On20c3B5fL65spGanE3GJyGl09Ozy8ursGIwGDSe
X1re2Nk9v6LJCUmGFZMZFOAqQoAMzAK2f/f3//1f/vV//I//+e9oQeB//pd/
+9d/+59ocfwv/+qvwWqcRiZUwKtB4+ubWygxXnZza2d+oZjJFrK5+VR6DhwO
heMeb9Bqc03oTGPjOtBYO2EcHZvo6VU3t3QgnV20IdPjxlU1UqmczxeKxdKK
8spKZZVUIEFEXCGPyQWTET6TK+byxWymhMUgkZbybT1kAmR626YSkOmiFkxG
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
H5q6Ck4i18EkHV+cjjeC3LjD167QTSl/iMZ3KH4RmvwWv6SP3KH4JyMSP8nP
UvN3NL4DMkIYTpj8LZB/l8YEyI+8PugxaHzf7rjvsH+jxxPQ433N6B2NNwb7
YMUAMkLfoWbTK1ubJZSpuw6MXY45N6Z8vtEubWuFukowVCserBGAxoAnUseh
OuWshGloJxXCmVG92txTD09uEdFiXF2qBVTFoM+ZaKvEcWt/63Y6updLeEZ7
epUC2reZ9IvUlCq5oW0XMw0t1bPm8Yxtwtxe18qjGln0ApB2AVPXVDljGlsJ
ORe8Fk9/u7occkLPrEDbKWKCzBONFe7edldPG1kEfbctCNx4NehGUiYtxLiD
z8TxIaUUuLa1NSKOjtaxyvLhCoWto8Xf35fUjAWH1INKxWh1lau3xz806O5X
mTvarV2dgHB0QmPr7R5vrNd1tHtGhpNWS8xktA0OIo7R0YTDkYtGEy4XgOzW
G2Nuf8TpB4rnptLAMtz4brO8u12ZwOTd3f3tnb11dPYOwGQyLkGkF5IM44UV
Q4PBXlLrmCgxGZcgJYbIDArYNV4HHF5aXoUYoyVAjkTj0ViC1uNgGLFYbOPj
Wq1Wp9FMqNWDfX39gHBXVw/0GG1ra3ttbb1CUS4Wi8vkCuAXqSxTwIrRAd9A
v6aamgqZrEwglPP4xI1BPEJjPl/I4wkYDBaDYrIYbC6bR8Jn8YBlYsscig04
A9EMimIwGIAt/cGg/8dhsfGB40yglcOlP9gcfKDFQ9j45zLLJQIj6Ag4bJq9
XDY6MHIWk2IyKHT4PI5UKJIIhFK+UCYQIQqRpEwsLZfIZFwBUiYQV0kVlRK5
UiRFW19eWSkpq1VUNihr6ipqqssqq8oq6yprG+ubujq6O9o6WxtaasqrpHwx
3koQKYtXcmZKwWDKmcxyFpssdanj8WtYnAYOp1so7hNJ+3iifq5ogCseYHLG
OKxhBhWoqZxpaykOqv0V5W6Z9J7X/duz4+L4sLO6PNrbthV03MsmL+cm3++t
/u2z658fbPzyaOv+THTVql80aaaHVBse23V65seD3Y97O5epmd1IGDmbmX62
svx0eekqmzmZmtwOBRftjmWXe9MXWHG65832os21YnMvWZzw4fyEFUFnTmMs
aEzzWvPChKWoty0Z7MtGx4rJiayaXWsW97rVs2Hzbtp9Ww4/VHnPG9/3JQ78
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
bdcpPWYdaBZ8SwE9To2Dfh0quUenNktFYGAIvTzCIhwAloYDYBOcCa7jL0wL
FmfAbKA+ztx00KDpl7IRm1FIJqAhGRCQ8HalAkqIwRChUdPCj7vUCqOIjx/G
abA0YQzDnJuJ2Mxxp03OoMJfYLggBmZhAqMWcSMeO5RwyaDMTxNnJ/DTY1DS
FmfpOCx1YYaBn+NTkG+kjGPERHxAr0457WYhV4BbYM5MEEcwUK/HoyDkfj67
Xs43k/ElrRLyM2kM0bKBz3DKBDYx1yJkQ0hezSWDWoUYh5URFwSzk4CVy1zN
xO5udlezIQjD+yuZbnIJcgV5OMR3rVX8/uHNs16l4DasBO1OMePGYOXPn1/+
y3/+s+cnu1v5hJNHh2zQ8NjLRu3A74GUux0O3K1VTvOZF1trv7u6c7/bvF0r
JaXculVb0Eg2gq7b1QIY+LKxfD2fXFvyPFvtfTzYhWxcUKsSYtGKwVDR6dY9
vp7dXTdYIBIX5OqMWA7WrSiRQQkEmQYoS9UliQpYlqjK4i8GLgmkqH6BIldc
ZAtLHFGZK17mSao8aU0grwsVdaG8LVa2xVDKWyLZL0EbUToSBUpXrOhLVYMh
qzI1sCbXAOsg55/ZAEUrdZtgZpV+S23YVetR9jSGfa0R5UBnAg71X2wM8fgX
oxaeGw4fauMv48ZLsctAAn0o72E8/zhZfJpZfg42Hgbjt8udd5Xu+2rvY23w
qb76TXP929bGd+3N7ztbKD90t3/s7QA/9XeB/66T/zAeDz42++/r3bcr7TfV
1s82rr0oV18uVyAePy0Un+QLTwt5EDIyWJFOPc6kH6aS9xNxEPLQyeFhPF66
GwkBjYR3UIjc3mytFaImDl68OCqaQ2zMnUIewQB/8maQxYJE8xgje9EhJnhk
+JJX1k/bt0uhypLRwiHJFqfR5zWEc5O8mRHG8GYfbQLjkJGudXNHrfL2cj5u
1kkIWDr8Os+MKUkLksUp/uwo8uFTGCVxxiViQFcu79CVHPpuxOUV0cG0wmlk
LEI6N8IdR0Iy1J08spmxmNCJ767Wjqtpj5Bmos3riVhAPIWRzY6CgenItLfJ
3Wz00/nhViqknJ9gD+fCwQFuLrUXcn++efzD1flpo+gW0OHfCIndyCCG1ZKE
SXWwkj+slZZ9jqBO7lEIoaNqE3LkFIJTJlov5a72t+/ubDdi0bDJYBULrVKp
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
7QOT9xZmR3tjTpUcUOzWKCEGIUfJojoVwphVN9vf82Bz+dXJ3sni9EwqNhbz
6LhkNRtnFzMCCp6ZRpAh2kxkQkwlGw178n3hrdnco9OdZ+dHV4fb99aXDubz
Ab0cGC4mIlQMHOx84Wwjk9DvMh7Ojl2sztxbmjyeH4eZg5nRlNOgJKGVOISW
gDZScBY6EcjMbavXkjC9BuXqYGInl9mdHAbB/vzezheXBw+2F5eGE31WlUfC
UhC6AFCc9gZuRyOjuYZUWybBdNh59MmI997s+MXiBOTBYv58Jps2S7MOVcog
stPRgpZKbn2pvLPeQOi0Ubt7NMJ80LY33v9if+XXLy5/+/rhi6OV3fHEiEfr
5JHl3Z2spjpydQWurEBmWt1tv5g6EdDPxqxQ6R9PpB8uTAH5t4d7M3aVh0e2
klEaRJOstcbY3e7lkoYdmlGvYTxsnel1b2ZiW+lYRi+TdTaAx6qpSNj+sE2z
lYpczY59c7j17b29J9sLSZdOSkZBy+uUcoY8lvV07+7IwDeXB798dLqXG9TT
8ITacm5Xi4lFCyqla0Opl/ubr4+29vKZ+8uTX1/srg/HVJQuOaXLLqUPB82g
BPuT6Sfbc1cb04sDIZ+M5ZEwsi49SPJKKrTaH54M2cGT3QJqRMmDJVtDUFMo
gMagzWEFt4hiyJjHCEDu00vSFuV02BFT8ADFwGQtvhP02MOjgBiD4QtbCrEQ
sTYy3kUn+zkMdWcHs7xM14mSN7YCjYtMBt4WmQzTa/PvkMbX5t8yrvLHAd19
z9gfn+tpLLpT8/dI1T+axu/Zew2Ni/0tPFwrp7vRKWcuDkcOZtMbo7GJiClu
4HnFJI+I7BAW4hTTXBImEAkiJXYJultZXY0AZBEOwe5qZbQ3ibBI4CqQ2SXj
Z4OOwm3LAqaRsHVuIAhyMha197v0IZ3YqxRAoFRXUruLQ4qJcSgNnSQnYeHf
bUJO0mHcnhy63Jh5drgKU5if6Y/0OnRQ+EtoWIiSRVaxKWIKVs4gurTyPp9j
JTcCpAUmr46PDoYDCbcDCKzhsswSIXivjE7R8tghsyGXiC+ODC2PZR8d7l0d
7B4tL0wNJGN2C6ymF7BtcpGBz1AxSSY+M+k0A5MXB5Pb+ezDnZWzzblM0GLm
U2w8SlgmCEn5NiZV0Y2E1kTHpXr08tFEaGd+8mJr9dXp4a9fPn5zdgDMdCv5
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
wp8yfw==
       "], {{0, 474.}, {474., 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", Interleaving -> True, 
       MetaInformation -> <|"Exif" -> <|"ExifTag" -> 26|>|>],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{474., 474.},
     PlotRange->{{0, 474.}, {0, 474.}}]}], ",", 
   RowBox[{"\<\"orange\"\>", "\[Rule]", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
bu0w4FQDEqdG7FAL7WquXd1vU/UAVmV/il5MN0LVaVf3pujHcBlU/P0WPw9p
8StywULgW9J5RwxMIBJO9zDR1EmVh1utVJxUNz6pUkH6v1KMEdDRvW88zcaS
hEcU9/Bjbk7M0xNyNlOWSrMqc/Xa6THRPf0dd7XW39Fc/7HW5n/n9X9jevy0
cjXPZmig7L1Bt/iIjUVhaiDsFR9vY+8Q0u9xHKti4JCKSRhGHFQxSBVUDICT
j0NykP2bjrXxdmg6Va84IGSAbB8C7J3+Boj5E5QYiHtFca9wH0rAbNASvFsZ
iXvH4t6JuHcK4ZlJeGcZqOkUk8AhG4ccElAxgCvGgxG7OGwTgY2Rio08v4ED
HkbFYV0H/ISxio/1cIVDUWaXlzrlpW552RGO1iL2OcnG9tVswCHLwlxNCfmK
R3bZLc1wQhhevsCq2LkCfs44wkVs6fP25acdsnNu9QWn+mmT/HGd9DEQMthY
sfCQauEx4/JTNtbGiny3rNi+UmS8nq2ZvSybOnd9+PQo7z5ux1fbaj9dV/7x
8sLbS4tur636eEvzpzo7Pt/dcbeY951R8f1zY4+tzJ1VLV7SSzOtylyHpsCj
LvSoUfR1K3O9shy39Kpr9QpClklAOV+RiwoXuE7u05aDjVE8BiFr61gbg4QB
vJ3ysLERoHFI9hlbfMY22tRJm7qQck39+zY2pzwMmLtRvVffjlKxnlT4WRtX
sTaGb5MV8ok2hv8AGoy6GXBqWhDqNhCyU9MNOsX0ERwaDqk8EAOnWuQ9h7oX
cKqA7lSLgIy9L2QUpLGQdcTDIqRiJFKsYnUXYFH0pOhCKDsw7XZNF6b7oJPh
gRybqi+NHgJ6RUM/mAccAhmYTcIAbLD6JUfW7MH1SWMn/tC9eGQcQopxAhyb
b/omNqmxdffQmksCbdIjSXoH1j2CuKs36uwIWOo9+lKT7Ory1CNDnG/0tNzZ
3frJ9uZ/62n/vERw3+LMeb2s3GPqDONkS0oNqb9XHKFFAFvBOATeQ4mPAk91
LMdmY5TtWZ36RzYCo8BmcAxI+oeOY/Ag+zelP3YrCDae3A6BjafY3j1SviCl
jGRggozcOMIMfgZ4J8MAPO26T0xYo0VrvoE0BGQjRonYqsV+QvZMMlreZ4IQ
Aetiws4hIMRUJ0Qx91DUJYk6BsP2gaAV1SgCRq7f0OfXdwZ0rX5tm0/TTKub
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
aig5xWn5q9mBf1HPfNEp+0HY+PiGPWPLkbXrLdl2lUE8XrMUxIy5ET0hP6TJ
wxSENEUIdQkQ1JSG4GBcUxpQl/hVxX5laVBZEVJVhtVVQWUVtHFNTUJXDcS1
FTFNeVRT6pMXeGSZqqnH5oTfGu75HKfhY93Vtwua/m2W+w2F5Ef22ccDS+c2
FVdeNOa9Ycl73ZL1C3f+z1zZb9iuvGq+9IrhAvC64eJrpssv6S68qLv0vPby
84as5415z5kKnzEW7RmKdnUlO/ryXUPFnrESgA24uK0rY9nSlm5qSjbUxUlV
UUJdsqavikGuNtYmTHVxSz3qMLW0ADFLa9zSnrB2JOzdQMzSHTF1ho0dafVk
BtJvm+rvY7v8mPHMaBKQrgmts6prRWvEpQyMVu/EkADsM3ej0z+Z0SlI0k5H
QuAAXn0fpecAtIEL+Iw8n1EALdzkM/X7zZygiYOkDQ/Xd1E69ty4TV50yoN6
cg4aSlnnldUAlLyWVtT5lPWAX9UAwMWjwP3d+wZGp1v16NsAr6E9YO0FTrLx
rdaBwcNExcTGbEXiD2jjfRUftHFM+y42XguZkjFrMmZZi2oSUVkoOGUyts4v
XO7lfLOy9mOQjYtK/6G+8d/7OffMzDxl0pbT1uaou3vTx0WLlaEZZ10EyMAM
yMYMUXcvqQzjWgSycTLQh6vBTEGY5F6wMREycKyKf6eNt3ycdBujQcK46pvq
uRsFG28Fh7CNR27Jxls0OvxHNsZlAXApMSqYlvj2cIvoQRJ296I7e/rQA0lV
AbfbFAckvENzUbj18ZB+A0jCzwQFzwYHgOdCIuD5sPgQz0UQzyeGEPERzNjz
8YnnY5PAi4lphrUpzARm7LnECAD3ZP1MeHlt5JX1kVcRQ8BryeHXkhJokXK3
xt/YmnwV2Xjy5eTEa8np17Zmf35j/s29mbd2pt7cm3xzZ/iFdf62ry3sKDVI
H50d+UJX49+X5v4RqDjzaWTjyrxT3fV/PtL3P6Vjn7Iu3xvQnV53XNzz5tzw
FqJs7CnddBat2/Lj5hwQctSQEzXkQULetzFWcUhdCqDKrbYMDRJWlQARVXlM
VRFXVxLW1FXr2sqkrmpDX7VpqN6CjKotDiuzLXOnl8X3TPR8ilf/j71V/yBo
/JfRzruW+F8zjv7QN/fYpuzcy8arP3fmvu3O+6U3/z/c2b9wXPmZ5dJb5nM/
M537uRHxU/3ZtwznXtefAzm/bsp83ZL9qjnnJVP+i6aSF01lL1sqXrFWArAB
F4EXjKXPG0qe0xc/qysCntEWAnu64i2cqDeMTGDeNNdtmhs2LM1Jc1PS2pq0
tK+BkM2dcVNHzNgJ4HEXLWz7u2gjHg7o2kG/JAajefQm5iQjSJ4QbvHJ+MCo
KXgMJj4LVjGPNvABn3HAbxL6TSLcolsDZgEQMvPJ6cBQWtZ2skJGZwQjg5PB
ySgn1xLTIhurkYrRpFFlPa2qP9SipZiPUzEQsvcDB22MeO+133SIhw8F49+z
jY/38PE23oqogY2oNp1kVL8W1q9HzZCN12P6zYRmPbZMewf1+npwb0fnFwtL
bssr/Pvi4tuqq+7g8+5ZXbzg1JeFbI3r3o64uy1ia4k4WmOuzri7C8wMQBLe
1zKGjJRYC/QCoGIWMkBif5gE7psDkHsD7Tt+wr6Ed31dhB26c5fq3PF2AFue
TlSmoPpRgcLP2/ELdwMDe8FBSIxkQjRZS3M3PL4TQkt0krXo3zto6SFwJsXd
pfg7Xs6Ol7ft6d/2cLfcfbikwDnaojt4+6Ddofrh4i7NgYfv+bjoSWgOysB+
FIOJgaF9PjTwfEjwQlj0Qlj4YkT8UnTwxRjilbXhV7AzD/HK5vjLiEnM9Msb
sy9vzAGvbC68snkNM4fYmiGg+5C74Y2XNiZAsC9vjL2+M/X6ziTJwG9sjyE2
RyEVv7E79caN6bduzL6xN/PGzuxrO3Nv7Fx7Y2/+zd2513amXtsee2V7+KUN
4W60M2yvcOovK5d+IOF/vK78L/Ounso8fyr7/Kmy7FPNFX882PPhBcknTNfv
8eseSdou3KByn/MVPesruUGXQjzechUm7Xlr1py4OQucHDflhXU5YV1eWJsf
Bp1qSsOasrAGFR+iugrUm4YGCZdEVSVxVdm6qjyprtjWVm9pK4FtXcWOseqm
te55Z9NL7obnrOU7+izf4mnt0Ddn+/5NWP/hvor/wav5kLjhI9Ndn1SJvuqZ
+kFy9SevmC6+7cl+x1/4X76Ct6k82P6l68rb9otvW8/9yvLUryxPvm1+4pem
J35hfPIX5qf/w3rxP+xXfm6/8lN79k+tRT+1lf3MXv5zRwUAG3DxLWvpm5aS
N8zFrxkLX9Hnv6zLgxZtm0ueMZbtmcqBG+YKhKUa2LXU7lkbdiwN2+bGTVPT
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
pyoPP2Xdn7I0qJiw8Y6QCSfjpZIavQSeqYa8iv5GER7O0Ty3MpWgVCEsVvJL
ZPxCBa9Qxiv+KSfvGnZEvqRlPlnGI+FQ5Hyqkk8D8HFwZLCxXlqllRSrRFky
bsLYgG8T5Uh5wWcJYc+Hej8U7PlAXOifCtNeqa/4crTLWc3FhwyPJhGbiNFo
BWaylpWgYiepeblKQb6KvwM6VkkjyNILswyCLCM/3chPBSEbeEkGbiJg5Cdv
I0g0ChKMgjiEMEbPj9qGF4NDWDoeVzFK1CBwAxdlYwMf2dgoLNYLywyiSr2o
GlUnJFSDpBbANds8rW6bVnXMqDtnNd0Oeh03XQhtx6y2bVbbMq9pWtQ0Akua
epzaJQ11Ce9MmFdVzKvL5tWlFi1QDCyqCxf+DzZe0ZaAjVd0yMarEIkJFRsp
lyoVk5RVZON6nP/KxssT7ZCWVybaUfVY17hirF8x1M4qyibE2ZKx8KH28/U1
3xRkv5Ka/Exc7MMhYXf7+P8OJOzmedtFz5vdvH5x0eemi743uPpcf8H7Ohcf
xAXfn12Ahz7Xu/jeCFzw+UVA+B1Z6c/UVr091PydsN+JsPEE13eC523kepm4
bpMclyn2uWnWmVnWaTPTaXLsqIlx2DC8w1Hj8HHTyMmJkTPmUZepUffpUe9Z
pv8iJ3SVF7EljAMP20UJmCQekyZgsnhMnoAp4jFJFCaNxiQRdkGQXRBgF/rb
uD4bYxcXe5ymWn6YavpuqnnPdPNnC52fLfV8Mtv5nr75DWbZ07Wxf8zyviHa
5boo159nhf6xKvPZNtIHfQ1f8jr3aXr3T/d+t9D5+VLzO0t1r2y0vLHZ+vpm
57u2/s+sI9/b2E6QgcG6IGS75CIm8bBLQL9uVhHxjCcmwT0s9cFkvpjED4Ts
sPEpwsbgYbCxjXXYzj6CsY9i48cw1tFLjB3Ghg9g9H22jo9tbR9ttX661vzF
SvN3Cy0HZltPTrW7GNs9dJ0Bqq5IWXccvqK3XUPe5eEc7vYiXR6bnsdjFAHo
mHhGyfgoQRnwUzbeLk3gkVgwUgsIGXU4tGswSsVfX42naxByAXEaJgRyzkAm
pz8dF3IiXkOOQfXh7khQMbMrjN0VTtgYcGweRFu5x7tjtm3cl8DrTyZsLBnN
xRfaSDstanil4j/tzvipVbmfgrDutbgsPO9Y3SgjG2TVRgkJ3Ahi0YordKIK
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
HqDHB/T5g4EQaiAMHwjHBpjG/gjDAEvXH6Xrj4YYB+ItKn6CBDSZcyBxwcb4
YCpNOj6UiSMV5yEVD+cTw7nmoSx9X/JMb+xYZ4i65XGz9Ka48kR+4ebY5MUR
8Z9Gp3wZlbYkOmNZHGdlfPaauKz1sZnrYzM2xmVugteotDXMpOUh8UsCo7/0
Zn7sEvj2Y9/XHD3/au/+54cuf3zo8oqd+1+gkB96vPrQ/TUb91cfer5h5/Ou
g/+HTjBFh34GnewV9EE88/2iuI9l6d935a+dLN4KvyFAdASUWQEhghJakYJj
JN8K51qRhUfxAvjIeaLsElF5k6y5h5ormh6jJjfLGDc0aj4ADTru8AEKD6rF
GWuyn5XdGai63Mw7Jcw+mJq8Myxmi3f0FrfYHd4pR0KyL0YV3WNz7VO4bhye
X74gJFcQll8eUyRhF9ckcqsTCqpic8sjM0qCoI2jOPbMjLvBSVf84k77xB7z
jj3kE7PPM2a3Y8RmR+YGl5AVnn7f+Lv/K9LjrdyAd8WsjzqTF0/mrDLzt8MX
a1BxGoivUOLbhPgGWtSjBwGh90cVR/HyQ4ToEFG+H0Aho0Of9wDRTlC2nRRu
IUqQkHHeWgjUL5Qwxd9I8xMQbAK8n1BpuhgJmeKuJIuWQRUThctpFW+gCldT
+UupvMVU7qeA8wHIhjZ+DR0CkvonkPQSDMYwFZMsBsFkEKG/o0KeI4OeIQKf
JvwYRl+GzufZKZ+XBjxf6Q14vzvyB3XidnX22e5iG3Upmn7cJY2ybLWDLGy7
s9z/R2gbx6lqkIo7auanVUhTOhoyFlDVp6saUjvrER2yVLR7GtkYxmM2FLKl
v6KlPLSlPLgFOrnMv7nEt6nEq1GAhFxf7DxvY+cmgUszGrDp3FLqbLGxWddr
WTuzrLKhNbXp7vms+1vlWqCLDPNM91vQzw7qZ4cgBs2wUTsCMenGMe0oBNf8
Gu0IxDDV+wvztkdMdhrmPWyahMhNU22mqRZLP5txQmaYgNatscRgw6gEetg8
ZqHGPF5tHhdDFWPjZTAVExN8fLzIPJZnHssxj3H0Q+mTfQmKNl+JxK4w/1J6
8omMxOOFmZckgoft1V7DctZsT4p5MFvXz5lRZ82os2e6c6bV2eg8oz40ZGxW
naBTJ6BpZqrIyXb/kUbXnpoH4pxjGeFrAhw+uHn66dP7GFdOMB7d+Xta7Ga5
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
uTNV1ZVKkVOm6ZH/nb3/LqxXru0Q6VLR8E4e1jUubRcPAhmu6i5Ur6HuTtX0
oFeDdlrV9y80ztb1ZIM0JgfSwIAU0bifQ/QmDzeHt7x0f1hyh8n9xsVj5/W/
Fp//eeY3P805d3nJt1dWnru6+offN129u/tPm08snI/beX5m537aln7c0m7/
3Xubb9/Z6OT4cUL09/kZZrUvfPua44c6UfmesgvN/lD2yCCNqWiJnPqHCTSd
PHUnS9cLHW9PIjuSQQeL7OSQHXy8Q0p0pBGd2WRnnra7aKzvoaqnBHQVgJY0
8DIR5Hv0sn8tDf40329vcfThStH5jtwbr4tMlUXWqkybAdGtmqRv8oIOx9pt
t/xt3sVzxt98Qzv/Le36RZrDrzSR6+pu4SVQYIF6bD40R10Nc86ruUfUyfvG
4rePxG1UMrZoU7YB7h6URME/Alif4EnQHh8kkiCN95JJu7SMHZr4j9SMA6rk
T5S805rU82TOb6DkPnhiBx44kCU2ZKE5mXcTNRfK+AqkHQUy+FLrAW8VyV+F
iddhsq1Exm5q8Pohqpr1gK6ZACZZo01dqpJ9qJLNxVLn4dK5WtEMrWCqlj8R
FxiSAj3EYZ0gWlEgQg9yGKcOZYgUGkBxCRSUAJDGXBOMb6Th62kFNEJEAxIa
EKGoBdycYgyaJt5QyZiiZM7R8FdopFshk4czjvSkH26SHyoV7shjr+bHzI4N
nBDqZxASaBQROjkiYsbfTvEgjde+o7HOHqMMt8gNfqGrPPyXOHvOtXefZe36
gSX9Ayu3WdZuc3QodvZf7Rqw3jV4s3vYNs+IHVAeEbvcI7Y7B29y8Voa6PpB
rJ0Rz4KWY0GrdDDo95+FM9YB4X7UqePxVU35vbGXVppKe6LCCZQ5gnJnstIZ
r3YD1QGgKhJUpWirxcPVip6avMb64sqG4qf1BSU12cUVsoJn3LySpKyC6NS8
QJbCGdnjVMsIwb1Q3p9BvJuB3N+D+X9ESU2TM+zZOXR+ro8wPwDSmJvuw5R7
JaW6xQrsw1nmAYybXjG/0CMuQBpTQWMqTOGzz9TrI0jju+4777hvue+x7r77
ajO31Zb0dTZu623dNkEgU3Hjtfc919z1WnXPY4WZ21ILl0U2LgtdXWeFuk3i
ehgU+BrXBpm8DjUmIgxAjAFIMETTkVJMtMzJauZUKGhlQdJkpJRJJBNqClLK
+0jJM6BQzJkzF3AgdT8EXHhjFjTAkLqAOZ2EJIcA580CaDLpDAh5yhhPxBjG
2nhDPE4f9XCL1Udt3FD1h7GOxsow2kjI32lsNORhPOhm0k837nYzavcw7PAz
bgme2Ri5szHpqxbR1aZ08/ocz9oH0VRahaTuhVxHY8hbCN626myI4vba/Lbq
XCgdkHU0hihuKJc3V6bp7DElRGNdsKKhTPSOxihv+QkLFVn/dxpXFPhDGlfm
e+to/CLHmZqLZ6ejMejPIHvTsa5UTYdI0ynQdvGRcYXk6WLrBG9DH0sJWVl1
l5hqy4Mq4LQ9MshbnfC+NKTe9L+L7E0ju8SgS0h2QwmILjTuUyesmw8FUazt
EY+/SF+6pi8DQljZl6OTqjfnnUOG3yVfp4PXqdpenqYrebglqqXU7XHubTb7
rKPn1iu35lz4dcb5K3O+vTzvmytLzl5Zcf639T/c2Prr/X237Y9a0E9b009Z
uZywcvrU1Hrfn/e23ry14e69rXTXo8mMnx/k2tW/DOxvSRzqYEMnrEGTmxCN
UaikLwtdVnpQZ10IZG07B+tgEx1syGHQJQDdEtCtG+hcQPSUEN2PNL3PRgcr
hvtKya4HoCkTlKeAAp9B/q3qiC8eBB18Gn+8XvZ9f8EfqhJz8NAeFLqATKsO
7uVHkWeSXT4xv7rkwlmTM9/SIJAvX6BZ/UJLtJ7fwjmPorvQvub++ibti1H5
8dGUPaqEbWNxm5QJG7CUraiBGH8P4H8MeEcA5wiZchgCmUj6mEjeRyTvgSuW
dEyb8hnOO0umXgSZ19G4kId24IkzeOSsKbQey7qlVFzCMs6h4jvFQSDfgYJ7
7EUa1nwld8GYaIVWvhFk7gKZe0DaXiDbBVGMi1ZrhYtU4lmj0qmq1KlayXta
8VRMOFkrnIChgLAewqmIRvKRCGiDOTToh7VMAw11IgOSaYAJ3S8NcA0hjXH+
BEwwQSMwUIsMMDENF9MIAcrEwJNpeCJksj60RvBTqUmermEvUArWvBZs6hBs
aRRsecFbU8hcIon+ICnEOMqfFh6gHxVsHBH2XljYf6ZxfNIuCGTUpyJ6ExU6
Xkb3QfNJbd1m23jMsfaYa+M53957iZPfSohit6DNbqFbPcN3eUV9RGmPZ+Ru
l+Ctrl5LQ+jTE+0Nxda0Intag/vk0fCFgL0dyI8SeeewZzeVL81HXtqoKhyw
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
NOu5XQ46c0BnLujIAe1ZoD0ddGWiTmu9RaBdgWbelYYQBQ5jaX++llwekF3u
U1ztz/1z+KEN/sIHvAwnS6PIRyHDMpuquJ8FHscsry088zXt5BnaZ+do339P
u3+ZFnx7Wi3jGJn2g5r9mSrxE3XyATzloDb+IB53CI87CBIPAeZRwDsK+IdR
w3M2VXnH3AK4OwDvIxS+4H4MhJ+pRJe0aXdAjg3ItwdwK/TICcBrQdFtIvOi
WvrZGP+gVvAxEB8G4mNA9CmQ7CO4c9Ts98YSPxxLXodx96P7ZYeBfDdQrCZk
s7TiSRqxCS6ZQUoWkfw1OG85kM8FqRMJoREuMABCfSDShYtpGBMluSGLq1OS
PnRN0OsCpt44jdlUBgUPPtEYFxgCyQRSZETw9TE2DaNoTHljGh6vB/eq2ngo
Q028sTp+wghj8uukqa1xE2rjTEqjjQrCDWUh+lx/vURfWqSvcXjo/KDQpcHB
y0JDV0RGrouN3RIXtzU+bnt83E5Gwm64RsVsCY/cCIHsG7jcxXsBGn7nO9/e
Z4GD72IX/xVugevcg7e4he2kh+2jRxxwjzroHr3PK3qXd8Rmr5CV/r5zYhz0
Rfa0fPqECv9ZPdGr1Jx9aBJT/kXw+Ib22V3lC8uxF7ZjpVbaZxbgmRl4Zokm
k5a5E1Uh2prEoVpBT116S31uXUNxdX1xeX1haU3Os1cZjyskxaW8/IcpGcUx
ipJwYZ5ncpptrOhuOPf3IPYvUKG8q+H8G/GppuwsF/hdcb6/MNeXrXBnSO0j
+aZB7Js+CZddos47hH5hG3TCKuATC//9Zr4fmfpuN/Xeet97013PDXc81t91
W3cHUpe+8r7rSlMXJAhkKFNXJAhkM/eVOpm7IVnQV1jTFzm6zvRymhznNCnD
fWqF16ROL1SMDEINUXlyFI1irz78A2GxBmS0EYoqR+uh6G60HhkzLjwWiUww
hMIZOudsSCQbkSnGEMUo2Yajj2JZLBqRogffJ3iiHtwQaWNoWAyNiNJHc6Ij
DcFbkeFGJHWKh4UZqINpYwEom+KNF+21B8o37qbTOl1pbW60dk99SOPWgCkt
YYsao7a0pnzaKb3cnmnblOtbXxRf+4hfXyaHKK59qairSG+sULRUZbRXZbZX
KVqrx9VSlQ4JrINwU0Wq7uRO54d1EWMqp0IEWQ1tdm2pFPpt1GnzMb/6Mafq
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
Xl0gp9hxKtNkOk1DkKGCZeN3bZTrgVpz0OIA2n3QTaMNFFDrw801HYhVyPQ9
Zan+07Wr5LO4kC9eIancEbeUk0q0+Pl55EE0qThuN2BtAYw1IGYNiF6L0TcJ
o3YB+mEQfVxIP8GPOsmjn+TFnOSzzgpizwkSLgnZ14WJt7Gk2yDjjjDtlij1
pjDlhoB9hRd3hss6wmXt4cZshiqeZvwqYK4UMtGcLn7EJgF9iyB2myBxJ5q7
hY4/XwDpZ4UpR3mJe6bjfufEr+Al/IAlfg/Yy0DiT+hQVfyPIOFLwF6E9l8S
ZKBO0SBE/DTH/8bGqFrIFBPGIiGjmV342C50cmQ2KaG3Z8g8G1MJG6O3Ni+Y
RAh5OFTmRciCXop0q79Elb9Uut+CeP/FMb6f0/2/jgxaHk5dE0rbAm0cHLGf
GnU4OPJQYNj+gNA9/rSdXgEbnb3W2HistnRfZeW20tptjZ0HKlM4B+51DT7k
Sj3mQj3iTjvkHbLHJ2i9l+cyb7fPI5yli92l270/eRn+CydxF7oPrvQuqFQG
1VqgyQRrMuM1mkzX6nMqNPglKqBESVSmzauynWzwGW8PH+5mv+zL7e8v7Rys
an9a29RXVd9dWtOWW9GUXlKfmFfDyqyISSsL/4eN73hE3vWOlg9kqYckGkam
WkAPR6VZR6RYUuON/JiahI1tA69b+FyYb2OtJ5u0nqwnasUQLbtVhI11bFbq
Ws+xAmHzi67Nzwjbn3Rtf9C1/X4OPdtvjO2XWNp+4mwlE/xYItFCrMJOvNdZ
4rUbOpI87UXi+5EEATAkk0V+ZFRM9pdEG20BZIgoEEK4moRRSPjnGpwwmJDR
kEz8g5IYumuJLjavRkGaedl/2Bj+sxB+4tDGfB9xaOMpN/K4K2nclfzehfTG
4WMbu0r1eyzu8Vk2SN36LObc00SlgUzL3gKf3kp6X2NiZ3NyV3Nad2vqfBsP
IAmnzjWzEQ3GxFYdcSyauIBp9tLShLZaNgRX8dxgN3wiPW7jVpiNkZAjiOEV
beWh+I6ef2uxb0uRV0uxe3ORS2uRU0vhk45Sp44yB9zGJcKxQmTjEQQYyRMN
Z4uInbj3mUjIb9NEb1KJ3TreKzbelpaMt0OgMExUJPgz5+9myg6ctzOVBw5x
gu9VLh/d5kxk4EIIdJ1guETwvoyAPwzXCsjUyxIoQP67cvgkNlIqGC2efpf9
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
P4kXRBoLE3seJtZFlainLCgN/jyH8m0S9WcGdTUUMhUKOXQPJXxfYNiMjV19
N0Ib23n8bu26Gq7oCJ7/difKPpfQQ87B+92p+3yDtvl5/Rbs+AXdcUGW98K6
wMXPaV9ORS9HLX95Z0HpPVCtAeqMQL2JoNaIX2PArdSeLlHlFKpyC1RBkSav
/PFoY9DLNtaLzrSnfQV9gzWdz5rbn7e1Pu9o6Kuv662q6yqp6SioaMspacnM
r0/NrolNr6CxC9zp6VbUBP0Aphr0MHQyKhqzjUPYJiFsM1qCKSXWIJCp68fQ
gDZ2Dr1vT7lh4X3e0Pmotv0edZst6lbr1a3WqFn9pmb1q4b1L5o2P6PjHvYr
dJ/8BvlnKiYKFLp23+nYfq1l/aWG1adqFp+oWSwi0LRcrGOxwMhc0tKE5GpM
CrMgZz2RrnVd0Okg/sJFYsJdiu8hJfCQELqLAU9kY5EPqlqg2oWfOITQMtGW
hhcuyPiWH1xJRBGDaEiea07+AO5h+GIIjNaCAJLAnwyBNub5kHh4hUTgK4FK
xx7iRDYecSMPu4i/diG/cCIPOZMGHEj9jqSnrmJ9rjLdHsuGaHtext99mqY/
kO/yrDair47Z28yGqbi3PbW/HQm5vzVpoJUY1JYC6apPJrqI/2c+urEUr1TM
3p2HtNxaw2qrY7bXszoaWJ31sV0NsWikZzW9qwo5Gd1VXUnrqMKdjGsZTNWL
xmugRfnDFTO8gzl2tpyLVxXQDPk3xTx8gvH063wYgBFvC9FMY3TBRxnvfTlR
beCN1HBHa3jDddyRGbCxZtHoHK3Y2AyCkVb+6Bzt3LF2uEKw0Tb4Xf5Y08T7
ynevCwYHkorKvGl0dWPbk4/0d91SWQslLKu/9b7eljvam+9qbZbV2iKnuWXW
w9shijq7FLX3oH26f9gYqljV7OScipVNjikZH4VAIWubntA3P21setrO5kpE
sEZprnt/S/TYQCp4lQNepIDeKH6zl6DGnl9hAartQIs3GtHWGwt6E0BnLGgI
59cECSp9sGpPYY2noMJRWGgtzDECGVogVRkkKYCk+1jSbUHKHUHqfX6aHDdF
YYotPxkrPxwr+yzxXm305Yzgk87Gq+/fkL54iXz+ivjlaxK3rpM07oq7q39S
6rX2ZeS2d8ErpoOW8Sg/CsM3oP27GOjVKyDxPkh8iCUo8xKUsHQVkKMKClVA
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
xvVNXfDzJubTtpS+zuyenqLOvqr2fpiHmxv7Whr7mxq6qxq7Shvb8utbs2ub
08sbEgtr4nOqYtJKg1NK/NkF7nF5DsxsWyhkdA8I22SmaMwy+2DjkPu4jc9Y
+h2DNtZ33KpmteqByTJZvS/uaC+8pydzT09aTl9K3kBSwVDqgTF0ssxDE2kV
M1QZ/mjFgSomgjFuY5iNpeEzqmYLVQyk1A2lVI2kVAzJGgYkY0OSizGZZiKW
9liy0kKq20rqpa3kezuxUXtoY/KEC4zHJK4rghAyROiBQN3ICLEPeOGrv4TQ
f/a88zxm9uw+VvH/YONpT0lo4zF3qb/ZuN+aNGBL6rJd3OG0so9ydoCpMpBm
319IeVbPHmxOG+zIHujM7e/I62vPHWjLnbmJCR+nOTNqHtcyhMjJ/6S/IbO/
Ibu38QM9iNyelnxIV0sepLM5F6q4vSkPrt2Nc8UQNIeTGIwMGWhkQ8DUkGii
H9qYN4yrGOr3fQ/3PVp5wz38kV7BaB/hYeHYIEy5vLE+3lgPDMMIqGK82oDz
jD/5QjDxij85y8RruMLnPzDxYo5Zac+zMWRqYPRd/eBgbnEx1TtQXcPgz4da
+x7p71XU2wmFDFPxI9Odj0x2QxXDVKyosx11U+hsm9nCwxMyUTeGfFw3Pj9b
Nz4xZ2MFowMKJjAbn4TBWNP+siY0ts1lPcvzJlbnrGwvWFqccnW6lhyp3J6i
NVFsCCoNRIUPRVk3QeplkHwJhkmYSKH0RDla+EweA1CkB4o0QIEaKNUXFWpj
mSpYsqIoUQ7E3xGy/uLFXJ2mX5iOucRlXcJirwhjLwHmBcA4M8m4+DpDtTL6
rrfROt17nyndXSR7T1pB6ZMHqouUlKT0lSWdVKQZBl89pewBsadEwftAxEE+
bRc3Yg838ggv5jg39jw34dIU+8p44rXRxKvjSTfgrwnUWVFgBPLNQJYFSDcG
WXogW12UrSjKvCNKuwzSLoK0SyDjCsi5hya5ZcAUfVOYfJGXdHqSfZSTsAem
XyzqVyxyLS9841TI1nHKFk74LjScM3EfSNgG4tahLbzoX0XRvwH6KkTMr9DJ
MCRj0d9i9K+w6M8xdO/D32z8oacCJV46CXVNxEkhG8dJotIxgyRiSaItPDqZ
/zcbR0qACHEQIQkiJIQREoIIcX6EBC8crQg8IRNTcGfGiAVKA18pgI4koLIk
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
BsDP+PF70Qi1iPUg5Hd+6ObpsJ2j4QfGGH9Mxx0XJKLGA7jys27wc2VBgQLI
VxDlKmCZ8rx0BU6a4nS6ymSqEj9DDWSpg7RHIvZdEfPyWNSF+oCTifa7PZR/
0L8h8/AviXt3xWVVFmoafqmuJGYuS6LJktpsvuMHrZ32XjYVsJQXspJPPYiF
ngPRF0Es2hDkJl6bTP5rLOX2eJosN08N3QFdYw+qXECJM5brIMywQD3PaY9A
6iNhygNEmqIw8yHIeQBy5WHUF6ZewJJOCNkHhbE7BYzNvKh1QvpWIX2bgL6V
H7UZIqBvEjK2AOY21GYcuwMwtgL6VhAF1+0gegeIgX7eCFhrAXMliFkO6F+j
u54jF0IbE/MSZ1IxXQIRJYWYEzK0MSRGEsRIA6bMzJTFj5lRND4IVxQtRnTN
CWDADiXhozVJs4PdcFBPsoQoSEZE2NhPApUsfMiEkIUUqelgmXe0hYPUT1qp
n1RSFhYFLkoL+jIqcLm/36/uXj86ef74xPMnW++fHANWeNPWBNFWRlB+SqR+
Xx72bU/U0mEGtPE3IG0NyDsJ8q+Bgr+gkIVFd7DiO6LiuxBk41IlUKHBrzKa
qrJ7X+3yqsqvtyasuT6prjm3sa2guaOopbO0uaOkoaUYqrimJb+6NbeqJaey
OaOsIbW4jk3YOKuMBm2cWuSflO+TmOsbn4VfRZrmRNg4JM6EwtT1p6t6hMo5
BPxl633exvO4pevBx857zJy26duuVjX9TlF/sbyezIyNdUkEczZ+YCA1X8i4
k2Ug/2JjEwmIsqkktLG6iYSmiQTqOjYiWxmRnY1IYVYyyTbSZfYybU+kntqR
h21JXFuS4AlpylFs3Flsyll82kUCCpnnLkkImSgmYzNCJhFCxrxIQm/yfCH/
m43FoI0JFUNwM5P/ZuNpT/E5Gw97Ixu/cCdDGw+6kPqdSF32pFZo4yfLurx3
9YVeG0zQe17gPVQTPdCaPtRX2t9f3t1b3ttTTth4oKN0qP1vICf3txTg5H2g
Nae3NQ/+SC9OX2dxXydUehlkoLu8t6P0A+3lM3SUQnv3tWf3tuX0tmVBM3e3
ZHS3ZKGpnu258HnAfwl4L4Qw3MI8PP2UePD/w8bcqWc4Lz4w+Qox38bzsjFv
7AV3FFWPoY0nx7tHRlpfv67vHsyPy3C195FTMfpTyeAI9LCCzj7IQ/39irq4
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
Ek60xRsrMiahgiWobJO6fBuq3Kophis3qjHCq1H5cpySJYriFZ3F696UbpWW
7n9c9MPN3MOVOeY5hay0Iu/0YkFmmTC7PCj3bFjBhejCS/GQossJRZfjcK7E
FFVFQ4qvRhVfCS+6GJR3VphZ7i0pdAeKQ8XHRPEHqJE2j8DNbsKNbsINLBH5
FK5j+a1m+S5z9Vno5D0bNLbyHH3CdcBhR4ODdsxD9gxqpoLqVxxz0dfu/qAo
PskyNHc3svTEsfDoA8FboUmNqU6FmQs52OZGt8UU61p7MO08GE6eTE9PupBD
j+XSc72Zl3x0Hwj0ngmYzd60V9z/u8ZdgbgPLAtmdIcwZaE6VLpCmXhnRzB1
8x0BoSiWBVIjcwy8OChk4oXCAN22AJ33It3XIuYrf2aLP0PqRwON8a1M3kQt
V/eJ16Bqv5n1MabNOcebKjnSqxGN905Jqysaa8831FwEM5urq5qeXG2pvU7V
sZSf5LOqqf4KPKV1l3GfueY8HhiuPkuebnGGRPhsTz7IDH8n/mtrL0HgH9T8
DZTGdX+TV9J7EDxv3N1M9Su0FP/TTMX/rDGkEw8Vg8Zd5EGaSkwxLox//+1W
/fOKs5cjg2OP2XhsOua4/IjT0sNOC6EqPuo0T6vxQdvPKJC1AsM7EPgjMnPI
PdFLTrgsN2etsmCtMXczOem6xszFhFqqw01gD3x2MT6+2HMbdcQxmGzust7M
ae1JBxMz+9VmDitPOq6Cp5nTaku3DZTGTn67XYX7WaKvuQEHhMK98X4bC30X
V/lMecIfJuX1/Y2r+xtb5xVH7xW3z2/exm/8BnUGDVdHjkGxoPE4lDQNf9jP
34aPRys/ho8PKjiCsr9HOQdQ9rdyyZ7OUwfaC8zqUw9VxX9bFLdfHLw1wmVx
hMPnUa6fh3EW+PsucmbPsHQe/9OR/r4un90vtkQPwtH9KHQ/Gv2aiG7HoKpQ
9UWB/IxLV7llZ8nBtsI9bXlbZIUb1UUbUNFalG+CsleijGUoYyXKXKFKnadI
mSlLmtaVMAkiT56iTpkGCKPMWbjuTcEdY2XCGGXCKBLkSRjtU0tRxkIkmaWM
nyCPGaaKHqiK6YcSB0LZj+L7Q+WvApZB41OTUPZUdGoiypiA0saoJKMojdWS
YWoJmDwItyyS+ymT+0JIkI1Ral+yd9G7g9GzuiehZpJ7m0xux0thYI0pkMnb
0zQnz/+TxlEkyFHMHo3p1BGOPUeHkdVyBHWZpg6KpsljiA4ojxP1nica/5o8
9Gbc4IvB+pdE9Ou+WOPmcL3WxGEq+L9V4UpUugWBxqc3kQ5vUFWsVZWvUpUt
RaWLUMl8VDBXUfB5V8Hyt4Xrmgt3PM7dcyNjX0XawbRT1ok5ruJ8z9Qi7qlS
v+wKUV5laN65cGA551xY7vnwvAthkPyLYQWXwgsuhxZeCi68IMo945Ne6hmf
bQdVsTDue0HUPm7oDnbwF6AxHmwjwxKZsoQb3HxXufoscfae7+g1i5qpoCbc
qHljrcYYZBd9DDKpMVUVkxQbW3OMbbj9LD0NIQCyVuPjrowTzgRobOP6icY6
HmymP4cZzaFne+ucF+j+4qtbK2A0ehMvecRvPPprLyapMRM+QgLI+IQ3H3or
n05qTAOQOwW0f9IYt4KDGdp8QnGb6B817hTpgMbvhDp/Cpm/+zGb/ehNvjQo
jBv5xHMvopbHrOYNeOo3tT52fVPOT9JKd2lVSOPd1KYnJQ21ZwDYpppLzU+v
SJ9caqnF9n70rLvSVH8JvqGx9gLuM9eca6w+97z6TEP1mWdPKntR/N9oXEV2
of9VY3Iv3gdv/7U2VrY1fshHf/ScTH3vKDrqQWNlF168w8cdkxrLOmra3z9o
br5y525GWraHp++ek84mZq4rjrstPeKyQEvxT/azKY0P2s6GGpgKtaL3k/1c
yGEHvP/uuPNS+GfBYSuPddae6y3d15q7re2tMfBr7bEVYuO53ZatOeXY0m0j
gGzhtNbccY2F42pLp1UWzqvMXdZYsTbioy28tjv67nIR7WcFfMcLOiQK+jZB
uCXPb+lVn0mP+EObvA1fe+u9E+i/9TF442P4RmD8VtivI2iAPGyQKnIoihmB
EqZgDAt24N0f+FI8C1RihvAlID+g3AMdqXvasn/8s9D8YcrBy+IfisXfiENM
I1zmRzvNjXaeF+7xeZDvErbXLHOHUebmgzwtx5SEb+q4xkF3/eRVXHTbR33O
VVVhLyu16Co60l34I75PpGCXKn8b7gnnrycbEctBVFXqHCVUtqkzu+LGd8SM
bosa+S58yPuwIW0RwzqjR3bHjUSpk5AYV8WK+NGy+FEQReIYRRJU9TMVKbOU
KdMVSRNlscNlMQMwxbFGKB7SRx3XRxlnBCADuShjDMqaqE4fq9JQPFKrMUrV
gKwS96c07qmQAeR+VD5iOVUfCuaeJkaPydQLMXnbe4oOjhi3Kahj5z/WmPkh
kT2J+KAxGXzELnX4ueZ2Y3zjPE0Wjhf13sYyWmL1n8f3fRipf11EXPMj7vgT
jwIYjZH93qdMUOUuRMVrsMZlW1CFaQ/Fq5Wly9TFC1HhHFTwGcqdocr7TJa/
8H3Byub8jY+ztl2XbC9L3puSciw2wzYhy1Gc55pWyM0s5WeXCcmjJ0SnKoSZ
p0WZp/2zKoXZZ0Q5ZwNyzgrzzgpyznifKvcUFzhGZZgFJv7oG72fH7kbNOaE
bGMHb6XiGbTNPWALy3+ji88KZ+9Fjrx5DrzPQGMbzlhLz6En3fsfcdI/4qSr
mTTupXHvwtjCo68Vu9+/a2zl/JHGNp4MR7YOi8305TAiufRML+ZZgc4dX92n
PsxGL1oLt0djL53/oLEvHUJpTJ01RIEM6Qyia0MeI0/Takye2EmnziMCjeUi
hkz4QeNWERM0fu3P+M2XoaHYh2jwJp5ziToOrdqr31P/Kc9j1jZlHZSWO0mv
BjTcTWqqLmh8WtH49Cww21R9sfnxhZe1wO+lj5+XWuovNlWfl9ack1afbXxa
2fgEKD7d+OQ0PF/UVH5IL5lBeAgAjg2nNK6/QmlMjTd/kmbpLxBtbUyhSo1Y
/Msq3v+gcUct1hiPTzQpO6RUx1jZ+azj/WMojGtry8vOBgvDfrJlmZo5rzRz
X2nmuey4xyKKYq3GJMiztaEoBoePOH6Oq2jHhSfdVli4rwaHbTkbIWAy1MZ4
NdDJ5CR467aJKoYhVu7bSIq3WbK2WriYnnReBxSbO2GKIVauJhZuJlas9Vak
xg6+e1xE37gFfscN+UkY/G2caEuu36LL3uMeeQ9o5vd556vTJerTKTRoFRq+
Fxq2iozag/p2hRjKQvqgCGMMsng2ylqPivejiiP4nOGSI6jgB5TzDcr/pit7
f1vJ0ZfFJ64mfHsm+bvC1H3xQWvCXebEusyLcZ4d5TEvSrRc4P/5Mcv+FhYD
nY71i/eYKS07im65vT1zovPsic6iA7L8r7uy93Zl75Hn7lHn70E4O1HhFyjf
FOWsRhkLZOKpbXFj3kcPfR85sCN6SGfUkI7IwW3hA1vDBsCzO2pId8wwlDxW
lThaET9SHjcCcIZgkxPGdiVNhnQnTZAnjJTFDVLGGaPYPiheH8XpqGOZ6lhd
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
VSxSQ4wnMBsylq+P44T4om/dmb7unAR/p3PKZQMm3FkxAxJWzTFXMaadTDdR
PFypeLKKAXjt40zK0KQSgY1p5p08r2XKzGihk+HvzhP5PhvbDfgoKNrGc6Ps
MfM2puMxVa9g/ttt7Eh3om08biSGDXjNDqdiDQEqblSjBhWqV+NtufVa1Kxj
NWmZTWp4FTFrYzWrU0F0SFCbGNE2rhI4lwc73+O53PNzvu3DvOHNuOKNzvug
k1x0PJBzRLB4T9SyXMniJKmbQeKsi2GpY5iqWKZaxtQoiIyUp9blvrx3669O
lb177ehfy09/0XxpbduNgN5KeX+daaI9x9q/iRzdTU4cJCeOk5PnSMs10nyD
NN8mZ+5h8QIzlaSt2m6+azfftk3fss3ctlvuOKx3Hdb7Nss9kqyiqAUceNWs
ymKrmLZVTDkqJ+3UEpv5nmPqDmm+g5fkrLfslqs262WL5dK05fyM5dyM+ax1
6oxt6pR9/Ih9/DBcbWOHbGOHraMHbSOHAMfYEYAcO4qZOEpOHqM4RE6UOsaL
baNbAPvYVrgnJ7bBFe6BBw9ObienS0jzftJyhpy57ACTW2/DV+6wVeGSyJyQ
F9BGP2gleyxkjxXTZXN02cgOkmwnyVY7rm9DOIfkfI+03CRnrtqnLjgmztoG
jtn6j1r7jph7Dk91HR7vPDLSjgEnDzQf6G8s66vdAwbuqSrpq6QphRcHqncP
1O4dqt8/3HRwqPnQUOvhIWoKUH/b0b7WI13NhzubDmEaj/Q1nuxrPA084uTx
rosAzsZgY8jGoOKpBnxmNHX2h526n2WyyUZdAdzbNoXbjK2TlVNjd4YHrzTW
H7hwOXcdHsweZMzFs9oUme6S1G9ESV+H6b8I13wejm38KWgZZCtLXqPJ9MYe
plQMqVid7gMqlhjWROm+jtTiqW4i7V/CVX/my94LkrzDi34THxgt/J1v+Os+
wjdoG3vz3/QRvOUb9rav4N0Q8d9idWsSMgKNuaHzNoZgnLJODDZOKhCbCsVJ
RTgeYxVvVeVs1xfsjN+4C9CtL1Xl71Tk7NKDjTPKDGmlqpSN/NSsr7K0v1kv
e/GQetkdk1tPpkt/KrPTSLTEM+s1nBqVy90YzlUB4xKfeYnPvhzCuhzEvhLA
uezHvujLvujN+t9tLGH0yHAr1IAa7xcYgXipI4YMeKftjJExleTSl/ncGcOy
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
88BnMWt6o6XDMaKReNFwkmg4RTqet26m5lF1y4+sp39rv/S2+044N5xNVPtx
AM78B3gdAy+7TRPnDHGqiEuF8xWdky7nGMtMwodoSHSM8w5+AAfrOj7DARE4
nOESZ/8QYOcvAoz9XXr+Aj13jp47S9tOQVakZ4/Q5sMe0yHW1EZraxlVuWem
2DVd4JzKdU3neFQ5tBpyae595H2OKodV5XCqPFadx6mLiaaEaMo5TTm8sppS
sDS6mlcxq82B139lY2IsXbKxPh9UzBryIABDGCYgZG02p85kVRmMMp1RZ8AD
aJkYcokxF0WNFHLGQt7b8HvlCNIGPPCqz2aMeawpnzEXM5DALRV4Vjhbz1kb
+VO/dmI7ytlOsvOnkIXT7OI5dvE8vfiey/6+a/Fj2n2Do7vBxhw7ybEzDKN0
0xqa1WD5HZtS+vCHne1DxnDaqepCG08ctI62WUbaTSOdhpEuMPBMf4tyoFk1
2KoZbsM91GPHjOMnwcagYoA/vzvNLy1FCWtHjgH88wl4E0RtmjgPNgYEG3Mu
Pb2occ3NOKwTbsuEyzzuMY65DSMgZAG3eQRwWZYAP7NzYw5jv0F5fXjo/Q8+
OtByKLu8KamwPi6/PhoobMKaLciwpgOvvIGNUcUNYemVvkmF2yAVhyj+LAwO
8sXrdS/ti3kBiX3eN+q5PVH/vTPs2W3BT28OfHxTAC9hXsUb/R/b5P/EjtBn
9ka8CPhF/SYs6ZXYtH8kZOIs+uTCzanFOOAitXR3drV/QUNY0f5I+EEgVCoE
Gwsq3n8sr/FUIdgYs/GZnLazOU3HFTXtUaWN+zJyX8vL/VPn/tfvnN2p+2gX
c3Ur+eQ114ln5lu+Y6hZoy6XKEtFEwW4awDicb9CdCdKfDPM63qA91U/b1Tx
Pu8rvuLP9kIwpq75im7vk9zxw6Jxr7+Ivxkt+kqlAnc1ahNElkQpng1lUrO5
lBPbcdHG1sIHhyq+cyzrkXBfavte6tW3qZ3+D5VX/jYs8tHt/pK4MOpYkvd4
zgOu7FUklQIhe9LwVrIhXTqd/+1P0v6tcJ+X/xZq4x7qzW1UjD/VliSBT8SW
9K8TxUNEtobIvQjaFbspBBvTiVJPEtp4QSGal1HzMvFX+Vc2XkiiFoTGY5Q5
3x0H3xahBO6bLyQGPGmiL5NOAVy2hEd8HxQPPi9Nac69r4Z8X71CgOUb3ngb
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
C4B7YcYxN7E4O75gGXVZxgDBwysdbowNj+1AxQBelJ4fIPa+ecN19cyl67cP
Hz5b0nw8B1xX2ZVceigxvzUqsz4wpWJXQv6GiLS/Bsl+vy/+pb2xz++Ofm5X
1H8DOyOf3RmON513hDwFbA8GDz+5LegJYDsk4YAndgQ+BWwL+im8L6h4X/Rz
/rHPByX+KkT2mzDFHyNT/xydye9sKt2ZVeUr9LbxQyoC8+qCChpCsKeiKbKm
U1Z3WNFwFGycUntEUd0lq+pMgtxefTirqiuzqkNedSC6tGZvZu7fZIpfyRUv
tbftvnsz06ppJvNdZK6dqCtw69bN4MUzv5pt/75m/zdVteuny3zAxuN54pF0
SX8C1RsruRcpvRMuhT+kPJI74eKbAaJbgWJQ8b1AUV+AGGw8xDMZJpmKkPA2
lqCNISHHipaEnCg1J4pmZdRsCjWbjhc0rFlSfYa3svTRU5nrQ3dRm32pv2yl
tuxcL5M/GR737Q3bqLCwB3Kj1r2b+bC26ltaGdrYnUR5FFIw3qzcW5f1wL2c
R+ojffw28TdBtokCNmE8viT/2nDa15QyH3OS1JYgBv0KNl6Ig4cv2PirKhYK
FPcXjfl3RP/KxlhPTlyysSNJstJKx/ddiL4oZNHKIpL7N0b97zZeTsjUyoQ3
PiRTX1hmKgh5Cck/FTLO4az0WpqfWSzxFFCuHJEjU2zjVz/r5dKZRMlYvLQ/
WnIvQnQjVHotav2HYevOh64+FeZ1JExyMIhqDqSag0TNQZJjiY98UPDYraZf
jp9+U3fZd2EwnmgrXPpjLtMldu4GFocXR/lhL0rOMUMvjDKgYvtV1v4uPXeY
sTUy1nLaXI59vLpWoj+IGDqI8ZAAp2sHcM8RABlbwHCY8J0Sgo05fSWrL0Ud
CbVcXTbHf2zHrIhBsRqFDK+Gct6rRbwz0dvYt2AuIqZiYsAwDH8JgK/h3V7l
0ddA6gbVwzOtK6c1ZR41nzwNwtlcIURlcDurymFUOcudw9iYIXwfTl3MqgtY
JQTyHL74nEaUCqJKJKo4RJ1I1DJEpSCaVKJJRxXzJWsE7Y3tFqw6jScV47FK
xs3IWWUSFjp4PKpkjzLNo8qE3xR/9Bgq+bLMfoKdFQ3E1kTmDpD5NmLv5BaO
8Z0VF0DF/Kanbhxrz4wt23iGcY2x7kHi7CaOa2ThIrEcYWfqXMOFrqE852D+
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
avrH3NwHtO1dtxUbJMBvLmOrW9vgVlZ4JoqZ8XysjAFThWSaR1nEKUtYVQmL
SbUUVOnSV7oMNQ5z7aKlwWFrdNpanLaD2GVhxJvOjKGR01ev2BhUvGJjtKWu
nBhqsA3D3MJZWvjXJs7cwI9cq6VNNR59lUtX7dbWuvV1tB67wvjbx4dcs4ed
Nn6Am/0EM38UtOYxt3qMjbSxAQ8NdVV4QU+4BqIqolX591UqcvmTu/uy8VQW
N6FgxhPo0Sj3SKhryN8x6OccD3FOhLsmIz1TsSxWj9P4GoVg4yKsXeOxI1a5
aWW2eyadUafxeTiZ1aZwunROnwGfKRhDJmfMZ42FOPUCRxLVEBvamJs/wM4f
pBcOsfZj3OI53Fjt/AwnzLv68O6zh9/ox8xw7Aw2G9MTOKTC3Yv37+Y+xPs4
ugPsZAmo2HYrcvFuzPydONsdheVejrmv0jTQaBho0/cfNPTvBxvremoxG9+t
BRvPdDeCkJW9LeBb5UArMnhQNdSmGm3TjLYLNlb3t8IXKHvaAFXvIcA0ehLg
p7eNeebH3PM4hgJiMBiYsw3yp3VDxDbI2QYAZg7h5no461Vu7jOj8tztW/sP
HVPkVOxWlGyNy387MPUve2T/syvhV3sTX9ob/4udUc9sj3h6V+RPt4c9tjXk
vzYF/mBjwPc3B/wXsMn/h8DGfSjkrYGP7wh5anf4M75Rz/vFvOAf+2JQ7EuB
MS/Cs18MvPO8f+wvAuN/GZjwclDib0Jkv+crFa/G5bwJ2Tizeg/YuKZD1tiV
ceBYVvPxrPquZPglOLn+sKL+SLKQjZdtHAs2rjoiL25VlB9MK6wLyyzcLJP/
JjTkxyny57vad9y6mqVXtblsZ1j7eW72jFtzyDHZ7OjN8lzeuXjmV+aOn+ia
/k1T9YCy1EtVKJnJEU1meI0n+wwn+vTHe/XFSXtjxXdjKUjIPRFS+MOLKg6V
AIMhokHexiPB1EgQAvFYGS3WxHkBqjgx2jhBaor3siZKzXK8fmtNFdnSxIuZ
PpBvp1p/VJMk2bqd+sdO6h+bJRs2em95i9qwkXrLf11Q0rfkMd4HZaLxggc0
SdSiwscj93YnUW4FZY2nNHHUTOpDV5K/k7Fzzd6tqzfuEr++k3prC6UIoS6k
ru9PXmdO9HHE4eHdQjy1nI35qkWC5H4b36/ila62+7rdvlA3Xmqo4LPxXPyK
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
5Zn7VNPXU/d+Za3/jKhba736nuXSEvLyQvrKXOqiK37G0XKKRZxkETX25Ak7
SN3/F42JExh5wpE+MY+qWmE99qnpyL/Lj/5n97F/Pq3c2ljrfed04K0zobfP
RN87zX9wStx0Kr7xjKTxnPjBeUnTRUnzZUnLVcnja9In1+NtenojCerZjZRn
N9Jab+6EenYjg3mc/uLWzrbbmdA5t9dnt9dndjXuhppS1kONDd/Q9V/R9V/T
9l3V9FwzDNSNDdWbhu9Nyh9YlS2QwxSEmO4FrX8KdA+0/edePMw/Xu4XGbXu
R89ZP/rO2c5esD1o8TbOsh0hK9zh3+dQxhIHf+DFWe4V8gHUNJO5q6BQEzLq
Q0Y0hsbYN/ZTaIwD475ki78KEv8yVPq7iMT/hMZYsPMfb9MYcjj/aNi+Y+F5
h0OhSbbRWLpnmzh/q+TAVulBj6Qyr5Ryn7TDfgjFFQHpxT7J+3ZIMv+RmPGP
khL2vTu7ZL0148o6yF4w0QvMfdAhW3UvIZBxg43GL94C8s9MJo3NUJTuEa1u
AopGILtJd1USz3eb7oQaLn+jO7VFd3yFrnSuscjVdMBRt8d+JNtuIAPrT8UG
UrCBRGxADGlsJxM7jIjQxqVReP2vNB7hQaF6cj8f1SV6BFiXAHH4tQB7zcO6
eFgv/2ca6+JdFQlufWInZc7S1qT5tdEOR6SLBSEz/vA37DdbHf7oO2dr8MLQ
oBlZHNZFvuurBGjImfQG+IUkdv0SFvyiKoG9MRZTCV1epi2uTlgYEID5hblF
h7tlBGKPxLMGhM4jImeFwFnFd9TwHfXMBLQpxiYMzU1H2+lj7ODzmlgHVSxr
gO/8QrywKXF5ffL756TvF8csSQtdKAxdFh25KhD9j17vHbHRJ/oLaH23sTf+
4PvxVt9f+IR+5h3yiV/Y5oCoL30itmwL+WRH6CafqK92hG620dgjZLNXyBe+
oV/6hHzhxdkCOQxJ+0bwQxuQ3/AZPglpDMXAeaPtBNDmjT0C19tKFlA2GsOr
FweFDfqHbYDy437sH/6pT/hGL+4GZI+D13qFrPEJXQvtBEQxBDKXt4nL2xIQ
ssHDb5Uvez03amNU7OqcXV+dP+vV2ZY0rjkIJo+hsTVoz4yVQF+FzuN0ZxGQ
NZdQ4vFEAxi/D0z3II1pAxO5qTmBKyuY7UjFCLxqJppYe4zSMr3HqkpcXo4r
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
3x43XnPc1PDEuVUnzf4MxlabEf/LxpaXP8JCdvvS7so//2pjd+ohFIyvhxn5
RZ+mJJ0LSbcKz3KIzHm++C4WjVn2EanW9PhzwVFnKKEnMzOd79+lTQwV8Zfu
yrhPoLAV/7Lxuv8sULxQ8SRCysOaxZFYnYqxe8XTSsmMXDInE88q8ETeLK5a
CKYUggkVf0LFHdXs8PZ8jztOr5Ldo2R14pNQVtohuw2y2uBKK1xqVi48Ucw3
qubrlXOliqkM6ViMdDgUjtDhGA2OMSC6ZobCgUjYHwX7IuS9NHF/gGjAS8z0
VowGq8YYqokoOJ0IZ5CNM5XTmfLJNOlEknQiAaVi0VCoZIAuH6TL+6mCXj/u
iBd75Ap7wGOlx53d6S7quaoY8oLjvr3VRtGeW7xtdK5Z6V44rXX+pL7Ffq1T
3wOHQ8DlDMhgfHC//CD1+pZo6itJtJ1VyR/URb1T6bn2gceanusbey/p99oT
R5xJ4xe1+5xAjzPodyQyHXVGnAyGnVcNXlrX57LhibP+/Yu6tZfIFedB+SVw
+yqh7hqh0hWxusJ1Q5nr+iKXtTkXVyc56IRZgAATEGAJvMyB+zngYgZcrIC7
I8njvO6Vi2RvN+zYQE8M5TqR7q8TEqBL99ML8dcPC1oVErSaFmCIQBfqa31G
sH4IRSfYXyvAi+h3jeh3Xcv/mq7fNUM/z7W+V9cGXNvifXXz1UtrPS6t9/V4
ydtz1zW/t1283rp07Q1X73eu+r3v6f/RVd9Pr/h86u758eUrH7tf/9LT92uP
6187uXxsf+EjZ9dPLrp95njxQ/vz7+PxwkfWju+ds37bxPLNc3Z/N7V9x8z+
XTOH90xt37Jwfs/m0kfmjm/ZOL960e1vl9xfv+C26zLe5fi1Sx7o4hVnl5ft
L2y1dtxo5bDJ2nGztcMWC9vNxpYbbc6/5uTx3sVrH52/+oGD+/tIxeYufz99
/rUzF18xvbTN8tIGG0dt1/MEqge5OHLbSMMfsslgyWyiYiUfCm9B+QOoeIx3
oZQ8hcJHuKlM0AiFT/EvOUrCkj6lFKkY+bnruY0lPbjRQtiPEQ1iIUvViAch
+rsWqJ+XDKForZQOK+QjCvmYTD4klXbLxM245VhQDleS4QwFDjmJW42493/g
VL8nKN0uzl8jytITp5JlSepSQDwBxhJgDBminBmtA6P1YdQqGL1aFbVGEWOo
jCEqcBbFaKT316rCC0kifypj8KhKIP1X1J1s/wUYT4JxRASKu+g7IBTRmOfd
a+hV9RvQq5o3qH8SgjJOWxmHPKwP4/VgPHrbcxujH0kar8dL2srNfFdU+hO/
yni53mv+UfhyU/TSs/jFlngk2KmWxMmWxKnWJA0zbckzrSnzbSnzrakLbWmL
7eloRKCHiLmWFORqZOapp7HjjWHDj4L76707a92bb55vKLK6m2dSmXLiZsqx
iqTD5YkHyxP2VyT9diN5z83U3Xey9t/J2vt/bNz3wsZqelEsREL+V4ebeBqK
JvAtj7RPzHk0OZbf0BDACN978uzaEyarT5quOWmmqRhjG5+y3vK/bGxx6UMk
ZI2N7a995+T9o8bGHrTDV0OO4DJFzJngZDNGhnVEjn1UniM++CPbHqkYt06l
WIXFm9Ejz9LCTt2uCux6lsKaqVUKnkJxO/7Qxyrufl4r1hQoOGoVc6elvEmk
WRx9hZPPVSyek0sWFNJFmWhRIZpXCueVghmEijcNudMq7oRmtYh6P7c+vOcz
q+dPFbdCTgtkP4UrjxUL9eLpGvFktWiyXDiZJ0Y6nUuHy9l4/8PlLDwfPZYC
xzPhRA6czIdTuXA6TTadIJnC+wMoxhlwKgLOxsP5JDiTjF5SzqTB2QwBM1Iy
HKUYjlAM0eBwMBwKgn0+4q4r3H6P5YErrP6r3AEv4aC/ZDBAMuiHrM7qdL2T
8ctVM7KTEXAx0UM2tj9mcO5XYLMHOO4Dt5K+m+9xjaO+GR/2dmzo61GUlzJD
XknxXFNL2T6W/PFM5NsjXhtHXAxGz5NHncG4I5i0I8zYkGatdGat9GZsDafs
10xd2thtq93moN11UbfNifjMAXRcAL2XdbvOr2t32tjiuKnJaeNjpw31zhtu
O60vc1yX57g6xVY/zIwUZAL8zgEfc+BjSfKyAl4WwNcG+NgCb1vgYw/8zwO/
C8DnAgh0JQd6aFOu6VG9DWk+qyg+hkHeBoHeOlHBhuH+pHA/rahA3fBAPbq3
Fs1Lm+FrwPBZRfUyoHuvCfHbEOKzPsR3EyLIe2NQ4Es+/tu9fLf7+L/s7/+K
v/+r3t6veF7d4Xl1p6vLdjeXHShLe3u9e8XjjcuXdrlcfv2Kx9sXL73m6PSK
g+NOe4cd1nbbLW22W6J8a4uDLkq8lk47z9lttz6/y8n1bbsLuxwvbHO98pK7
58tuV1+6cv1lT5+Xr3htv+r9Ehove2x0urjW3nmVw/m1CFvH1Ra2q89ZbbBx
3ul4+XXbi7usL75u7/GOred759zfMr68y9z1ZSePrS7uhj7uxFBPcDNmzUrL
fmGfo3DQWzrFUC4mqXdvK4fcShW7UjxbKpsrUy5UwpVayLmPuy+kLVDWCUWt
KlE7fI66dCxUR19eO+6IE3c8b2AWPYPiZihuVYq75RKmVDIokY9LldMS1bRI
OSqQM8XSTrm0CYpr8BagK4lwiiIbcFO0mvFvfCMqek+QtYufslmUsEoWp25I
QPaLADAcQYRhZBiqDxmGMGSNMgSZmYxf1TQtxJGwutEY9+d1LBFfx6g9GY1d
iuT5/8XGGhXLo/5i4393tUbLMFbd3hZvABP0YYIWTCBoZveUCVrC+FXspJ3s
rE8FpQe4t22WHgbPNcYvPktebEtdaE+dbU+ZbkuZak+ZbEuebEM2Tp5uS55t
w8/PtWMJL3dmL3VkLbZnL7ZnLrRlLbRlIJCikZOnm+MmmsLVQvbtqHFrqnBu
KLKpSjtzK/XkjeSj5YmHkI3LE/ZWJP16I/nX/182xrN4XZrOiuf10ucrQZhQ
MgmlU7iOyu+QcB8vzFa0PgvPyj7nfOntwyf0TpttOG2x8fAZw1OWm4zMNxy3
2HjGerux7cvn7F81c3jtnOPfzJ3ftLjwrtWl961dP7Hz+NzB8xun62oV+/58
MfA3l+D9KBtfox/xiTwZFG9CS0U2tgzLsg7PtonKcYhIt4pIs4xMsWBEm1BD
T0ZEm6alOTU9ipkaLJOwn0B+q5LTCnkdOAYIB1XsARV7UMEelnNG5ewJKWdC
wpmScCdQPEbI+FMYwaxcuCATLSEk3Dm5YFElXIbCJchbgNxZyJuDgjncC8dV
97axBpUrPaqVbsjCG2yqm5mfwJV6+Wy1YLyEN1ogHC8QTxfKlgolC7mKpVx8
ks5yAT4EZ7YAzpdAVjVcroaLlXCxQrVYIlvKFy+koxQEF5Goo5TjkXAuEc6l
ysbihYMx4uE46XAsHI2T9ARzmq+IWl2lLRfFT2wETTaCjkv8nquiPm9+jy+3
w1vUT5EP06SDFDhBbSw+Gu6+A9n40lk9eyNt0/1E09/A+f2AbmGQ5fMmu9ej
pfZkeMBOr6trfLzWhdO2R1M20c6DEv8N8vo/YNVeYepnvPA35jwNZy4SJ2zB
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
tQVlF4klF8FtH73GiC0Pwtfej1hTG2Z4k65TRiUXBoJMH5DhA7L9AdJyWpBW
MkUnhaqdRtdOD9HCMEhpIcSkYIChYJKDSfgNNP1MukFe6Jp8hn5+CLkgFBSG
g/wwkMUgp1L1c8JfymLsyKFvT/XRTr8GyvxBcwIQ3dsA6zerajbK7uxSPv5M
9vRX4dODwpbT8i5rZZcdrlP1Oys7bcUtFsI2K3SvJGW6KKeCVLMhcDZMMUET
M/353ddEPdflfdfhqC/sd1V02im7rWCvOew9i8886juu6j8u7zsm7fpD0n5I
1vaHsvM47DaBvVaKXkdx92XRgJ9sPEoxnyVHv/asaoXwnlR8TyF/qFK1KBUd
SmkP3lAO/eFz2yH3MQ7Sswlw4ApsPCau+oxXtEOYtU4Vpw8jdFQMEkrIMioG
GVgjZAyVoAoGKrWKIbJxEA7SSMg4ISMV0zEvHipxeZkIw0kIdIEeIlFLnwv5
34obUnW5Q3OteSgJfQ5SMUIeTkY2RsiiydIYkjSWLIjR4qdsFOR/IKw6JH7o
Lu6IE/bf5I00rAw3rIw8ZI82sMfucUZrcUIeqmAPlmDTDhfxh4p4QwVcJpJq
/nMG85GiEehV9B7+cLnGxpKJ2xohq58pR0JGOZk9UMxHFwPFyz25s+0pY02R
vfWBrbdwyUJzUt6/Z+P/YmONkBVCtZAF7VJOt5w7IGP1QEEf5HfK2Y1S1v3F
8aKO5tC8LAs394/PWW4/bb7lhMWWMzYvGdvtwMtFHV6zcHrT0hkHY82GV9Zq
GztcQzb+1tn3uY1dqQc8aIf9o00o8eYhqbixLSzbgpZhHJho5B93OCDmDx/6
Xlr4keKiS53NsYujpYql+xBlddzZPoKPulbvJoG7o/m96GfT7Aiq6ZqGGti9
+BofkNet3qSuXclpVXKfKdlNKvYT+fID+eI90XQld6SIxczmDeVIJgtU88VI
hvK5dHQnKJ9Ohws5+Fj2pQIUg1VIvJO5qrFc+XCWhJkuHcxQjubB6XwUj5Xj
ifLRZDiVBeeK4GwheptsIgOlYuFEsngqVT6doZzKlU/kSwZzRX1Z8uEc1QT6
wkKUt1XozUs3ILcOCh7IZ26KRvIUo6lwIgb2eiibTWUNe/k1X7Mrv5E/OSJt
NpmrN55rcpaPh3H7wlpvnL+bapLu9X2m1w9+JrvcjTa5n95qsU/36PfA/hTB
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
PE6v67x5GS5UqMYK4EgW7pobpsHBK7fj3/JzBJEUvfCIdd70NUEh6+kexNLQ
LW1F7zNvvDN+45WFqh1L5RuXi9aMJQJ+4VpY+zq895aq8hV+8UZRxWZYu1Na
vkFcuFqGbFy4Axa/A7PekobvWPLd2GYJHhwHNb+De4dBkxHx6RHio73g3s/g
8SGt+we16n8nI+r2kW79Asq/ByXfgZs/Eyp+JJR+B0q+QRCL/gkKvgJ5nwPk
4ewvSOmfE5CKEz8mxHwMwj8CIR+B0M+IwZ8TUDD2/9PGQT+QKT+T6Xu0cTDe
q6WxccghwDgMQlE2PgIijhEijYhqyIio49rIxonHSfFHQOZZ0By0RVz1BXz0
ufTuTnH9RkXjFnnLTkX7e6qu7xTdR+XdltLOS8L2q9xWd3arG6fNVdTtKu9z
Fracnq36gpm7hXN7B+/WGm6FDqdcm3tjFbt8w2LJltnCzUs3Xpot2TSWv3Yg
U78zVac5SetxHKk+hlAXieVc4g9K/EC5H8h0ATmuYCD3Vfmjn2HTHth1BDJP
wb7jgme/857sFT09IH36u6rtCOw8CbvPIBXDAQtZn6W4y5jffEDcvF/ackLR
aQb77FUDdrJ+M2GvCa/bRNxvqxx2xe3KY95w5IqK6awYQCq2VvWfU/Yg8SIV
n9Wg6EIqPqvoRkq3hUMX4Kgbfv/wVcWgj2okFOItBKMEIxHoo1yC/i54NVDy
TIUimUi9N5F4AO+PoWiDyqdQcheyS+FUHOzyhA3GwvKvl1Jfno/SWg4FAmRX
Oq5L4LY3OlChCyoBhWS5ulaM8zBVR0o1UKMnppNxfVgdjBVRGFyaCNWShpJR
SFYXH/6T/5WNBaFafAZZwiAoQwkKOm754IZoL0VtWcj4ZKHi8MrDi5z2EF5/
Ji4vDFVzmNXsIdxNwR25zR2tQnDQ9VAlCsYaD2vAHsZVC8xKXyFroAAlZDaz
8HlzBaaANZCH3Iv1y8zDPO/HyGH1ZyHYA9kcZhZ3MJs9kLnUkzrfmTTXGY94
3mws6JHy2/FMFr9FxUPx+Ol/t7GmWMHD9/vqddPdkNuBbCxfuY9s3NMeVlFq
d83rU2ML3NiGVIyzscPb1k5/t7nwvs0lfFKYtftHdlc/tbv+uZP/1+cDv70Y
9PPl4N0aG/tGnQqKOxeW6RCR7RSV4xCZaRmWdIoW/Ts9Yg8j7Jfc7NN3ay4N
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
UwaVRpZl6MjTdRQZVIhlZRZVla2jyqYqsyjKbBJSLqbKIynzMVUBhheSlcWz
VGVfguofQNNvoPUq6DBFKO6xAH03Af0s6PxT2XkCb0d1c9JWM1m7A5rSNRKC
yqJ7HWRdNkQ3QrS61w+MRQBGIBhykvdYiOjGIrqptNse73OTddorux1B/x0w
YAu6jVBmRdd50HNR3XVa2XGS6DiLt51XtF3+kHhMN1R2/KVq/4NoOYX6C7Xe
Bu3QGEMaWyMgD1iq+m9Luw2FfbeFA5ZShhPgRALpS9R+UwBVhcqvxC3wrYre
pCgzuR/I6UDeBEQlYPIFahzXZgdyD6rj1/LDF074UtlemNAbk3hjMm8M98Fw
X6rcV1fqpyv015kO0JkOovKDdUSBZHHAB4n8Sf9VkkDoliGNdeABfAnxjggf
gAkDMXYoiRU9Zyzp28mXu7mVp3mNxhN1dpP1bpwGX26jH3LFzW7Tbc7THR5T
baFT7ff4nVFCWrS4+5Gw55GAHvOv+N3/VY/hyumIguJ2PoDidUVP0R5O0WKm
6bE8aH07H7LbHk62RmsFjzntjzRxY8Rhfu8zraZ74qe64ySDKVDwBwWNMT7d
JuM1yDn1sskqGatSMl4mG3sDhVrojJWKxkuFYyV8Zuk04zV7KHeyP3uyV0Pj
vlLRYBkEsni4RDr2mjOcNtD5qKbSI/7ZRXuXzZDGN61WaWkMjbHxnc1aYwxR
bOmz0zZgn0PwAaegX11CjvrdPx0Zf/3hc5Oop0b3Hlx+Fm9ckOvSVHN/bCBL
znsHhHWq6TrUkgIFUrRDGHtV0l6ltB8KyEfQOBLx4Id+mFOa7kDCLjDVgiZ0
TLwFY0VgJB3vj4fGWN7zUDUI7fETeCCi3Zf3xyoZzyF7ATsdQhjlsPGy0K7c
VBaYSJQOPRb3P4bnhQNP5YwXqolUiF/4VKKpwktST2RACH/IstAEk4mxdBUr
k9cNTTLazhMPxAh770sHHxCMJ6rx55D2kO2AlQhYT1SdLupmY9B2BSVR1HwL
qhYSJR+L8+eKsucIM2eI03XlmbqgeD6eN4+XuZBfvJn15vdXMfvrCy0l8NsD
77jyrPaBuy8yLwSGbU9KPxEU/L3RDR2j6+Tr5zFLQx3L65Qrf2EXjmGmF6h+
rl9HPdxY8vavgS7DzrJTFU8OdLy4JCu/BzrywWAZZLJgMOmO/cZrxosNHVaZ
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
OOqNOmICrfiO2IgjNuCs2+Wqz3MzaHLX5XhhHF+MFaDfEDaL/Woe+833nPBf
68P/ZISvpkVsokTspkcfZ366xE6815DyuDHlKSfFhpNs35Bq25Rm2Zz+uDkd
OmfT5oz7zRl3mzNvNmde56ZfbcpAasm+2pZ7q7Pgbk+xaW/pk75y294qp74q
174aN6jeWrd+qtcg3WuA5jlI9xiiuw3SXPprbXurrfqrrQZqno4yEIS18vq3
Rhhe2sCcUC2Kufh4Eyoaj7cSfB6ksUbUhWj8D5BbkbRT7xGN/0cZeYLGXHRR
1IL4iT7KVomo4pEiXkNUSZHb89dnrd22mLtttPTdAmls4b/ZOmibc+hu3zCT
wGdH30VcKc5xaq1/N9KZIR0qUQupAP5xAQeKEHEJaTMhbVXLeKS8DR7hS1La
pJ0ABf1wPRDR0RrZUIGqK1nKixa2Roo73qmHY4EoFUW+y3IhZknkhNNQtFpX
hLT9pab/A7wIhtPxrjhJewzel4iGKI1noFW8gURiKBmeQ38raX+vHkggez/J
eFHwnccbIkXNUWRfEmrAEOQhjaE3Ibs+ER0xEm64kPUKapwZJm5AHXQATZd+
A0aekf0esranct5jTddjEfOciHJEVLZNXLhekfc3kb0OZGwEmeuUWctEmT+J
M76TZc/Bc2bg6frKREz1CVNGYer3mPQNJnxpMPp6pjxxCSjdKc/ZIM5Z1Z/8
01D2d7QI3YoXRn25a6W1l3H6o6o3m+Psfoi1+y7J8YcPD+e9ujI7+OTM0ONf
hJ+annxpRvENY8odrOkx1mWPjYR+JYhbpaJcq040eXJ/vqPHFo/nx+0DTax8
UGDIE+ddV5+svPV0+WO3v0xdFl59OuuS5ZS7zl9aB/36xOvnB66Qxovu2i+G
NH7iDmn81xP3FU88/rzn9ttNxx9uOc+HQLZ0mWNrPcnPWjfOxZjzap409mfN
h280r4xBKMoMV77AhGGY4Jm+9PlU6bMvhAHThz2NBl10Blwgfv/RmDs2BGns
oiMN/EIe/mO337yKR9PC92GOyzGHVZjblum2G4zttxhOxATZb0Edbv/QeO0U
LY31/q80dl2PeW+GLzHfHVi5/UIi+yQoPgGqToLKw5riXZr89ZqspWT69+qU
qXgSpoRAzsLwAkxeMklcMk9Y8YeoZouIdnC4+vAo5bCYtldJ2yyHF3PnilOm
SBP1JzY+a5INiWTUVKxM0VGk6irT9CCNIWlxbUMF/q+2CmiVIYoJLagnahdQ
E/6ZhG45XQ8xOX8aKPoSfJ4HKn4G1YsBbRWgrlfXblZWb1NU71bWHCaoxzXM
YzhlG07brqjZI606oqy5pGGaArYFiuJstQBNd9UN55UsEyV7H96wS9WwQ9W4
V8k6JmddVnOfIBp3BKtbg/G2QE2vP9nnrOx4IG45L2k6Jm88poJM5pzWQORy
riN/W3cBMM8C5knAOAboJhr6UU39KdQC3XQZiXtRxTBRVu3Ga3aqqbtI2m60
rZt5BDBPoJVBKAhn9lEN5yjZeEzTclLDu0jyrqiarsobbqHRJF2eYCBUMxZD
SLJxvAYnmwnQJcfbCGUTkNGAqBAMRYMWL1X5dUHaPrb//Ab3mVwHozYbnSFb
TOiASRwwIbyJO2LdTliLqw7bTZflrlvvqVPvjTF99eqCp9FDZtJD51Cfz6t5
vqAmbGFl2JKysBXUyF20DyZ1cRfZiXcakp40JFk3JttzU2xb0s1bMk1bMu+1
ZN5pybrVknUD4rcl+3JT5kWo5qwLLdkXeblXOwpudBff7i4x7a+wGahyHKpx
HajViuI2RPPS9ie7T9B4gOrcV2PzD42rbUZprkNU9wkN1npADVC8+ms9hexQ
KC2KG5VjXCh8rEVrjzsgkElhO9I/C3kt/7HE/6Ex+79pDIkNP03rohvVYqZC
UNbXHl9bHfAu5oad+zZz5/WWXpvMvDc9hcY4cLt76B7/Z0ciIi7mZVg3UsKG
25Plw8VqQRXKLBLXE0K2WsTRyJpJeatK0gSllrWgHdyKJo0Mopg1EYZP8ivA
SCHeEY9C3Vsj0aiOoXjATwPiLFKQAWQFQJqvgUAeSUXeuCtC0fYS9L1H4zkG
U/CuWDlk6UAyGM3QjKYTQymqwWRFXzykMaQ32u88nCxtjRhihuCdMZDJyo5o
0J+gjT5O1E4yilN3RI0xA4epvoO13vDIrwuUskNBdzRojtSww3CWj7LBWVxn
OVh9u6/61jDtroT1SMa+p2DdkFMvSsrPSksu4MU3NWU3QLWJ6vN6RcESVeEP
msI5IM8YBcikYyAZAwkY6kCIn6349I0y6RdQuE6Zt344c7WSumOsYgk7cdbn
19NyAmfxKy6OlF5vSz1WGPRnnveiJNtvQ88ZBJ80enVu5ptT096f0M+4qPf5
Gka/g7WaY32ueiMv5o3Er+ZXXkoL33Hn1jeuAXt9Xp9xeX7COfiI27NjN8zX
3rJc/8h540OXFabOv96yn3fJctptxy/NfL438/75oftPpi6LHrsve+y26qHz
qieuq2w8V1l6LH3g8tsdp4V33Baaev78yH2+hcMsB5sp3uZYqsfU5oj5w2/n
QCeMPzeUB2DSYEwUiEmCdRQhk+RBUwXexsMu+gOOOn0O2IADNu6uP+qGnkDH
XNBGqm4bTBBgLH81jx/6M91i9sdj+oFbMQhVu7U6jlsNHLfqOWzRddiq47hZ
R0tjI+e1hv+TxhgU6qnYoOOx0cB9o64XNMbrsLDDGDdkDfh8CdG4/Li69KC6
YDuR87c6Y4k6+Ttt4RexkcjE1IU6aHP05+9E5YvFNZsk9AMCxjE+/aiUcVBV
B7GzVvn5F0XOl6rMaWjXM9rQgQIoVCn/prE+nqJHpBhCqZJRVIUyUW9CigRd
eIRX/n0dZdEnYKokHUTjTGOQPVmTM5XIm0UWzSPLfga1KwBlPaDu0ND3kTQT
kn5KQz+vYZwGDBNQZwLoJ1Q1J5QVZ5WVlxTVVxTVlzV11zWcK4B7juAckTK2
C6nrhNS/JYz1Ytp2MfWwkn0TtDuD7hBN23NFa6Ci3YfodcF7zOTtlyGNpawj
CraJinVSXXcOpQNBZsK3guf0o4B6EFAOkGiOKmq3QyOnudAnn1TR9ikrtqir
t6iq/lbX/q2hbEK7/un7EZZpBzS0A4B5ALD2A85BkntI3XiMaDxFNJ5TN0J3
DQ28OdFqh3f74MPhhCSLwGvVai4K5FS2Azl8BGYAUQkYSwSdISTbqj9tb2fU
slbfuTxoj20wvi0mssPG7dEyX5sLxnHFGO46NA8dhpdenace3VuP5j+pNmBK
TeC0qsAZlSGzKkPnloV+V/Lsp5rwVbSo7XUfj3LiLzck3m9INOcm2TalWENL
3JJxU6vrLZlXWjIvtUACZ51vy73EyzkP1ZZ7oT3vYlfhlZ7iGz0ldwYrng5U
OwzVOA/UOv+bxsN0774aaIkhn537qh36Km16yi17oSqse8vtesudurXqqXBF
qnSHGmEGQU2s30EUK0YblaPNEMgEv10taEMStmrVrBZy1aJGSEiof2GZ/T8q
FWhLMg8CGR6BlAuBSYhrhrpS62nPYuPv2XlsNXdcZ+mx0dx7g03gNsfAHZ6h
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
QUAzGas4JC4/IS4+IM1fp8j/TQ1pnK2PaJyN4ckYylrMnqLImDGWMG3g45SR
hC/HMxdKynaLa3aNlC/szp3dGDu7MWpBV8wa3ttlRXZY5iMs/zFWYYmVPcQq
H2JUM6ziIVZmipU/xFqdsAFvbCxYRxwxXZDw43jBhsbCgx5O863d//R9Z+L3
/lRA9BnP1/ufem208UHh/5DGDxzXmzquuu+49KHrkruOP0Ig33eZb+G76JH7
L9es5l+1/OGWzeI7Fr85ua50dfkLHh3c1zx1X2XmvuKx519mfsufeP5q5jbf
wm4mBHKgnV64vU6qmyHNf4o6ZgH5coYEDUfDhB46kMZjjjojNjoDT/WGrI17
LQ2RrA07rbBOa2zE1UDsYSh005X4GUoCJ48HT5O8/YH/+o9Gj0VhuzHrpdjT
PzCPzcZuG/Ud12IuGzGn9Wi7x38bY603RoLG2G0j5rkJ5VSU2y/SFJwFn+Ej
yTlQfkZTckyTt5fMXE+mLFEnfqeOna6K0cNjUHMLkTaJzP9KU7pQVb6UqF2n
Yu6Tss5KGq7gjRehtVPW7BQVLRdlLRCnzVZkTFWk6iJLHI9JE9CmD3G8riQW
Wl/kfic4PKEJLMMjvA45DCE84ZmRkg3IZF2UO5puCDKNQJaxJmcymf8FWfQ1
+LxQU/4HqP4b0KHJPAYYZ1S1Z+WVx9XVB1VVuyCNVdUbVZB+9PUEY6OKsRVn
7JVRDhL1l0GPLRgNgNQl2M4y2l0VE8JwK8E8hEDdYQU6HUCrnYprSTSbqZtM
Ce4NgnMVElJOO6+iXQZ110H9DcC+DJhnCMpBvHI7XrWJpGwBzB1q5k6CtYfk
7AONBwB7r4axVVW9Ghpjedk3yvKvieqfAH0FYGwEtG0kZTtEMWDsB3UHAdsE
1Jug7gvmaVSLZl9Bg6qbb4HWm2hGasttbeHCCrS4a9qeg+44MFqIlukVbLWq
QaFuIEkaUKaB0ZeAY8vPMOl5tpjnMrPFVr/JBuO6YBx3HYa3Ic3XmOo3Gf6k
MfynMvwnU4OMKMF6UNRQHcozrPY5VvtCr/qFYc2r6ZQ3XzMif6uPWdcQt68x
7jgn7iw7/hw74SQ74Rg70YSVcKg+fn99wr66+N1QjNjtdfE7IZM5yfs5yQch
nyGWmzJON2Vca8q825xp2pT9sCXHrCXPsjUfMbalwLY537o1T6tcSyhejhlU
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
cAhhAG3wULKmPxrviVR0oaRiWXcMqhsjO10M+IXEYIaqPwW6ZXEbmu6BKhX9
MTjvmZjtxae7yzh+oD0MStrgN0J16a90EDC9FNwgRUsw0foMdL9Ckz6gP+fX
ohkl0nT54POxNg9Bq4+s6TXODVdxgsWUR6Kaw/yyFeOFC0UFiyW5G0CFCWi+
CqgHZDm/i5Jmq1K1vaaZBqpUQ1nal72xs3kfFwzmrJZT9pOsE2gDFPsYqD0E
ataDqjmCTKz7Hdb37qvx9ysF71dJY38e/zh7LOZL/sefpLEbiPS9ZM5WZdbf
oqy/+clL5SkLpXFfid5PFn2a0R/7VVPiouiAr3w8vw94sz26wDQ06bpV8B67
kL1uYQccg3fb+m+HrtjSY7eF214rj/0OAYctPLacuT/v5N0vLlvMsfD9zen5
auuA5RDIZp7LnrivsPL629bj76cOK5/aLLexW2Flv+Kx3dKHzn8+8vzzocdi
6JCtPBbZuP1k6zjf3f6bIKsZ0U4zc33nVgXNYfpOYbvp8pywbge9flvDIWvj
YZtpw7Yzeu2mdtpNarXVbXqKDbnN6LU37HfA+N66Yj/IZDTXUhZirHzxDYhZ
2e72U9RBzHMtKkG4bcacNmD/q2jsouUw1IQ3hjTOejBfmGgCis+AwsOg4riq
4LCm6CAo3E5mrVQlzFdET4PGWB2NgThdNNcvwQhPmyrPni0v+FZVuRDaTkn9
mXHmNVHddWX9VUXtifGCTUMpi4YS54wlTuInoIhjYfwEjfUlMZNEH4zG32GC
D/+h8b+lHe8yeQLIEzSeECK2tj0DoliVhiFl6qiy9MnCaXjBbEX+PPiIJC38
U1G2QV2zB7piUP8YsK1B4xPQcBMwT+KUAwrqPgXtMJqpxLlGcB8SLZaqNltl
px3e7UD2ugOeB+C5kY3mYur5scoDwpp9MvphJfOk1qaagRZbslE7HKTLEfQ5
gK6nBNdUxbqJ087DWw9eu5eg7SIZu8i63XL6TiVrr4Z7DDSfAA1HyLq9qtpt
RPVawFiprlmiqFimqt6IWikYJwDjHMm8oKm7SNaf19SdR03IrIuoRsG6Bo8E
56yae1Y7m++qlsM3QOtt0H4XdJiSbU9UHQ5Ef6h2e0gVKeWoUHJOozY1twzl
hHf7SZl3u9K3MF/Mr/acXOWsU+mgU+OsX+1qUOaiV+KmV+ppUO5lUOGlV+Gl
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
RQ2uqKNkjcoetg3Ikc7kIEfd48+0OVACY6L2obzquqLyElVzETlbyNX2K3Mz
QUD7bbbpFqQxGvwhuE01XIeemeSfIwWnSMHPc6L5J6FAyxnQfBI0nQCNx/5S
03H0SPcl0HGRablANF6U8a/IG68rWm8RHU/ZQXhD8QPjr8FkDDudCmYLkalD
95ROIG4EwgpUkDsRCLpMR4tO8yPW5doszLbA8jlYqa1KiQ1CMXTIeTwslzcv
x3pBjs2yTJsP03gfJVt9ksD77L31t5DAic77k50PJDjti7XVibLSemOhCRVp
qR3B0YKC5+HmGkhm6mFmGsHGmsHG2q+Nd4aa7HpjqhthtjvSfE+UxV50wtkX
bXUw1vZ4gsuZFK9LGQG/ZAf/mh1yNTf8SlHE9ZKY3ytib1cl3KlPeshPf9Sc
8bwp6+nMcNb0UPZYb8Z4b7ZotESZb1w3F6yYAzKi8UwTMSOYAzIaRSr5nyNK
ulCKEQtQ7zVl82FWyodwhogmxSWy6XdKGnMKMwxqCmyGWsPwkQwwU4yqJGag
CayH92KE4sk6YhIxGYqZqkOJbZN59PB7oj9U0e2DdzmLBBy8zRoMOAPI224n
6ELxZkcw6AeGfRS9zvJuR6LPRTHgTI+4s2Oe8EgNe4i67BWDHhDIigFfeiSQ
GAyQdruLW7iSZhNJs5m8jUN22ZCddrJ2G1GTDdXrrej2U/S+ooaj2dFEZjSV
GU+HtwNmIBnvjJ0RhI/XvZppjFR0v2MHU8AwtMdJ0GAwveGKdnjZ+4Neb+jV
pXVGo/nXZ4pvScv1JeWmkjIuVW9D8U2klX+MZGrO5q6T5HwmTVuqSFyIUp7e
fYjHfz6WsXm66izoMQNjr8BEljK5up4aLaJGEplBf6LTSNZwTVG1nyrZxuR9
j2f8U5L9xVjmTzLBfTAeDiYK2aFi0JMC+t+AITfQa0y1PwC9z0CHHlPzCJQ8
YrMukek76KQv2ZhlilCVIW+sJ/ST9y7/DHDfHpZw0yniJifgirnvBSvfszzv
k5DGUIZOB6Eldnp9BdL4jxcb9Wz36NvteczVfmipDml832LzQ+5mPXv1J9ab
/zRb+9x+k5mPpon3djNvDVN3dSPHHcZOmuZOOsZ2Oy2d95vZ7zbkab7kqutz
IXi3IudsuRGhmPOjkfUWU4cdxvbqL623Ip9s8aMp50ceZ42j+b89TL4MNPpH
mOHHSZb/rHf9ptf6g3GuypjlPAhhiOJBZVe3MUtslPNXB07caZnMbrHYeoHC
bpHc+UOR+zelD9XCoRM+hIX+jAUdw/yOYYGnVL1PYG+uq3X6bmeyzoACqFNU
xkGQe4hN0WATN4D3P4D3XwN4zwpfTAarUMEYGaRUsAoEMh6K4ZGo1yWRsBjV
5eVvIiqPE4J70jZrROOu0JnO14q+ALrdluXfRyPvc7cwKZ9TcYuJt6h9EHTC
kLRz1neOzETi/P8zUiGPxRCKE1TQOOnk+SBVjUlWIZJU8ERVOnOJIm2JLPUD
PGuVIvczIv9rIv9f0CSTRd/LC9ZJCzQVZcdRT4kOQ9DNBd3WVDuHbDOnOsxA
rxXosZLXvhjPudef87C/ylw8GALIfEDXsmQrS/bT+BAu6qfE/WjGmaIbEG0M
0UiQdQqqRk43EIp2Cu+g5S2oJBYapKksMBwLegPmjIe4/Ddp+XlF9UnAP4Ea
VrSdBO0X0KxSCOTmGwxcwTUgsQ2/M/zLjOAsIzhFC47RgiMU//CcEH4FRwD/
MFu/f06g4QAQHERBaf4Rsu4wXntYVnsMrztJCM5RTb/iTQ/xNhOq25ru96AH
Q9GQyplStJRGDRlaUNsxWREa8j7mJWrW7889VeL2aZ6VKgQyhHCxNVLhnDeG
D/IWZFktS+WuSLJY9c5idZzF5zGW30dbacZY74212Rdtsy+CqxvK0Qkx0w42
1Xplpjwx2RlkohlorBFoqA4VYKDh8Xir55MdPk/U/Z9rBentfPVS97XB7lDD
PW9M9keaHXxreSzW5lSiy+U07+vZQbfzXt/KDLmWE3o1/8314rd/lMbcroi/
U5P4sD7lET/tGT/tiXi8QDSWPzmQPdmfKx4rVZZ+1MonGv6mMTWL2rgpGwcJ
yFnUyYeSzR3nWvo0z0k5urRJOR8EtcREuBbVQRrPjET1t7tDGlcWWLTVeEz3
xVEoTlWOyjrQJmAdpDE93QAhDB0yM1MPEIprwGQJM5pG9r+VdfnLO13wTluh
wFjWYgp67cCwO+hxljbwpAIH0OsDvTEz5AFF9rsSfU4orX3MC55APou77PE+
N2m3q6TTXd7jI2r3lHW6Sdu5sjZT+FZQ8lYzWTNH0shBRc111jN8V1lnCLwF
gMlMcjxXNpKLD+eC6RIwmkP1psu7U6RdCbLuREVfEgLyGLwFJ5JdIWxvEALp
kC/odSFbONNl9xT1eqDViqrliAr05UVPyJLfpTn7Z9O/U+SuVmQvIjJV2Iyl
TOKHbPyXIEtLUnlN0WMJpl+DmXcA8n+yEIzlyHpi8C5fvM1cWveHuPSAonAb
auGV/YUi5SNR8qqpzHU4XAMOwiVANhjNBx3RoCcA9FmBjvvy+ouS2rPC0rOS
/DMg7zJIP0S8+wYkfESGYuIADNK4N/KfcS5fhYXsD0m4Yxdx0zzwmoXfRZ7f
OchhjvsJY8fD0BtDFLuEXTNwPHDfXMPY5fBLh30POZp3zbY+4u54aq0Oafzc
Tv2pzbYbht9De2zgusXCV4Prqw1pbOqiaeKsZey409R5t6nDbmM7HUObnYY2
Wka22sZ28KhpZLPdzHaLuc1mY5utRrZbIY2NnbQNHTQhk19yN5pY/sTl/Ohq
vd6T+4Obwed+xp+n23zdavPhCG/+KE91mDtvmIMNWWAjHNQadMgcg5rkqYns
Fgut1MRcFcJmPumwhPD+ctD6o9wbWMRx7M1JLOwUFnQCC7swP+g89u7PpQMh
WnTWzyD/OMg7JE/RBpk6IGU7E/c9GfVPKvITJmIFHbqIDlZlg+ehEX7+GBWk
RoWoEq/mKcJQ2woUQE5Zqcj9nqzYj0LHbRxRh9dUV+h01xtRdwje6U43v2Sq
LlHZO8jE1VSMKoXGLaGYg/SvBpsqc1ieA/L/v4uHK3tyku8wNHzkPZLiHSZ/
j8new89dTGWspLI+JbK/IHK/IfPXEAU/Kgp/wIu/lhR9LS7ehFcfQJ3Wep6B
bgO6U1/R/kjccnem8Yak+U9F62NhzYORvDu9OQ9aS00GO/ylMykUXk6TjRTZ
SSi6FNJOXNhEQW8pEwAFnyXqaaqWYmoUbAMJugi6G8eb5WK42q0E4kLUf2Ak
XNLEE9c/E1X/Lq46rag7wjTsZfjaVL022XiYbTsHWq8wjSh6jDbyUM3db2jz
rv4UW3+cbThMNRwk6w/MiW04xNYfpGv3U1W7ldKBoqt12do98Kio1MErduGV
u4nqfWTNfgJh+apC8CfdogfvNUS7E9ETyA7Hg8kcgDonVAJ5NZAVA1EKmI3B
h7xn+HodsVq1np/m8xbkclXyuFiuJVI2B8s0x9LMVZNNF8UZLol6+UHEi5UR
Bp+FG30barI91Fz3DWdfhOX+MM7eYLM9gSa6AcY6/ka6/ka7/Ax1fF5qeb/Q
9NHX8Nbb7v1sh9PdjS73tno82O7zRDPwuXbIC51QA51wo91vOQejLQ/F8o7H
259Kcr2U5vMrovGrO1khv+aE/lIQcaP47c3SmD/L4/6sTnhUl/xYkK4vSH8u
myqVTBRPD+ZPDeSLR8ul49WSsRrZeP0cjaHgyd80JoR8CGEUUEJHqGaouWnR
lBilQ/xnWpMA0pgU1lLC4vHe0O5m5/oyq4Yyu/6mYOlIKqoZEVWwMzXK3Aw+
mEFB479QPJewMQONcT4zkgSdqrTDTdZmp+jgSpqMZhteyJuMQZ895J6iyU7c
YCdvcVZ0u4FxfzAdzAx5QZMMxn2hIIqlnY6KXldm0EfS5Sbr8JR1+4pa3Kl+
39lGC7zdgu62UrRZSvjGszWGkgYLeZMD3uSmaPenB6IhEpmJfPlogWS4SDZc
iH7LE0Uo83yyiB7MErXHz7ZGS9tRyILsjpisdZU0uzLdHvJmG0UjV9pgLG4w
AF02YNgbdDqDSiNQ/hCUnKcztlHp/2Czl+DJmCwBI1KWi2JXy+J+AmXXQJcj
qtpG7fEzwVQKNRgl6fATCuxBjzVoe0LWnJcXaFG560DOv0DaR+S7JdKEFaKM
H2VVV/EmDtUdqmgNmym1lZUbSYqvS0rOjucfmijcP569dzpdR5GmK4/9SRz2
AYhdQr7CqPB54qjlEykbYjy+i4o65RVzgxd2yyLoF47/ZUhjh8ALTsFXbAMv
QvnG3nIOvfq7/oYX9vuMXQ4hb2yledt4wzMbrZeOux5xt0EmP7Hedv3FtzcM
v33hvMkqcCfPfxeksZmbhpGjhr7NdghkC+c9Fs77zJ32KrGMmPySh/IrLGy3
cuy2mvC2PLfY8Iyz6YWNuqGjtoGD1gvbHca2O0x5myytNtlbb3TgrLEz/sb3
xUd1dp/22i4esls8bKM2zEVTKUe5iMZ9ZtiQpcqk9cIpqwWT5piEizF28yn7
+RKnpXLPf7a8XJB4Hos9i0Wfw8JOY5GX50dcU0l9smIsfCebfQzkHmRz9soS
t7MZ6iBpExX9DR72MR66nApbwoYuAK9UQch80gej/VTYoIV08HwIZOiQFa8x
2RuMTl6G8hzKtUDjVaLNQNzpPNMVMtX9Zqo9BF5jTCeXrPlVnLZVGL2SjMbA
e8hVlEExF5H42xXPhZEJ1BRoIZm0YM4nK5Mu5tNJ88mEeXgCgjAUPEGpccmL
ZUlL6ezPQP63VN4aRfZ6Rf5WskATL96Kl6+RlH0vLlVX1J4AbX+C7hd0h6G8
RU/S+nBKcHO09pcZwW2m2xD0WrPt9mS7h7gnVDgcL5/JZeRVFM7HZfVSYa10
pkoxU0XOlFEzJSgtSloFiHqWElBUMwv6SNArJ9tlc2FkRTUQ5THjcbPNjrN8
o9m62+K6izj/Z0X9bmn1NmH5JmmdjkJwlG46TTecY+ouKxu1XQeNv4Gas6gz
c+0RtkbJ3hpI132QsWgUNTyv3ENU7FaU71JKm6jYCWp2M1U6ZLkmUaZBlGlB
KUrVZSU76fqztOAXtukO1fQIFxjImrmKLujEQugR5WgeUQ6Q5gE8D5l/SQox
4DVTfK0jfGOhw0eZlgsyzLF0UyzNBEsxwpIMsfcGWKw+9uapasijBcGPlgY/
XhXy7Kugl5tCDLXCTHXDzPe9Nt8bZLrX3xjJx0DX+6WO14tdnvo7PZ5ruD9T
93i6DRpjp7vr3e5t9Hy4xe/ptuAXmmFGOyNMdaPMdeN5h+KtD7+3PZroeCLF
7WyGz5WsgOs5Ib/nvL6e/+aPoqhbJdF3ymLvVr57UJP4uC75aXOWAZRC+YsQ
j5XMDBUKh0vFo5WQxnORijn91W1eiAZ8QN7S8iYKF1A4PDbB9QstQ4PqoCgR
akQMpC1oJ07YwAjryOlq6XjOQFtAJ9+pucqhm+89MxjPiouAtIKZraCna6ip
WijIYWiPmekacqKSGC1GW4FTBWAkleiNlLX50L2eoN8FukRJkwHeYkR3cEA3
Dy4JqVZ71Ft4MACMhYDRIDDshzpRjwaAiWA0BWnEFwWXhgPhC+j+ADD4CoxF
gIHXeIeXotNR1mopbbKcqTOR8jlyAU9Sb422oXtDAaoNSUM3gokifLQUH6uE
PxXyxsJSlAEylIN3JtP9aWAkkx5IBJNp0w0+AyW84XJLWbMD6Hdj2q2hzZZ1
OLL93qDbA9Rz2aKHqB9Chi5I+jdIWoq6FqfNI5IXTMd9PBW/ns4/D5os2Y5I
MFUIxAXohi6KAuPeDLTK3Qag5Q5RcYYu3gcKdoD070DKP1Au3PulIPUzOnsD
WX4Wr38iqjMT1nDFFS9n8m9Li3+ZyDo+nH1wOHvfSJaOuECHyVcnk/4lDV8M
fR2IwIhwFUn0x4OJG2O814dGnPZ7/8Ak4DdTv2s2r36z9j8PUewSet3S66x9
8GWvtzeNnA89sNA0dDpg4oq88ROe1hOexgPOtvsWW5/wdkDdNdv4x8s1v7/8
9hF3jbnndvuQvRxvbX27Tc9ttjy33qZvq/7CRtPATtvMURdimeP0l7jOuhzr
LTyH7VwHDSPrbY/N1j802/DCTsvUfd9Le21UKmKzw8R2h62TtqOzlpXVBt6z
VRGPsFbHlc1W8wfsF/dxsUl7tTErbMoWuuX549aLJ2yWjFsuGDPGJo0xmQVG
2agonBbIXVeInVe3vlyafg1LuIQl/KL25jwWcQ3L0V8+GaEOsg8xmbpMpjaR
so1I/AkaY/btl1TEx/Sb5UzYYjZUjQnCKD+M9VcF/gsITxU2YBGIXAFCFxLB
GIhBg+2IzJVU0Tq6+gjR/Kesw1LY4zPT83q8PVjU7Ud12Stqb4kydojff4p6
HUdhVKLKnAGeiwz/Ha/4K6XtP555jsxM6iI6bRGZvmBO8JxKX0KlL6cyVkmT
PiIzv2HyN9J5O2RZmpIcXbLoKFv9M16hKy7fJas8TdbfYZqMFQJLSb2lkG85
02gqbDYern7cX/YIb7MD42GordY4XNDlob0JaQOQ1hOz1ZSykosRFpNjWex4
FjKZkwXsRCm68sWtQNElJzrkTCfBdFF0B6DaANUC8Gpl354Y+BWTt5tN1/yB
RlPVHiEaD1DN+xSNB+jW46DtLGi9BPiXQP0VUH8N7fFVngTVP6M06fqjoOEo
qDtMVx1EU6VK9+DK5sxU5T4osmIvKq+uOwRqD4GqPVSZNlmqhVKsK7RBlTao
3gv4p1EFX9OvoOkm03SXaHkM74nyLgtRp41swJOaeMMK3wN5DiBKAV6GTE43
V1x0kf9qczpvRYKRSoIhlmiAvX+BxT7Dop9hkU+w8CcqYY8XBT5Y7Hfvg6An
nwfr/RSovyXEQB0yOch4p5/hTm+DnRDC3i93e73QRSjW00YofrIDotj90SbP
Rxt9nqz3f74p5OWWMOPt0RYacVzteCutVMf9qc4H09wOp3scT/c+mel3Ji/4
cn7otYLw64WRf0BjXBZ7p/LdvZrEh9AY16c8ac56AQV/I1CS8bLZIdQ1CNJY
Oo4KQMiZpv8C8v9FYyWK/6YxKUQDTCGKyb8a0dfgk6WiofT+Zv+OeufWGpf+
5kDxSBIrKoG/fdQ8cwZxWKkadqaWma6mJivpcbgOKgTDyWxfDN4ZJGt1R/ls
gy5km4Wi1VgiQN6Yaucomi0VzTyy3UHR5gxGQyB12aEAxN6RIHQcCmAHlVkW
UGOvUPoxRPFYJNv7St7qRXY4y1p40MrKm+1Ajxfo85c3uhLNvlTba6rzLRhO
Qzuzwkp2sooYr6DHK1BUCl6io9lgII3uTQYj6WA8kx1IoPtj5O2v4HuCwRD4
iZDG0gbT8QqDqSYnabsX0eQsKdKTplwlEw6ChI3g/ecgeTlIQJ1sxfErJ979
OJN5lK7VQ4lzkxVguh5+Lt7hB1e+sqYHuOBX0HJZUX5IlqNBZm0FWRtB8tcg
6ROQuhIkrQTJX1DJP8nzj+C1f+CNekSLMSPQo6r/HEs5OZZ6TFJymRFcJ2pP
y0t3ocVs6qdE7AfyVxgegs0GYoNBywRh373xWP8u7aZ/0lPHmMfusQ+9Yu5B
FDsGXXZ8fd064IpHxE23N9cNnQ4/t9kNUWzkfPCl4x49O52n1ppQ0B5DPeJC
Gm/+03TTXfP1DzlrXjhsgCjm+ugYOas/s974lLfphZ06xOxTy21GtgjI5g66
JrY7Daw0XnC2mnE3W9pshTS2cNQystPQt96hZ6313FYbvjk8PuPteGS+8bnF
JshkM5tt1qbf+D5UTTdUa3Nb3WazqM963qTD/AlrSGPVMa7aqNXCUavFIxy1
URNEY7EJJudgjPN8ym0Z4f7pqNXKmgdqmb9jqX/MS76p8u53rMx0pTB6B8jc
TSZvI5K3EAkbmMR1TMy/2KjP2MiVzJtl0Bgzr1TYQIzxwyCKgd8iykOV8p4P
QpZAnyz3xujweVQspkhciMIFJZoKaAtb9aXdzuL+QAhkSV8Q2eekaHwgzNUR
J31BJy5gUNsf1b9R/N8c/ntf7+9gBSQzGjOdpCJNnidLUcPTFtAZS0HOSjQa
r+hfZPpXTM46UKgFivcyRceo4rOg8hfQ8DvLP083XEKpC23GoM1ewXcS1jpO
19jPwJUjXFd2OIuancjOAJQUNJgIRiFvixGNxZVgtoSazKKnMsBsMhqIMxmN
ADseD0YS2ME0ajCfGaumZxopRTvJdjNsD0V20ngHGsEDmUzyEe4kKWAkUNJm
MVt/V9Twq6zxskxwGm85o2g5TTZdQGP1+FdRDUjtFVB7EXW7qjoKqo8ANDXv
CKg8wpYfocoO4aX7oFAZSx2a1kRVHoJSjnA6guaGlO9BHUQrdEC1LqjRATV7
UZPkhnOgSZkI1/wr2/o72X6b6Hwg7XoqH7Agx92p6TBWkgoUkMa1QJKPdvRa
DUdzLta92pFltzreSDVGH4t5jsU8xaIgih9ioQ+w0MfzQx4uDn74QciT1aF6
P7x6sSH05ZbXRttfm2iEmOyETFaGKZDmIhV++pq+ejv8nm/3fbY5QG9jkP76
V4Yb3hhvfGuxOc5y63vrbQk229OctNOcd6a766Z77M3wPpDpdzQv+HTB6wv5
4Vfz3/xaHHmjJPpGZdzdqvd36xIf1SU/bM7Qb8p8jqK7cKkyXvkfY1wFaYxC
xDNNfwN5LoCMJGmDfvgvVyxXTuVAKO6EQriebaJn+NAS0zPV1HSZdDR3qud9
b6NvZ61LR53HeFcUPpmJKkTEyrZv4gaU0oYccjVEMTPXjwK6xJFkqgeV3UFy
4q0uoN8DDLnRbRyqzVxc/4JoMWU7uFIBtLVmRLuNtMkWDAfTvYFUTwDbH8gO
+JM9XmSXJ93jzfb5QsFnwVSkslPKW5Qw3BNIdXpQnS50lzvT5Q1GQsFoFNkR
LGsOEgteiQThRFcCuh3AnxD+MBOlYKoY74wlu96iK3kiA0xmol2MsRSmNxoM
w+t2bjJ1JOj1lvGtRgqfDhbpTQpcZ1u8oN+ezX8gTDpFvt8FktaD5K9A0qcg
fpUs9tOZd2shiqWVD0CnO9oKnBGAiVrQFy9vcZQ0PJytODVToouXaclyNklT
11Ipa0HqGpD4FXj/iRLFn4D0H0GGJlP6M1n/m1RwR9JwV159Q1J0bSbjvDDn
ChA8Bf2GoOmapEhDng+/v59Ko5bOBqqJg1VEocsGQ1eXBX3r5/BjfNqfDq+v
20c9cHt73y3ilnPIVUhjh1e/OYb+4Rd/3zbw4gv7AwaOB+bCFPr2ulDKMIWu
gdNueKJMrtj2iKvxzEbjvvmaB+bf6dtutPLR4XjpPLfZBGls4KD51GrLM942
CFtDGw0jGw1Da3UDrrohZxvHVsPSZru5zTbIWxM7TUN7rRe2O+F7PrbShO9v
6LwHWmX4t0wctMydd9nabnJ6vMz7Ntbo82293bI++wWTjqozdtisrcokT21c
SeNRzsIxC5UpU0xkiolNMcIWoxwWEM4rxI6f9JstL72LZd3E8h/Pz7iPNViv
UrzbBtI1iPfr8fi1RPwPIHEtHfUZiPwYRHzIhi+BKIbGmPXHgN884Dsf+Cyi
3NRIV1XaU03ugomdMUUARkdhingVPHkVkfsjvGPi/BuyTnNxr5u4P0jSF4i2
klv0hQUHZpO/IZKWgdQFVKLa/+mN51zxHJP/3tGTxGPSJDVJiposbaEicwmd
tZzNXgWy/8HmfAlyvgf5W0DJblB6FJSfRyiu/RM1C2q9i6rsO43QlkqXJ2jz
o5sDyNZgeYs/2xMK+kPR2Ny+CNDzFvTGwS8XGE5EU84n34PxKHIggBz0Zkfc
6EFbMGCN2iAPOoN+T9ATQndHQu9BDuXi01WkrJUluhi8m5J0sfJeQA0AZgCQ
bUBeA2YyqcFwotuT7nZgeqzoXiOm9wnRdQdvuUk03mIabwP+DbbmGlNxni07
DiqPgdqfEXVr4PlxtuwEXXYMLzkoL95PVRxBXej5Z6iqY2TFcVB7Eg05rfkZ
VB1C8/WqofajuSdVe1EtKnxlozIRrlXZs6jtItF5RdF1He97iA+Z4aOu1FQU
asKJ1wNFDZAlgEl/0MWdKLpRE6qVxP04Sh97+xyLUzIZAhkuvt48VY3UWxL5
/IOwJx9FvPhXxMvvIo3WRppsiDLbFoESKnaGWei8NtdFMtN5Zbor1GjnayPN
1wYarw23hZtuijTb8NZiQ6zlhne8jUk2m1LsNqU6bMxw3pLusjXTTT3TXSvT
a1e27978wMP5ISfyXl+CQC5681vJ2+sVMbeq3t2ufX+vNvFuY+oTQdojlBch
rpdNVIlGyv6bxsR0o3IGU8vfNGbFXYykA5rh/xWjgChWVu21s8JmaqYOopiZ
raCmikUD6RMd0X18v84a915BoGgogREVoqo9UTVKM5Y2sSI+ovF0FUQxO1uB
btnTeexQNLyV4+2eEMWKFifoOcGgB9VqSTSbSRsMQbcV6LeV8A0lfGOm24bu
doS8Jbr8ZG1eik5vvNND3OIkbXGmejyILje8w4Xt8Ub2ePINGA0DA8rpdd1e
qPtlfwDTE4imgUCiDsRQ3dF4Z7SwKULUEsUMpIKxTGSSh+BJGt39hmgPITte
kZ1hivYwqisCJXCOvUcleENRYCIGDL2i21yENebDBU9Hy4zIbn8oqsWGrHyE
urRl7QVpm0HyD2z8V/S7H/BkdTz3FF7xkGy2pXtCIOQlzYnypnd4sx8O15i1
N2aLD80WqOMFm9iCTUzmWib1e5D6HUj6in23mn23ko3/FMStBel76NIzMyXn
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
hd4+5BO5OyTmZOCjg2c95p90mHFBssQleC0UJO05nyWOAaucAleflyx1Dlpz
1tvquPs8eLSXrbjgZ33GazF8aO+/+pTY6pxk6UnxvIOOv9r7L/S8bH3M45e9
tl/b+k4XRVh5X17hFrTY0W+BR8iyf3Kfw1bILq2VhK10k8539JzuIp4p8p3j
HTBPGrLAK3AO9Mau/tM8gmbAI7THdj4/2vtNPeeLWp26ufxLfNw86hTWc2OC
JsTSEGCsl5lqpaYDElODnzkjM4GumJYY4d5GBhGm9zCCVlbnaqxzNNbYG+vs
zTR2JqqzRv2nMXjU25rgF8z09ia8eBjnbQF9Mu1pTHpghDvK44MoBlJLiGJo
jCGNSXczSGODsznhMYzyMcbFaE9Q5Wqidh2mF4/A/YbjoRYD4Zjh4Ue62M/6
kn4YyLPGFQfxBidtQ1BPzc3++ofQIQut10iFe2/Wjs742d2x32gSxvQ/xfBY
TEgyYeJMUMZH3FjD0xHqZ5gm3liXNMKQPJZ99Q3I/RXkTRIyf2TSv6FefQVp
zGV9y2Z8i6d8pUv4Wp/0FZ/+DQ/dcvq3RPJX7KvvuMyJmsTxRPr32rTvNGk/
MEVzQPkKIn81X7IT1J0C9eep3D36rJ1M0V+gDs769/RlWb1Lm6YqnKMpn/Oh
YGZn1pxe6ApqjqOI/c7Iwdh+iGIZeOsnvAkQ3oaDd5HCuyim4wHV8QQlTGmy
uK5kqiOR6Uzmu9P4vmJOA10xDsAAELoA3w24PkBqAaFm+1qoD0X4+6eGjmsU
nJy+v41ilvqSQXsUaL8qtPjRdQ76qoN6+Taqagv0xvwgkDn5Rrp0A0qjLtuC
PLByH3h9AdJYUJykK2zo8j2s/G9UQhmiuAoON9uRanYAxZ/CYDYfUOwG1XuB
4gCoP8y2nKXfidiBywKZCPgywL+mUUxIMyAUQJUM+qPoVveOrI3y6xOKgocV
hViUhFnm+mMFQSbwJEtmmuU3LN1v9CvpZ6nSCSnSiYnSXxOkvyX4Tk/xm5Mi
nZnkOyvRd3qiBJ1AFENBFEMgpwYvSAtZ+DJsScbF5dlXVmZHrs69tS7vzobC
e1uK7+8oebCr7NHfFU/2Vz+3qYs9DvU/0LhQ3VkEaazvrhiyxxDFUGR/Pa1q
HKQxAjKtrv3faUwPFELqat6laN8l6LsS6J5kpj+d7s+jevPJ3iyqN53pTWV6
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
Tif7ThCvLtKDt1EoW9MAiDagFqFBn6o2oLirfpOi6AgYbrTsuPUb/+xHwtOG
3JMYOxdrOcVoPGXceGpm05nPWs/9h3PuR+75/wqumAn+2sZD2s79azfv2j7B
LVvRPQfJfRfRAyg34X1X8b1JOYvvO/Lv2XDvWXLu7mu7sxeKc9eKe8+ad9e6
/akzFKQxIeNO0lgx3CofZMkG2BDF8kGubIAz8X5SPPmAQDkoUQ920CPPwVg/
kL1GQJa/ArKXf8/Lk3XTsnbthBCM87WjbHKgTvW6DNJ4ouvSoOjYa3Zkf/OR
503evQ2uvbXOvdUuMn4IivR2xENbS4sDNIL9So4dfEgBAuQqqRZXTbOzutFR
1eQErSyqhRQeIPleSpbLeLODrMVFw/PWig8CyWEgOkq3HSRafQAX3kyPQpxS
bV7ws3SRXld5g/VA2Y7h8h2KJkuSZYezbNUse/QcxINffO9wycbB/DUTRRvx
yu103V7QAh2yJ8nar2o9qGYFyFlB8qYj2pbDgLMfsG1RPKF8LlH2NVn2Nf7s
G7Lgd23hCrpoC1W6C1RCe2ypbdpL1O8l6hy0jW7wS2nrduOlq1XP5uH5P9AF
39BPP9E+nQ4eTaXuG1L3DMA9Q3DPmLxjCCCfIYTv6BpgwvWmPriuB25g4C9M
ewl1CdOcxTRnMOIsQ3OWCQUum4ALhvQ5JnVWX3tBH1xkgksGaL1opD1vQJ8z
Ik8bEaeMNbkm6hxjVY7hRCb2IR17k/lRXcLHF6I/z8n5M+PqrpTrthnn7DNO
22Wed0g6axWcYx58YkvCye1xmVuiMlGPoLDjmyCToQJT1x1NXgfhDFF8JHE9
NMYoVnzKEh3zpZrDTdTx7QcjV/iELfcNX3EoaiXce4csORyzIiBx9f6wBR7B
v3iH/+od/tPB2J+jTyw7cWNnQs76yNTVIQl/hiYujUhdFpm2LOrYsrjsFUGJ
8wISfonIWBCVuSAye35E1h/B6T/DNSTjl4DYuWHBPyRE/nY8Y2lc5LeRvozb
4SYfcr4gM0w18X/T+F0Cpkr7WBZn+j80jmTIIw0gjceC9Af9seFAA0jjPi+9
dmem0MakeYdxwXLsyWKsZoMxa6cpb58x35ohscc6XbAX+7EPR5CXfufHfHfY
COq9n/EHf5MBfyOI5XdBhq+D9F8HGbwKZL4MMOg/ynxxRB/qZYD+q0DG62Ds
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
j0FER604Fr4oMG55+kXLlHNmUamGwXErQpP0QxPXQBr7xhr4xCIaQ0THpq4M
gzSO+k9U8pLQ+MWhccuSU1dH+3yVcWRebtQnLbHzRiMwVTii8ZQ/Rx6mOxbK
6w/iDIXqDgTyB4/rjHjPGHDT6/kvjfPtuU+ssOtG2PlVcxN+mRXyBRb5byz+
P1jSD1jmAuzsIs4fK3i3V3GRPTbivljHeWOK5Vpw82w4eXacXHsszwEr3IiV
uvI09lgHOmRN1IIPHbJ0Nw8BeZ8uAvJ+Xj0E8kF+vbsOXGsPcmrcsNqDWJ07
1ujBafLEmo9yNMJavDhtx3gdvlh/BDYYj41l6E5emjd58+PBWx/3Pviq//US
vHoL2+kLRjLA+A1y9Dk+mk9MVJGTjcREE0QxMY4awrCyGgAd8lgxGH2Jt54f
qQjsy9s6nG8py9eX5y+U534te/OpPPsbpuQ3ULEclC5Tv/tt+vVCvGgNkNjI
y80UQktoa5Uic7rKjBYZ0aXL6dJVQAytpj2SFLXQpCvtKZEd6iZU68JInWiJ
I6r+kDoSVfZkjQNodIVwZmsdNdNOtxANaBQI1RoAOlDiMdMRRzaGQhrTTR5U
3U6ixoms3UjXbKNqdpHVu3HpbrVkj7p6H+pK0XgINB6EF9UVriqBPVFuQwsh
aa1BzUZozknRZrXQQSm0kAvWKgX66oo1uMiIEpkzldasaANTYUsJLQiBMV5u
gAvXEmIb+BOytc5QTJ0LaNqBxjM17FHX7lfXexBNx8mWQKo1iGoPZbvD6d5E
euRPIM9B4WKqjcV7aGUP5BtQVLCjT4mecyOVfh3Zu7vf7hvI9hzKDhzOD+zP
9+jJ39+Zs6/97d727ANduYf7Co8NFPkNlIQMlIQNlkQNlsT0F8cOliaMCJJH
KjKHKs4MV10cq74yXnN5vPbSeO0FqIm68yPVJ0eqMwHZR6u7SQUKVkC6klM1
9EQ1NVH1vzQe6sjubX3d3YTU15o31lsGXTGkMTXVgH5UZYuWyf8Fcj2kMaOU
amlMK8sBIQC4ADWsk71iOm+oa5OJ6jBG4s2KD7CV22mhC1WOQsd0ibOGxpvo
4m106S5kgIW7acF2omyrqhg+kXdDFKPYRQGSKseRzN3IQMNcuIMs3kGXbCYK
HIg8K6bQGiDZopqOXHvylbX8yXr5k3XkW3NQtAGU2xO5pqDYBgg2oOd+oTHI
XQFe/QZRzD78HPz1MXjwkbYJPHFbj7qlh9+ejcIXL38CWT/iD7+Q35qvuPkR
ymG7/QF49Cl4/gV4+hlzey5xXZe+OROKuqbzf9EYcpg+zWPO8KElVmljvKi8
TgcKohjBWQNhLZMhe7X41cYo4HV4EUqLYs3LMByiOBXRGMWZM3nwojyZM5mA
IcVDGvOREnS1NO4Jxlq9sEYfrNiT+5ebzuXD8zN9vs+IWX32okPsSbPoc9YJ
f9gn/uEUdc4WGuCARFPvKMPgdIvkq66hmdAPrwnNtDoebwSJGpRm/s9sJkhj
n3hTbed5SGP/RLuok9vizu2IOOECvXHcedeo007QRR8MWQZ1OHzlP+lwXjFr
vWLXeUQhIHtGmRyJMISk9YlZ5RW28GjIgph0o9Tz5nGZ60ITVoUlGYYkGPhG
r9QCGa5hiaujkpaFRv8SEvVjeOKSkISlYfErk1IN40N+TjnywW2vmRXhs8eS
3puM4CgCOdP+nOlg/kQofzAYGwjmDgTy+o9zh7z1et11uvfOaN4xQ+yiU+DA
e2GJ3TLCblvOv2L6WfJCfsS3WMx30CpjmdAbL+Ze+Z13fQXn7mrOwzWcJ2ux
F+uwt2ZYtiUGMZ5jh+VqHHKZK+SwHhRksni7jng77/8A8h5e7T5+rdv/S+Oa
A9zqA5gWyI0evKYj3Jaj/BYvLhQEcqs3t/U4rytIrzdiRn+C7vjp2ZPX5ozd
nDF0b9bQs08G33wvKzehGt3Y7lhUNTb8AtngiSpIYEaGEvu1Yiaq2YlKICth
h58r2s7J68PVdZ6owLnSEq/QJ8qXs8K1oFIzYqlIX/12ifrtclCyHlQ742V2
qG9whQMutmUk5oRolbr8F7z8NxRGllhpggA2oNqOEFupKiw1CWP2kMDwvT9Z
5UxWuarFruhEvmYrAnWdM2h0oepc1bVbUXJa01EIZKYtnG2PYlvDmZYAttmL
bT4I7TFdv4Osdqeqj0Lh1Z641Etd7UXVeTMN3lS9B1V7AE0slWxBLYkkDkBq
B2ocCKGtusJOJbRCXeVFZpoWoCjPmRFborl4WhoLrMlyK0qARvuh2dM1+wAK
fewAzVtA2zamZQdRv5Ood0fDodoiQGcs6IoFnVGQxmRPDDF8mZ7OAqQQkA3Q
ptKqLqBqBUopkL0DI7cU9bF9BR69uZ4jBX6jBWHDecEDBUd7Cw5257p15Rzo
zD3Yk3+kv8hrsMRnsMx/qDwIarAseKAsdLA8bKQieqQyYUR8ckR6HnJYVn8J
Qhip/qys4Zys4Yys4TSg+hm8R0tjSNf/pTGUarhc1l803JHX2/K2q/GVRu+G
u4qnh8Tq8Rr4aEYd5uUt8Mb/scf1rKpG08S+kpQLaRz+Xhoaq4ogjemOa6qa
pL9pXLUPVG5lhM5MmRNd+jeNqaLNEMjqws140SZCY4bVxZuUhc5AtFNd6DL5
zk6RY0fkO1H5TnTBRqbAFQg0aW8VO6kiJ+iNiVxzNtcS5FmBPDuQY8e8slE9
N1e/MGOzrUC+DSiyVL0yIN6sZt6tBm9XgHdLwZtF4MUPzMMvidsfEDffU/85
m7gxk7w5g7o1k9GM5wBZX4Osb6hHn8lvvjd1Yw5+933m4cesBtrs3TngDtQs
TZ0dn7rBBTf4aB7Hec3ZnAbC4JwuuDQbXJmrPXQjTvCgJaZPwz3KlJhKwqAZ
xtN0VCk8ZTKXzNCjMmcQ6bpw889FdSpfex1egS/WhDW4eDqkN6Y11VOJ2EQc
JtMM65xI4EFjPBEPacyDLqs7GGv3xVoC+KVe/L/2cy67f3Ah8MezSQanzlol
nYGW2CL2sl3cFfvgTLNjcYbavpfQFUeftYs4ZROcbg5pHJBi6pu4Dm58Ekwg
kBGKE0yORhl5hK+BOEWDmVKdok9tjzq1RRs3jjnrHJhi5Ra8HHJYGy7W0BgF
OuCNPolmhyKMjsaae8eiSSKobCR6tVfYYs+QX/2if084bZp8ziIm0zgqbV1w
vL5v5ArI4YDYNf6xqyGiw+OXIBrHLgiOXxycsDwsUT8ydmVi5KLU459n7MJe
+egNnvhyKEpPHsiT+2HTgagyGtIYZZEF8Xp8UUJF5yF++169xp0zxJt0i+x5
ry2wO8bYNbMZj7Z8e3H93Kifscj/YPE/YicW8k4v4l5cwru2lHdrOff+auzR
GuzpWixrPfbaHMuz5+ZCe2zHKXDilm7SEfyXxtAeV2znaoDM0wSQEZCr93Cr
93NrDvAgk2vdeNX7Of/QGNrjhsNYsydPS+NWbx70xu2+uq1+s9uDZ7WH83sS
sJFT2NglbOwGNvGAM3hfdyTry6nCNerK7aApHPRcBiPPwGg2QK0RBZDAzISE
mKghxmvRm1ZZNZBX0qOvqcE/ya7UqTqvSfFWpcSRqXGgRbZ0uTlVbEjkLaVy
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
qnZNSPfJpAfHpR6IxpXeo5XHRyr9RsWBY+KQUUnoeE001ERtDNR4TSwk81Bl
zKAoerIuFYolBv5/aTyBco/xcYlqVDw9XCEbEEJ7DGk81iOc6BVP9kumBqQQ
yKrRemKiiVW0oiQ3lOeG2tezqhp0kKeWMCSUGBDovRKkMdV1VVEbp6UxKdhK
ljoxZcgJs0Ub2XxXUOjCFNgCkTOodKEKbKZfmyjfWeC51qpsS/U7cyrXgnxn
zKCe8KuVTxaSz5aonv6mePor/moRk72YyVmEv/5J8eJbxYv/KLN+pN78pn6x
YPKv76YffEM+/45+/jX++FPm6SeajOKPtShmbs1BKIau+PZM/CofCkWM734I
/vqEvfcxeesj9Z8fjF+YSd35GDz+irn7ifrae9AtE3/MVV+epTqvR16eCW68
D+7MBzc/AJdnkuf4qO/EaT5zRgeuEMgQv9PJ2GQiNqFxsxC/EMXQHuMZuspU
CGQulIbGM+UJOlNxvOl4aIn1VMkz4DoZy5XFcEYjsMEQbDgM0hia5Bl4KiKw
Ko2vytDDT8xUZcycTOKh7kAxHIji0Tj+aLzeUIxuf4ROTyi3N0ynN2JGR/is
joj36gNmiX1m5njo3t6NXTn43ln/7xJDfo1LMow+aRF3ySHynJVfCppP5xe7
NCxjPUSxT4JR2Amr4HQLiGK/JBNokkMzbfyTzRBa45HR9YpGTIZ2NyTNHir+
/NbwE44Hg1ft8f3dLXi5NkCB6qYjDdARHkK3dUCSDeRweLpDWBrqEQcFee6T
YAJf5h66zCNsqVfEMkhjz6BFkMZJpy1DYlaFx62KjFseHrMUGuPQuBUBsct9
opYdj1nuH2+A+nBCbxy9IjT4t5jQhfDXCfl/CHsLqLjS7N37lAKRTntPz3RP
z0zLtEx3pzsdJwmBuLu7EUJwd3eIp+NGQiAh7q5AcErQEty99Hi9336r0n3n
3v+691vrWWcdKkBIivrVc/bZ+9lun0auFZQk/l0b90F95PCGUPuO8CHgk5t8
Cc1/0bh8i13JuiH5y4c+my3Nnko89P/E8mZr15XFd/0+PzyX2DuZ2D+O2DOS
ODCSOPgjcfRn4uRvgtNjiPOOwguOxKnR2CFfmYLt8c1pgvszJY/mSm015Kdv
p0IEr5cTecuI11blLScK1xJvrCpcTxRvFJRuFlRsE8u2ixSuEqUblmKnUO4q
AFXuEld7iKu9hbW+Io2vuMFb0uglafGUtHlKO3wkHT6izgCiM5ToicabZ/vg
V+sQMXBc1HFqyMC1fxju/6p/4sSWrEPaMNS619J+GvVc4/secQOvrUO+VchY
iXPUzfXI1Ip0NajrgUVzwFC2szd/Xvdr5958Z1q5yiRbz1W74TTLlhDU4MXK
V/PKtZxyI2Zg7Xak3opqN/KVK8zlc/XF0/SFkznlTE45naqYAqJlTnTFFLZ8
CipzQcVObOFEumg8Vz6Rl01hFTMo2RxStphWrGWrdiC1N65XNAdxam9T5Vaj
YgVZuQTMqlm52FA+zyxfSMkX6UvmMYoVXCX+2xnZJkaxla/cxVe6c4ptSLUO
VS9HFUssJcv54uWWkhWobBnuf1POZsocTUW/Gkt+oUpHm8vGwof4nmPVTKp6
EQ7/xPup/VC1NyvfapYtJ6vnGqunGVUzyYbV5npvc30y33IR9b1GZA1imxHf
aeG7OLaLAzzSDXgYBK7uu3IpzQF9ZXi/zLNHtr2rYlNH+ZqO4iWdxYs64QgO
uWRFd+m63rLN/eWufbLdveWeGMW4phHUVRzcUxreBSqP6CgPby8LaysNbS4K
aSgI1LwKUr8MbC6MBFlp3MGZmmm8zK7eSmNb7+L/RmNDd8lgRzG2x81F4I1t
NNZ3yG3eGGiMI5rNWtybh2/k1b69l0creUZuYcsRU4rofDRwj9Ie1cmiaEUA
VbqVKVzJFixBRUtwOtDrpdzTpdyzxeyz2Sh/Lnozj342w/DAyfDA2YZicMW4
QPHYCT2dzN4dZbj8b+7Wj+jBL+jJGPT0N/TkZ/LeN4PXP9fd+Dt1/2v0/Geg
seHal4M5fyevfYnufY1uf0FeeZ/MGY5vw10YxmQOwcXhC1j8eTvmrJg8KTKe
EJCn7LkL7zAX3jOdGw6WmDr/Pp/zCaAYXf0MHqTODGcz32XOvqM/KjYfd+BO
DcUcBhpnvm85bo/Dhw9L/gyRgCO1V/inMQY/DJ4WUAwCSwwcNqQIDClCcMVA
YyAtABlkO+mLBj8sAALDyX/T2JQs6Y/HFeP+RMKQJjakgTcW9yaI+xIlmMZx
0p4Eh644u/+msSZsSEPUezUB9mWe4jx3u9yNxLEN4kO7P9kf/Wtq2pSYPTNC
900PSp8SmDIuMm18/P4pXjGj3SJGe8ZOCNs709ZvbKMxmNjd0RPB6/olOduy
3YLTZgelzgrfsyjx6BowxsFpc4HGrmFjrEVm3IZh88bwmWCJgcZBKXMByDH7
l0buWRScPBtIDkj3iAYXjbntGvyLd+w4j9Bfd4f+HJsxNe33ObGpU0KiR0XF
jgqP+RloHBI/JihurF/Mbz4xYwLixgXHjwuJ+S08elR4xM+JcWMOpE1KCP85
eIPDFb9hstiP1Akfq8PfaQ4d2hZk3+RF1O8mtB6CSlegsRBoXLTO4fVy+0ez
RRedicfBXyCFv+nJlueR3x9fIj3gQhyaLNg/ijg0ijj8C3H0V4GVxoLMCaLM
iUBmXLK4OA6Xka87C+7NkAKNny20f7HE7ul8wfNFArDHr5cJgcZvtQI4LHhL
43UCoHHZFnHFNql8h1ThaqfcKa10swMgy11FQGPAstJNVOtpX+floPa213pK
tLvF9e5Ew24C/gmtPkR7AJ5zxzSOs0Zxpgp69gi7D0v7zr3bn/XX7ux/9d8e
DRebeH9cfSRq3ou6z6KBG0j3GBnzsbXTleJ97r0dqL8LDapwrkXTabIydrDM
q6/E1VIfZq72Y+uCkCYYqX1RlStTtgpVWqPSKjfh+3S1m1DVeka+3FgyX/9m
+mCBEyufaamaTZVPBl9Nlo9jK8axZeNR+RRLiSNfPJ4rnYDkk1Gli0U5i5XP
ZeRLWcU6XLmt2YUDjZsC2Dr3gYpVRvlCpnqBpXYhpZitK54K0hc697ycaFEu
RtU4sAhVbrau+djOylyZcvgxNuB1qLLl+HZh6VK+dKkFTwsuRrJ5TMV0psKZ
U7qw8inG0vEgUj7ZpHQ0K6czlctxLLPKF6n8UfUuTrneIJ87KJ+ur5lHNW2m
mkKM2gymKRf1wCW8xkK38YBEtoNl2ni6EdPMXIr6H6KOLEa731wdpa/0HVS6
9ym3d8s2gh/uKV3ZVbzCVqnoLFrfVbypu3h7d+murmKPjkLPtnzvljyfljzf
ljz/pjz/hjy/+nybArDygrSvg0H/bxoDh21ApvtlZK/M2FOu68RAHmgrxWot
BxobOivJ3lpmQM3Ck/t/oTFLyzi2Antj8jXqv2PU/N5fFm6u8CVLtgCNuTdL
MY3fLEevgMbL2KeLmGc4jpiCN/rn09nnM82PnE0PXKjHM5gn09HLGeipE3oy
kbz2Q9/5z8hrX+Fu4cej0PMx6Plv/KMfTLf/qb/xd/Ptr9gHPzB3/0Pe+o6/
+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
K+j7PzjuzHNcnUpfmmS79B197Rvz5X+bLv4LaGw786Yl8yVbmrMjXUTOvkSy
nUiWiJweQrKczCkcgLA1XWhM46uTKFU815o6HFu6Zb1jTRpBnxxhOTYUB48m
UJZ4NMZM60uBPVFIA4fjQRw6jgKReB5JECGQ017FdOL4YY6DQksUDno2hVGD
Bc5AY1h1gUy6moIyB/PADFtCBOZgvl5OAYT1cjDGHI2E6vAcCEdgRELM1cqF
OrmTViYaCBT78fr9+UDjTs+/aAwchrsDHC/QmElsQw6z0WOWxmCMAcVojL05
zR5MZbQXhpGZog+kce1uCowx3oB70RvX7xFUbacqtmBFbelO/rOtXPDGz/6k
8lbjTv1dAPIa7tnfqZzfqJwVosxloozFovR5oozpoqjpfPfVb0uDp4XuXyiP
nC+NmC+OWhQcu0weu1wR95vi6O9ekQu3BUzeI58qPviDb/R8cLnuoVN3Ssfs
ko3dFoA03i4es8l7FAB5nfvXG72AsWO2+o1lUcw0wUAa75RMcA2a6hI4hUHx
d5u8R8PKzgp5voU3HTgMTAbtlE7fLsY0OZbG232+3eX7jbt01N9pDOD1Fr/n
6f+2h9+7fuLPfMVfeMs+91R85hn8by/Fh37SdxR+b0d7vXXY9fXEPa+nurx1
eK3zgbVOl2Rf2kokpD3V1p4NBHY0pzmakklzCiYptWXRXTnW9lTSnQqosT5y
qY79/r7LK1fXCXJ+5J/56QVQ1mKn5Nloj1PAIc8cSK5gikE4OFp6OjYUOjOL
OjeHYu0xA2Qu7ugt5bCpbrd+xTy3/9nOA3v8cBXnwUpMtHjMbOoVrucXbxQW
reOgPV5NFa9Fb1y9iV+3WQArW0bN0nigkcVuCnsKuVCovdx6l4EEmyZXETjk
wX29Dk9+m7cAG2L7cVv8qaYAqllMdQVS/WHY40IT5qQPf0EXNswc9YL94HBy
9BVy/EU6aYglRWTOHKI/87Lx6vv6O1/pc6cZC381lm811nlbW8Is7fH2vkum
7hvGnms2zS2H8SF6Y0u+3VZGW2rsliaHpcNubLPpm206plekqQ5dq62G2Boc
dCsOP7L02Cz9NrPKbtXQ5j7a2IF9zEx1xFpH4GukmpAqQioIKSeOUoetyGYu
tJmKsfslqcPCOgR7M7G1YEkdI5puo+kWZLK5ARFkKCeGEqJ/RrSPifoOUV8l
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
BOnNIv1nifoy0dzADDr1faJ9iF15VXeJ5p5DfReEpWTGx0T/0K6CM8wX9I+J
8Qkx5ALJ4aRdedmhPOnoO2Tv3m/rCKXbZHSjt71qJ12yDidJPV1I35lkPPcf
Veqb/YkvKOOdlInOHceH9GS+1n/mg75zn/VcHNV9dXLntTktVxf1PFjd9WB9
54OtXQ+2dz3Y3XV/bw8w+YFL10OXjkd/CQdDM0IIP97T+nBX871dYKdhbbm/
p/WBa1eub1eef/8zCYvungLvrif72nJd1cV+yhI/dvCHRVNjUlWBzOrqgRlM
yhocrtT/P2Jo3Fts6C4EAZN1nc807XmMQ0arrO8qMvaUmfswyjGQzq1lUiwM
9XYDoLgF0wtNlfh/tSXLVhpue+JKHq6jb/4ENLZdm2m7PMF+8Wv6zCeWU+/Z
Tr/jOPWGI+slR5oTprclUSSZKeU4RpETAkeS0J4oxB6YJ7mmRIpOcrImvqA+
MNSa8BZJ/9h27C1T3MvGuBfMsUJrLKZPOOIYGh9EbwyuGPyweT/XEsNjV9Bz
GouYcLEQDthj8MMggLA+nKsL42lDuZpgrioQ54SCKx4cUQdiizg6A7BDS6+E
x/ZeUymcNXJntcyp04vT5c0FAgOHe32EPd6Cbi8+CCwxcLg/wJmlMXC4yxtj
xb1+zh2efPDDzS4UGGM2WNHkBgaYqvt/qcGVX7eXW7Mb+99W7qAGaVy4EXPb
WBrnruWy3vj2Sv6tP/6Lxtk/CDIXC5IX8hPm8Q4tEAUtFMqXvxrlMTImcm7I
gUXig4u9ohe5hc11Ucz0CJrjHTLHK3SmZ+Rsn/1zwAMDeNk8CjCubKwYsMwe
bA8AGzwJBBTFqK+cHSfNtL9gNu/YlW25udVvLLvft1MykYkST9yt+H4XuGj5
FDDGm/3GsAEQeAQAjV0lY/cGjNrr/80+ySigsSx8kl/gGP8gQPEEScQkaeRk
WMUhYwNCRktCvpOFjQmKGCML+UYR+m1I5Kig0G/8pR8DmRWBn4WGjgqDL/h/
uWf722czVtk0mYaOFFNbhqUl29KY7Wg5Q9oukpYLpPkCaTpPGpJJhaT39JK7
4n+f3Tbi1LoXT/5AJU6nUmdRrBPOeg7h9OfKnsU9NQdpfHYeF2v0sKEQho6v
/oRzmu6uEN79g3/rNw54Y2TvCs6dlVzQ7T84GLVgEmDYLhb3VyCQBzq8DdRK
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
3sq28B0ESwDIeAC+AO8BsfFRAepaeS+w8JzD2mMrn7k2fvMByO5hGkBgIC0w
2SVYHdgLHIZrFsssh9mkAnju5Ts/3uunmkNLL55Qbzo0t/XQzJbkmZcTF1yK
U2+MXiMVbamJ2lETvbM2dos0br00VrMuZk6t6LM6kYI0Sl4aLl8TKisJkhcH
Klb5f1DhN73c74sK4Q/lAbPKhUol/ouLBepFfotyXWbmOs3ItPn6lOknx/Z8
kLZLLlmLjt+CosEkr8eKW4fi1xKJ6+mUdTKH1uPbfNgwb0CnfkdnthDnthIZ
26mMHShbm8rVpfINOAW7qDx9lKuP8vQwk0sNJn6mbBgFgrc/+B3QTrZMDmdT
8CE8Dp+A91Mb4AFEVcwMIpxpvPO9FXoTNhsDXJeBuTY+8W+OIb5vCCreTRft
4hTu5ubvonP0yExdlK6NTu1Ex7aitM0oZSNK2Iji/0CxAOEdZKI2najHS9rF
SzTkJ+5hxQUlGNEJhmSiEZVsTB/ay0kxQqBDhijVEKUZosNG6JgxOr4XnTHF
9jjdEmXZEdlOZL4bJ9+TW+glX+D1QaHv9DLhZ2WBn1UEfFIZNL0q+CNJ2Ee1
kR/XRn1YFw2aKo1WqImSBQ9cFcbBEGbFoLg6ggQUSyIZDkehqigkiSGqY0m8
MzqOI4nnSBL54iS+JFmmJplfmyJXn6bYeGRq09Fpzcc/uXjqi5Zz37Skf99y
fsaVnFk3i5XulS9/Wr65q9pgoHH/4CXTwVazwcvmfZfNultNhm5agP6JxiNd
LWwfNJtUMP1310Y7r4524sUfw88bR9rr8ESg/rq3A9I3/bWg1301YJVHAcVt
NYNt9YNtjQPtjX3tTT3PGzqfSLue1g20NcF3fj0A9vjG+ODNv+v18M2R0euD
o9deDN18M3BnfPD2+GDr+KPzg3Xejy5s7snTHM6dNV7445uML0ePTHt1+LPB
hClDyTzcAJJEgMZS6Rcp3OE4YjiGfBlHD0cRfaGoP5QYiuCCuoNJvNdbgNrB
GwOHmfQYgMxqgsYCHF+wQGaZ/MR1YnTb32n8PpDZCfOTFW5smAwoxhtA/lz8
gdk7aYbZuHiy6hjrHYpB7ETNSRqz6fH/oPE1M+KqKbpiQoCumVHXzTnXgcZm
dIvpf7+LN3GfhQHyJI2r95DSvbyaPVxwyOCO4MlYpkeU65NAZnY/SCHYLe2J
+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
4e1w4/gI3jeK1VcPiB5prx16Xjv4lKHxs7ruJ7Wdj6o7HkrgYrCj6WXv5fGh
G1jDN8f7r73tu8osB7k1PoDTiZcvb4y+uvXyxcM3L56OjzwbH7433n9xvLe4
v8n3SYF2R97ql2XLX+WpvDw3e/jwD8+jPmgTcboTyN5EqisO9cUhnFckUyNx
aFiEhiLRiIh8EcMdEnF7QsmOANQeSIA3Bho/8cZLw9sEVG+IbH+ILNC43Y9k
M2QWyB2+JJsns3HxRGLMiFkYPbHvg50z/y5DJpmmD5IR508506D/6IwGID92
4j5x5t04iG5ZvpuuicdTcB7acx878tlK43f6s9fj+gF003QitWCt8nVzEozx
FRNm7jfTowon7opi0okJV8w2T5lwLjGFx0DjWmP0bg45UbsX1xoxg2Vw5VI1
MwEMJDHkgKp2keUGbOUbWaJPgCaXN7GR8n9KB8caRVoE1k6SVTEjeCRfD4v5
HE6hDj9bT+H07g9S9k1Pcf8lSjhfGKTsEqjsEKjqEKzhGKiJt3j4KZv5zD8o
ULENVrcLWQqgPihYbBWgYROgaReoYeG10MFPzUW4yNlP2UOo5ug539J9PttR
gi2xl5Kl50JAMQAZaOzgrwb+1l6oai8En6wKWGbLj2385joHq+ENIEwRMp4/
H7EUyAyeWRC71i9mzbveveX+IYvCPL85L/qpKnVmceSnFaGKdVEf1IUpXhR9
Vhf6L2n4jzURs2silWpEqrXRqpLweWWBX1eHyAGKxUF4ZE2lENO4yp8W+8uV
+ymW+n5c4vtFgc93ue4/nnf96azDT6fs/33G8asTdh8ftfjwkKliygH5lH3y
SXvkkwwVRNo8QFbQBspnBXJfgpxVkKMScl6InOYgt3nIawHyU0Eh6rRopVz8
OsWkjVMObZp6aLPi4c2KR7cqntg65eQ2xVPbp5zZoXhiE//EZt6pzfxTf/DO
bpU5u102fbscQBsP6NvBfXdy2fP0TvrkDs4xLc4JLfqkDv+0rgycx3fSR7bT
wNsj23lHtnIPbeGmbuIk/04l/UYmgHVfg8LWYoWuQSGrUQhcbyDDN9GirTKR
W/mhf3BDttDBf9DBW3jB8OFWmcCNnKBNFChgExJsQH6sfkch21HoDhShhaK1
UbweStqFUnfhgOLoAfK4KXnajHPOks6ykcmxlytwUix0VmBpXOwuX+Ipj6va
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
fvyg6fFs9cOxPM14mmY0WnNHqrlg8bBZ937eZ33xvxuJXzQZR0/EUuP4VVNi
mHkW5H4YGo6ghlTkYDh1L5ToD0J3A1EfY2N8JURB34FgLEL9UtiQbN34ugBW
8qaQvipAl93RVQFxw5sGrnuR17zJF20MsRknZw9OjweH7THudqJAxbcciMvW
6L/Z+H/Jxmw8BiHjJgpLbGPgRRvjuW3miG2iYGz82y0P7GTGxh3M+OKFa3cL
J3cLbcYs7KOl7EEevuLxm4rx9Q3GxnTrXm7LHg7QuJtmHvigaw2ZJ6F3U1W7
OWWGFL7QsYso2okKdhAZBpyjBvxkpjoRuZ4OXoVVLPwaib5D4h+RZBUtXQsS
5so28BSbMIG6vCBdTqgudyEVR+hz1Vs4oczJXTiDWhdF6hFAxGYiYjsH0nKI
ARXIDNtR6DEvym3Cq/9WAv/L3QA3EgRvo4O3caU7KWcjvo2NjoPjqw6uf7Bx
fcPK/U92Pu86+y2zlnwEgI2tfN53ln4MOPq8Jw7/1jf2J1nsT37BX6n8v3Dd
o+W1neetS2MVb9R227jIYQPfdi1lt4702Mz1260TafRqzOEl8cZLEkxfiTdZ
GnVwMQRjEKmfPimFlK6Lbey5FudeNvp6rkEiPa6PLiXcRApB17oEhHnZVhJ+
gwTt4oXs1grfww815ATvpPDk9p24EUK9W2uePfzIvbzIfRwGUrUbRexFUQfw
3J54E8SUIHA1OMWcOmrBAWADpFpRGbbcbAdelj03y57GOFAszJEcyranChy5
xS5ahU48/CYdvlJH4ueQHAkGiMHgXkyhC3PVzokqdqbZRzogNgO4GuzJLRDw
ct3nPVwgfK1Y8kap9E8lsndqgr6pDvyxMuinysAVYODygDUlynVF/huLlZtz
pBtTfTZkiPXylbtLgg8VBx0qUO7P8d+bG3CwINioOMy0LMKqItKmMsq2Isq2
NMKmMtqxIsqhSGVXHGZbEGZXHOFYGedRFOVcFONSGO1cEO1aGONRliisz/Br
zQ3tKonpLIpqy1O3ZEc0Z6lgbcuNbsmLbMwNq8sNrszwL0zyzU/wKUuVN+SH
tpVGthRHAO1lMSdrk39tOHqmMfVCU/qFtpwzbXmnWvJONOUAp5pzwcOnG3NO
1mcdr0lvKU2qy40GGvOjW4riOiuOnK5LO9ecfr4l7VJ75pVj2de7Cm6cKGS5
3lUE/LuNWRU/HL7E2PgC2HjwVtv43eMPR86CbzUPri/Y+Mn4BQB/OH2FeQP6
AtvkxgTjk8x4eYi1Z55MnpgZbp8YaB3qabhztbrnUlXv1ZqBW83DfR3jA10g
5PGBztmR008mz2MbT3Q9mTwOPJ3qejqFhYwv5YGWp1s1U80v0DjPdP2zsSp8
NW+8bnas+sF4zePpmidT5Y/HIBunagaiND1+mlvemku2T1q3jxV+OZD06kii
9ljiotEE/mgcdziKGIpAg6r5hDwYitiGt7sBiD3I65Him9E4GIvRfT/+PQWv
W0zd9EHXPNFNIQkxGFR8wQVddMVOBpgyBa5UsCr+p2zswWGHUTCdFfRVW3TO
Al1z5LJcdeBcsWcrFRzgsg39Ipds57nqzLvixL3syLnkQC+89wEGZmvFZ/BV
O/wc3gkLxECesuays4vZ55ZgxZHYgrMQgxemUrA2Pm7KW6hLsAMompmbGv9S
o2BV3Ihvc4CN6ZY9VPNuEmzcYEjVGVJg4+rd+Fml8t3ckl100S5O3k4qdweZ
tYOTYbgk0UBHvYETuAopfsCR2Odb5P0to+IVlGw1F2wsWceRrqflG7n+ejzl
RipwEx24iWKO7ehQPQrAqViXCNcjVXokNvBmKmozGbWZVuuTcYbakYb8iJ1c
EDKEZLaHVqyHV+U2PHsHPgdjw4/FG2qHGnJ9jfgCq8VCp98L3d50dXnd1ul1
e8Ff3GSfOCs+gYQM2Io/cPHH76Vaev/NO/Qrn8jvZerlUr/Pw/3+4WjIFxjw
vXRp8ZZFvvqLQchOazmuG7nCbYvlu19W7n1Zaail3EEGGOAXiPy2YOZ/I2zn
+Rtw5FtoX0bIEH3xxAlcSGFqKVsI0K//Dlq5kxOwkwKUO4iw3VxceTjAVe+n
wvegMJDtHgL20Qf5QNQBXtRBTtRBGjdFMDMiwMOxh1GyOYRefpqtVpoV94gZ
PpLDNrYkj1rQKRYEWxBOt6H+2cO4NSKdOZIDcp0IMGqxB65L5DCVYVjzXeCP
4D0uTTjhn8lzJZgOCqpEwCn35FZ48Uo9eeDhfA/wsFaB5+JC71fzvX+f5/1G
vujPpbIPqgI/rwv5uj7sx7YYvYaIzVXBG4r81uTLVhfI1xX66Rb7byny356r
2JYl2Zol3Znnt7cwyKgsxLwk1Lwo1KQ4zLgk3AwoVZmXRlgx4BO6IpVNbrBl
TpBFYbh9sdqpNMqlPN6zLMGzIllYcVRUcVRcluxbkSKrywxoyVe1FUQ1Zquq
U0Nq0kLrM9SNWVF16ZFVR4OLEqTlaYrqrAAQMgBmbi+L6qqO76pOPFYR11Ee
e7wq4WRVInC6JvlMY/rx2pTWyuSGkjigrTyps+ZIV93Rk3Wp51qyu2pS2kvj
OyuSTteknK1Pu9SSff1Y3pmm5F8bE0/Uxh6rjGwpCWsoCILUDTm86IgIYCLu
eVDxg+EzD4bOgn4fDOFnPh6PXAMhTw2cHe09OdzdOX6nC3IyW5R4oUTMznC7
oJk593TyV4Cp/Z5heipOsyPdnoyeeDzS9XCoc+Zex3hf69CthoGrdb2Xq+/d
bB7tOwaSh3Wiv+vxGKTuq7jmPHEaT2+b7NJMndBMd2lmOjUzx/E6e1yDE3KH
ZqpNM9mqmWgCnk3UayZqNGOVmtGKueGyx4OFjwfyHvZnPepPm+s/+rQn7unt
CM2tYM3tQM1NmeaSt+aMxXT18oH0N29EL7qToDOS8tJIPG8wEo+wGApDI6Fo
JBiNAkHUaBBnKIB3T8nrV3K75cQtKer1o+7683rl9E0Rcc0bXfVC14WwIS+5
o0vuxDUvznVv7jVctSAuuyDgpoDo9uLc9CCvuRLATQ/uDXfOLTdet4cWrFfs
SYi1p8zRZSfuGTsKMu1FB+4VR/4Ve+4VG941O60bDosuWFC/mqJLNtzrjosv
2Wuft+Gds+FB4j1pSZ2x5Z214y/crVuYO4HbiS1JfMXDmu4wxQ9qHDPjnLBa
1GWpfcyMB/s2Zmh8pzn3lJXOSSutLgvecXMuyzFTut2Ibj5ANB+g/p3WQxxY
wcNg5npD8DMImS0XYyezH9btQnU7idpdZM0uunaPVtkuXtEObv5OXv4enby9
OpmGi1J2aIdt4stX08LlyPt7DGyEPyLfFaTPT/jkzmclEq1iKsZrkXQdIVtP
BmyiQch+6wnFOgQoNxABG8kgXdy9FqrPCd/KUxngGnLEVg6uYOzgqwzo0G1k
EHOKNz+OcjOSb0J+evjLsJ1k9B5e7D6thAOLkg4thtQaafpyiNlLSvMlcqul
ErvfCZ1ed3H+g63LH5xEbzvJP7T3+9BB+alz8D+s/D42k77vGLBMoPxcFb8q
OPibqKBvlE5/s99MCA20PDeSIuZZZLEuF8DhVhfXk702IulmZvLkdjpgBwdW
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
CTa42GOtzI0FEBY7UonsBB3wi0sUwA970M1ZWXPFQoETXgaKUQk0tkIKK6Sy
Qur9pBJrksKWWuzEKHJlitxYWe6MFFdqrAsZTHKk19por3WJ3m+Kgn9Tmvxu
RfL7+sjfZzvTcp3woLZ8sMEOqMgJFbtSFG5kuQuSufydwCVsBBA2E/h1nQMI
fK+5I0ML8vtxRoT/qwxwiS8qDSSVBRHjK4k6tIowUlkg0vsjjd/fpSWyE1p/
ktqfovKny/0Yxbw1JYKfaoL+pSzynZqEv9QmfNiS9k17xub2jK2Nqd81pmxu
zdjWkb2zLXtHj8gaq8Cmp9CuV+LYU+jQVWDbkWfdlre3NXdPa+7e9nyrTrFD
t8SlGzhc6NYpcQd1ST2witimYs9+lc+Q1ndYxx0xcMergsYrQw6UBhwoFQCE
xyojJ2rjR6tjh4zRPfqwTjWeHdEiDyQalv0birFq5bwqqW+5mFNR6Fsh9TMU
eKuFHpoctkHso85ly9KdtHnejZqo5hKwwUkd2tRmdUJDcTRY3CZVvNn0Nmni
G9VxzVrM4Q5jcos+vl4VZXbCwGGjOAg4rM/z1wr5mmwexEpJWK08BoxxjSy6
VZvSYUhv0iS0l6aaFyQBeKuVUUBjMMBmV9yoS2g2JJm9MbyE2FGR3l6eUlkc
phT6yDI8lbm+6gKePJtTkOySE+8AsTCNLUpxzU1wzk9ylmf76CVBqjyBVhxm
lMdUlSRUKuNLi6LUBSGKHIEyNxAENH5y78R/ovHj2zO3506s3DgGurtw4smd
c4Bi8MYQX97/f6Lxg5sDBI1Nc5c6L0+3nD/WNHumZ+Xq2MMFoPG553dmHq0c
e3zrKDjkx0TbyJPlkceLg48X+x4vdD1aaH8y3/ZoruHhjZr71yrvXSm9e6ns
3sWq+5eqH16qeXSl8snlimdXyl5e1a/OalevKl9cKFydKXg5I3x4DNN4ZTwY
XPHSIffFg7Y3hnbM9n5zuXP9heY/nav95dmKt0/r155SM08W0ydFlIls0lg6
GkunHE6hHU8gn02mz6QyIZ5LZl1ItTyXhBMRP4p+OhLEOB1OB01H0I8Gko6G
ko6F009EMiEeCQb3i0a4aNyfDCieENAnBIxDAfRRLnUIfDIbjXJI5pEREEc9
8VyIgx4kPE7Ni4yB7AU+lgwGGNjb6Yk6wOh6A0Wpne6kNhcEgkOPFw0u4fBf
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
nlwpfXZV+2RG8mwm/+m5vEdnsu4eS1o5Grs8EbZ0KPjeVNido0HL49z5Uc9r
g64XTbZnW/ZMN+yYrv5hunLryfKtx8s2H9d/N6XbNKn+YlLz6Un9+inNXydL
/jJV8uGkYsOE9NOD+Z8O537Ym/W79rSfNca/WRe9piZiTVWYBfw1L/Vn6H2p
RCsrVeVJUhAFVBI7JLZB+XtR3h6SaA+5cC9JakUp2kcp2k2R7CSV7KGr9tE0
++h64mFZGX5qBpGp3UcB6ayo+v14YZzBhmXARLVQ76Wq9oFo+KeswOJaAmB1
8C58xpqus6LDB+DbdPuZaiu6bBelcAdZtIMKKthJzd9OFW5BaV+j+I3Y9wZ/
QlhfMMCfoaDPcWsG/1Pk/j6W21+Q6wfI/W+I/RHibEAcuP8EsT9DnC8pPhvJ
IN5XZP9vKIHfUgTfkEO/p0RupUZvwxCO3U6N30lP3k1N2UMhFreRs2zJ2XaU
bPtXI9Pz7FG+Aypw/P9Yew+oqLJ07/tUIqudZqZn3snhzsw7qWd6Zrpnup22
TSgGDCAoKFlyzrmgqCJXoKhABSpnoMg5Z0QMmLMYAAFFMbW2yvfsc5Dp9947
d61777fWf+2165xDgbr88a9nP4FE9O9FjXw9aYBf1E/SEzgMNEZmuMyLREBY
7EcV+5MrAiiSQDJK1g3AiPyEymAK3qiBiufo0gCteB91GkFjdQQqWCNGauqi
ySs0jiZuIbrKg1GkV+CDssje1riBWaXgjtqGaAJMzOiEd0bZv6EricFiP3Qe
B5aYqJ4jajdgQ0y6x38q1MESpUOEosRgVIuBii8wRTRCsSrGXh3roI51VEW/
Iwtfq4p535j6A1Paj03pP6uh/8aa+4c61ifWgr9ZC9ZX5/+juuDLmpIt1UVb
zflbqgtdTXm7ALmKtE2CmL+VR38qTfpCmbpRm7lVl+UMm8rkDaq0Ter0zSCg
sSFzkzFrMzDZQt8OWkVxA/tQPftQbckhQLG5wNNcdLCq5DAQuI7nW8v1QSsP
WWJtwcHK3P2yHDcT20/P9tcU+ygLfRQFPvL8IzLW4Yp8HzknBFAs54VXlAbL
OBFybqSUHQ4bVXmcWhCvKIuTc2PUgkSNMGmlpqwwnLDBBHgBwkBdYCDg11yR
TiQhAOuIppQ6ASo9Bq+r4ESCwCqjHpWl0eCry3ICuNl+AmZgWa4fI34vUJcR
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
EYqCGHI8KQLlRbz1yXiAGsyzLax410o0Nk4VudLUnShProzCKqMpshiaLNpO
GmUvjV6riP9An/4DE/1X1YxP9Fl/q2ZuaOHuamLvqM7famFurWJtqynabcnf
pWcAgWHdpc7ZqcjaoUh3lsYjAusznU25OwxZ20CAWWP2diAtrPrM7YYsF2M2
XNmhz3LRpDsToDbAFcZuU56ribkXZGDtN+a7mQo9gcNWrl89P7BeGNwkDGkQ
htWLwqzlwbWCkHpJRK04wsgL0pYGaDmBUqZ3eY4HJ8ONT/eU5vsr2SGK0mBJ
0VFBvr+cE1HJjVTwojSCOK0wXs2PU5XFmiSpVmV2vSa3Qcto1LHq1IxaVW6T
Ph8cJlhNwJ2aF094Y4KHBmEKXJEWRZQzgopSvfLi3fOTPLl0H2bi/ryEPblx
ezIiXJKDtyYf3ZYR7poT45YVuTc9bCc9em9ppnd5nj+wuqIwCH4eIsJcU5mJ
YhriZIs0DTZ6YSJus8EYp8NdWImNVZGFoxjwm22tzCWO5xrULNh8c/4drOB+
iT1YYuAwMd2j1VDcZiwh8iiAw0DjE12aUz06EGyOt6vH2tTDTaqhZs1Iqw5o
TAQorhxvAxQTxhgIfAP88OnuO+f6py8M3gI/fKbnyplu0PXzfTcu9N+8OHDr
8tDda6OAXNDr5zdwGoM9vvR08dLC9KmZG8fg+vPFy6+fAo2nlp8hFOOpFJf/
CxT/CxqfXn40sfxwlADym8XBV/f7CRqDN753rQVoPHu948HtoaV7x57MnXx8
78TTe6cXb4/fvz7y8Nbo07vjz2fHX94bf7Vw7Ot7Ay9nupbnOpYX2l7PWr++
a/nqlv7JVdn9Sc7CycK5ifx744yZMfrMSMbtgaSp3uirbUFX2/2ud/hNdfve
7fOdHvC52+99t9fzXs/B2S6P6Ta3W017bta6XKvZeLX6s8tVfz6t+skp1Q8m
5N86JvlgTPjtkfLv9LO/3Z3/Ti/LvjvPpp1Oac4gNaRgNUlYdQJWFU8GJpti
cJMcQYP/s/DptcIfT3n1Qa3Fyz1sOO4Ujhs6sSreRyvag7oxMHfScrfbZGyh
pnyJJX2BJazH4tdj4Z9jIZ9hQX/HAj7B/P6C0sMAm14fwUs7v7/Y+fzJ3vO3
trt+jG3+Drb1uxhsnL+P7f0ldvAPmOfvsX2/wvb9GjuAEs8wrz9hnn/A3H+L
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
N70gVVOWpOTEG0UoyFAjzwbwAl2bdAy8p2VOo5YBEO6qLgHegrprSmHfYSmC
i3AL1GrM76wqhuvd1RxALlAUDzXIx1rB04oJGhM+mdgQNAbqAnuJOg7cJJfj
qRQ8cNfVMnqtgtGoyQcO91oFw03SY22KiU71RJf2dJ/5ZK8FdLq/+txwHaD4
wmgDsQEyA5NhD6CeHKiBZ8Y7DSMdutEuw2CbpqNW0t0gP9ZjmhypAwGfQctf
Tb96euv5w2vPFq8+vn8BvPG9qWNL86dfPb3y6uklgPCbp+cJ/Rcc/tc6u/z4
FApWPDr+5iFelIf3rHi5MPR4pu/hne77N7vu3+xenBp8fHf06czxZ7MTwOGb
k63TF7ufTI8/vTv+bObYVzNjD292fzXd+/Vcz6v5rtf325cfti8vtby+X/fV
tP71XcPLW+qvbiieX5d9faPyzZT8zZT0zU3Ry8ulLy/nv7yY/fx86uPT0feP
A40PT/cdmOrYfat9x1Sby83mrdfqv7xQ/ZdJwy9OaL4LKD6tdzqhph2TYWNi
bFSIDfGwviKsj4X152E9BJBzsPZsrDWL1JRJtiRgYI8tSeDHbFbySOPXqGPt
dHG2mhiKIgK1eQGLyA/AuP5kTgC10JfKPEzL9CCnuGHJ+8gp7tQMT4dsr3dT
9q+L3gnktAveTAVn6/8FFr1jTdyed8O22Qc7OwRtsQPAgo5utQ/Z5hiy/Z2A
Le8fdf4wfOcPovb8MHbvD2P2/p8o1w8jd30Quesd4HnM7rWxu53iXB0T9ziA
kvbYJ7vap+62T9uFBOxN30nN2ElO30HK3UvL229T6G5f7Glfesiefci29KBN
iScNDZp3o7D2kgrcSMUeVLhS7EEpdiMBgYvdsSI3pBKUt4baUXK9sEIPrNgL
4/pigiCSOIQsDiWhcrZgrDKcjKoeItH8tcowqjyUCp8aVBE2RAhCG0MGEoIA
ffASLhLuFwisj0cCDhsTsVWZkkggczLZkkKpSrUBGRPJIFMiDQRABiwDSMEz
w3sSHnv1lI0ww5ZkezQQGZlnKqxv7TQVf3N8Nn0cpo5+O7oogayLX2mVpoyh
og5pcXbaREdd0lpT6vv48dz7VfQfVef+XJ/2E23av5lz/mig/8XIWF/F2mLJ
325k7tAzEIF1ebu1OdtVWVulKRsEcX8Xxn8mT/lSkbZJlrxBlbFFg0uetF6X
5VzF3Gmgb68vdjNk71RlbNNm7AACV+XtBwKjTYEnyFrsVcv2beAFNPGDGssC
G3iBddyA6rJgAK+JF6Qr9dOVBKB+lcV+ek4QSFsaAASuYBzC/fAR8MPyIn8l
O0zJRe6XSEUAWwvsajUVwKZGlVOtpJvlmRphkro82SKnt1qK28yFwDdwpxWF
IcDMypW+PQkAT7hCTCmSFMHGPy9hX2rotuSjKyIIDJaY6PZQlhMAa0VBGHGE
V84IAicMPtYgSsIL6GLUZbFafiLgt1qWaxBm1CqYgMFWQ3GLvgBoDAIa16vp
dSo6cfrWaSldHe7cVcXur+PDRSJvrVHDJI7n8NQIQU9NOfhYWAcbKlCEoV4M
e3C5IEDraIsc0AoX4RnC8QJy65Qsi4ReI2e06FEBSIeZDTA/0aU62a0+3qEA
wQZejrUpTvYYzw7VAnLxBONWgPCpviogc1+9fKBRMdSsgrW3TtZtlfTUSuHi
aKcWdLzXONFnGu8xnOg3nx2tPTdWd/VUK2j5xb3Xz+589ejG0wdXlhbO37s9
Pjs1sjR/ElD86hsofvP07P+Qxktgj0/hDhmAPL4K5Cez/Y/u9jyYQgIaL90Z
AfyCHt4avXW2/fa59rmrfQvXep/cHf567jh44+UHqIoEaPxyruXVfBOaiLfY
8GahZnnOsjxrXp4xvJnWv7mre3Nb+WpK9vK64PH5oifnwB6nL56InRs9emfA
+1av++2evVOdLrc7toPudG2707HlVtv6G41/vFL/88s13z1nXjuhIA0IsT4e
NsjHhsuwES7Wn48ETO5hYl0MrI2ONWVh9RlYQwatLsOuKsVOn4A+xuoS7Q1J
6/SJa1WRqNVAZaSNNJxWEWorCLYtC7LjBtmXBjoV+DpmH7QDFMfvxmJ2gsgx
O6jhm7HA9Zj/Z9iRv2Fef8WCNmAJrvZp7usyPN5J9ViX7L4mwc0+fr9d/H6b
BDfbRLc1KZ4/SPX8afqhn2d4/yzd68fpB7+fcuA7yW4fpB74AL4KyW1Nmptj
6n67tP126XtpyTuw1B1Y+g4sYyeWtQsJlWbsRsMyWPuwwn14SrAHynDAJxfT
2B5UgHChOxkgzMajxNyDNmxPMs+LRqRG8LxIfG+y4AhV6EMT+tHKfEnwGwdc
sSSMKoukyaOolXiRGtGIDIAMWJaFIOE0pq6Ghb8RHMYjD7ErNCZEMBmEO2FA
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
wBvfGgXNXOokAhcL1/vmrnQ/vjP0cv7YV3MjS3e6lu62PbzVNHfVMntFP3dd
u3BTe/+G+vGU5vGUCrR0XbF0TfbshuzVbeXyrOrVVPnS+dy58diZseAHE4GP
Tvs/PHlkftzt/vie+bFd94Zc7g1sm+n98k7X32+1/v5Gy89vNHz/ev23LlnW
nNXaTCpokwq7SanDhNhhgGM7xHMYKVs7xH9ngPtOV4lTC9OhMde+hfVOXbYT
sEIQhJUexoq9sZLDKILK2Icx9iIXmuOKlOuKEWdhBe4oSFt0wLHowJoi93UF
B97Nd3+H5eaYt4fK3Edh7acWuFMLD9oWeFJXKOqJsQ5i+YfeygtjHkJiHCAx
3IC6FERdN3K+B63okE2xl22+ByXfg1zgSSk4iLJ/Sw5RcJHY3pRSb6z0EFZy
EAk26NztMFbuTxH5k8UBFNQ6MgA15kUtgt8mpOFZakjwGEgQgCetBZBFQVQw
w6jfY6iNJISGxsGHEqJUhJFxYdJwJGUkITIa0xZGqgwnqyJsNFH/jBsTh24g
groo/I5e0vBgMor9Esdwqig09kIdTQZpYhCTCTiv0hi88Yo9TsC08RjxcvXi
KqgtqUBmKnHRmESBvTmFZkixqc19v4r+LVPmB8ZMWL9nof+khvHLGubvqpkf
Vef/tbbw86bSLc3c7Y2lLtYCZxNjY3WRi6Vgm5m1zcTcgWLCmduVWbt1DHd5
+m55xl4V3V3H9DYXoUgCcrNMD1mWS2X2NgV9uyp3B0iZ4wKCjTxrmzRji4Lu
omTsECR9URT5F3hZx/dpV8TVCMM0xT5y5kER/QA/Yx83bS8vfZ+Q4SVi+ohZ
/qJ8MKIBgnx/PtOfx/AlOkbCqhEmWNX0FnNBR01JbwOvs7qk01rabilqqyqE
fYM+z1iRoiqP01ek6sXpRCyC4LC4KJJND2AmHWQkeGRG7U0O2REXsDXWf0t8
oDMoNWRnevDOjNAd9EhXZpxbYZJncYpnSepBXtZhQa6fKC9AVhiiLYvS8aPV
3Ag1JwrFMSrSAb/AW6ILJaqAlmY2qPNWyy6AmUR9HDBzuFkw3iEBvuHVeRng
YMGa9tYIK/KjhcxwADLYY3grQGt/PW+sTTzWKhmoF3aY2UDaZl0hqFGTX69i
4gkPHLDW8NJamQtvRRwF8nND+DmhwrwIWVGcQZDZqC7qqRbAtwCNNleOt6lO
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
nw6a5yb/aMX9YMPOcRDnOwkLYRzLSHznY8+PCJc2iJaFhcsjopVhcZKfv8rL
X+nmrHSyVlrrlxnqFqnxc6WY2SrSYhVlqZK4iFP9HbngExCr8hsJfq6Jm2QT
rnfLM9zyLIckwyHLcoizdKw18A9bRZ4vw/8oQs8Sor4HidFzJJi5avIy4LCT
lxmQFPlEhQ5OroWRbWLl2OWVTg3ahpQKl5uklWpekYCWLaTniZgFNi0p5OZZ
dXX8+iIBs9SsqQs5uO1ecXwmFzhYmxR53AYchujT4WN1XziXCmWVVlokFQ5F
jVeLDZnIZlEVcFhKy1Kx8gHFfg0OaZJjrgtqcUEVplFPbLVQwfFGDUhC2CNH
mQUVZkGZkVeioGXLKJkycgYfs06IWRuXBL8OxKtNpBQtwGTOyln23urZv1ny
1cvzPpn2/YcTf/hoMnAY9qQs+BPYYCAwWN82B6XbW99sJbnlz7pGAOX07AIF
NZNcvIhQMF9OyTBwwP2WWsHbc4vUjByQiVviklXDSXqVKLeiNtYgCAcK6Ynx
tZiRzvB2pJFFg43Z6uE3ubhhCwPJeCuxcEyzDWjM+KXeuM/HGQhyNgU4/b76
Xjdjo6d+k489GOT2ednbm2TDEREM+v3c7c1ycP7wc9VmzgRHDRiPm3OLqAQ2
IyacV11JqZirYqY0O/B2WaGWk+bVlHV4if0NjK4A0a0uEJKXCEiLPZq8Dh+m
2Vnd7kGB0W0wlkRtZZ3uGqAukuM1F7faKzzq7CZLaYszlvt1VcGeNkclHNNs
KwE3C0ButZW22EubLYWN5nxgaUif3WjK9anTgtqMBlOuX50W0KQDhIG0YIxB
YIzBHgfV+VFjabu9Ghwy7AEsB9Q58IENhny7aB2S71XkwM0aOGcTe7WRsxoI
DNEh3GDhrwUmI11QZGku6XqkNYpstU2ySMX82iz80a1aFNAvxxf9pirz5bry
P3g1S0BP7p5+dOf4g5vH79849vDWiUe3Tz7+h44jTH72RO/fZYyfYfmfZ0//
Q3EUI23cdj65vu3Jz93mH10GZ7vx4aW+eH/j22d675ztu3Wq7/LRzksnui+d
2nj17OCNc1uund1y6eTglZEhZNXUWwjtH18funt+4+0z3XdP91451Hpia+DY
1sDpXQ0j+xrO7gtcOOC7ctR79ajr0mHj3TPWO6f0t06qbp9Q3D2teHRW9fic
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
E//OQ62UkZJNnFykD48WFTXiWq2kTicVBi0WYouZDJYbcd1g2sXlagZAOEtK
TxVTN8jr4deSA3q2jCk9S8nMhd+bjJ6tYRfDRSdoqOvwIrOGW9zIWkhdQVGn
T9TiRhY26o+qBho1nQExssycA1lqudHOgtjq4m0MqZC1Oxu1/SH5YES+KSLu
dtW3WPBdNnKXndhlwXWasT1WfJ+D1O+o67WTwpqKDieh00WMqy9A29LE7QtQ
LPwsTu0CNX1duwPb66P0+sj9QWqbHQWIA9b1BwjDjdQ+P77dUdloRExsm72k
w1Xa7ixpsuQ2mrKbrXkdrsJOT0GrIyegTfaqkqKWNNhsdxbAASBgcpMlv9GY
F9HnhHW5IW0OYDbG24KQOj+gzAXBADaDqrz4JgjGsAcGLnG6XZDiFKWB0QW0
AmMDqnxQUF0Q1pbEFTVWhNSlfkVRRFseVJW4JQVeWUFQU+xR5PhU4LEzraI1
ZkGSXbIeyGzmrzfzNwCQ7cB5SbJNssIuW+JULgobVgGKbeI5Rt4sLetrPecb
EfEjVPavhMQPQP85jf91edt/gfA/e+N/T2PQgwv9d0d6H4z0Pzw3cO9M37Xj
nddOdF0+3nH5WM+Vk5uunhmOafP1c0M7Bx1dTeKBVunZg5FHl4cfXhh+cmHn
09uHH15EPhD89oPL3Q8utd+/1HT/QvDuiBtofPeMGezx3dP6+2d0D0cQPT5r
eHDKcO+44d5RI+jhMQPQ+OFRzYOjUqTU7RD19n7M9b2lV3ZmX9qRcmlb8uVt
iecGF50bmDPSP3ukf9a5/pnn+r893/flud7Pzvf+/UzXu6fa/nCi5a0TzW8c
bXz1YOiFfYHn9gUmgfb4Ju50Tdpmn7jdOnmrafKwYfJm3aTNmomgIS0y2KQa
t0U3aYd5Wq90FFJuIRndLRrTLRrXJZrQLZ7ULZ7SI57Wyp/SzHmuiT21kTkl
zJjSwHiugf1ikPVyg+A3bbI/dyjea5W818h/N8h+N8D80M/6e3yN4zB7dqB+
trvuexfle3/93AbewqhgYZN4caNwcZi3IMCa72fO8zMXNAqWR4UrQI2CFRHe
siBzkZc2z00BPzwffK+H9oOb9oOvfm6QvSDMXRTiL/axwQYvbhAh+G1TJjfJ
kiKiFUHRCg93lYO90kxbqiLOk2J+FKFAc4Xo+XLiUhFuMbdmARe1mI9bLiIm
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
2elPpGlHC4DAVnGmRZRuEqSaBGkmQQa2Z5+WLKMkokRsC7+BH2+TJtrQeIck
wYREmwWYNKwQLfuAjhMio+ymN35Ab3rvL6Txt9ui//NDve+g+JtCIXg+5D9P
4yM4jf0Zjw+9Xp5+s3Lk+d3DQOPN26MPbw6tXMfs8frC0c172FO8B/NHlm5N
PF09/ubxuWcPjj+5d/zNKljuG1vrl9+szb5eP/R64+CbzYk366Mv1wZfrIJ5
dj5ftj5fMoFeLple3Te/Xra8umd6uah/fVf15g62/HhrUbN1V7MF7TnJy5vI
5kXKk8ukF9d6X1zveHalfv182cqp3PvHUu4djVqaCQOHvDiz/870njuHv7oz
9fndqY/nDv7h5uivrg3872uDP7o5/M83h//x6sDfX3T/j7O2fz3v+NU5+69P
mn5xXP+Lk8Zfn9S/M6v+1Yz8l7PKX5/S/f60/nfHVL+akvx0WvyTo9Kfn1T+
Ylb602nR/z7M/9+HkJ9MIj89yPvJOOcnU4LfjPN+NcL65Sj7HdAI+7fjvD9M
iD72cbe52Z85GNtstG1Wyid22hcu9i4vL8DF2m+l7jWR99kZIU5mhI0WZiQG
GfqC7aQIDz3WQ493kCNd1Oh+VpyLEW0mBht7AwG2FsoBKzXESAnUEfcpu3bK
O3bK2vYqO4N0fWE2RpyHl+LhptlZSWZanIWeoCdFS9uDeXW7WFU72NU7OfV7
uI1B9LpQdnMsDK75HSlIezK3NZHbksxrTeG3pyGdmfyuLKTja/E7c4XducAu
ZkfSt2KBmQRj2ZUODU5XJr8vV0QmSICHzFIVp1KL1OA0hjNgj4Uk7BJujPFK
PWCbsZE4Fat/hGUKohRK6CUAYaQvT0AiKNgVBhGWgliNVEnpxSi1EPArpuSD
gyXVRdOaYoV9mf5eIAHgL6cTwFWq2cUANBWrCICmYBRIKPlwD1yFKCblQgO8
Orszg9KU2FQUVJr2ZVn6dkLCtug9P9/z4d9//ru/fv9nP/jg5z/48g9/u+O9
H+58/++Ctv1jQczHFSnbO0vC0D5wbq0DGgAUccrJ8ijacQj7S8s129EG/4K0
FrDBPnmrC2228utA0PBIsUMTt9qC1AKKgdKAaOAweGMzr8rpX8nmTyyMTV9Y
hLVAb6uoziFqBM5DNCI18HL43EFVt0vaNm4gj+hJ0HZKsVUfw/o+cODwMwxp
2uEdvP4VcV55g1fVNKACDjdpucUmUZldUulWVvdra93Kcqe0yK0oAP9p5KVo
GHF6dqKVl+oSZQ0piyeM1UPailFjzYSl/rCj+Yi7Ddo2McEsyIWxfFLA/6zJ
fHdYXwPyqcoPWpsm7fVAUa8yF8wtGGCIbnk2RHC8gN9xcwnEYUP+iJEwbikC
jZoKwBI7Zak2cYpFmAQotqP+xGiiVJcsxyJM07ETNcx4PScFgAwy8jI09BQ1
LVnPSseZDNTF/TCgGPfGAGcAMj594RQXgDE2crPBFeM0BvkU5QOqSjh0SYoB
1CDcNkMDzrgkRTZRLvQCJn6KiZ+k58Zr2fEGbrKSlqCiJSsoSTJSvIoeD5cs
ogQjP9rIi7ELErzSNIhqWrCeFWYXxln50dyWT7itH//lNP7zqyz+a80mHMj/
5Sne1zTGZyqAxi9XDr9ZmQIaP7t78NHNoY25ofVbg6s3Rla/ofHG4kmsDsjS
sc3lY88ennq5fvblw/PP7599uXz17drlV2tHX64dBH1L45ervldr3jcP3a8f
Ot+sOt8+dG2tuSG+XXG+uW/ZWtJs3ZO/XVSAtu7I38xLX1znP73KfnSWvHGB
+Oxy7/OrXU+vND86X718onBxNuPOdOzikejFmcg706FzhwJuHtx96+CXc4c+
nzv40Y3xd6+NvHNt5Jc3R39xY+Rn14d+fNn3s/Oud8+7Pjnn/OSMDdNZ++dn
rV+csXxxUrcNdNrwKeiY+sMp6R8Oi38/Lf3DIeFvJpBfjPN+eZD/6ynRH49K
P5iRfTiNfnhE8vGk4E9jvA/GeB+OsD8cYn4wyP5wmPe5j7vbw90H+PXyAn28
AyAvEurlhXm44WZKoLJrt7YvwM6K9CBxNkaUri/YSory0BL7mSleRoKbFuNi
xLqZMeB4XawYGzPCQg8zUA7oSEFq4n5VX4CqL1BHjtKTYwyUWBMt0UhN0JHi
5d1Rko5IQXMI0niAUb2PVLqDUr6HU39A0B4l7k7id2X4EzASUFKBhFzoV7GU
UqJhVyuoZWhfobi3QEoqlpFL0L5ifncepwsDmj+pWjbgF8jG7c6CQ7C43xVO
YDGlEMTvywNLTGtJYXdmwklANJhhQDGAGmiMJ2rDxerIAAJLmKViahFIyiiV
gaGlFfJJ8LmZYIYB+wBkXlc6vycTYAsE1nJLQSZhlRWtNQoqDfwKHa9MySzk
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
v/XyHlY2+sn8y805nMavNm6/XJ97tQm6+Wbj5pvNq5geX/q6vtL6tTePbmBx
/Ypf39S/e3Lh7eMzOI3fPjkJHH69OfNq4yig8vUaJjCxr1ePA4pxGr9+MOPP
OHHoxfLBV/cPPr838uTO4MZt78aca+OWZ+WKe+Xa0JO7x4DG63dPbd4/DTS+
Pz+9ujDz/OE58MZPVy49W776ZOnSi+ULTxfhnbHtfq8fHn27fuT1o4mny76l
a5rNe+bH942bS7pX65bXG9YnK5on92SPbjFXLvauXSU/m2dv3mSuXaWuXaE/
uEAGPbpIfXieuHSy8/7pjvXLfU+uUzav9q1f6QZtXulZPt18+0jV3WN1oMtj
hbcOld87Vr9yqhniwpHqa+Mllwbyz/cTTrpzT3kIl4bKLg+XnvMVXRoquT5S
fsFbcHWo9KKv8Lw7/4KHcNFbcMaRM6NPPiiNOCyPmJSETKKhh6Xhk9KIEUHw
IDdoGAkFD+xjhwzywoeQKHDCw8L4UXHiOJo2gqROiLKnZIRDMsK4OGeAmwqO
10GPwcSIApkoYdreIEXHXmCyuPlLFzdmCE2BRh/hN2Za6JS2AFAsbNgprN8t
bAiQdUXqaWkaepacnImSMrEUr+RMDQNGYWASSo38Mj0XK+auYmEleHRccJLV
2EQErULFrpUzagzCNgm7GqGVcinFfHqZgFHOIxdyiIV8cqGYjk0XYKWT/fwE
oaQCUV8+tytfSC7BM0zijhrsNJhqMbUMzsMZNa9ey29UcmrhkoxZAaTFBbAF
A4x7aVZHBq0lxZ9APoPZnk5vTQXhl2SMEsAvXjxIw67Q86r1SKWOA91HlUVY
DTLxykEAQAOnWEnN5XenNBfsyI36TfzeHwVt+2/7/vTXgR//7f6P/ib8y/8R
+dU/JAf+JO3Az/Njflea/EFh/B/L07ZlRP6uMGlbQ8H+xsJAiC0lB/rq4qBH
gO7DX2etwSbtHDaxRi0cn5bqUxEHNN0HTaQxfS/Q2IJ8XWQZbLCkL4vXlkCv
j2Q2RhMrD/RVBFJrQ3f+7q8Sdv7EIWjAIQw0HlJ2AXUHFG2DynZg77C6fUjV
AkCeNGFYHtN1DCoanMJyALJXUgOABTmgi6HnqSnZJnZhv6wObrBwi82cIrgB
2m5BlVtQoafmCFujeY2horYIFSnOwk2TdIfp6HEmdpKKHCXvC9cz4jXUOE7L
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
wo5UYCxQ18gtswqqLPxKaACHAcJaZhHamynoTBV2pSHtyRBFXZkwjuC3Z0h6
86R9+UpKEUQ8iaWkNweuCjsz4N2caJ1LUgtvYuSWaGj5dkGlS1xj4pQYWEXQ
Bj9sF5YDk638Uiu/RMfM80irvbIar6wKGtym6E9/8oPQD39IrwlVEDO0tJx+
Wa1XWinrS1ZT0yy8XJ+81CuDf7V0QDGwC0syJs0DByilRAN+hb0h7LZ93I4A
wK+RnwLWVMeL1yPYXK6MFg7CFl+x41T0cAU1SMcJ0XGCpZQd/O5P5LSdNjQC
gGwTx9nFCVZhAqC4XwkQS8JJCCZZx4mxoUkueYpJEG1AonTcCH/541AFPURJ
D1cyI9TsGBk1Et8grGbFa9hJHkWxV1lCrN6VFfavambagKbKyMsD+ZQ1dnGp
gZtvFRR45RWD6iq3FP4JsvXsDLCjQOZ+VanfkWJAdkpy4Af4JsEaNieMX8IN
MDY57GcyjmW42q8CVhPgZiMvzYhk2tECEIAXn5rAgWwW5IJwGkMD3LKoN1rY
Ey0nJ8tJqVIidM2xvLYwXlsoDC4kxHAZJUJCCkGJQYBi6IP0SBj0R0Yk0sqL
dvBiHEi4HQmyIbtt/F1O0V6PZL8N2QsEdotCHfxgPWOHnvGFXbDbLdnpFn8y
qPh8XLdz2rp/WLXDyPqjmf2BR/ylU/CFk//lX0xjsMd/Xt+hsb/xev3M/4HG
r1bwKh4Hny+PvlwefL7kfXzHsTZvXl+yP7znXLs3sHS7/861oQcL0+vLJ1fu
HFm+PTl7UHHzjG3hguPMQfmlw+qbx8wLp2zL582nhujDmoZxU6tVWKhlZc16
+65OCVX0bF5bHIw0jzhpa9cGttZPb60cf3AFfPKRF8snnt879mTx6OO7Mw+u
Ty5eHLl/7eCVo64zk9bZQf3MgOHUqP3spPvshOfEqOPc1MDl42MXjw6ePeK9
eKz//FH37IR+algx7EKGXdypcenslHx0gOWxEx3mTqOiccbDvTAiPenjjWja
fNJabC+/ENvp4+DnOfg5YHdNrAwdJVlNTFATEzWkJDfYAyEBiG1iZoLA+ThF
xfASCw8bMRnYeTCAVVGzFNRMQLGaVaDmlit5lWpetU5Ub0KbTNJmA9qoETWC
C5Xz6hRIvULQoBYCJ1shqgSNNnU3hjh6ITBc2JVk4uSaGBk9BZ+05/xJ2BaC
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
bkWLR73Zq2l1q1ps0mrAr1HIcqnqo7aOgGEzoS1+fatL1Yg6diS1dlm9R97s
Hmn0yBo98iafvNmnbPLK68D3+hS1fnUtINcpq3BKy92KSo+80iUrjxgavYoq
j6wSonekyievAq/rV3Bgj0vC9kkrAyNVgGKIgRGOW8R2S6rA9EJUdmSZeEXj
1pYpe2vMVGsbKjDxc/xKllNSZhsq4VWvUnflAKLVnRtwYfaElTOqZ7lkhRED
mxxLAhChkSwNA2wheDyIPg0D4LA9sHna2wSIiNnqx/GWCHhIvGHK0+jXFweM
eXEHbcLNGHcxojaaV4syHyJYTtRGT/nto794mNJY+vMoVrh9tAyUsNOSLsY4
ljdpL4B2cUyfNWXLeMVfOO1hTDhZwFWgKHASGELWPEfgEqeBH47jNDDPYTNK
ygKXq+lf61YW+NQlYSM9jsH7gkbSG84FHwgQBkNoFWU65XleVTH8Dphhwh6j
CNwmejxoCRxlfBGTLMDzM3xq8I3lESMH/K1PTQO6wk4y66y/7o9b2b+yDOcS
eb8cj6rMKi2wSos8Wkbc0QjPxy7NtwgzHTJ0OTDAgFwdb4O47TktLxVkFGzC
pdl+bUnUgqbjgaJmGtjUCTt7xsPZ7q1LOqqApS5Fvl+DvLFLUWoTF+LSElxC
MwoLdUP5gq1rBtpWizpTFLxNBkGGSZiBiagOaRZw2DWSE9AUwe34NMUeolc5
bGIClkNGOlEwuQxQTLzgqPAK86qyQ3pUmhggDCgOa/NDmrywFv4Q7LCS4ZUW
4oJMC3+jnrtG3fm8on1Fa8lPmwsfr8t5tDLje6yN32Gsp9BTKcyUJcw1S+gv
UmirKOXrKVz2D3Q9/y7d/M8NuZSWggdaCr53586x27ePzs0dubFI47nrJ25e
AxqfvCeSxl/MEsaYoPH9IpkMNCZnRt++enD+yoG5K3vnL++Zv4xQfOvy6/fR
eN/iKN4uQmggb3EUj9BH2wHO1869DDT+6L3psye23fz07YUbRz/+4I0Pju84
vH/s3IlXPj2z58bFt+cvHpq/cOjK8V2os+LikQ/emnw5pBx3DO4IjZz9c/z8
4QnQhSPJDw5GD27HXicG2l6Nq0K2bpeu1a5udmo3Q+PdSeTukgP6aOaXrj1g
7glauH5TNyhoQSu2o5m2ps64k5f0CdGMMEM7uN8QxvWZO/223pCd57P2BTBe
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
ql061LAMJGx6SNzyuKz1n4DG/wWfY5Lt
       "], {{0, 474.}, {474., 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", Interleaving -> True, 
       MetaInformation -> <|"Exif" -> <|"ExifTag" -> 26|>|>],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{474., 474.},
     PlotRange->{{0, 474.}, {0, 474.}}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8801148490033617`*^9, 3.8801301014768057`*^9, 
  3.8802128691786003`*^9, 3.8802134304601355`*^9, 3.8802137491034746`*^9, 
  3.88021408371916*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"cde9471e-5633-4692-86c0-037d6a85f67e"]
}, Open  ]],

Cell[TextData[{
 StyleBox["7. ",
  FontWeight->"Bold"],
 "The symbol % fills in the last output and the symbol %% fills in the \
second-to-last output.  This can be useful in sequential processes."
}], "Text",
 CellChangeTimes->{{3.872774333092882*^9, 
  3.872774364389091*^9}},ExpressionUUID->"589ca580-a120-4938-9aee-\
c8f9c749a530"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sin", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "+", "2"}], "\[IndentingNewLine]", 
 RowBox[{"%%", "+", "3"}]}], "Input",
 CellChangeTimes->{{3.8727743711573677`*^9, 3.872774386284697*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"8e5b797e-cdba-403b-93f2-0afecb0dee7d"],

Cell[BoxData[
 RowBox[{"Sin", "[", "1", "]"}]], "Output",
 CellChangeTimes->{3.8801148494441586`*^9, 3.8801301019706163`*^9, 
  3.880212869861971*^9, 3.8802134308172116`*^9, 3.8802137494912043`*^9, 
  3.8802140840809736`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"4e1f1ea7-2665-4fb5-a2ed-7693275ffdd1"],

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{"Sin", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{3.8801148494441586`*^9, 3.8801301019706163`*^9, 
  3.880212869861971*^9, 3.8802134308172116`*^9, 3.8802137494912043`*^9, 
  3.880214084092156*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"528d15c1-b1c7-4035-bf0b-0eb347e1236a"],

Cell[BoxData[
 RowBox[{"3", "+", 
  RowBox[{"Sin", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{3.8801148494441586`*^9, 3.8801301019706163`*^9, 
  3.880212869861971*^9, 3.8802134308172116`*^9, 3.8802137494912043`*^9, 
  3.880214084103916*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"b230b273-6eda-4808-8f81-eedde2434d5f"]
}, Open  ]],

Cell[TextData[{
 StyleBox["8.  ",
  FontWeight->"Bold"],
 "In addition to using the many built-in Mathematica functions (described in \
the Help browser), it is sometimes useful to make use of user-contributed \
functions in the ",
 ButtonBox["Wolfram Function Repository",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/FunctionRepository/"], None},
  ButtonNote->"https://resources.wolframcloud.com/FunctionRepository/"],
 ".  These are accessed by using the ",
 ButtonBox["ResourceFunction",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/ResourceFunction.html"], 
    None},
  ButtonNote->
   "http://reference.wolfram.com/language/ref/ResourceFunction.html"],
 " function, followed by a name, and any relevant arguments:"
}], "Text",
 CellChangeTimes->{{3.872777765109784*^9, 3.872777809826066*^9}, {
  3.872777950065174*^9, 
  3.872777984709771*^9}},ExpressionUUID->"3b2362d4-671c-4c8d-a243-\
dbcc4ce087fb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<PlayingCardGraphic\>\"", "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"5", ",", "6", ",", "11"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"change", " ", "the", " ", "numbers"}], ",", " ", 
    RowBox[{"run", " ", "the", " ", "function", " ", "again"}], ",", 
    RowBox[{"and", " ", "see", " ", "what", " ", 
     RowBox[{"happens", "!"}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.872777865438678*^9, 3.872777912301476*^9}, 
   3.872777945118601*^9, {3.872778179686139*^9, 3.872778277381385*^9}, {
   3.8728582117925615`*^9, 3.872858237522772*^9}, {3.8737999408089995`*^9, 
   3.8737999556166086`*^9}, {3.883646180366454*^9, 
   3.8836461819237967`*^9}},ExpressionUUID->"6038a2e0-0fdc-4bfa-8e0a-\
fbbf555b7704"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    RotationBox[
     GraphicsBox[
      {GrayLevel[1], EdgeForm[GrayLevel[0]], RectangleBox[{0, 0}, {1, 1.5},
        RoundingRadius->0.07], 
       {GrayLevel[0], InsetBox[
         StyleBox["\<\"5\"\>",
          StripOnInput->False,
          FontFamily->"Arial",
          FontSize->Scaled[0.15]], {0.1, 1.4}], InsetBox[
         StyleBox[
          RotationBox["\<\"5\"\>",
           BoxRotation->3.141592653589793],
          StripOnInput->False,
          FontFamily->"Arial",
          FontSize->Scaled[0.15]], {0.9, 0.1}], InsetBox[
         GraphicsBox[
          {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
            "]]},
          ImageSize->{21.381713338743793`, Automatic}], {0.1, 1.25}, 
         Automatic, Scaled[0.1]], InsetBox[
         GraphicsBox[GeometricTransformationBox[
           {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
             "]]}, {{{-1, 0}, {0, -1}}, {0, 0}}]], {0.9, 0.25}, Automatic, 
         Scaled[0.1]], InsetBox[
         GraphicsBox[GeometricTransformationBox[
           {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
             "]]}, {{{-1, 0}, {0, -1}}, {0, 0}}]], {0.3, 0.3}, Automatic, 
         Scaled[0.15]], InsetBox[
         GraphicsBox[GeometricTransformationBox[
           {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
             "]]}, {{{-1, 0}, {0, -1}}, {0, 0}}]], {0.7, 0.3}, Automatic, 
         Scaled[0.15]], InsetBox[
         GraphicsBox[
          {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
            "]]},
          ImageSize->{21.381713338743793`, Automatic}], {0.3, 1.2}, Automatic,
          Scaled[0.15]], InsetBox[
         GraphicsBox[
          {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
            "]]},
          ImageSize->{21.381713338743793`, Automatic}], {0.7, 1.2}, Automatic,
          Scaled[0.15]], InsetBox[
         GraphicsBox[
          {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
            "]]},
          ImageSize->{21.381713338743793`, Automatic}], {0.5, 0.75}, 
         Automatic, Scaled[0.15]]}}],
     BoxRotation->0.39269908169872414`], {0.3, 0}, Automatic, 
    2.5238795325112866`], InsetBox[
    RotationBox[
     GraphicsBox[
      {GrayLevel[1], EdgeForm[GrayLevel[0]], RectangleBox[{0, 0}, {1, 1.5},
        RoundingRadius->0.07], 
       {GrayLevel[0], InsetBox[
         StyleBox["\<\"6\"\>",
          StripOnInput->False,
          FontFamily->"Arial",
          FontSize->Scaled[0.15]], {0.1, 1.4}], InsetBox[
         StyleBox[
          RotationBox["\<\"6\"\>",
           BoxRotation->3.141592653589793],
          StripOnInput->False,
          FontFamily->"Arial",
          FontSize->Scaled[0.15]], {0.9, 0.1}], InsetBox[
         GraphicsBox[
          {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
            "]]},
          ImageSize->{21.381713338743793`, Automatic}], {0.1, 1.25}, 
         Automatic, Scaled[0.1]], InsetBox[
         GraphicsBox[GeometricTransformationBox[
           {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
             "]]}, {{{-1, 0}, {0, -1}}, {0, 0}}]], {0.9, 0.25}, Automatic, 
         Scaled[0.1]], InsetBox[
         GraphicsBox[GeometricTransformationBox[
           {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
             "]]}, {{{-1, 0}, {0, -1}}, {0, 0}}]], {0.3, 0.3}, Automatic, 
         Scaled[0.15]], InsetBox[
         GraphicsBox[GeometricTransformationBox[
           {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
             "]]}, {{{-1, 0}, {0, -1}}, {0, 0}}]], {0.7, 0.3}, Automatic, 
         Scaled[0.15]], InsetBox[
         GraphicsBox[
          {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
            "]]},
          ImageSize->{21.381713338743793`, Automatic}], {0.3, 1.2}, Automatic,
          Scaled[0.15]], InsetBox[
         GraphicsBox[
          {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
            "]]},
          ImageSize->{21.381713338743793`, Automatic}], {0.7, 1.2}, Automatic,
          Scaled[0.15]], InsetBox[
         GraphicsBox[
          {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
            "]]},
          ImageSize->{21.381713338743793`, Automatic}], {0.3, 0.75}, 
         Automatic, Scaled[0.15]], InsetBox[
         GraphicsBox[
          {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
            "]]},
          ImageSize->{21.381713338743793`, Automatic}], {0.7, 0.75}, 
         Automatic, Scaled[0.15]]}}],
     BoxRotation->0.], {0.6, 0}, Automatic, 2.6], InsetBox[
    RotationBox[
     GraphicsBox[
      {GrayLevel[1], EdgeForm[GrayLevel[0]], RectangleBox[{0, 0}, {1, 1.5},
        RoundingRadius->0.07], InsetBox[
        GraphicsBox[{
          {Thickness[0.002], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxlU0tsjFEU/stmkNCUmEaEEQkihnTReAx6ShOUpqHEYBaTTkfapIyKUGLR
RKQjIiqVe2+C2Ll3IU01qkVo0/xeC5JqMGgyHmGY0kFIFyzc/5yTzGImuZl8
957zfd95/AvqEzvikx3HKbJnjT2T7An2XMnptIZQuvacPKCgZd3UVx9fMm5Q
4H/9bGJkWMN0G5jYo6D38dH7V59o+PW8pr4jxnhQgzpYcmpwv4KtK89URvs1
3PTuIwruHeksdW9QfHG1gtavi8qSdzQ8CHQf/lKuoGPoz5LLroYR+xyeo2C2
1at7yvp/JeLOFxrmnx7bvuqNhHZ7cWyU/OR6CE+80+B4v6SEvQ2h9PkPzN8u
kTf1SeN9baQQJ21+X0YD9iGYx+9PzOp6tCKPka9MYn9iWdJr8xVi9PFTw3Gv
znGBvIv/8ftbgfELpxjSTwm4dskN/CgxpPdQoL/SeYZ4bgv6X2qI5y7zlTN2
Kf/QegPbvL7fovxwtUG/jV0C+zu3zoDr4T4B1pZvWdjQ/IYEzStqaL79jJsM
NF74frKiV9B8W5h/QEDV2eZMqJXic8OC5pEwsNbOy/+Z6ovFyZ8ukpC1etcj
rB8g3LyT662UtA815Ke4SWLffFu4/ouS6ttkcB/8FmPdVQbvuwcKsZe/eYOh
PoznMe7PtzxGvqyk/asgvbaZqgCjj9WG6gwq2p8gvwPFjwZYf6OCfXauM/ys
t0vBcusvM43riTGfQ/5SUeb7Tfuf2q1of8f4+4kr+A86O6Md
            "]]}, 
          {FaceForm[{RGBColor[1., 1., 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdVQ1MVmUU/vgJUAgQS5BQQEQjwbLJnEPzIJiSuW/ockydFsq0Rmn+lZpJ
Py4KHbosOJ8WK5bvZTFkJCakzhD/RoWDETpcUoSmqPyUGkOic+9zqi22u49z
3/Oe85zzPOfc2Oy1C3N8XC6Xlzyb5fGW5/qEKQGJ7YYOn9t8oqST6eqFcW01
lw219b/50owfmdILcq8NXDL06szhrXFnmMIv/XCvucU477d9zWQfJzQbSrni
3h1ewdS8IDs0q9HQwf31MU8cZPq025wp+M7Qe6Pk4gHG73lDwUlVn6zdxzQl
oDxqyVlDS1alXGksYJLX3ea0oYbP5hzZ8DY7eVfW4/5r2xhxTwFv9Eam4xs/
jEgXW7JOP5zLJKbvYrGLXwl752QO0xa7QIkX7/fWR2krmG6IeVPs5OW1Gbuy
mHwXByet/ydepuI7qfEymATG79tPGPp560MVc2fDv6rWkA17VaqeH9H7aag/
4ivt5yymTYLn40OGjtnAZrBTZ2G59i8Z9cV9qfcnM62085Zp/gmId7EM+c+O
+c/fqWeU4i/XfMHAP03y2WWX+2u+KuPUnejDtKI2I6iu2iDuX8W0p+7Oo5dr
FN/9YtR33Di8NYi9VO6H1IHPykH1l/5F7+zKPCrxbr0xK3m58Omy/4YxJSwr
rNv0veYLAV/rLmi+cO1vs/YzWvlp0XpGqx5aEC8vDHqY2GpozV7J9CDTPLl4
+6KhirnyTwDOV7cZOh1TuX6ND+p1/wR+g7wYeNvR7wGp19FZB/o7daiYXpf8
+Vf1fAj1HbhuqNC+52J6UvB4buo8+ADvvG7Uk+Wn/Paov/bb3avxAzE/3/Tp
PAQx6upX/1DMR6CXBf4D0b/kAMuZp6Lhqv9AC/6RTEfH7uzaG6z+k5TPERY9
O+391OdT2PltD7Vooe34lM5viIV5mo16IsV23s9hul/W27Q7TP3TmT4XPQ8+
bKFPqaqv0WrL/dbSdTM/iLKgT9H7VunHuWgL/Xla+Ym1HD5PPaP8jrdQv5up
U/ZLv9i2PsqfY5pv447H/WNLMc/1Yvc1Lcje8wJT471FHTnxGm816s8cr/le
Br9RcRb42KB6iQVe9xamNHvOxlqYm+26vwS/jSt/B+arOBL9LNmBfF9EaL/z
mKrt91K/o9d8Jlu+iyL1vFD5eET5KAJ/dyS+zev8EvDbIPkdXEb1FGNhXg4x
2TL1Hge+w6tVL1KPPQa/1mp98cAb8C1jHidq/89DT64E5bcJ+/jFxyzstzbN
N0nzd2C/T0+0MD9dTDWCf0QS9NPeB/02iu3sz37t32Tly+UBj48rP/4epw/L
EoBnqtiOvgW/vU/e9Yd/5RjUm+fnQT8iwEfpAx70a6Sl+8Tzrz6deff2QC/D
9FzyO/h8lb8h/V4N6T4dBL8jBwz9KTTuH8C+z72L71dpP/ZRTy++V0V3VX+3
sS8T/1B93tD57FF9XMO+2XdL+9Wp+7pL9fKL7q/fmP7/Pf0bnAZ06g==
            "]]}, 
          {Thickness[0.002], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}}}, {{{3041.281, 1600.234}, {3041.281, 1600.234}, {3044.027, 
            1601.324}, {3045.203, 1602.195}, {3046.4730000000004`, 
            1603.133}, {3048.4730000000004`, 1605.625}, {3048.4730000000004`, 
            1605.625}, {3048.6330000000003`, 1559.223}, {3048.6330000000003`, 
            1559.223}, {3045.793, 1560.988}, {3044.223, 1561.512}, {3043.281, 
            1561.824}, {3041.281, 1562.}, {3041.281, 1562.}}}]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, {{{3048.145, 1581.77}, {3106.797, 1582.098}, {
            3087.848, 1552.363}, {3087.848, 1552.363}, {3081.117, 1559.004}, {
            3076.734, 1560.043}, {3073.3120000000004`, 1560.852}, {3066.281, 
            1558.57}, {3066.281, 1558.57}, {3066.281, 1558.57}, {3059.945, 
            1563.066}, {3056.3120000000004`, 1562.98}, {3053.27, 1562.91}, {
            3048.145, 1558.898}, {3048.145, 1558.898}}}]}, 
          {Thickness[0.002], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{3117.75, 1598.062}, {3088.5, 1552.688}, {
            3088.5, 1552.688}, {3091.5510000000004`, 1552.898}, {3093., 
            1552.5}, {3093.8910000000005`, 1552.254}, {3095.438, 1551.188}, {
            3095.438, 1551.188}, {3126.75, 1599.75}, {3124.125, 1601.25}, {
            3121.6879999999996`, 1599.562}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3048.75, 
            1582.5}, {3107.25, 1582.5}, {3116.84, 1597.188}, {3048.75, 
            1597.5}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{3111.281, 1493.062}, {3119.344, 
            1487.906}, {3124.8750000000005`, 1483.031}, {3129.75, 1476.844}, {
            3133.5, 1470.188}, {3136.0310000000004`, 1463.812}, {3136.5, 
            1458.656}, {3136.125, 1453.688}, {3129.562, 1461.75}, {3125.438, 
            1466.812}, {3121.5, 1472.531}, {3118.219, 1477.781}, {3114.656, 
            1483.875}, {3112.0310000000004`, 1489.5}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIVIGYC4j8rP146677Cwfq+f6840wwHEN83CMr/N91B
M6b/0NeIFQ5AUiPm13SHLSfK9sknrnBgAIEv0x1cunOe/85b4ZAkEGFp8nK6
Q9wuT56mmhUOe0omS7Dcme7gY97p+KADor7hNFT/5BUOUSnW98/vnQ62r3fO
CofTC123Fa+dDjF3KVT97OkO578HP05dv8KBY41MVErrdIenF5Ru/9yxwiFj
4tsa+9zpDt5A8xMOrHCYkSfUfCBousNl3yQBiWMrHB5Wiaxzt5vuAHKe5qkV
DkcVNhS9UJ/u0C5285z52RUOqmyNU50FpzsATTGNuwCV/zkNLP/94goH3U1z
3y9/OM0BFFYHLkHdc3KagwfQ4LzLKxwqX6oZdmyZBrHvMtR986dB3A9T3zUN
Em5A8yaA6LppEH+fXwEOt+qiaQ5bgeEx/xxUfdo0h2WzjygUAN0Hckd51DRI
eJ2ByvtNg4TnKSjfCZO/U6719cUbUP1m08Dhy/tghUPQDqCE4TSwvdbPoe7V
hbr3GyQ+/NVx80Hx85lxBkR/1QqIvXNnOAAAoMsCvQ==
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxlUntI01EUXiU2oiIqKkjKXlL0cn9FlPQJ6yErwh4EujJ0QgxJCy2LCkuj
h4WJ6x5hpFiUZyBjjB5DTNY0syKNjGrYSxZaZqwHsSL/6P7u7/4RdOH8ce79
zvm+75w7L794W+E4i8UyRsZSGWNl1ER+LnZ2MjavOpf53iWQ41rzbmsX425p
3aykcoHyT2m2s92M/t8n3GurBSzGecio3z+1MtwgcKFo6I9P5m0SX9UqMK0y
/GhA4pcHr8SbXwg4ZN+9sp+q+y5wIGPCywLJd7P7UHvjeMLslW8WJt9jGDpe
pxBuGfdtGm8jDKfZrEV3WOnq3US4ZOACjF/bY9e9eaT6zPWZ+IpSUjqSrjHs
1VJYFWFmtCfR52VMNgTVabxH45sIvQnZ6DzjhrczNT1IuLr+9o+MCj2PMJn6
y7TfJ6T0x4oZ+2q/HFv3nDDq+/Zskpvh3zhw1BPV/V36/S1hhaQd2s2qbkGM
sMRZEynbxejbkj/l1SCZPrM1ftj0O+LQekcIZ2ZEew5vYCxKPnm5I06qrj6T
YW1JyfnwlZTugF3nIT2fnaae6X5CaM7pz7Ulen5E2NOaNfHURYZcq7WlwHzP
bmQY6AfphCbp/7hP72dUqH9g9zMa4s1djnah9uRsYaUr4REYfDq/fzXrebuF
mmdhUPPnCuRJvkiIla9lOwSOGMRy3/dTAwc/Zv2fG35KOky+x7ma75//+RdS
qFDf
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[RGBColor[
           1., 0.33333299999999993`, 0.33333299999999993`]], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}}}, {{{3037.5, 1687.5}, {3056.25, 1657.5}, {3056.25,
             1657.5}, {3061.105, 1660.344}, {3063.75, 1661.25}, {3069.777, 
            1663.32}, {3076.156, 1664.371}, {3082.5, 1665.}, {3089.965, 
            1665.738}, {3097.527, 1665.617}, {3105., 1665.}, {3112.578, 
            1664.371}, {3127.5, 1661.25}, {3127.5, 1661.25}, {3146.25, 
            1687.5}}}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxlUm1Ik1EUXlNCrEahpeWaWetDoaxQhtjsZJmYleRATEJqrlpzzSZS6SSK
lKgMlQjeU1jQiG4wLMRFVoYYmST04X6ISVj0YbZCKkuH9nG2c0GoH5f7Puc9
5znPc85NMJfl7w1TqVTT6KTQUdM5Na//qcEh4NGiW+UfRxH+xZ+WrYn4XC6g
cpg++hHcWbe/tzsFpA/mnYvpQWjT1frnEHYaI/uWPESosw9NDNsFmGcXprW2
S1wqIMKjLXrnRbhfcT62hnCRJX3wWQsCSVAdJ5x/R1dbenMq37eNGDwIFPY3
kp5x09trlxRkHUdFSJfnDEKf+5Bxi4v58o4gBL11uGR+BTJPtYBNZ+1DLifr
fUH/yeaYz4GQtKu+01spoDn7TVW0hfWoyE9QZ3gJhnjrqX9q8d2cukKEq+T/
l13q34Eh3ntlsn/OVD6xNWdnIlDZTLWD/fkzEOKSX+m7yN9A4JhtnREh6mTH
kz2EL49c7+pJQ6gif9027l+TgtBE8dyDAqyNX6rXJyO8f754IED9txpOb3id
iODtPvzgCuFvvWRUL/Ud4H2447l/JuHgXsfmI6ylRVy0Sv/RCDF0R9lkvgbh
A/G3WSVfJM9P2cd+HqsRJm987Z1l5nrTHwVaqX98sYCl009c2DipQEPnjxXa
naxv97jC9Sae/8RPBRJp3qnbpR7CIZ+bBWhWtjSNEA7tNUP6DSgQDO838Pux
/FYgvIAyV4tQfHmY1JvEehtmIFC19qVe7j8KWV+CfI+xyHwL5XvWIQTXXLBA
+tfzPHxzeR+5qxBKqG5Uw3xxWf/jv8CEixw=
            "],
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4nnvlx87nbbCQb71deCOKzMd0PnXFxfYeiWs
cPgR/Hjp7PszHf6s/HjJN2aFQ1SK9X3/hzMdCm25ri8Og6p/PNOhdLIEy7SA
FQ6VL9UMOx5A1PN6r3DYcqJsn/zdmQ5va+xN49xWONz+WZdlc2smxBwnKB9o
HwMI2K1wAIr2Tj8/00G4+cCph9YrHMRvnvsefHamQ7JAhOUWc6h7ThDmx+3y
5Gmyh7jP4uJMh8u+SQIznBH+SwKqL3Ff4WAKUnhjpkMJ0P1hQPeCxLfcnung
3J3zvNof4X7NmP5DpcErHFxA4vdmOmwFis8PX+Hw6ZJv0gQg34hjjcysaIR6
Kf27Km3xCPMIhTcAz/zIiw==
            "],
            CurveClosed->{1}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3117.8010000000004`, 1650.5}, {3117.8010000000004`, 1650.5}, {
            3115.238, 1651.113}, {3113.9570000000003`, 1650.965}, {3112.27, 
            1650.773}, {3110.672, 1650.02}, {3109.176, 1649.219}, {3107.73, 
            1648.441}, {3106.4410000000003`, 1647.391}, {3105.215, 
            1646.305}, {3103.898, 1645.137}, {3101.602, 
            1642.4569999999999`}, {3101.602, 1642.4569999999999`}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYpfunOe7E1Y4HFXYUJRxZKYDVn7sCocZeULN
Bw7MdNgp1/paMAbK3z/TgQEEIlc4cKyRiXqyd6aD7qa575eHrnC4/bMua8++
mQ57SiZLtARBzQPKA3WdUgxY4RC0Q641e89MB2n9uyrHfFc4mMbt8uTZDVXv
vcJBvvV1oMXOmQ4gYSbPFQ7LZh9RMNg+06En5/nvlW4rHHzMOx0Ttsx0uL64
wNbLBeqejTMd/qz8eKnXaYWD2M1z3y+vn+mQLBBh+cUBav/amQ5A7/zWtIeY
t2H1TAfNmP5DX20h9vesmung8bBKJM8a6p8VmHwAJ9ORgg==
            "],
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{3118.969, 
            1641.641}, {3118.969, 1641.641}, {3117.109, 1639.234}, {
            3116.0550000000003`, 1638.145}, {3115.367, 1637.434}, {3114.625, 
            1636.766}, {3113.84, 1636.164}, {3113.102, 1635.598}, {3111.508, 
            1634.648}, {3111.508, 1634.648}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJVIGYC4mSBCMstsSscbv+sy9pTNdMBnQ9SeyBqhUO7
2M1z3wtnOhTacl1Xjl7hIN/6OtAid6bDQtdtn2uB/P5DXzXuZMx0KJkswRIG
1H/ZN0ngRgqUH7/C4TRIYdJMhz8rP17yTVzhYH3fv1c8cabDYqDw3uQVDntA
CoHyE0DmpCLUX19cYOuVDlE/PXmmQ1SK9f3+DKj9qTMdxIHOupy5wmHZ7CMK
G9Jmgt1Zng1VD3SP7qa575fnQNXnzHRw7s55Xp2HcD9Yff4Khxl5Qs0HgPy9
QHe4FK5wSAKFQ95MsLtaCqHyQP0+5p2OD4D8ypdqhhxZMx2k9e+quOVD/BuR
CeGz5UH9B7T//Pfgx6lA+/mADslPg/CXZq0Auzs4FRKejzMg4RcDDC89oHuf
p61wUGVrnOqcDJVPgYZHItS/SVD7geETv8uT51AC1D4gPw7Id4qD2Pc+EeKe
YzErHEDRdxlo/iugtjXRUPPSoOEJ5G85UbZvPtA/RhxrZGZFQ8MTGB49Oc9/
rwTyMya+rbEvwkwf6HwAD7cZyQ==
            "],
            CurveClosed->{1}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxlU2lIVFEUnkpCIkIoRCrSgjYoqEikxjfvzPLGaVbHV6OzZDaOTYRghQaZ
RSsV/RjFCi6lEYPNFUIkwqw0wlYMWvRHhkENJm2ktGFSPzpv7okBe3Dhfe+d
+93v+865i8M1JVUzdDrdNFwbcU3HdSr71dMbNg7OgtPGCh+DqTicVbahVuGg
056tDGJ9P1eEzBwyry4MvAsx6F504nOTkUPreOLhE8Sjz5cMT8ochicP7erx
M7Al6+eNGTgg7cQg8g3Fd0v9EocrF+7ndaoM6ppzMrIlwX/Yw6AFeRyI90iz
XsYdDC4rXd8PIr7+eN+dXBsD85nq9weQ79uAK9xoYdCIel7jeYGI/o3HJPR4
TYQNTOhSaH8hg0r08wP95WJZN+J1aGS+k+olBmMNcn6rW/iLIN+gCxPwcugo
StafVRjcRP4XKgeLpsNG+n1CT5aT8ijj8CCvc+8HNxM+A8TvZZDhm7P6Woj8
b6bzt3HAry01WwTf+e08lft6zCuVQ4SL3BFrPLEdHH6pI20LML+UrygH3D6+
vISldN1GvP/jsrWZxQzKb22abYqm9TybUEdGq0R9wkH6K4Wf31h/UmtUBYel
M4+cu4dYq4uWc+ipbc45jnjusbv9ySAXdW7Bf9TPIV97cVFePsrHziCO/etV
6TxFnN9WzAHHouMR5pvqu0vM21tZ+PPYxf8iPfXXSvOlF/oKLBw0e6sKhb6E
keZVTs/DzqYvDbKZwSesqzZQflYGvejDIpEee3re/uWj2VIl0oN5/mn/OuAy
iH6tKU3za7lf8tN9MFJ+QfH/opn48D6sDMX66hTKKyjyGbKSvuD/920q/gux
y66X
            "],
            CurveClosed->{1}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC0TfPfb+cucKBY41MVIrjTAcxIH9y+goH07hd
nj0OMx12yLW+Dkxd4RCVYn3/vP1Mh2ggzZ+8wuHTJd8kASD/2QWl2zvjVzjw
6W6a+952poPHwyoRvZgVYHOC7WY6XF9cYMsVucJh3vvlx05bz3Q4/z348dPw
FQ4+5p2OD6xmOgCt4WEKW+Fgfd+/d7o5YT7YHKB5y2YfUTAAmlc6WYLlWjTC
/L0lkyWOxK1wADlnuc1Mh8Wu2z7vTYS6H2gfSxjQpSkrHPoPfdW4A+RXvlQz
5EiH+P8JkA8yd0M2wjx0vnN3zvPqvBUOGRPf1tg7Y/KFmw+cSgSqbwcFADA8
0cMXAEjAsao=
            "],
            CurveClosed->{1}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYtYwPt1PYSscTi903fZ5z0wHj4dVIusiEPx5
75cf645a4VD5Us2QY/dMByOONTKzolc4gJS575jpELfLk4cpdoVDoS3X9cVb
Zjq8q7E3vRcLVb9+pgMDCAD5qmyNUw+vmunw7ILSbcuYFQ5BO+RaXy+b6bBs
9hGFD5ErHExBBi2Z6eBj3un4IByqfvFMB2n9uypuoRD12UB+yWQJlrCgFQ58
upvm5gP1CzcfOPUwAGH+jcUFtqf8V0DsXTfTIUkgwrIEyN8D0rh5pkN3zvPf
mQFQ87bNdJhw6KvGnMAVDkDj3i/fBfFPUwjC/+jhAwCffIsc
            "],
            CurveClosed->{1}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3103.8120000000004`, 1642.809}, {3103.8120000000004`, 1642.809}, {
            3106.562, 1642.973}, {3107.8950000000004`, 1642.691}, {3109.004, 
            1642.4569999999999`}, {3109.9410000000003`, 1641.68}, {3111.043, 
            1641.41}, {3112.559, 1641.031}, {3115.703, 1640.941}, {3115.703, 
            1640.941}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3116.0550000000003`, 1645.605}, {3115.3360000000002`, 1645.625}, {
            3114.672, 1644.688}, {3114.656, 1643.973}, {3114.641, 1643.281}, {
            3115.2459999999996`, 1642.328}, {3115.938, 1642.34}, {3116.66, 
            1642.352}, {3117.227, 1643.367}, {3117.219, 1644.09}, {
            3117.2110000000002`, 1644.727}, {3116.6910000000003`, 1645.586}, {
            3116.0550000000003`, 1645.605}}}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{3048.3320000000003`, 1687.5}, {
            3059.2110000000002`, 1666.102}, {3064.078, 1667.789}, {3068.277, 
            1668.605}, {3074.48, 1669.301}, {3071.5550000000003`, 1687.5}, {
            3067.258, 1687.5}, {3071.098, 1671.953}, {3067.5350000000003`, 
            1671.703}, {3064.207, 1670.98}, {3061.1330000000003`, 1669.758}, {
            3053.27, 1687.5}}}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{3078.227, 1687.5}, {3080.512, 
            1670.031}, {3088.07, 1670.734}, {3094.129, 1671.145}, {
            3101.6839999999997`, 1670.398}, {3105.797, 1687.5}, {
            3100.9530000000004`, 1687.5}, {3098.6679999999997`, 1674.145}, {
            3092.73, 1674.5}, {3089.2459999999996`, 1674.141}, {
            3084.2619999999997`, 1673.781}, {3082.594, 1687.5}}}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{3113.1479999999997`, 1687.5}, {
            3107.6639999999998`, 1670.215}, {3113.18, 1669.758}, {3118.207, 
            1669.449}, {3124.2110000000002`, 1668.02}, {3136.004, 1687.5}, {
            3131.25, 1687.5}, {3122.199, 1671.496}, {3118.848, 1672.41}, {
            3115.9530000000004`, 1672.676}, {3112.602, 1673.141}, {
            3117.2619999999997`, 1687.5}}}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxlUltIVFEUvZZFmEhEaBRI9jaSEpIIEVckhU1iKE1ipTJoSYg6oJQykY8y
SkRFQjc9fsQO/fQhFJUFMdr0YMppfMyMk8yklNhLEsSP+mjfObsf+zjcu+7d
e6/H2Um2qryy5YZhRPFJ5bOMj21NwYGasIL53PeZsBRv2DO5tSWgMJLDX14S
arrWR1vHFOwZMb4tjwjFT7NjnR6FZ/zjSh8h+XS7s/aNwqf6dQ9edRNquT7e
pZBWxIUthHu3hjbtHVJID+W2JTgIf+7/8rY5FbJaK2Z+VxNYktEwqPTzLOE5
z83i+rzHiVe/naGIjh6Xnn/khOZbYL6eyrXNL3IJ0da4lH63QnnnD0emReZ5
hD+bcHdOuVaPKtTNbk9dxXgF18/7NJ/B+Fp84P2Fj9pf71GCKSs5pLBtZePN
Q8cJvt7qjJgpwVaCn/FbxmbfYrHk9e9/uebHlPbbzf5MnwNhyaeO0OFc2Hl7
UiGB2/Mv63qD+SM5NREKS9ND7QHJq5mQ0n9n7hzrjTNfmjRWo5pvkLEZU+cH
ub9GwvBi/nTfsORxiWDZf/1gyTuFeW+OreOi3CfnZcax267zaXWL//OEL57N
wSdu4S+jyPdp7jftjhRJPh6pP0VgNS6LV2ldBaJ/TO7vJOEr83z3ybxCvR/j
sl9+7t/I+R0OSn4lOu8bQe23qpRQz0JfB/X8HZzvMfYTnpB9qKCIrq6A7FMl
YRfvx0O/5M35/3RkpiWOK91n/x//BUWTbnU=
            "],
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxdUmtIk2EUXrMfElFGkMFCLaIyuhkMkwqfogt5Idx+NLYYNpSGSGHNQNEa
2VhSYVIEJ8lu1LsfFhEpFStCKiKhpEEX7Gbzms5lttZci863943AD174nvec
9znPec5Z6NhvKk/R6XTT+OTw0fPxu87Mn54QMN3N8IxMEqbiwtzGTaU/RfL+
WDfhZdQc7B8X6IkdrtjgJ2hpzWMCK29fCC+9QajaOONNcEjFLxHs93fM3Dwg
cOfZoYcXTyv+PoH0dy+i5gbC5a0dE/W9Aq1h8bTLpfi/CBi1h3sJVzn+ICgQ
KHakvbUTHGmWPBfz6bRvF6Fd4x0WmMd8gRIVH1X1iwknKgfj2d8EfpmD11oK
CMt3N3W2Twjc3N5be5bx2tS2Beejst7JAqlX/1vgSdatA0NFlNQZ+CPAadYy
E2GsLt+YofdJvRbCFdaXSPGhS2vEofQy1uoZKgn93Yt6ahhrct3VhCL287PO
l/Qj8wjBsPrD4m3s9/WWx1lrPJK/NS6wRRPuJXi5sdyYgLM5VJffSLjHfs9h
ves/7TyVzthaxn8/pL6+44QBrpfH88n0jJSs86p4WEh9Rwk1w0tyUkMqv56k
j6OqX9aXzf4YGTd1Rpa930eY2/Do+R7GSd1OQjWP71xI7YND+cP8X5m2zS71
fxxX/diUnxGBWdqCWNT7qKzntBJW8fVgTM7Lb5P9RuNy3pZSqc/N8/j+ii/K
CTbuZ3ZCztNQIflex+U+uKsIWnsrJlV/B9W8I3K/Cmv/z/9f/lT8F0Nrgtw=

            "],
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJDIGYCYpYwPt0iqRUO8q2vA3cwz3JA57eL3Tz3XXyF
w7LZRxQ23J/p4GPe6fhAYIWDOFA4eP9Mh4Wu2z7X8q6AiK+f6aAV039oK8cK
Bz7dTXPzF850qHipZtjBtsKh0JbruvLEmQ5/Vn681MuywuGyb5JARNNMh70l
kyWOMK0A21NeNNNBE6jfFCgftEOuNTt5pkPpZAkWMdYVDqpsjVOdo2Y6AI19
r86+wuH2z7qsPQEzHV6pGXKs4VrhYH3fv3e610yH/kNfNWKA7uFYIxP1xHUm
2N0GgiscgLZZbnGe6RC/y5PnkAjUfiB/MdD9eyUg9r12mung8bBKJE8W6n+g
PMjdyQorHNa5AyU8ZzpUAv3DoQIND/+ZDh1Ad29XhcpHQ/znqwoNj5SZDnpA
9z4Hqj+qsKEoIw+qXwnCf1E+0wFkbaDcCofT4ICE2LdYBmp+A0S9BzA+9gDD
iQUYXu9q7E3lgO4F+fNO40wHkHCY6ApwuCwH8oFRyuAgtMJh3vvlx07XQ8ND
AOqf6pkOTy8o3f7JC3HvlLKZYHXcQP6WE2X75gPdFwcMHycYPx0SfgW8UP2J
Mx2Emw+cWsi3wgHo23Xu0Yj0AI7v8JkOPTnPf78UgvDfB0PCg1cMGv6BUP1A
94OCQQconwwU/wL0H8jdDSEzIf4Ehv+P4MdLpSMh7usG8qNSrO+fj4X6Xw4a
vkkQ8x7KQNNH1kxwOjKXhqS3xTnQ+AbabwryWDEi/mHq0fkAwwVarA==
            "],
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3060.8830000000003`, 1659.367}, {3060.02, 1656.652}, {3059.434, 
            1653.836}, {3058.297, 1651.223}, {3056.8950000000004`, 
            1648.004}, {3054.969, 1645.031}, {3053.125, 1642.043}, {
            3051.8710000000005`, 1640.012}, {3050.258, 1638.199}, {3049.117, 
            1636.098}, {3047.9570000000003`, 1633.9569999999999`}, {3047.008, 
            1631.574}, {3046.273, 1629.375}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3065.6639999999998`, 1660.984}, {3064.9410000000003`, 1658.445}, {
            3064.445, 1655.809}, {3063.488, 1653.363}, {3062.309, 1650.352}, {
            3060.715, 1647.57}, {3059.1330000000003`, 1644.777}, {
            3057.9300000000003`, 1642.652}, {3056.285, 1640.781}, {3055.234, 
            1638.5819999999999`}, {3054.3550000000005`, 1636.742}, {
            3053.8710000000005`, 1634.855}, {3053.254, 1632.801}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3074.9730000000004`, 1663.895}, {3074.25, 1660.98}, {3073.754, 
            1657.9569999999999`}, {3072.797, 1655.156}, {3071.617, 
            1651.699}, {3070.023, 1648.508}, {3068.4410000000003`, 
            1645.305}, {3067.238, 1642.871}, {3065.594, 1640.727}, {3064.543, 
            1638.203}, {3063.6639999999998`, 1636.094}, {3063.18, 1633.93}, {
            3062.562, 1631.574}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3080.5350000000003`, 1664.281}, {3079.8520000000003`, 1661.613}, {
            3079.3910000000005`, 1658.844}, {3078.492, 1656.277}, {3077.387, 
            1653.109}, {3075.844, 1650.227}, {3074.4100000000003`, 
            1647.254}, {3073.3320000000003`, 1645.016}, {3071.996, 
            1642.898}, {3071.012, 1640.617}, {3070.18, 1638.688}, {
            3069.4770000000003`, 1636.836}, {3068.898, 1634.676}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3090.102, 1665.316}, {3089.4410000000003`, 1661.973}, {3089.094, 
            1658.551}, {3088.129, 1655.281}, {3087.059, 1651.656}, {3085.273, 
            1648.281}, {3083.922, 1644.754}, {3082.7889999999998`, 
            1641.793}, {3081.559, 1638.859}, {3080.6479999999997`, 1635.82}, {
            3079.898, 1633.324}, {3079.4100000000003`, 1630.9180000000001`}, {
            3078.8520000000003`, 1628.211}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3095.402, 1665.121}, {3094.781, 1662.242}, {3094.3590000000004`, 
            1659.258}, {3093.543, 1656.488}, {3092.5350000000003`, 
            1653.074}, {3091.172, 1649.922}, {3089.82, 1646.758}, {3088.793, 
            1644.352}, {3087.3910000000005`, 1642.234}, {3086.492, 
            1639.738}, {3085.7419999999997`, 1637.656}, {3085.328, 1635.52}, {
            3084.8010000000004`, 1633.188}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxdUm1Ik1EUfisNKVArWbZKljjLcJpmlJR4SqGipHIQYRAxEvuiL/q0CCMs
w0Cjgh2k+lUXRMao17ZpvsyvthDMUqi1wmSUhYQghEVRnfveA4NeuD/Oe597
zvM851nmOl5ZPUvTtBl0iujMpON4fG+yZlTAmn0dW2/uRMijejwq4P6keD4A
CAVJbUuqIgJcqXuKi1YhPGrps50YERD9efnwhkyET0OZ0QtDAsobj47/siA0
93xf8X5AwFhtmic0F2H72hsbP/YL0OSXiDBc4Up92y2g0p9Rf0RDSNyd7Jh6
pvrrv92wjfD7/QIO3vp2qfSP2+TRqDO/v241xytgYWRwejgBoT181njg4f40
T+pZ3ibguiUyeG6e4v+uVcAPZ+zhYivzaeX+xP9kyZw3MarNdysRztxOT7DQ
e6nTWxjv7z42/2pwHUIgo37ilZf1liCQjIldxM8i+QDjfYpP3SYECTvUIaDf
5j31pYzvu4TyoRxNHATjeLNfrwD77Ct3e0sRqg6sH20i/zybx2rvFCu8FmL8
aqW3Jixg6nWFq9mBYM3/kHXtBevLVvi6MPtjQ9Pn0yHlR8si3l+f4u9MQ+V/
N+sl/xrowmew/ymKz45O9otqmaWgP47fIhf/VECTzMECzk87809n/TrzWcp6
dM4b8ftMfAJPOB/2//A5COe/Zhc0UD9d/s9FKCODL/rYz3zWG2D9lNeX086Y
vZPnU11IfKxdnM88nm9w/1zer8H5yWF/Dd5vFsJe0p9CdbK8oPz8A8ZQecs=

            "],
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxFU21IU2EUvqs1hqAtC2dUK3GpI0cqjT6WeMIMK0QyEBkhZQZ9SB8UfZhE
UVJRYRGBh4qooHdB9ENELCTCgsSgH4osEa+tZGrTzRSxyKhz7zmxC++Fc99z
nvM8zzk3o+ZYxYH5mqZZ6KyjM4/O4stvu/dZg1DR7mqMBhBO3U23VlqCsNp2
6V5xGYJmPkE4N5aVb/cjpPV/mt09p6C3rMZRlYuwoDLFO/VTQbh+ycsPLoR6
yuuaUfDxcUnbyYUItztnch7EFXhbHsaVDcFK+S1RBf6h8ltOC8J3gq2LKBj4
deFwx59mKDWAwgoO3ploKPrbzH10BYFaqtAQnpS0TRcOMP60FeHZ/fer8vrl
Pgkh9PR4YVJIsR7qH2so8ul9HB9xcr9xirfeqBs5T3yvGoL6BM+NJs/skPBZ
k8A3/HiXx3gu6m/4cc2H8IraLNJF/waEZWsH3Tbib+Ce2YSmnqPflOlbr5/9
hIj034xw1sAZTeR79jR1+v77Q3iU9tszIXwKOD4UE3+9CB00sCtx4ZfD+ndM
KpjqIeMy0fSlKS54pHe/o2pjK9WbutL5vnxcwcrG6K72VMEbU2CMO9eBJk//
iNSnSDws/ibLfnxN5BvzLfii+Hsq64/p7Jc9TfjrUr+U/Z0c5PyLKxDmnv/o
SdbFrwzkuiH2Z5bm85n0dVNsf7E8UJst+xCW/h6enyI+vurX2296uL50WOop
3rn++pa9EfarmOJ8A4j0tXadfvMoi+e3jeZxgrYo0y16RmUfyT96+6op32n8
B8T3H2l0fjk=
            "],
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{3042.75, 1621.926}, {3041.707, 
            1619.914}, {3040.4100000000003`, 1618.4180000000001`}, {3039.172, 
            1616.793}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{3045.938, 1618.973}, {3044.723, 
            1617.07}, {3043.7659999999996`, 1615.938}, {3042.75, 1614.617}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{3050.602, 1618.117}, {3048.77, 
            1614.852}, {3046.8590000000004`, 1611.887}, {3044.6130000000003`, 
            1610.262}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{3059.934, 1620.527}, {3059.824, 
            1618.75}, {3058.8360000000002`, 1617.016}, {3058.3010000000004`, 
            1615.008}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{3064.172, 1618.621}, {3064.062, 
            1616.844}, {3063.074, 1615.113}, {3062.539, 1613.102}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{3068.445, 1618.621}, {
            3068.2619999999997`, 1616.066}, {3065.6330000000003`, 1610.469}, {
            3064.172, 1608.125}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{3077.039, 1618.816}, {
            3076.52, 1615.836}, {3075.426, 1613.094}, {3074.3160000000003`, 
            1610.34}, {3073.324, 1607.879}, {3072.141, 1605.727}, {
            3070.8160000000003`, 1603.188}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{3080.617, 1615.16}, {
            3080.047, 1612.9569999999999`}, {3079.32, 1610.719}, {3078.516, 
            1608.555}, {3077.8010000000004`, 1606.625}, {3076.988, 
            1604.926}, {3076.105, 1602.875}}},
            CurveClosed->{0}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
            0}}}, CompressedData["
1:eJxlU31IU1EUn5YlZiYualqk09KKxIxEyoZHTKQvBAchsorMKMqyKArFouib
DBMpOc8ySsobiESYZGSu+Z3iyhFOpkydmy0pS5OSIjrv3Tv/aH9c3s7Ou7/z
+zhPm5OfeXCOSqXyoaOj40sn9vn9iZh+BkH0I78J4f+6xDS92jDMoOthWv0p
C0Lj6TJNi4PB4dIvRcl2hCcVLRHfnAwyX664Mu5G6Ks6oQv4xMC/Znn26DSC
3+6g2EkXU95b7yPB0v6en2qXuB8gwaO0+ikd4dWmDxcuVksQFje48qqdQYE7
Ov66RgLLrpxgjY3Ba5o7N1zi+B853rNICb4WJSdUmkVfK8Gfp997F3Yx+KV3
PK4I5/etbUx5ZoVKnE8zg8/R8f7rQiQ4EJy1qe4tgyR7xq3yQAmWEL8yI4OT
uoC+KD8Jtt7MG0syCvy/CJUT1W1dTRx/GekrJJ4d1N+ZeCNlaFz4ZWJA1qou
OJDraRZ6BxH2vdoWaGrlfZWV+13dLvT2ojLX0SnwuxGyc5Ps5h6ex0STd+18
H2mb8fApR86f+qvmXbyTesy7lnVcpnnkdm27AWEv8fFtFfz0CFWUR6OJ66/a
jrDWUGJ6YRT+peCsH7J/NYnI/aX5su6BOM4/ysj34WgMKnlbyF+Zhz4CgdZo
6hz5If+vD0WQ16aU8smRc1ALPzs5nmERwm163utmkEBEixcgFOeN/Xab+fsb
/bk+vUX4MV/g9TGo6zjz5gHVIZeM77QDnn3D2f3y4Kupv39E6KH5Cu6ouB8m
8nTyfc7VIrjI7waX+D7WIDTQvA8u4c8GnuchqpWcNiPPmWrbzPkjW1KFH6PC
3x2o7N+PEdEn/6+RoLND/H7GHs5v2MrzSj/uXcv5F4wxmOwlAncR/gGsMt+R

            "]]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           1., 0.33333299999999993`, 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4iSBCEuTKyscXLpznlefm+mAzr++uMCW6+wK
hz0lkyVa7s90EL957vvlUyscPl3yTZrwcqZDh9jNc9tPrnD4Efx46ex3Mx10
N819v/zECofbP+uybL7MdIjb5cnDBJQHmbvl50yHy75AFpB/eqHrts//ZjpI
699VOQY1T4BlFkT/mRUOqmyNUw+zz3IonSzBMu3cCgfr+/6907lnOTy7oHTb
8iLEfb/5ZjmwhvHpfroM1c8/y2HribJ986+tcCi05bquDOSD6OSbKxxeqhly
6PDMAuuzvr3CYd775ce8OWY5/Fn58ZLvXah7mGc5nP8e/Dj1HtQ/f2dCzAPy
t4Do7xD33wDyZ+QJNR/4ONMBFJYHgPqjUqzvn38NCa+uOysc+IAeyX8G5d+C
htfdmRB111dAwuEaZngDAHlozj4=
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4su+SQISV1Y47CmZLMESP9MBna8Z03/o65kV
DoW2XNeVfWY6dIjdPLf91AoH8Zvnvgc7znToyXn+e+XJFQ63f9Zl2djMdJj3
fvmx7hMrHHQ3zX2/3Gymw/nvwY+fAvnLZh9RMDCc6eDSnfPcGqj+9ELXbZ+1
ofqB5gGN/X5ZDaofaN+WE2X75JVnOjy9oHS78twKh6gU6/v+8jMd3tXYm8pd
XOFwVGFD0QvpmQ6lQGdeuwzVD+SD3N1ybYXDjDyh5gNAfuVLNUOPmysc5Ftf
B+6Qmwkx9/YKhx/Bj5fOVprpwBLGp2t0F+oeoP3XFxfYet1bAXaHty7UPCBf
la1xqrPxTIdnQPfsvAfxn7rlTIcdcq2vJwL1g+zhsJ/p4PGwSiTvDsS8YheI
/1NvrXAAur5X3G+mQ7JAhOWW61D94ZjhDQDiDclv
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            3177.7110000000002`, 1631.309}, {3173.285, 1637.426}, {3177.844, 
            1644.066}, {3182.398, 1637.816}}}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4qgU6/v+i1c4bDlRtk9+9wyHrUB6/jIIf/7J
GQ6lkyVYxFaucEgSiLDccnOGw9MLSrcr161wOL3QdVvx0xkOO+RaX0/cvMKh
8qWaYceHGQ7nvwc/Tt21wuFhlci64z9mOACVfa49uMIBZM/5vzMcNGP6D5ke
X+HgY97p+IBxpsOekskSLWdXOPQf+qpxB8gXu3nu++TLKxw41shEPQHydTfN
fa9+bYXDUYUNRS+A/AlAdXNuQtxjwjLTIW6XJ4/T7RUOGRPf1tgzzIS49y7U
/N8zwOpl7qxwMAUp/DLD4V2Nvem8W1D972c4LJt9RMHgxgqHy75AkedQ9Zch
/BuPZzg8A/p357kVDu0ghz2Y4bAI6J+/p6D+vTfDwQPo0XfHVjgwgMD9GRD6
8AqHGXlCzQeA8q/UDDneHIbaf2mGA0sYn67REYj/Uo5Dw/cwxDyOPTMcvIHu
TjgEDa8tMyDu2A/xf8baGRB/7YPGz/IZDgBc7dvL
            "],
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3174.094, 1599.844}, {3174.094, 1598.875}, {3173.586, 1597.762}, {
            3174.094, 1596.938}, {3174.496, 1596.285}, {3175.414, 1596.105}, {
            3176.156, 1595.906}, {3177.125, 1595.645}, {3178.156, 1595.656}, {
            3179.156, 1595.719}, {3179.824, 1595.762}, {3180.469, 1595.969}, {
            3181.125, 1596.094}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxFUl1IU2EYXulFF2ESkkLQHxT5swuFCBnSGxgVFoKCiA2RqSAo6UUGRRdi
BUnGii56IUpoVJ83IdLSREVE5jz7OdvRNmdnOlsmk7WBGgnd9O58r+zAx+Hh
PN/zPs/7nNO27rr2HJPJdIBOKZ2DJvn06QJuXBy4HEshfHbfnT65KsD4QFj9
Wx8/GxNwoXni+iDhGuK1rAvoePH7waUkwta58kPJHwLss3/OWxMIJVb7rDMu
IM88+qb7J8KH13OneuLMjyFUP+3atBA25kQRrq3fL0iRnmWt9tmrFYSmNsua
GpN+WpYRWvMbK3fJT0ZnZAnBSfeGdKmfDqLhE1YE4O2jD2dUhMWbtnwMC3ib
/uiq8SE8ORbxjy3JeUMe1g9yXgVh8s7LokeqALLx6arC+X0CEpSrjLDksX8P
6y/IvDphivOv2M36XqlfO8/Yj/ArcOb7V5cw5uQGEDYI3yO8rZGQJvl2F/tZ
RBgkvWGX3EdhCGGK7lWTnqFL+7hF7yNu5kcQchvyzBXkZ68+/v64jrDs6KlS
FJ4f5b683OcqQi/ZCFG+TI5GwlTr4X6V9aKyr5EA96Pz/oLZft5d+bJTpXH+
MPvXuK9vaOzdo8l8zymPg/hTGt8PZvn7fRn/B+G68ROPO/2cT+N9+7J9Gf5p
v/8B9RJhog==
            "],
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJtIGYC4qgU6/v9D1c4MIDAjRkQ+vEKhy0nyvbNvzrD
4friAluupysckgQiLE2uzHDwMe90fADkg+kLMxw0Y/oPlT5b4VD5Us2w49wM
h3nvlx/rBvL5dDfNzT89wyEaaD7/M6j5JyHmeQH1F9pyXVc+OsNBWv+uihvQ
vts/67L2HJrhAHMPyPyEAzMc9pRMlmi5v8LBNG6XZ8/eGQ4sYXy6RndXOJxe
6LqteDdE/flbUPN3zQC7s+TGCodPl3yTJuyY4ZAM5H+5usJh2ewjCgY7IP5r
uLzCYUaeUPOB7TMcdsq1vha8uAJsjj+Qb8SxRmbWOah7ts2A6DsDdQ9QvnSy
BIvY6RUOQO+9Xw7kCzcfOPXw5AqHowobil5sh4YfkJ8x8W2N/c4ZDotct322
PbHC4QhQPgPovgmHvmrMOQ4x32YP1D3HIeEtvw9iXiKQD3RNrzjQ/+9q7E3v
weQPQdxTcALq/sMzHP6s/HjJF2iffOvrQItjkPDtOrXCYZ37w6opJ6Dugbkf
GP7A4GQJO7vC4Ufw46XSp6Dhdw7iH3WgPNieC1D3n4DG10VofB6HuG/hJWh8
HIPo978MCf+GI5DwuQbkB+0ABizQvXuBFh4B8lXZGqcePgBx/4bL0PSzDxre
QP7DKpF1x/dA0wtMHhheoLR64BKUD4w/AAuuSEE=
            "],
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxFkUsoRGEUx8czCQlhIY9ELIjFZKHJsRBCipIkMbH1KCmy8FxQkiRfWYiZ
+GQw3pLHxCxmDDO4MxkUxrBAKSxsLJx7vyO3vu79953zP//zu0naloomP5VK
5YMnDY8vfZs8HDYsHQfThwzmpsyJxkcOrDmi37THoMjTFZX5xEEq04ZX7zKo
acy9H0Wtkp9tJt7PXOnLWmfQpgm+8j6R37Kod3g5lOYM5dcvMtiJH3wbQ3+5
TjfP4L07Tx3/wGG5EAfNkd8d9esZlMh9txxiru3f0iyDvfbx2AE35UOt5HeR
P+rIftNJg8RBXbdbHII6oCos4/OcQzT2V84w2JR97f/16bWjR+ozrvj668jP
JvIl64nHiciTgPmygwxxN1axrxHz/yx8XIZaKd8C5bdSvYHmW7jCoRx5XOla
NcN4j2pk0ij4lP/5rzGR82/+BlO4u09pn03hD3bBvwf1ayomcnCwzRRsfaHu
fEnNLrognlv0vy6JF/rJNn3IJyWwd+J4nfZ3Uv5V4uMUfB5WxPxY5Psiz1li
MItjNC6RP2aR9nWRP2ewjxzNTsqHvBQfie71tK/0//9+AeLkLQE=
            "],
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJVIGYC4mWzjyh8uLfCgQEEls5w2HKibJ/8gxUOPuad
jg8Wz3DweFglovdohUPQDrnW14tmOIDUbwDyweoWzHBIEoiwNHm8wmHe++XH
vOfOcHipZsihA5Q3jdvlyTNrhoM30JyEhxDzG6bPcFjkuu2zLdD8owobil5M
nuFQaMt1fTHQ/k+XfJMmTICafwdqf98MB/Gb574L317h4NKd87y6d4YDSxif
rtHNFQ7r3IEO64OoL7gOdQ+QD1L3+8oKiLuA/IVA+2ovrXDoP/RVI6YP6r8L
EPXz+2c4XPYFqjwHMW8K1H6DMysg9MQZDtEp1vf5T0PNnzLDIQrI7z+1woFP
d9Pc/KkzHJxB7joF8U/GdKj7T0HDc+YMcLhwA/WrsjVOPTwbYp8E0Hyg69e5
z4OY5392hcOMPKHmA/Mh4fEY6B5wuCyc4fBn5cdLvBch4SMAjA9Q3B24BHU/
UL4SGOAeQP+KAcMpeAHUf1eh/pkDde9VSHgmzISE5+WrUPcD3bu3ZLLEESBf
vvV1oMVUaHzB1APj5+kFpds/r0DjDxgeYH9dgcpPgLr/MiK+AAR8Hq4=
            "],
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{3178.219, 1570.969}, {3177.949, 
            1570.094}, {3176.527, 1569.219}, {3175.0310000000004`, 1568.344}}},
            CurveClosed->{0}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
             0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGZigICGi8sdwIxvMxzmvV9+rNt7BU7+stlHFDbY
rHDYcqJsn/yPGQ475VpfXzRd4SB289z34L8zHJIFIiy3GK1wSALR/2c4lEyW
YAnTXeHAp7tp7nv2mRj8dqDG8k/LIeZxY/JB5gu+Xe7w6ZJv0gTmmQ4u3TnP
f79c7rDO/WHVFMaZYPd8eLbc4Ufw46WzgfbtAKqf+Biq/x/EvQUPljucXui6
rRgoX/lSzZDj3nKIPQwzHYSbD5x6eBthPti+W8sdfMw7HR+wzXRgDePT/XRj
uUMQyGCOmQ6lQPeL3YDaD3TfK6BxOdeXg8PJm2+mw4RDXzXmXIPYP19wpsNl
3yQBCSBfla1xqrPoTAdxYDhdvrrc4ajChqIXEjMh7oXyM2QQ8nuAAdWijMlH
iS+RmQ4AK67UzA==
            "]], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{3048.75, 1593.75}, {3114., 
            1593.75}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJVIGYCYvGb574LM61wmPd++THvmTMcls0+omDAssJh
T8lkiZa5MxzaxYAK/i+H0MtmOMDUg9WtRqg/qrChKGP9DIeenOe/X3Ig+NL6
d1XYuBHqhZoPnFLkXQE3D6YeZh9MPcw9MPXr3B9WiUyd4TDh0FeNO4Jo7hNG
qAe7TwyhHsbfcqJs3/xuhHqw+9oR5oHd14ywD6Ye5h6Yeph70dXf/lmXtacS
oR7svlKEerD7ChHhBePDwhOmHhbeMPNg6mH2wdTD3ANTD3PvItdtn21/L0d1
38/lcPVg931fjuo/IB8WXjD1sPCEmYeeHlDCFyn9AACDzCkI
            "]]}, 
          {FaceForm[{RGBColor[1., 1., 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3126.504, 1599.613}, {3131.625, 1596.}, {3100.125, 1547.062}, {
            3100.125, 1547.062}, {3099.141, 1548.695}, {3098.438, 1549.312}, {
            3097.574, 1550.07}, {3095.438, 1551.}, {3095.438, 1551.}}}]}, 
          {FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            3131.4770000000003`, 1596.098}, {3134.438, 1594.312}, {
            3102.1879999999996`, 1544.25}, {3100.3120000000004`, 1547.25}}}]}, 
          {FaceForm[{RGBColor[1., 1., 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            3134.1910000000003`, 1594.086}, {3137.8120000000004`, 1591.5}, {
            3104.062, 1539.375}, {3102.324, 1544.703}}}]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            3138.1879999999996`, 1591.5}, {3194.25, 1556.062}, {3194.25, 
            1550.062}, {3136.125, 1587.188}}}]}, 
          {Thickness[0.002], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3135.703, 
            1587.688}, {3131.598, 1581.172}, {3194.25, 1540.875}, {3194.25, 
            1550.023}}}]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            3131.6639999999998`, 1581.551}, {3129.5350000000003`, 1577.961}, {
            3194.25, 1536.562}, {3194.25, 1541.062}}}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[RGBColor[1., 1., 0.33333299999999993`]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigIJvKxzAdMd0B3T+stlHFDbcXeHg0p3z/Pfa
6Q4+5p2ODy5D5BuOTndY6Lrtc+3pFQ7r3B9WTbk53eHPyo+XfI+scNhyomyf
/AeIeQ77VzhkTHxbY88xw8GIY43MrF0rHICmFmXIzXDoARq7chtU3g+Tf31x
gS3X6hUOR4HqX8Rg8iteqhl2bFjh8LBKZN1x6RkQd29f4TAjT6j5wN/pEHfv
gbr/IcR9vUdXONz+WZdlc2K6gzfQPwnnofZtnA42v+sW1P3T0cIjF5MPABXi
kDs=
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYCYh/zTscHE1c4MIBA9QwHdL7YzXPfg6escGgH
MfRmOHgD5RNmQuQbuGY4iAOFheeucLj9sy5rz/vpDlEp1vf7F61w+BH8eOns
q9Mh5q2EmrdvOsSczSsc+HQ3zc2fO93h/HegwgMrHLacKNs3v346RN35FQ4Z
E9/W2KdNdyi05bq++NYKh5dqhhxrAqHy36Dyxrj5QOPfq8tj8ksmS7CEXVsB
dqe/83SHrSB7T0DdFw11/+4VDp8u+SZNKJzuYMSxRmbW+hUOQCoqpXs62J3y
y6D2rZju8PSC0u2fcyD+lT4C5U+F8h9D1cPCk3kG2B3pvSscTi903VYsPQMi
373CYUaeUPMBP0z+stlHFAxyoOH9ZjqYX5C0AhyuCV+g7u+Hml83wwEA88rM
8w==
            "]], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJyFVHtMjWEYT2Itl0xuo1VuCZHMkVZHT51uOqkVM+UyS1mXQ5RqEotESJeV
93snsjr0vbbWQlJuO0vKYpqaxbDWsCONpiuTzft9z7vZ+KOzffvOc97f83t/
v+f57SyMSY6Mm2hhYTGBP6H8sbQQnxEG6tuZQHm/3DLFzCBmxnbPOlcCuvMG
89HXDL44u1u7aoiKy24TeF8C37J8NOWtDKavunUlWUdgL+8bamYw982L0c5A
xEOTwIcQmMN/L2lE/nVbCVht4521DCIbHHL7dhFQtJkYg4Tir1k+iXieUsXU
vs79BOa7vV9y+hpTdepTCOg9zvruqRT4dMFXxuBIr7N73kkCVWXNTrWlDLy7
wy/MLSBQ9zT9kWMBU99XLxGoCKgfPHaWwRl+QYaRwPKdhU3DpxgMdGyOKaom
cEfBZQv99QR239s01TKLwXrli4lAdKxXd2GG8N+GdXgq8ju+EnoMDHoyZ9W0
fiJQye/7HYd+k0aE/j3In20toY4oBo65fRENDhI8PFwyrzmSwY8tH66XaSTE
hzGIV/yGSXBIa9O1OJTB0sknLj6OlqDLeFB7To/9G+IlnH+IwKdJ0D7KiYIZ
POPGU3MlKGoadrEPEvu+KOH8A4TfKkmd3xpev/15PPFBtQTBihF/Bv5KLm4L
fn/Bf0+CHdy/rQ75B59LKs7LjwE9MDPH1C3wvsLvgARGDnsIYl5jEizg+20B
kYdJFPX4MAhVfNtSGLvxvWMar5U5t8+mqH8j+tfZY33Zm+FcFlGclxfud9RZ
8HmKfa2kYJdjauvxEPxuFPVpGFhX20d/XEfVfWnXMuCpcHnnSdX5fVrNQMP3
n6/F/gpXzMsMEHpWMMydL8W8LxP+/SjwdVptWyrOdRTztFjcz+s83nDX6e/5
v7WyXxs7Blx+v7yb4txsxPxiKOQbzL96LcX8Yinmc0hG/9vHr9O4vjlmGZ44
1aZ83k9BoYnolqEmqCez1EBxX29kdb7GJIr/Dy/FedT4tcrXIqt58k6g6r4D
TTLmZR9V83K/UcZ8xSK++KbQo/+//gMcsCJx
            "],
            CurveClosed->{0}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{3088.3590000000004`, 
            1552.922}, {3109.5, 1586.25}, {3048.75, 1586.25}}},
            CurveClosed->{0}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI1IGYC4mWzjyh8WLHCIXPi2xr7rGkOIH7BqhUOM/KE
mg/UTXNIEoiwNFm7wqHypZphx6RpDltPlO2bD+QzgMDyaQ6FtlzXldetcJj3
fvmx0/unOfxZ+fHSWaD8OveHVSI3p0HUrV7hkAEy/+M0h51yra8Fgfa5dOc8
r+aa7hC/y5Pn0KIVDvKtrwN3KE138DbvdEyYA1VvOR2s/uLUFQ4ca2SiUgKm
Ozy9oHT7Z+8KB+v7/r3T06DqW6DuqZzuMOHQV4051SscgLavO9453YEljE/X
qBBq3nSo+jQof9F0iH+iVzi8UjPk0Fk73cEHKP/ADyq/aTrYXAcXKH8XhN/g
DnH/70nTHUBhecAL6p4SiDyDH9Q9oVD1oVC+93SH64sLbL3iVzicXui6rdge
qj8NGt6G0x1KJ0uwTMteAXGHxnQH4eYDpx7mrwDHwxY5qHnFUPXC0x2iUqzv
ny9fAY63DWzTweHvWw01/wc0/Oug6l9C4mtx/QqIvgfTHJKB5n5pgMbH9WmQ
8GmEuvfcNIdnwPDeCeTvLQE67Bg0/hsg8g17UPkM2yD2NUyByvdOcwAAmBMB
tA==
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIdIGZigACHhSscwIyqaQ5bT5Ttm79ohcOMPKHmA13T
HAptua4rL13h8LBKZJ377GkO3uadjglAfubEtzX2a6Y5JAtEWG4B8reA9B2e
5uDcnfO8eskKB7Gb574H34aaBzP/E0T9l3krHJKAtAn7dIcdcq2vJ85aAbZn
sfR0sDqHqVD79aY76G6a+169HyrvMt3hz8qPl3g7VjjwgSQip4Ptla+HmN+Q
Pd0hOsX6Pn/5Cof+Q181YqqnOwCd8zszd4XDj+DHS6U7pkPcnwxVP2m6g7T+
XZVjUSscjipsKMqYDTUvECo/H+IeBg+o+5dNdwCF3QFvqPvKoPIBKxwyQOFR
PN2BJYxPtyhkhcM694dVUwog8g0RUPmc6Q47gf4VjFvhEAV0p3/adIe575cf
8wa659Ml3ySBeKj/M6Dqw6c7uAA9sDtnhcOy2UcUDAIg/N8FKxxOL3TdVuwx
HWzO+RKo+xymO/QApV9WQMPHbDok/Gug/ted7uAD9P+Deqj7lSDmWTevcDCN
2+XJIzHdQTOm/5BpGyS+j/NA3d8BNZ9xuoMWUH5rFzQ+vk5z8AAqzOtZ4TAP
6I/TL6Hpoxdq/t1p4Pjy7VvhwLFGJurJxWkO578HP1YF8lXZGqcePjoNEt59
UPU7pzlMAMabDJAPclf1eoR54PS2BMEHuweYHgEVEC+M
            "]], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYh/zTscHPiscMia+rbFPnu6w5UTZPvngFRA6
frrDKzVDjpzIFQ4ca2SinoRPd4hOsb7PHw+VD5juwBLGp1uUusJB7Oa578Hu
0x2uLy6w9cpe4XDZN0nghs10B6AVDA0FKxxA9iQYTnf4s/LjpbMlUPPUpzu0
AzWWV0Dtl53uAHLbgWooX2i6Q0/O898v61Y4FNpyXV/MPt2hdLIEy7XGFQ7r
3B9WTfkzzSEK6J7zzRDzH3yY5qAV039oaytU/VOofNsKCH1zmoM3yB3tK8Du
Yjg3zWHZ7CMKH4D8ee+XH/M+BOEbAPkz8oSaD2xF46+a5gAAHnaMuA==
            "],
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3114.727, 1516.707}, {3114.727, 1516.707}, {3110.086, 1518.863}, {
            3108.82, 1520.926}, {3107.727, 1522.703}, {3107.8830000000003`, 
            1527.113}, {3107.8830000000003`, 1527.113}, {3107.8830000000003`, 
            1527.113}, {3111.59, 1524.91}, {3112.758, 1523.176}, {3114.016, 
            1521.309}, {3114.727, 1516.707}, {3114.727, 1516.707}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3114.914, 1516.707}, {3114.914, 1516.707}, {3118.4100000000003`, 
            1520.629}, {3120.82, 1521.113}, {3122.586, 1521.469}, {3126.07, 
            1519.801}, {3126.07, 1519.801}, {3126.07, 1519.801}, {3123.445, 
            1516.895}, {3121.6639999999998`, 1516.3319999999999`}, {3119.516, 
            1515.656}, {3114.914, 1516.707}, {3114.914, 1516.707}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3116.508, 1521.113}, {3115.1479999999997`, 1521.3319999999999`}, {
            3113.719, 1522.934}, {3113.8830000000003`, 1524.301}, {3114.066, 
            1525.852}, {3116.094, 1527.387}, {3117.6330000000003`, 
            1527.113}, {3119.098, 1526.855}, {3120.387, 1524.82}, {3120.07, 
            1523.363}, {3119.77, 1521.992}, {3117.8950000000004`, 1520.891}, {
            3116.508, 1521.113}}}]}, 
          {FaceForm[{RGBColor[1., 1., 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4iSBCMuSIysc5FtfB1rYzXBA5285UbZPfv8K
B+v7/r3TDWc4SOnfVWnbt8IhKsX6/nnNGQ4v1Qw5dIB8VbbGqc6qMxwu+wJN
APLbxW6eK5ef4SANVM92AKLeX2aGQxVQw4mDKxwqQRolZzjsLZkscQRo3+mF
rtuKgfzz34Mfqx5f4fDpEtAgqRkOO+RaX088AzVPGip/DWqfOiYf7L4LKxz6
D33VuKOLyQe7+/QKsD9NVKHuOwm1Tw3qf6D9pnG7PHuA/D1A97Ecg4THDk2I
fUuPQv2vM8OBJYxP1wjIB3lnjQHUPpj7LTD5ADwKpXI=
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI1IGYC4uuLC2y7bqxw4NPdNDdfeYYDOn+nXOtrwfMr
HC77JgnckJ7h0CF289z20ysc1rk/rJoiMsPhz8qPl3pPrnA4qrCh6AX/DIfF
rts+7z2+wiFJIMJyC+cMsL4ZQD5Q2/dg5hkOTy8o3a4E8h9Wiaxz/zfdQbj5
wKnEE1Dzfkx3aAcqND8F4Yt8ne6wbPYRhYIzUPs/THd4pWbI8QboHpC68vfT
HRYB7ft7aYVD5Us1ww4o3/baCocfwY+Xzgby+w991Yi5ucJhRp5Q84FPUPPv
rHAQB7rnMtB8kHt+3oe6/+d0B5funOe/H0HdxwBxf8QzqPtYZzj4mHc6Pni+
wmFPyWQJFo4ZDj1A5S9fQcLrPQ8mHxweT6HuE8bkx+3y5HG6t8Lh9ELXbcWs
0PC6CXUfIzS8rkPC0wTonmQg/eXKCgf51teBO4DhBw6XS9DwBcrvBbrL5SLU
fKB+sP+B4QXyVzXLDEi4nYeazz7D4V2Nvem88xD/HueB8OUuQ/3LB3GPxFUo
X3AGJHyA7mEAAbEZDiCuJtD9t3/WZe2RxeQDAAr9Oik=
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI1IGYCYpYwPt2itysckgQiLLdwzHBA5y9y3fb578MV
DlEp1vfP/5juANTC4HB3hcOMPKHmA++mOzy7oHR7560VDkcVNhRlvJzusGz2
EQWD6ysc1rk/rBJ5Mt3Bx7zT8cE1qPo70x2MONbIzALyj4DUX5vu8Gflx0u+
N1Y4AIWjnpyDmM9wewWYbjg9HeyeTXdWgM1JODndYcKhrxoy91dA7DkFVf8Q
of5djb3pvCcrHPaUTJZgAZp3fXGBLddziPteXIGqfwV1z02I/bzvoOY/gMp/
g5jH8A43Hxw+PzH5upvmvl/+foVDP9CdMe+nO5z/Hvw49Q3EfymvIPLqL1c4
nF7ouq346XQHD2Aw5T2D6De5BzGv4RHUPmB4zXu//Bj3Q6h/b093ELt57vvk
eysc2kGMm1D77yHCFxS3B+5A4+vRdEg4PILqfz7dwRvkzydQ9a8h7lsKtB/s
rg/THYCuP+YNdN/tn3VZez5Dwufs6xUOP4DKZn+HqFcFhpd86+tAi9/THV6p
GXK8+bTCIWPi2xp7phkYfACB9xpV
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGZigIJvKxwKbbmuL3483QGdH7/Lk+fQ8xUOupvm
vl9+CSr/ZIXDjDyh5gNHpju8q7E3nfcIKr9/usOEQ1817jxc4RC0Q6719Y7p
Dj7mnY4PgPIgbQ2bIervPV7hsGz2EQWDddMdkgQiLEueQexTXgkx3+HlCoeM
iW9r7FdMd9gJNEbwzQqHy75AlcunO8x7v/wY9/sVDuvcH1aJrJ7usOVE2T75
jxDzGdZPd9hbMlniyOcVDi7dOc9/b0b4B2z/IcJ8oC+OeX9Y4cAH8hBQ/1ag
+fPfQP27dbpDVIr1/f5XKxxU2RqnHt423aEf6N8YoHuBrll3fA9U/Uuoew5O
dxBuPnDqIZBf+VLNkOPodIdnF5RuWwLNA/nD+/h0B1BcHHgLVX9qOlidxweo
e84h3Afy/42rmHwAMjrGSA==
            "]]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3156.938, 1555.875}, {3156.938, 1555.875}, {3151.8630000000003`, 
            1558.242}, {3149.625, 1557.188}, {3148.586, 1556.699}, {
            3147.4730000000004`, 1555.238}, {3147.938, 1554.188}, {3148.273, 
            1553.426}, {3149.543, 1553.5819999999999`}, {3150.3750000000005`, 
            1553.625}, {3152.6839999999997`, 1553.746}, {3156.938, 
            1555.875}, {3156.938, 1555.875}}}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[RGBColor[1., 1., 0.33333299999999993`]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYmn9uyrH4lc4ZEx8W2M/abpDkkCEpUnsCodl
s48oGEyZ7hC3y5OHKWqFQ9AOudbXk6c7VLxUM+wIX+FQCaInTneITrG+zx+6
wkF309z36v3THZKB+r8ErXDwMe90TOia7vCuxt5ULggq3zrd4bIv0IbAFQ5R
QH3+DdMdPB5WiawD8vmACvKrpjsU2nJdfwxUf3qh67bPpVD9IRD7swunO7CE
8ekWha1wAGk7njvd4fz34MdPI6Duz5nu4NKd89w6GiqfBXV/HNQ/2dMdNGP6
D5kmQO0H6t9TMlmiJWkFhM6f7nB9cYFtV8oKhxl5Qs0HiqeD3Z2eusLBFGhQ
T8V0h7nvlx/zTlvh0C5281x57XQH8ZvnvgvD+M3THRYBnf0XqP/2z7osmw6I
e34nr3D4Efx46eye6eBw40iCmjdhugN6+AMAeOm6Ig==
            "]], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3118.3520000000003`, 1505.7930000000001`}, {3117.449, 1506.016}, {
            3116.195, 1505.289}, {3115.9410000000003`, 1504.395}, {
            3115.6879999999996`, 1503.492}, {3116.3630000000003`, 1502.164}, {
            3117.27, 1501.918}, {3118.227, 1501.656}, {3119.586, 1502.504}, {
            3119.8120000000004`, 1503.473}, {3120.02, 1504.363}, {
            3119.2419999999997`, 1505.574}, {3118.3520000000003`, 
            1505.7930000000001`}}},
            CurveClosed->{1}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3118.586, 1487.719}, {3117.438, 1487.992}, {3115.824, 1486.953}, {
            3115.586, 1485.723}, {3115.387, 1484.695}, {3116.3120000000004`, 
            1483.367}, {3117.273, 1483.129}, {3118.3910000000005`, 
            1482.855}, {3119.996, 1483.742}, {3120.273, 1484.926}, {3120.523, 
            1486.}, {3119.602, 1487.477}, {3118.586, 1487.719}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3122.3710000000005`, 1483.016}, {3120.992, 1483.379}, {3119.066, 
            1482.004}, {3118.781, 1480.383}, {3118.539, 1479.023}, {
            3119.6479999999997`, 1477.27}, {3120.8010000000004`, 1476.961}, {
            3122.137, 1476.598}, {3124.059, 1477.766}, {3124.3910000000005`, 
            1479.328}, {3124.6910000000003`, 1480.746}, {3123.586, 
            1482.699}, {3122.3710000000005`, 1483.016}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3126.5550000000003`, 1477.668}, {3124.906, 1478.055}, {3122.598, 
            1476.598}, {3122.254, 1474.875}, {3121.969, 1473.434}, {3123.293, 
            1471.574}, {3124.676, 1471.246}, {3126.277, 1470.859}, {3128.578, 
            1472.102}, {3128.9770000000003`, 1473.758}, {3129.3360000000002`, 
            1475.2620000000002`}, {3128.012, 1477.3319999999999`}, {
            3126.5550000000003`, 1477.668}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3130.109, 1471.586}, {3128.641, 1471.914}, {3126.586, 1470.664}, {
            3126.281, 1469.191}, {3126.027, 1467.953}, {3127.207, 1466.363}, {
            3128.434, 1466.078}, {3129.8630000000003`, 1465.75}, {
            3131.9100000000003`, 1466.812}, {3132.2619999999997`, 1468.234}, {
            3132.582, 1469.5230000000001`}, {3131.406, 1471.2930000000001`}, {
            3130.109, 1471.586}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3133.023, 1465.5040000000001`}, {3131.8750000000005`, 
            1465.7620000000002`}, {3130.2619999999997`, 1464.781}, {3130.023, 
            1463.629}, {3129.824, 1462.6599999999999`}, {3130.75, 1461.41}, {
            3131.7110000000002`, 1461.191}, {3132.828, 1460.934}, {3134.434, 
            1461.766}, {3134.7110000000002`, 1462.879}, {3134.9610000000002`, 
            1463.887}, {3134.039, 1465.2730000000001`}, {3133.023, 
            1465.5040000000001`}}}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3052.5, 
            1590.75}, {3060., 1590.75}, {3060., 1589.25}, {3052.5, 1589.25}}},
            CurveClosed->{1}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpYwPl2johUOlS/VDDlqpju8q7E3nZe/wsGl
O+f579rpDh4Pq0TyclY4JAlEWG4B8lmB6j9lrnAQu3nue3D1dIenF5RuV6av
cDi90HXb54rpDm+B+uNSVziAjNMpme5wfXGBbVcKVD5vusPekskSR5JXOFjf
9+8Vz5ruYMSxRkYKKC/f+jrQImW6Q1QKUAaof0aeUPOBeKj+NKh89HSHCYe+
atzJWOGwzv1h1ZRwqPrsFQ6mcbs8ecKmO5z/Hvx4aS5UPgTq/gKof4B84eYD
pxYC/fsDqEw6HCL/rmQFxJzI6Q6aMf2HvpZBzOuJne4gDvTn5fIVDpd9gSGQ
NN1BCyi/tWKFgypb41Tn9OkOwCBkaIDxc6c76G6a+z4dqH4P0J8sRVA+0Lwj
ChuKMsqmg8OxpAQaflXTHdDDHwCCUbYS
            "]], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3127.562, 1500.242}, {3126.66, 1500.465}, {3125.406, 1499.734}, {
            3125.152, 1498.84}, {3124.8950000000004`, 1497.941}, {3125.574, 
            1496.613}, {3126.4770000000003`, 1496.367}, {3127.438, 
            1496.105}, {3128.793, 1496.953}, {3129.023, 1497.922}, {3129.23, 
            1498.809}, {3128.449, 1500.023}, {3127.562, 1500.242}}},
            CurveClosed->{1}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpYwPl2jxhUOlS/VDDkSpzu8q7E3nVe3wsGl
O+f576TpDh4Pq0Tyqlc4JAlEWG4B8lmB6j9VrHAQu3nue3DCdIenF5RuV5at
cDi90HXb59jpDm+B+uNKVji8AhqnEznd4friAtuuYqh88HSHvSWTJY4UrXCw
vu/fK+4/3cGIY42MFFBevvV1oIXndIeoFKAMUP+MPKHmAy5Q/aVQeYfpDhMO
fdW4U77CYZ37w6opNlD1VSscTON2efJYT3c4/z348dIaqLwl1P31UP8A+cLN
B04tBPr3B1CZtA1E/l3zCog5dtMdNGP6D31thZjX4zTdQRzoz8ttKxwu+wJD
wH26gxZQfmv7CgdVtsapzj7THYBByNAA4wdNd9DdNPd9OlD9HqA/WcKhfKB5
RxU2FGVETweHY0kzNPzipzughz8Aqta06A==
            "]], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3135.062, 1493.492}, {3134.16, 1493.715}, {3132.906, 1492.984}, {
            3132.652, 1492.09}, {3132.3950000000004`, 1491.191}, {3133.074, 
            1489.863}, {3133.9770000000003`, 1489.617}, {3134.938, 
            1489.355}, {3136.293, 1490.203}, {3136.523, 1491.172}, {3136.73, 
            1492.059}, {3135.949, 1493.273}, {3135.062, 1493.492}}},
            CurveClosed->{1}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4p1yra8v9qxwqHypZsjhMN1hkeu2z7ZdKxxc
unOe/3ac7vBn5cdLvO0rHJIEIiy3APk7gOontqxwELt57nuw/XQHI441MlJN
KxxOLwRqtIHo/1u/wgFknI7FdAeQMZr1UHmj6Q6FtlzXk+tWOFjf9+8V15vu
8OyC0u2dQL586+tAC43pDstmH1H4AFQ/I0+o+YAyVH8jVF5+uoMzUKC6eYXD
OveHVVOkoepbVziYxu3y5JGa7iCtf1fFrQMqLwF1fzfUP0A+SJlT7wqHH8GP
l0pLQ+R7+1c4RKUAXSQ73aF0sgTLtIkQ83oUp4P9XTJphcNlXyBLbbpDCVA+
bPIKB1W2xqnO2tMdtpwo2ycP4xtOh4QjUP0ekEIzKB9o3hGFDUUZVtMdxIHh
JtwPDT+76Q7o4Q8Abt654A==
            "]], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3140.8750000000005`, 1485.242}, {3139.9730000000004`, 1485.465}, {
            3138.719, 1484.734}, {3138.465, 1483.84}, {3138.207, 1482.941}, {
            3138.887, 1481.613}, {3139.7889999999998`, 1481.367}, {3140.75, 
            1481.105}, {3142.105, 1481.953}, {3142.3360000000002`, 
            1482.922}, {3142.543, 1483.809}, {3141.7619999999997`, 
            1485.023}, {3140.8750000000005`, 1485.242}}},
            CurveClosed->{1}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4p1yra8vTl3hoLtp7nt1qekOi1y3fbadvMLh
R/DjpdIy0x3+rPx4iXfCCgfxm+e+X5ae7rADqH5i7wqH0wtdtxVLTncw4lgj
I9W9wmGd+8MqEXGI/r8dKxzmvV9+zFtoukN3zvPfmh1Qed7pDoW2XNeT21c4
yLe+DrTgmO7w7ILS7Z1A/mXfJIEIpukOy2YfUfgAVO9j3un44O80iP4uqPzP
aQ7OQIHqnhUOQJ7llq/TIOr7Vji8UjPk0PkyzUFa/66K20So/KdpEPdPgfrn
8zSHuF2ePE7TVjjc/lmXZfMVIt87Y4UDHzAA8r9PcyidLMEybRbEvDW/p4HN
KZm9wqFd7Oa5cobpDiVA+bA5KxyA3o5KYZ3usOVE2T55GJ97ukPlS6BGoHqQ
P5UFoHygeSC6Q2Q6OByFZ0DDT2K6A3r4AwBbSr/a
            "]], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3145.3750000000005`, 1475.7730000000001`}, {3144.4730000000004`, 
            1475.996}, {3143.219, 1475.266}, {3142.965, 1474.371}, {3142.707, 
            1473.473}, {3143.387, 1472.145}, {3144.2889999999998`, 
            1471.898}, {3145.25, 1471.637}, {3146.605, 1472.484}, {
            3146.8360000000002`, 1473.453}, {3147.043, 1474.34}, {
            3146.2619999999997`, 1475.555}, {3145.3750000000005`, 
            1475.7730000000001`}}},
            CurveClosed->{1}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYuHmA6cS56xweFglsu74p2kOf1Z+vHR25gqH
2z/rsvZ8mebwrsbedN60FQ6nF7puKwbyhYDqFaescFjnDtQBVN+T8/z3yokr
HJIEIiy3vIfo7+1f4RC0Q6719atpDs8uKN3e2QeVfzrNIRlIf+ld4XDZN0ng
xoNpDtcXF9h6AeXbxW6e+35rmgPQSQwNQP1g+hpU/wSo/MVpDvPeLz/GPXmF
gziQG3wOqn7qCrD46TPTHEonS7Bcm77CAaQ8+DTU/bOg/gHydwKddRHo3wmH
vmrcOQuRl5u/wuHTJaCDLkxzOP89+LHqQoh53lemOewpARq4aIWDzX3/XvGb
EPmnQP5ekPi9aQ7LZh9R2ADjP5kG9tcMoH5Vtsaph19A+QtWOOhumvte/e00
h0JbruuL50HD7+M0B/TwBwDSYtOV
            "]], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3148.656, 1465.93}, {3147.754, 1466.152}, {3146.5, 1465.422}, {
            3146.2459999999996`, 1464.527}, {3145.988, 1463.629}, {
            3146.6679999999997`, 1462.301}, {3147.57, 1462.055}, {
            3148.5310000000004`, 1461.7930000000001`}, {3149.887, 1462.641}, {
            3150.117, 1463.609}, {3150.324, 1464.496}, {3149.543, 1465.711}, {
            3148.656, 1465.93}}},
            CurveClosed->{1}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpYwPt1Nc1c4XPZNErixaJrDuxp7U7nZKxw4
1shEPVkwzcHjYZXIu+krHF6pGXLoLJzmAFJfNHWFg2ncLs+exdMcnl5Quv1z
0gqHoB1yra+XQvTfm7DCIUkgwnLLqmkO1xcX2HJNgMqvn+awt2SyhEv/Cgeg
seuOb5nmYAS0aBaQD3TE++W7pjlEpVjfPw9Uv+VE2T75/VD9k6Dyh6c59B/6
qhEzZYXDvPfLj3kfh6qftsJB/Oa575dPTHM4/z34sepMqPwpqPth/jk5zUGo
+cApxXkrHFTZGqcePg6Rz1uwwuHTJd+kCUenOWjG9B8qXbTCQQxoXvDBaRB6
8QqHypdqhh17IPKmS1Y4/Ah+vHT29mkODCAA42+c5qAHdOdzoP4JQHfeWQPl
L1zh0A40qHzFNIdkYLh8mQ8NvyWQ8EQOfwCQXMmZ
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3149.3120000000004`, 1451.477}, {3148.4100000000003`, 1451.254}, {
            3147.156, 1451.984}, {3146.902, 1452.879}, {3146.645, 1453.777}, {
            3147.324, 1455.105}, {3148.227, 1455.3519999999999`}, {
            3149.1879999999996`, 1455.613}, {3150.543, 1454.766}, {3150.773, 
            1453.797}, {3150.98, 1452.91}, {3150.199, 1451.695}, {
            3149.3120000000004`, 1451.477}}},
            CurveClosed->{1}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[RGBColor[1., 1., 0.33333299999999993`]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{3151.414, 
            1439.7730000000001`}, {3152.699, 1441.0040000000001`}, {3153.027, 
            1443.336}, {3152.422, 1445.0040000000001`}, {3151.9570000000003`, 
            1446.289}, {3150.598, 1447.355}, {3149.254, 1447.602}, {3147.602, 
            1447.91}, {3145.059, 1447.551}, {3144.4730000000004`, 1446.02}}}],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{3149.145, 1441.223}, {
            3149.9300000000003`, 1441.688}, {3149.992, 1443.5620000000001`}, {
            3149.254, 1444.258}, {3148.625, 1444.848}, {3147.117, 1445.}, {
            3146.672, 1444.0040000000001`}}},
            CurveClosed->{0}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3109.5125670000007`, 1502.5777775539996`}, {3111.1958722399995`, 
            1502.703133508}, {3112.8443511199994`, 1504.288198796}, {
            3113.41493444, 1505.960733086}, {3113.8519815600002`, 
            1507.2455530339996`}, {3113.5434501199993`, 
            1508.9328993660004`}, {3112.672284159999, 1509.9835808320004`}, {
            3111.5945089200004`, 1511.2841970099992`}, {3109.29741272, 
            1512.6205158679995`}, {3107.9460992, 1511.816613568}}}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{3108.7353798399995`, 
            1505.1442257360006`}, {3109.5861237199997`, 
            1504.9956166059997`}, {3110.76608976, 1506.4016486239998`}, {
            3110.64832836, 1507.405751726}, {3110.547776479999, 
            1508.2648681360004`}, {3109.5395694399995`, 
            1509.3426310960003`}, {3108.61418084, 1508.863014454}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3131.8050000000003`, 1508.324}, {3131.8050000000003`, 1508.324}, {
            3128.129, 1511.484}, {3127.484, 1513.715}, {3126.9300000000003`, 
            1515.641}, {3128.1330000000003`, 1519.699}, {3128.1330000000003`, 
            1519.699}, {3128.1330000000003`, 1519.699}, {3130.949, 1516.73}, {
            3131.586, 1514.828}, {3132.273, 1512.777}, {3131.8050000000003`, 
            1508.324}, {3131.8050000000003`, 1508.324}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3131.9730000000004`, 1508.277}, {3131.9730000000004`, 1508.277}, {
            3136.082, 1511.055}, {3138.3750000000005`, 1510.906}, {3140.059, 
            1510.797}, {3142.8010000000004`, 1508.379}, {3142.8010000000004`, 
            1508.379}, {3142.8010000000004`, 1508.379}, {3139.727, 
            1506.3319999999999`}, {3137.98, 1506.25}, {3135.8750000000005`, 
            1506.156}, {3131.9730000000004`, 1508.277}, {3131.9730000000004`, 
            1508.277}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3134.4770000000003`, 1511.977}, {3133.3010000000004`, 1512.52}, {
            3132.398, 1514.363}, {3132.8750000000005`, 1515.594}, {3133.418, 
            1516.992}, {3135.621, 1517.914}, {3136.945, 1517.277}, {3138.207, 
            1516.668}, {3138.8790000000004`, 1514.457}, {3138.238, 
            1513.184}, {3137.637, 1511.984}, {3135.676, 1511.426}, {
            3134.4770000000003`, 1511.977}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3145.207, 1495.168}, {3145.207, 1495.168}, {3142.3550000000005`, 
            1499.141}, {3142.34, 1501.402}, {3142.328, 1503.355}, {
            3144.7419999999997`, 1506.809}, {3144.7419999999997`, 1506.809}, {
            3144.7419999999997`, 1506.809}, {3146.77, 1503.246}, {
            3146.8750000000005`, 1501.297}, {3146.984, 1499.191}, {3145.207, 
            1495.168}, {3145.207, 1495.168}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3145.367, 1495.078}, {3145.367, 1495.078}, {3150.3950000000004`, 
            1496.523}, {3152.703, 1495.742}, {3154.398, 1495.172}, {3156.516, 
            1492.152}, {3156.516, 1492.152}, {3156.516, 1492.152}, {
            3152.7659999999996`, 1491.098}, {3150.949, 1491.512}, {
            3148.7619999999997`, 1492.008}, {3145.367, 1495.078}, {3145.367, 
            1495.078}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3149.012, 1497.8319999999999`}, {3147.965, 1498.664}, {3147.57, 
            1500.637}, {3148.418, 1501.652}, {3149.3790000000004`, 
            1502.805}, {3151.906, 1503.051}, {3153.082, 1502.086}, {3154.203, 
            1501.168}, {3154.254, 1498.918}, {3153.227, 1497.906}, {3152.258, 
            1496.953}, {3150.086, 1496.98}, {3149.012, 
            1497.8319999999999`}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3155.219, 1478.316}, {3155.219, 1478.316}, {3153.465, 1482.738}, {
            3154.0310000000004`, 1484.906}, {3154.516, 1486.773}, {
            3157.7459999999996`, 1489.543}, {3157.7459999999996`, 1489.543}, {
            3157.7459999999996`, 1489.543}, {3158.8050000000003`, 1485.691}, {
            3158.406, 1483.805}, {3157.9730000000004`, 1481.77}, {3155.219, 
            1478.316}, {3155.219, 1478.316}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3155.3520000000003`, 1478.191}, {3155.3520000000003`, 1478.191}, {
            3160.598, 1478.465}, {3162.645, 1477.211}, {3164.145, 1476.289}, {
            3165.426, 1472.938}, {3165.426, 1472.938}, {3165.426, 1472.938}, {
            3161.516, 1472.758}, {3159.8550000000005`, 1473.551}, {
            3157.8590000000004`, 1474.5120000000002`}, {3155.3520000000003`, 
            1478.191}, {3155.3520000000003`, 1478.191}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3159.594, 1480.02}, {3158.7889999999998`, 1481.047}, {3158.914, 
            1483.02}, {3159.996, 1483.805}, {3161.227, 1484.691}, {
            3163.7419999999997`, 1484.371}, {3164.637, 1483.191}, {3165.488, 
            1482.066}, {3164.9610000000002`, 1479.902}, {3163.703, 
            1479.164}, {3162.523, 1478.469}, {3160.418, 1478.973}, {3159.594, 
            1480.02}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3159.758, 1460.492}, {3159.758, 1460.492}, {3159.8010000000004`, 
            1465.422}, {3161.152, 1467.355}, {3162.32, 1469.02}, {3166.398, 
            1470.641}, {3166.398, 1470.641}, {3166.398, 1470.641}, {3165.922, 
            1466.5120000000002`}, {3164.8320000000003`, 1464.797}, {3163.652, 
            1462.949}, {3159.758, 1460.492}, {3159.758, 1460.492}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3159.8360000000002`, 1460.328}, {3159.8360000000002`, 1460.328}, {
            3164.8520000000003`, 1458.828}, {3166.2889999999998`, 1456.906}, {
            3167.344, 1455.5}, {3167.2659999999996`, 1451.781}, {
            3167.2659999999996`, 1451.781}, {3167.2659999999996`, 1451.781}, {
            3163.5350000000003`, 1452.922}, {3162.285, 1454.2620000000002`}, {
            3160.781, 1455.875}, {3159.8360000000002`, 1460.328}, {
            3159.8360000000002`, 1460.328}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3164.504, 1460.688}, {3164.141, 1461.969}, {3165.008, 1463.859}, {
            3166.32, 1464.2620000000002`}, {3167.809, 1464.7150000000001`}, {
            3170.043, 1463.551}, {3170.434, 1462.094}, {3170.8050000000003`, 
            1460.703}, {3169.484, 1458.7620000000002`}, {3168.027, 
            1458.461}, {3166.652, 1458.18}, {3164.8750000000005`, 1459.383}, {
            3164.504, 1460.688}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3158.844, 1441.441}, {3158.844, 1441.441}, {3160.3320000000003`, 
            1446.152}, {3162.199, 1447.637}, {3163.809, 1448.914}, {3168.195, 
            1449.355}, {3168.195, 1449.355}, {3168.195, 1449.355}, {3166.527, 
            1445.527}, {3164.9770000000003`, 1444.184}, {3163.3010000000004`, 
            1442.734}, {3158.844, 1441.441}, {3158.844, 1441.441}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3158.8710000000005`, 1441.266}, {3158.8710000000005`, 1441.266}, {
            3163.2419999999997`, 1438.4569999999999`}, {3164.0550000000003`, 
            1436.227}, {3164.652, 1434.5900000000001`}, {3163.484, 
            1431.047}, {3163.484, 1431.047}, {3163.484, 1431.047}, {
            3160.2419999999997`, 1433.1599999999999`}, {3159.438, 1434.781}, {
            3158.465, 1436.738}, {3158.8710000000005`, 1441.266}, {
            3158.8710000000005`, 1441.266}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3163.4530000000004`, 1440.336}, {3163.48, 1441.6599999999999`}, {
            3164.8710000000005`, 1443.234}, {3166.2459999999996`, 
            1443.2620000000002`}, {3167.809, 1443.2930000000001`}, {3169.609, 
            1441.5700000000002`}, {3169.5510000000004`, 1440.066}, {3169.5, 
            1438.633}, {3167.6639999999998`, 1437.133}, {3166.18, 1437.242}, {
            3164.777, 1437.344}, {3163.426, 1438.984}, {3163.4530000000004`, 
            1440.336}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3158.203, 1546.84}, {3158.203, 1546.84}, {3152.777, 1548.215}, {
            3150.777, 1546.758}, {3149.848, 1546.0819999999999`}, {
            3149.0310000000004`, 1544.438}, {3149.68, 1543.492}, {3150.156, 
            1542.809}, {3151.3710000000005`, 1543.199}, {3152.18, 1543.398}, {
            3154.426, 1543.949}, {3158.203, 1546.84}, {3158.203, 1546.84}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3160.27, 1538.586}, {3160.27, 1538.586}, {3154.695, 1539.109}, {
            3152.9410000000003`, 1537.359}, {3152.129, 1536.547}, {3151.574, 
            1534.797}, {3152.3630000000003`, 1533.965}, {3152.938, 
            1533.359}, {3154.078, 1533.938}, {3154.848, 1534.258}, {3156.98, 
            1535.148}, {3160.27, 1538.586}, {3160.27, 1538.586}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3163.32, 1530.738}, {3163.32, 1530.738}, {3157.754, 1530.137}, {
            3156.387, 1528.074}, {3155.754, 1527.117}, {3155.559, 1525.289}, {
            3156.496, 1524.633}, {3157.18, 1524.156}, {3158.1839999999997`, 
            1524.945}, {3158.8750000000005`, 1525.414}, {3160.785, 
            1526.715}, {3163.32, 1530.738}, {3163.32, 1530.738}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3168.008, 1522.246}, {3168.008, 1522.246}, {3162.4410000000003`, 
            1521.645}, {3161.074, 1519.5819999999999`}, {3160.438, 
            1518.625}, {3160.2419999999997`, 1516.801}, {3161.1839999999997`, 
            1516.141}, {3161.867, 1515.664}, {3162.8710000000005`, 
            1516.453}, {3163.559, 1516.922}, {3165.4730000000004`, 
            1518.223}, {3168.008, 1522.246}, {3168.008, 1522.246}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3173.594, 1515.215}, {3173.594, 1515.215}, {3168.1839999999997`, 
            1513.785}, {3167.141, 1511.539}, {3166.656, 1510.5}, {3166.738, 
            1508.664}, {3167.7659999999996`, 1508.152}, {3168.512, 
            1507.785}, {3169.387, 1508.719}, {3169.996, 1509.285}, {3171.695, 
            1510.855}, {3173.594, 1515.215}, {3173.594, 1515.215}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3180.504, 1508.109}, {3180.504, 1508.109}, {3175.09, 1506.68}, {
            3174.047, 1504.434}, {3173.566, 1503.391}, {3173.645, 1501.555}, {
            3174.676, 1501.047}, {3175.422, 1500.68}, {3176.293, 1501.609}, {
            3176.906, 1502.176}, {3178.602, 1503.75}, {3180.504, 1508.109}, {
            3180.504, 1508.109}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3187.2619999999997`, 1502.086}, {3187.2619999999997`, 1502.086}, {
            3182.0350000000003`, 1500.0819999999999`}, {3181.234, 1497.738}, {
            3180.867, 1496.652}, {3181.145, 1494.836}, {3182.223, 1494.441}, {
            3183.004, 1494.152}, {3183.773, 1495.176}, {3184.32, 1495.805}, {
            3185.84, 1497.547}, {3187.2619999999997`, 1502.086}, {
            3187.2619999999997`, 1502.086}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3194.145, 1497.484}, {3194.145, 1497.484}, {3189.223, 1494.816}, {
            3188.738, 1492.387}, {3188.516, 1491.262}, {3189.027, 1489.5}, {
            3190.1479999999997`, 1489.246}, {3190.9610000000002`, 1489.062}, {
            3191.59, 1490.176}, {3192.0510000000004`, 1490.871}, {3193.328, 
            1492.801}, {3194.145, 1497.484}, {3194.145, 1497.484}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3115.8550000000005`, 1543.395}, {3115.8550000000005`, 1543.395}, {
            3118.043, 1539.09}, {3120.129, 1538.543}, {3121.238, 1538.254}, {
            3123.0310000000004`, 1538.586}, {3123.3790000000004`, 1539.68}, {
            3123.629, 1540.477}, {3122.602, 1541.234}, {3121.918, 1541.715}, {
            3120.199, 1542.914}, {3115.8550000000005`, 1543.395}, {
            3115.8550000000005`, 1543.395}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3114.012, 1543.352}, {3113.4300000000003`, 1539.715}, {
            3113.1330000000003`, 1538.7930000000001`}, {3114.7459999999996`, 
            1536.918}, {3115.496, 1536.047}, {3117.203, 1535.367}, {3118.09, 
            1536.094}, {3118.734, 1536.621}, {3118.281, 1537.816}, {3117.98, 
            1538.594}, {3117.234, 1540.52}, {3114.012, 1543.352}, {3114.012, 
            1543.352}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3115.047, 1545.027}, {3115.047, 1545.027}, {3119.7110000000002`, 
            1543.184}, {3121.6839999999997`, 1544.227}, {3122.523, 
            1544.668}, {3123.324, 1545.863}, {3123.004, 1546.758}, {3122.723, 
            1547.539}, {3121.539, 1547.75}, {3120.707, 1547.734}, {3118.617, 
            1547.688}, {3115.047, 1545.027}, {3115.047, 1545.027}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3124.3910000000005`, 1555.172}, {3124.3910000000005`, 1555.172}, {
            3126.0510000000004`, 1550.797}, {3128.012, 1550.188}, {3129.105, 
            1549.844}, {3130.914, 1550.23}, {3131.258, 1551.324}, {3131.512, 
            1552.121}, {3130.4730000000004`, 1552.859}, {3129.8010000000004`, 
            1553.355}, {3128.27, 1554.484}, {3124.3910000000005`, 1555.172}, {
            3124.3910000000005`, 1555.172}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3122.027, 1555.348}, {3122.027, 1555.348}, {3121.152, 1550.285}, {
            3122.629, 1548.562}, {3123.3790000000004`, 1547.691}, {3125.086, 
            1547.012}, {3125.9730000000004`, 1547.738}, {3126.617, 
            1548.266}, {3126.145, 1549.453}, {3125.8630000000003`, 
            1550.238}, {3125.145, 1552.242}, {3122.027, 1555.348}, {3122.027, 
            1555.348}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3123.496, 1556.977}, {3123.496, 1556.977}, {3127.734, 1554.934}, {
            3129.566, 1555.867}, {3130.59, 1556.387}, {3131.59, 1557.949}, {
            3131.059, 1558.969}, {3130.676, 1559.707}, {3129.418, 1559.492}, {
            3128.59, 1559.375}, {3126.73, 1559.117}, {3123.496, 1556.977}, {
            3123.496, 1556.977}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3131.621, 1567.938}, {3131.621, 1567.938}, {3133.3630000000003`, 
            1563.301}, {3135.438, 1562.648}, {3136.5310000000004`, 
            1562.305}, {3138.34, 1562.691}, {3138.6839999999997`, 1563.785}, {
            3138.934, 1564.5819999999999`}, {3137.887, 1565.312}, {3137.227, 
            1565.82}, {3135.641, 1567.035}, {3131.621, 1567.938}, {3131.621, 
            1567.938}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3129.4730000000004`, 1567.742}, {3129.4730000000004`, 1567.742}, {
            3128.594, 1562.73}, {3130.0550000000003`, 1561.023}, {
            3130.8010000000004`, 1560.152}, {3132.512, 1559.473}, {3133.398, 
            1560.199}, {3134.043, 1560.73}, {3133.57, 1561.914}, {
            3133.2889999999998`, 1562.699}, {3132.574, 1564.684}, {
            3129.4730000000004`, 1567.742}, {3129.4730000000004`, 
            1567.742}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3130.6130000000003`, 1569.68}, {3130.6130000000003`, 1569.68}, {
            3135.039, 1567.371}, {3136.992, 1568.3319999999999`}, {3138.02, 
            1568.836}, {3139.012, 1570.414}, {3138.484, 1571.434}, {3138.102, 
            1572.172}, {3136.844, 1571.93}, {3136.016, 1571.84}, {3134.09, 
            1571.629}, {3130.6130000000003`, 1569.68}, {3130.6130000000003`, 
            1569.68}}}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[RGBColor[0., 0., 0.]], 
           FilledCurveBox[{{{0, 2, 0}}}, {{{3194.586, 1535.7930000000001`}, {
            3129.4100000000003`, 1577.656}}}], 
           FilledCurveBox[{{{0, 2, 0}}}, {{{3123.8120000000004`, 1601.254}, {
            3195., 1555.758}}}], 
           FilledCurveBox[{{{0, 2, 0}}}, {{{3138.348, 1591.922}, {
            3103.9570000000003`, 1539.3319999999999`}}}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3063.75, 
            1590.75}, {3071.25, 1590.75}, {3071.25, 1589.25}, {3063.75, 
            1589.25}}},
            CurveClosed->{1}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3075., 
            1590.75}, {3082.5, 1590.75}, {3082.5, 1589.25}, {3075., 1589.25}}},
            CurveClosed->{1}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3086.25, 
            1590.75}, {3093.75, 1590.75}, {3093.75, 1589.25}, {3086.25, 
            1589.25}}},
            CurveClosed->{1}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3097.5, 
            1590.75}, {3105., 1590.75}, {3105., 1589.25}, {3097.5, 1589.25}}},
            CurveClosed->{1}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3108.75, 
            1590.75}, {3108.75, 1589.25}, {3111.227, 1589.25}, {3112.125, 
            1590.75}}},
            CurveClosed->{1}]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{3012., 1593.75}, {
            3012., 1576.969}, {2998.969, 1585.875}}}]}, 
          {Thickness[0.002], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3018.562, 
            1596.656}, {3018.75, 1570.688}, {3011.5310000000004`, 1576.875}, {
            3011.8120000000004`, 1593.656}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3021.844, 1597.875}, {
            3021.938, 1567.781}, {3031.8750000000005`, 1557.094}, {3032.906, 
            1556.062}, {3032.906, 1556.062}, {3034.1479999999997`, 
            1557.445}, {3034.781, 1558.125}, {3035.707, 1559.113}, {3037.594, 
            1561.059}, {3037.594, 1561.059}, {3037.5, 1598.812}, {3034.219, 
            1600.031}, {3031.6879999999996`, 1601.625}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Butt"], 
           JoinForm[{"Miter", 4.}]}], FaceForm[{RGBColor[
           1., 1., 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxFkntI01EUx5eajF5ERESF2cOgQKLBKAjp2wuNkshCKsRCDBJEl8zQ9aCS
qAzrj7SO1Ry12l2lm605p1HUsIyEWgZalJU9kApnGSX0gM5+90R/XC7nnnvP
+Z7P984qKM3ZkWgymUbxsvBK4GU/NTUp169Q+XHeInNiPWJ7l1lf+RQ6UpvL
dv4k5LevGZfglzhGRj6F80+zCyY+GyBj39yksCtjTO+ct4T5eScj368pcGnT
gZeEcMrhzxuuKhyZ8vzRSA/hE7cp9up+R6OEbVw/cknBl9nvqH2o31svKtyL
97tLKGd9PS7pFyY0DKn7Y50Kw9184Nf50+cVlr5eX3PGTUjKnZBu4bjfMdnX
WU8YZL35TnlfR+h12zKqXTqfWUP4feVr93juZ26csbWwipDFiRKPxPt17GO9
VDKp6k6F1lfO88R1rLXrfmU8f058UJvUZz7pAeeQKiYcLx74VcT80pIP1q0s
InjOdaTaruv3XVsIBv+A3N9EmL6wb25yu+jdrvVltyl0XVgd+lao+wVaRV+p
8A0pzOQtbBdeQeHvIMSf7QtIzPO4Ob7VrLBu8bHlbw4RKuI+/NNfTYYvWTzf
Kha+5wShjY+feHX9JbXiv5L7Z8VP5mWNf5QGwgLm0+IRvpd1PbMSXk0ECwuf
5hX/bvznafh3kwydaJT/GJF5/MKjk/AhOvtFZUD8jer/uSIoPPl/jWY+wy3C
p0/7FwsJ3/eExyMb36WFFYIPdt92DWo/vrTKfD/Ej7Do+UP4C1EkfwM=
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[RGBColor[1., 1., 0.33333299999999993`]], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxNUltIVFEUnR5E9CIqUijUirIgoz7EYBBXYPSgIVLoQ4JkMLAHY1kZisiU
DRZDpUSxIXQabOY0Xbs6Zc6dsBgmsyjQUsjEwiIqSsoeRE+ifefsjz7Oxz7r
7LXXWmcvclcU7ZrkcDgm8MnhM5FPSZlztP+yQqZvbJv1l5CqAwo9WR2V5b8I
K3acSeZeVBh0uWc//UT4E/k84GL8Zc08c8Nrwq1DZ9MLgwpM5fAOa3xmqwJ5
5tQn+giNyW/Ln4UVtuSdXFd6j1I86RGF8IWerNUJwon5w30xQ2HkZ92e7hgh
nuEbe2wqvFu2ZmpblJBzrXlctUu/QeDbhSUdCj+KX4UWhIWfcab5XhwgFPr3
vXVybfdlE2GjLZT50hgfbCK8ebR4JH5V4cuAy93oJ93Xpvlf+PR7j6HzWHuM
8N7WwXpnMWFFHaGb/U7mvO7a+VQT5tYnHgTD8v6wxo+HhK+S0MAD8i4pnatH
6iviv5TQMq56/Yb4K5N5pvR7tJ/f7ZI/89k5Iyr5VInf6wpLpxw9d6dG+jsV
Ou9X3Q54Cbbc7V0KRVaGb2+D7vfG5L9PEw7kTxtaYik4R7eeSjtP2Hlz04yk
JX6aCTdsnrjwhbT+I5boNbX+6TGNZ8Z1fqtYT7UtMKH/LzsqefcSbDu7Tcmv
n1I+Vhoy/4n45bzLmz7UFjwnfKwtyG3hvB8G13cd5H0bat2fvzki+/dV9vW/
/f0Hg2tltA==
            "]], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{3031.781, 
            1601.906}, {3027.781, 1600.625}, {3023.781, 1599.188}, {
            3019.8750000000005`, 1597.594}, {3016.6639999999998`, 1596.285}, {
            3013.465, 1594.918}, {3010.406, 1593.281}, {3006.062, 1590.957}, {
            3002.0310000000004`, 1588.094}, {2997.844, 1585.5}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{3048.75, 1582.344}, {3048.75, 
            1558.559}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, {{{3032.418, 1555.062}, {3032.418, 1555.062}, {3028.969, 
            1560.055}, {3027.047, 1562.395}, {3025.5510000000004`, 
            1564.215}, {3023.906, 1565.902}, {3022.27, 1567.594}, {
            3020.8590000000004`, 1569.055}, {3019.4300000000003`, 1570.5}, {
            3017.922, 1571.859}, {3015.84, 1573.738}, {3013.6879999999996`, 
            1575.547}, {3011.445, 1577.23}, {3007.3520000000003`, 1580.301}, {
            2998.738, 1585.84}, {2998.738, 1585.84}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[1., 1., 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
             0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4ldqhhxv/i13YACBxdMdql6qGZ4A8o8qbCh6
MW26g7T+XRW2n8sd2sVuniufOt1BuPnAqYdflztY3/fvFZ813aHQluu68sfl
DlEp1vfPz5/usGz2EQWDD1B5oPokgQjLkvfLHU4vdN1W3DvdYcuJsn3yQL6P
eadjQv10hz8rP146+3m5w56SyRIsbdMdgNZ8D/4O1d8x3WEvUPzIH6j57RD7
kv9A3Vs53UEcqF5YewWcD3KnOZAP1t863eHpBaXbPw1WOFQC/dUBNP9djb2p
nMkKiP8apztMOPRV447FCoi7a6ZD7LGEygPVz3u//Fi31QoH07hdnj1908Hu
fgDkg/wxf850B5YwPl0jsxUOLt05z38D/QsKzzVGUP2Tp4PFrXWh5k+B2DdH
dwU8vAFJ+7SE
            "]]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYmn9uypsQiscgnbItWbvnu6AzmcJ49PdJLjC
QXfT3PfLnyPk+w991YhhmOHwrsbeVA7I31MyWaKFfYZDdIr1fX6RFQ4ca2Si
nvDNcJj3fvmx02IrHE4vdN1WLDwDbJ6R5AoHl+6c59XiMxyWzT6isEFmhYN8
6+tAC8kZDlFA/eflVziosjVOPSwxw+H89+DHqcorHG7/rMuyAfJLJ0uwiKlD
7L8jArF/nuYKhxl5Qs0H+Gc4GAEtnqUN5XPPcIjb5cnDpAux/zPrDIedcq2v
BXUR7gc6myUMyC+05bqu/GK6w/XFBbZdOhD/sOzF5AMA7eJ/3g==
            "]]}, 
          {Thickness[0.002], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYC4ldqhhw5siscONbIRD15Nd0BnV/xUs2wQ2yF
A5DiWPN2usO898uPnQbykwQiLE1+T3dYNvuIwgcxiPoUphkODCAgDeVzzXAA
2XVAboUDn+6muflAPkj9BqUVYHUNQP6flR8vnVVd4XD7Z13WHsYZDi7dOc+t
1SHmb/k13UHs5rnvwRorIPTX6Q7JIHGgvI95p+ODd1C+GtT8l9MdLvsmCcwA
mtd/6KtGzOPpDtcXF9h6Ae2rBPnj/nSHdzX2pvcUoObfnA6277f8CgfTuF2e
PNcg/tkA5LeDLLw4HazPA8jfUzJZguXcdIfz34MfP5WDuufUdAdnoP5qIB9k
741DhPksYXy6RTJQ95yDuFcCyN9yomzf/CvTHcSB5l6WhpoPdB/YXqB8oS3X
deV70yH+koGa92i6ww651tcTgfx17g+rpjzFjD90PgDMyOBU
            "]]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYiOONTJSn5c76G6a+3757ukO6Hxp/bsqxz4t
d/Ax73R8wDgDLm993793utQMB5YwPl0jIP/2z7qsPYozHKJSrO+f/wrla8xw
6Ml5/nvlj+UOhbZc15V1Zzic/x78WPX3cgeXbqCEAUR9/7/lDkcVNhS9MJrh
4PGwSmQd4wqH0wtdtxUD+SD73VhXOPCBHGQ4w+Fdjb3pPY4VDv2HvmrE6M1w
ACr7XMsNkc/XhJifyguRv6M6A2Iv/wqwe2yA7ksSiLA0AfJB4oulZzg8vaB0
uxLID9oh15rNPMOhXezmuXIgf9nsIwoGe6Zj8AE30o5p
            "]]}, 
          {Thickness[0.002], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYC4sqXaoYcjCscTi903fb5z3QHdL74zXPfhX8u
d8iY+LbG/t90h8u+SQIRQL71ff9ecd4ZDs7dOc+rgfx2MaBCkRkO894vP9b9
d7nD7Z91WXtkZzjMBfK9geaBxE8D+S5A9dasKxz6D33VuAPkG3KskYniWAEx
H6i/Cmj/Cc4VDqZxuzx7eGY4+Jh3Oj7gWuGguwloEtsMB6CTGRyA/HXuD6um
/J8O4QPV/wh+vHT2z+kOhbZc15WB5oHd82m6Q+lkCZZrLCscZuQJNR94N90B
aP3vTGaI/TEvpjtUAO3rYILyn0x3APrO0gTIBznryX2I/y8D3f/pkm/ShNvT
HYSbD5xKZISYX34NEV5bTpTtkz9DmP/0gtLtn/+g4Qc07/x3oMOBfHD4PJru
8AqoPOcfNDyfT3fwBvo/ASrv/Xa6gx4wHJ4D+aBwSQD678/Kj5d8/y8H+1/6
G2b8ofMBgsz3bw==
            "]]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigICGq8sdls0+orDh8XQHdP4OudbXgZeXOzys
ElnnzjvD4fz34MdLgXyX7pznv1VnOCx23fZ5L5BfaMt1XVl3hkP/oa8aMdeg
fJMZDu1iN8+Z31zuYBq3y7PHYoYDSxif7qbbyx18zDsdE2xmOEwAqpe5v9xh
3vvlx7ztZoDNtX603OGyb5LADdsZDjuB9l98utwBaMz3YCD/lZohR87L5Q6q
bI1TD1vOcLi+uMCW681yB3Gg/GWgfaxA8z+9hcg7G0Ltew9xz2KdGQ7xuzx5
Dr2HuIdHfYaDtP5dFbYPUP18CH4QyOO7p2PwQf5PvbPcgWONTFQKkP+uxt50
3i2o+09Md/AABdQNCP/0NczwBADd7bAN
            "]]}, 
          {Thickness[0.002], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYC4qcXlG5XPlzu8OmSb5IAzwwHdL6U/l2VtpvL
HfoPfdWI4Z3hcGNxge0pIF++9XWghcwMB4+HVSLvgPx17kCGygyHRa7bPv+9
u9zhMlD7DZ0ZDouB/L1A844qbCh6oQNRv+7pcgeX7pznv4H8ee+XHzv9Amq+
8gyHZ0D7LV8td9DdNPf9cukZDjvkgBa9Xu6gytY49bDoDAeWMD7dTUD5ZbOP
KGzgg/JfLne4/bMuaw/HDIfSyRIs015A3cM0w6HypZqhx1OI+Xf+TneYAKIf
L3doF7t5rvz7dLB/fz6C8j9PB9s3EcgH6eN4P91BGuh/NyAfxF3zarqD+M1z
3y8/hPB1nkx3iNvlycMElGcAgeuE+SCq4T7UPy+mg8NJ4j40fD5C3XcP6n6g
+3YC3XMRyA8COiz7z3QHoCtkou5DzGtgnOEAissD9yH+t2HFjD90PgAuxvCK

            "]]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI1IGYC4tLJEizTLi53SBKIsNzyZboDOt/jYZXIu7PL
HW7/rMuyYZjhUPlSzdDjDETehG2GQ6Et13Xl08sd+g991YjhmuFgxLFGRurk
coegHXKtr4UI8+N2efI0AfkMICCPkD+90HXbZ5UZDouB1N4TUPu1ZjhcX1xg
2wXkg9zBYTDD4ekFpds/jy13uOwLdJHJDIcJQHfcObrcgU9309x88xkO4jfP
fRc+stwBaGzUE8sZEHcfgvrPaobDvPfLj3UfgLgn2xpq/r7lDltOlO2TB/JB
1ujsXe7wI/jxUmmg/mWzjyhs2LPcAUgWZVjMcPA273RM2AP1jykmv0Ps5rnt
O5eD3XHZBpMflWJ9//zu5Q5A575Xd54BDu88oH1Aat1xlxkOPTnPf6/cDw0f
d4j7Sw5B1C93h/oX6D8fkL1uMyDhcAKivsEFEj/JwPgBWvs92B6ifg4wPkHi
i4H+AcfbeQhfGebeC9Dw05/hcAMYHqcuQMJ/jyYkfLiA6UO+9XWghdgMjPSC
zgcA5FwYCg==
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4qcXlG7/FFnhsM79YdWUhOkO6Pw/Kz9e8hVd
4XDZN0kgwgQhX2jLdX2x9HQH4eYDpx4C+S7dOc+rRaY7LJt9ROGD0AqHH8GP
l0rzTncA6rI0EVjhYBq3y7OHA2LeWd4VDntKJku0sEx3iEqxvu/PtcLhYZXI
uuNMEP0G7Cscbv+sy7Jhnu5gxLFGZhbzCgdVtsaph4H8npznv1/+Xw62X5kd
Yn/i3+UOmRPf1tjzTHc4/z34cepvKF9gusMi122f//5cDrafR2y6gwfQonc/
l8PdDzJvJZDff+irxh3j6Q6aMf2HSn8tB/vndxwmHwDDVZZL
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4vPfgx8/NV7hcNk3SSAiYboDOv/ZBaXbliYr
HLacKNsnL4WQP6KwoSiDcbrDn5UfL50F8lXZGqc6/5rmsGz2EQUDQyj/8zSH
kskSLGF6KxwmHPqqcefdNAdDjjUyt7RXOOwBSbyGqC/QWOFgc9+/V/zlNIcd
cq2vA1VXOJjG7fLsAfJB9u9UXOHw6RLQQa+mOQg1HzilKLfCodCW6/rit9Mc
gMp4mqQh8hM+TXMwApo/SxIir/xtGsRecYh7DgPdN+/98mOnxSHuiWGY7iCl
f1elDchf5/6waorEdIeKl2qGHUB+VIr1/fPxmHwAxZ2Rsg==
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigICGwBUOUSnW9/0tpjug8z0eVomsC17hIN/6
OnAH33QHQ441MlFA/t6SyRIs36Y5xO3y5HEC8icc+qpx5900h0JbruuLA6D8
59Mcql6qGZ7wXeFweqHrtuLH0xz+rPx4ydd7hcOWE2X75t+HqH/svsIhSSDC
csvdaWBzj7iscNDdNPe9+r1pYPv1HFc4vFID2gzki908932y7QqH2z/rsmwe
TXPQjOk/9NUKIq/zHGI+ryVEfs8rqH3mKxyAqjRi3k9zWOS67bOtOcQ9n79M
c3h6Qen2TzOoft7pcP46d6DFCZh8I6D/Z3mtcPgR/HjpbCBfuPnAqUQfqPuD
pzvskAMGlB+Eb+KKGZ4AOVyu9w==
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI1IGYC4u6c578zQ1c4zHu//Ji3+nQHdP5OudbXgpEr
HFTZGqcelp7u0CF289z2KIj8adHpDhMOfdW4E73CodCW6/piwekO578HP34a
u8JhnfvDKhFOwvyFrts+1wL5DCDwdxpc3ixulyfP92kOIMopDmr/x2kOmjH9
h0qB/HagO76/nuYgrX9XhS1hhYPuprnvlz+fBnaHcuIKh0+XfJMmPJnm8ErN
kONN0gqHH8GPl0o/mgZxdwrUfw+nOSQJRFiWpEHcM+UB1PyMFQ4+5p2OD4B8
caA1lzNXOHCskYl6AtQflWJ93z9rhQOQ7J3+eJrD1hNl++ZnQf3zDJNf+VLN
0CN3BdgdOvcx+ctmH1EwyF7hcNk3SeDGjWkOO4DhPRFon3zr60CL69McSiZL
sISlQ8PnKsT93SkQ9RFXoP4F+m8LyF6gPDgc4iDqG4D6QfEzJxpi35o7EPXJ
wPgEicc8gvAXh0P4d2DuDYOG3xtIeJiGQcLf+ROE/xWYPoC+W3ecFTO9oPMB
tvUr7Q==
            "]]}, 
          {FaceForm[{RGBColor[1., 1., 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxNVQ1MlWUUvtDlhshvXBG5CFiRWknXtMCIeUyQGN1MIFZEzRA0EoEQcJEa
JU4rnDh2Xi3UUlff6+aINSIzakyLOWy5YMnFcFquqMykzFGB1vnec5zd7du9
733Pz3Oe55zzzSipyiu7yeFwBNBTT08gPVOHvhobyNHwSOpri5bfj+C558zt
S3wakl2v4LEshO7a1ljnYxpajl6ZNfw4ws93zA2+u0Cb/5tKEero+lShhi+S
Omp+WoMw54M9l6wiDUWl6WdP1iGURD6xoPZpDS/aji8jfy/X8Ee/r6RlC8LJ
sfzz75ZoeK/t8yRvC8KAjzxKNdz3zJGc5jfR5N1dxv5b30GOu5LxnrMQMt+o
GPmEznsvWb257yM0V4yMH6Rz+Y6L6xd2IWyJoQIp3rd/b3y+uxvBrjeazif2
ZXWtPYYwcfD3/m3X4/UJvnKJ149AMEJfXa0hcfOFZYeH2N5XpeEvgt12Wu7X
ir8fIYXqH6kXPocRCN54eYM2OMfPoqmzeoPw9yPXN7xR/C8i7LHzNkr+K8zn
zEbOn3bthr2pJ0gx/g2SL0xBA+E/TvnsOvPdivOt4/NArIL9WV2XM2o1x52u
4IWMkMHbqgVfIsfzVWij2/xE9h9dxXouTRB74u/7Bnd7NsWL3tTTt4/0dNif
aAWDB6ozXi+WfKHK+G1/UvI5FfNbKHxOiD4FUk+g4n4o4HiNk5TpB3+ehl2V
t2zqCVfwccLmC1HLNOQdph/RfL/rUQ2EbtvOWMbbkcv6Xo4TvDnMt3M633uX
ML8n4pXJv26xhk/t+3i2XwGa/TyMpyxD5oHibyX7jx7geqwpivVdIPbCd0ea
xI9UJm5mqsxDhOK6vGI/WcEK4vnPWaI/2fuJv74ZGihKzXNRivs/QewDFDz8
XYO70iP2o8h6xmroPF7/2dvn0HwnTtPQnk2GZ2R+42SehnjefoiTek8hOAvD
59RMFftB7udAt8zjaZmPSDmT/+zi7UfrwqQ//axfaojw8w2yPsGs54Nfi75B
Uv+XvF9cQdKfvQgf2rid7L+4h+c5nc7hRHDVEYR7gw/Fv+WUeJ1o6m8Pknzt
aHg57xI9NO8PfzDj7djP9TdNlv21V/YX4Te67+b5WhUh80PnuZSvKEr4bkPI
tf+PlH5tRfiF/A9FyH0z46kMFz2a0PR/SBjPT+d63n/zKb/BVcv8l02SeVnD
+l29WfbnSuR+cfF+8Twr9TkZ71gR74/RQOE/DzlOgOibw/tY/WvxfgPJd83i
/GnMf+9Vi+fHy/h/m7C4b2ZzfC+dzf68Vfgbt8BOn++R/fuPxfq4Gd8Bh/S7
m/E0unifvORm+6WhMs9ThI8o1qM4RviKub5PbvSnmfdp0i9JGmzZsz2CL1n0
i5f31Z2yTxNYn19TNNgyliahwd06T/JRPU8Rnog0ma9k6b90bewGZkq+haLv
XdIfD/G+WZ0ifGWK3l7pl2zZX/P4/fL/9+l/IAVinA==
            "]]}, 
          {Thickness[0.002], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}}}, {{{3123.719, 1414.766}, {3123.719, 1414.766}, {
            3120.9730000000004`, 1413.676}, {3119.797, 1412.805}, {3118.527, 
            1411.867}, {3116.527, 1409.375}, {3116.527, 1409.375}, {3116.367, 
            1455.777}, {3116.367, 1455.777}, {3119.207, 
            1454.0120000000002`}, {3120.777, 1453.488}, {3121.719, 
            1453.176}, {3123.719, 1453.}, {3123.719, 1453.}}}]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, {{{3116.8550000000005`, 1433.23}, {3058.203, 
            1432.902}, {3077.152, 1462.637}, {3077.152, 1462.637}, {
            3083.8830000000003`, 1455.996}, {3088.2659999999996`, 
            1454.9569999999999`}, {3091.6879999999996`, 1454.148}, {3098.719, 
            1456.43}, {3098.719, 1456.43}, {3098.719, 1456.43}, {
            3105.0550000000003`, 1451.934}, {3108.6879999999996`, 1452.02}, {
            3111.73, 1452.0900000000001`}, {3116.8550000000005`, 1456.102}, {
            3116.8550000000005`, 1456.102}}}]}, 
          {Thickness[0.002], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{3047.25, 1416.938}, {3076.5, 1462.312}, {
            3076.5, 1462.312}, {3073.449, 1462.102}, {3072., 1462.5}, {
            3071.109, 1462.746}, {3069.562, 1463.812}, {3069.562, 1463.812}, {
            3038.25, 1415.25}, {3040.8750000000005`, 1413.75}, {
            3043.3120000000004`, 1415.438}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3116.25, 
            1432.5}, {3057.75, 1432.5}, {3048.16, 1417.812}, {3116.25, 
            1417.5}}}]}, 
          {FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{3053.719, 1521.938}, {3045.656, 
            1527.094}, {3040.125, 1531.969}, {3035.25, 1538.156}, {3031.5, 
            1544.812}, {3028.969, 1551.188}, {3028.5, 1556.344}, {
            3028.8750000000005`, 1561.312}, {3035.438, 1553.25}, {3039.562, 
            1548.188}, {3043.5, 1542.469}, {3046.781, 1537.219}, {3050.344, 
            1531.125}, {3052.969, 1525.5}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIVIGYCYpYwPl2jR8sdjipsKHohOd0BxN90HcqXne5w
fXGBLdfF5Q6FtlzXFytOd/Ax73R8cGK5AwMIaEx32FMyWYJl93KHee+XHztt
NN1hoeu2z7Vrlzu4dOc8/20/3WHLibJ98gsh6hsCoPqnLXdYNvuIgkEcxL6i
3uUOpnG7PHvypkPMbYWqb5juYMSxRmZW1XKHH8GPl86eNt1BWv+uClvhcocZ
eULNB9ZNd9gKNH9+5nKHjIlva+xPTnfQ2zT3/fPk5Q7yra8Dd9yd7lAKdN61
+OUO1vf9e8W/THeoeqlmeCJmucPtn3VZe7hmOAg3Hzi1MBIqrzTDoRIozxGx
3OGyb5JAhNUMsDscwqHuCZrhsEOu9fXEsOUO7WI3z5Wnz4DYFwZ1Xw1EPUME
VP3EGZBwi4CG39wZEH9HLQeHW8vKGQ7ewPBIiIaq3zrDISrF+n4/0H0gd3Qc
nAEJr1io/NkZkPCMh/JvYvI9HlaJ6AVC9T+d4cAKDN9Pnssd1rkDJV7NcNgL
tPeIE9S976DuNYHEx4YvuPmg+OGRmg7Rv345xN66aQ4AkSLyTA==
            "]]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJtIGYC4kJbruuLU5c7bDlRtk9++wyHZbOPKGxIXu7g
0p3z/PfiGQ7tYjfPlScud1Bla5x6eMIMBwYQAPIzJr6tsa+d4VAyWYIlLAGi
vjpxhsO7GntTOaD8Zd8kgQjXGQ5bgebOB5oH1qc1w2HCoa8ac4D2+Zh3OiaI
zHB4ekHp9s+M5Q4gdyj/n+7gDRLPhap/Pd0BaP33yUXLwe4yuDwdoq4Sqn/P
dDD9oAGivmH5dIi725Y77AE5bPp0h5dqhhw6fcsdPl0COqgDqn4qVH3VdAdD
jjUyUfOXO0SlWN8/nzndIX6XJ8+hldDwiJ4Ocf8WqH/9poPdL7NrucOMPKHm
A+7THVjD+HQ/7V/uELRDrjXbCWr+Uai87XRwOEicWe7QD9R3x2K6w/XFBbZd
l5Y76G6a+17ddDrEnzeh6g2nO4gD/St8D+pe/ekOFUAPdDxe7nD7Z12Wjc50
sL70F8sdfgQ/XiqtPR3sbv+nUH4yNHyuQNzzOne6g8fDKpG8ndDwa5nusNB1
2+faOcvB4Rq8AyK/rmu5g3zr60ALYHjHAf3f1AANX/kZ4PDcXb3cARibllti
Z4DNX1y73KESFLDtMxyk9e+qHGuEhvfGGQ5GwPCcVQ61/8AMh0VA+2wLl4P9
dfk4JD19B8Y30NW94pcw+SD/9KdB7DM5ALUPKX0CAAlWOk4=
            "]]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           1., 0.33333299999999993`, 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}}}, {{{3127.5, 1327.5}, {3108.75, 1357.5}, {3108.75,
             1357.5}, {3103.8950000000004`, 1354.656}, {3101.25, 1353.75}, {
            3095.223, 1351.68}, {3088.844, 1350.629}, {3082.5, 1350.}, {
            3075.0350000000003`, 1349.2620000000002`}, {3067.4730000000004`, 
            1349.383}, {3060., 1350.}, {3052.422, 1350.629}, {3037.5, 
            1353.75}, {3037.5, 1353.75}, {3018.75, 1327.5}}}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}}}, CompressedData["
1:eJxlUm1Ik1EUXvOjUWarhi60ZtYsQivBMCHpZNqXSeUgJETCsijE2Sc0IwqT
iAoLuy+CZJTZnaFjxdKlm6nrQxRKFvjBsrJFVjOlRZik1Nl7Lgj143Lf577n
POd5zjlL8o3ZBUEKhWIGniQ8SjymL3GJnS0c1r/beTVyOYN/ceTAy/EFTRwu
RuBHGoO85m1haXYOz2Ksxz7vYrB1yKQZRXyt4+eKNzkMTlZogyOcHKrH+PPM
PIFbOfwyeGujDjLYdLlwuATxvaqnMWsOM0AJinOILVuGTDcKp+MTHt4c40bi
L0I9qvrovQdKGel4wCFwGa4zWJlb3vHIQnzWu8QHFhHPGfE0cHCcqNBeuE98
q/D/17hEVXwDg76a4tTtVg7Z9sVlvibKVzzmkI46f9uZzFuM9btvZzQed5F/
pVPo72LgRN70ZlHfPR2vK/Pttg8wuJPR+GOqhfxpBhl86on1pKA/feh55nrL
YPTMhrXViPPVOSlJH8hf8hOqXzLMYD++2xwcKovml7aNMIhaPbgsFOvbOk+1
6vwMMpMvbdyHODxgdFzoa6N55E4yqMH6TsSnca4qpQSvxg3egnbhf6Yk3yNY
rzwQP0eS+Te3C755kty/Qy7ys26hBCF7whP8Lyi/PlqCHVj/fTcHz8TZIw6d
BEdTZ/V5e0jfraUiv5f6H6yXoB/73eURehDL++Dl4Hdn5asRy3P1Cb+xErzG
50o/7U/VIgkm6767sya4/N6vFXr/kF6jmvzpQ8w0f5XQpzLTPgYJvjAz7dEU
gys45rq5ZvKP/QvIiteY5XnYvjE5b3YU8X3s/R//BUb7jZc=
            "],
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4iSBCEuTw8sdHlaJrHN3n+qAzteK6T+09eRy
B441MlEpNlMdWML4dDedXe6wbPYRhQ1WUx36D33ViLm83OERSL3FVIfunOe/
M28ud2gXu3mu3HqqAytQ/ad7yx18zDsdH9hNdRBuPnBq4ePlDqpsjVMPO06F
mPMcygfaxwACb5Y7HFXYUJThM9XhXY29qdy75Q6v1Aw51vhNdZj7fvkx709Q
9wQT5i903fa59hXEP8e9pjrobpr7Pv0Zwn/zgOq7Hy13OA1S6DzVoQfo/pVA
94LEvR2mOuwpmSzRcgvh/uuLC2y7ri2HiNtOdfAGiidcWu4ADJW5+UD++e/B
j1PPIdQ/vaB0u/IUwjxC4Q0ARKO/IA==
            "],
            CurveClosed->{1}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3047.199, 1364.5}, {3047.199, 1364.5}, {3049.7619999999997`, 
            1363.887}, {3051.043, 1364.035}, {3052.73, 1364.227}, {3054.328, 
            1364.98}, {3055.824, 1365.781}, {3057.27, 1366.559}, {3058.559, 
            1367.609}, {3059.785, 1368.695}, {3061.102, 1369.863}, {3063.398, 
            1372.5430000000001`}, {3063.398, 1372.5430000000001`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4r0lkyVcTi53sL7v3zs9fKoDVv6Z5Q4ZE9/W
2EdPdfB4WCXy7uxyh0wQP2aqAwMIXFzu8CP48VLpuKkOl32TBCKuLHdQZWuc
6hw71cG5O+d59XWoeUD5dzX2pvduLndY5/6wakr8VIdnF5RuW95Z7nB6oeu2
zwlQ9feWOwCtWXc8aarDIqDw3wfLHaJSrO+fT5nqAHQOS9jj5Q5bTpTtm58+
1UErpv/Q1qdQ92RNdWAJ49Mter7c4ZWaIYdOzlSHee+XH+N+CbU/b6pDKVD/
tVcQ8/wLpjpcX1xgy/UGYn9x4VSHHXKtrye+g/qnGJMPANuTl8s=
            "],
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3046.0310000000004`, 1373.359}, {3046.0310000000004`, 1373.359}, {
            3047.8910000000005`, 1375.766}, {3048.945, 1376.855}, {
            3049.6330000000003`, 1377.566}, {3050.3750000000005`, 1378.234}, {
            3051.16, 1378.836}, {3051.898, 1379.402}, {3053.492, 
            1380.3519999999999`}, {3053.492, 1380.3519999999999`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJVIGYC4rnvlx/zPrPcQZWtcarzwqkO6HygEgaH88sd
Kl+qGXKsmuow4dBXjTvnljs8rBJZd3zdVIe4XZ48TUB+oS3XdeXNUx16cp7/
XgnUr7tp7nv17VD+qeUOZiCFO6c6sITx6W46sdzhqMKGohe7IPqdji13cOkG
KgTKg805glCvFdN/aOshiPqMHVMdls0+olBwEGr/tqkOIGfpHFjuEJVifd9/
61SHCqBAx77lDkdA6oHuueybJBCxF6p+/VSHPSWTJVp2I9wPVr9ruUPmxLc1
9kA+yB27dyx3mAcKh7VTHZyB/GogPwMkD9S/5UTZPnkgv13s5rnvG6c6PLug
dHvnLoh/l2+a6vAUyP+5G+o/oP1GHGtkZgHt/3TJN2kC0H2GQH7U/uUOr4Du
XrMNEp4yByHht3g7xL0Sh5c73P5Zl7VnB1T+KDQ8dkH9exxqPzB8Frlu+2x7
EmofkL8YyN97GmKfwC6I+yzPQuzTAZoP0hZ8DmreVmh4Avk+5p2OCUD/nP8e
/Dj1HDQ8geEBDC6WMCB/Rp5Q84GVmOkDnQ8AVG8rzw==
            "],
            CurveClosed->{1}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxlU2tIk2EUXjVEKsIuVGTMorKCLiySbkqnMjJoSAoxRKJm/eiCGkSQXahs
RFkoyAuCVMSoQyAhIWEXa3zNNbfcxdEuuDVl87rRqAiL+tH5dt4Y2AcvfA/f
+Z7zPM8570pTXcXJWRqNZgadnXRm0rk4UagvG0boclx4+7BXwHT8II32pgSC
Rn3eCThXMjtoGUX4WRl/nE+4bLhhUe04ginPuGMr4fzN0dU5kwhrcq6LfYqA
lzpzcn4SYbJQn7uB+NZXNytFKYSqE7ti5Q4Bd8+O/Z5IMf+1jwJqiKeLcIvy
Y121V8DRVwfn3iB8aNvtPUN+AW/Oty69SXzzNj6/XxdkPauo35N224rOMOt5
NiZxVLCuhPw/xn7mkD+17ABhz1RlfCQq6z8LWNhodR4fZH/txEdt0hhCqOjW
mc8EmH9TAFmHX+r3s560R+bhQyiOld9b0i/Yp0fyOwX8efp1wNAv/X+Q/Z0I
3wYMpha7gCbiO+XAjE4X5dWs5tCLnDthlaf+PUJux/KqBOWX8aUg+A2mvFCf
gB7SVUr41uKwe8olwLL/xfceJatnC/24zMb1Rq/Ub2c/WhfPP7cPYfDX1dPF
hNW6NhdCKQm7RPjL5d1FOjdyHfE9Iv4rXgSX+uKWefllPj6e396A7Ef56VXh
YYQCc/Lwdso3M/cI71tBhP11xvh795Ccb1zuF+EG6usYQVDt+WOszzgu9zWS
3Ye22gWN1pDI1LUmZX6fRMbH65TU48vu27981D3tSEk9lKf2CE02yfPy2LL8
au7HFHkfqL+au9bKuGZU8tF9CFrqS+4kZF5WzmdtXOqz/n/fpuO/N2vYbg==

            "],
            CurveClosed->{1}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4pdqhhw6B5Y7/Ah+vHT2rakOr4D8nEPLHU4v
dN1WfHuqg8fDKpF1R5Y7LJt9RMHgzlQw/eHYcgc+3U1z3wP50vp3VdxOLXf4
dMk3SeDeVIedcq2vL55dDjZnzd2pDpox/Ye+XljukCQQYWnyYKqDEccaGalL
yx22nCjbJ/9wqsMi122f/15e7nBUYUNRxhPCfLA5QPOiUqzvnwea153z/Lfm
OYT5LkAB69PLHS4DnRNxf6pD3C5PHqcTUPcD7fuz8uMl36PLHQptua4rA/nt
YjfPfT8E8b80kA8y138fwjx0/p6SyRItu5c7zMgTaj5wA5P/rsbedB5QfSUo
YIHhiR6+AAM0u4g=
            "],
            CurveClosed->{1}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4j8rP17ivbzcwSxulydP/FSHHXKtrwMvIvhJ
AhGWJeeXO7SL3Tz3PWGqw/nvwY9Tzy13kAcq25E81WGR67bPf88sd+g/9FUj
Jn2qg1DzgVOKZ6Dqc6Y6MIDA2eUOt3/WZdkUTnWQ1r+rcgzIX+f+sEqkdKpD
dIr1ff4Lyx1OLwQaVD7VYcuJsn3yl6DqK6Y6PLugdHvnFYj6KUB+T87z3yuv
L3f4dMk3aQJQ/7sae1O5mwjzNWP6D5neWg6xN2+qw7z3y49134K6J2OqQ+lk
CZZpN6HmpU51KLTlup58Y7nDZV+gTxOnOoCcUXsV4X/08AEAYQqZWQ==
            "],
            CurveClosed->{1}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3061.1879999999996`, 1372.191}, {3061.1879999999996`, 1372.191}, {
            3058.438, 1372.027}, {3057.105, 1372.309}, {3055.996, 
            1372.5430000000001`}, {3055.059, 1373.32}, {3053.9570000000003`, 
            1373.5900000000001`}, {3052.4410000000003`, 1373.969}, {3049.297, 
            1374.059}, {3049.297, 1374.059}}},
            CurveClosed->{0}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3048.945, 1369.395}, {3049.6639999999998`, 1369.375}, {3050.328, 
            1370.312}, {3050.344, 1371.027}, {3050.3590000000004`, 
            1371.719}, {3049.754, 1372.672}, {3049.062, 
            1372.6599999999999`}, {3048.34, 1372.648}, {3047.773, 1371.633}, {
            3047.781, 1370.91}, {3047.7889999999998`, 1370.2730000000001`}, {
            3048.309, 1369.414}, {3048.945, 1369.395}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{3116.6679999999997`, 1327.5}, {
            3105.7889999999998`, 1348.898}, {3100.922, 1347.211}, {3096.723, 
            1346.395}, {3090.52, 1345.699}, {3093.445, 1327.5}, {
            3097.7419999999997`, 1327.5}, {3093.902, 1343.047}, {3097.465, 
            1343.297}, {3100.793, 1344.02}, {3103.867, 1345.242}, {3111.73, 
            1327.5}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{3086.773, 1327.5}, {3084.488, 
            1344.969}, {3076.9300000000003`, 1344.266}, {3070.8710000000005`, 
            1343.855}, {3063.3160000000003`, 1344.602}, {3059.203, 1327.5}, {
            3064.047, 1327.5}, {3066.3320000000003`, 1340.855}, {3072.27, 
            1340.5}, {3075.754, 1340.859}, {3080.738, 1341.219}, {3082.406, 
            1327.5}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{3051.8520000000003`, 1327.5}, {
            3057.3360000000002`, 1344.785}, {3051.82, 1345.242}, {3046.793, 
            1345.551}, {3040.7889999999998`, 1346.98}, {3028.996, 1327.5}, {
            3033.75, 1327.5}, {3042.8010000000004`, 1343.5040000000001`}, {
            3046.152, 1342.5900000000001`}, {3049.047, 1342.324}, {3052.398, 
            1341.859}, {3047.738, 1327.5}}}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxlkl1Ik2EUx9/KixASyaggQYuohCSEPqnRubBMaWsutW1sEFvLiqEmKlkR
gUWRQUYcmH0oKeTRvkutcMqqKdGibIMsLMKLMouQvoiwi47vOd3UxcP7/nnO
c87//M6Z7yt3BKYZhjGFTw6fqXyaxtsG6vMJJr+xlQj/6neDC4Zr7QTZty6M
t5UgnAyOTrQXETQ8+LHkdQChZUP3N4uLILc+OHqgBmGotcJyYjuBL9W5ZvkR
iR/zE8QuciAiuHesffssQNCfeaPyQzNCUklKdmUpQbjqzNykywhsyTi8k+Tb
hWbeHo6/ljeyf1Yfmj5KOV/G0U+FdwekXjLX233688H1TxB+t3+JW70EobKZ
dZFBzefS+nEEP/v6XkxwbParpz/jEj/DIfWMBMK+sUU5x60Ep7g/z3OEarb1
ooBg+NehPeEYQpaHb/JU94tewbqW300PK6+/97cRJllHWEe5313cXy/3mZsv
/le3IOy1JA/5NxN85OdXzotfw0bCqRHh0rloZoVdeYUQElZfaoj9fo3zT6No
Z7HUW8d6E2Mqc+r8ziJw1nS3W3k0IXQ9qulr9hCkMMjyVp0n85rDOBIdaM6t
yqv930SYt+zNwo1erd+N5tzTPeJ3aa/ycck+eCLCt3Mbia+H6r9I5xdFs06a
Q/PdR+DxTmTpfi3m9++Z3z2b8usRvtU26bfhDppzW2WT/C+Zbyf3k7FF9+E6
mr6Cdt2nq7IfBYXKm/mn1UUej2wledfxv/4DflJ9Hg==
            "],
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxdUl1Ik2EUXhYhESEVKSrl+plJc/40TdtWx8y0NAJ3E15YDb2IYv0apF1Y
khIjiPSUYS1McocwM1vSisVyabbApUIaJSJGfxcaRRhE0Pn2ngj84MB33nPe
5zzneV6940hp5XydTjePI4MjimO76/Cn30aCzsLJ6uV6hLn5w4FTT29upMh5
TTFCZnRHYnwOwbqFZzG4D6GI25wWgpHdjpgxJ8Kl3p/rE/OkXoPQVtDzw59P
ULLpQt5+l+AXEHw1ZER3NCOUP965+FwRgSNmb67ZI/iFBK9a+aJX1bftIEjt
vjGT7Edwz3j6XYyn074+hGINFxSeMSR1m8wfRKhqjFvwJpeAYcsqhhBG247a
dmUTlD5aef4Q5+FZ+1Rlppp3gvNbPPZPKoF1Ys/F2DDCFw13A8Ev+9TtlpcI
y+oCoclk4RtU/KIMBNnaj0/4GtS8D/cQ4tPG19YbFN/adgQv67kqhSI6vb+O
8PH16nc+1ruswjIRvqLwD5gI/CeZeBNCNRMYSCdodi6tC1xWek8z376kruOf
OW9veZ7UlaX4JTQiJPC8fvaH2zpfNEl9s/C7htCw4u3grFX63ah03CL7Mr8x
1ifE+h2zLRpdcxdh+szWLDfnEd4PEDT7DlrlPfhEH8bXYO3sD7MM6XNkn4Do
aSb4PswPJCj3mb+F5119hpF3E5eu/Mrn/tMaoEn57Xmi+NWyH0u0gx61zzej
6Htf4aWYRN87CLHMYyRN9iPx26z88rb+9/9f/9z8LweBYcc=
            "],
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxdUntI01EYXTXNmprlcpMNp6nVP1JCD0JHpxdaKZFChIjEKogaVNKDRkQP
JHuIRn1EaVIt8w5slUguKVkyaswompCTirACMSnJCov1R99v94rgHxfuud/r
nPPdLMf+st0zdDrdND75fKbz+ef5Ea6bI/DJZfQWmQlT8bHhhfkJ8wQqdhV8
3FJI6Age6balC3zl57ZKQlXXxsTTViHfnYR+9wH7piyBsXCpo8FFOJs28Opo
tkBDz+/F788T9NuS86pzBfLab4y2XiOsv+AcKlgkYnNqPYQI14c47i0adF3x
ES46h6LDOQLv/p7Y++QZoa/UkRJZIJAbf4rW9RK4/Xi5TSCQ+aB6zxvCQfvs
fjfz+VP+ucXylmK8X5sFmkdbn2+OEG5vePTTPl/Nj0j+a+fKecYBgi+jZuRS
otLPcY130yyBMi0QlnrG45QfL6U/xXoV90t97XrlR6fka+Z8zq67ek/VzxQo
ZGy6QyjmsV6DwAqNSDOhnudVJqn+jYRazu/kfWg+Rdmv1DP+0CDz1XRmX5f+
eIwiNmc7Y223fpMAo1XLmpQf6UrPTYJlyYeceKvku6+FsJPzfjEuWXluzQ7m
52Z/nk7gDulfvVXVdxG+HV+9vMoiYKsZ2erzT/6H2L4DhMOXzfo0k8QpQUIc
+zGWqvwPqXrmb2Ib+jiuvRtYH9PWnXwh/0OU/U9os1Z86aGYjkOM7zYGMpd2
K/0G5e9jwnful5Gk/sdDgov3EUwW0sf7at88v/cWX8Tk/ifyp+L/zedw9Q==

            "],
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3104.117, 1355.633}, {3104.98, 1358.348}, {3105.566, 1361.164}, {
            3106.703, 1363.777}, {3108.105, 1366.996}, {3110.0310000000004`, 
            1369.969}, {3111.8750000000005`, 1372.9569999999999`}, {3113.129, 
            1374.988}, {3114.7419999999997`, 1376.801}, {3115.8830000000003`, 
            1378.902}, {3117.043, 1381.0430000000001`}, {3117.992, 
            1383.426}, {3118.727, 1385.625}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3099.3360000000002`, 1354.016}, {3100.059, 1356.555}, {
            3100.5550000000003`, 1359.191}, {3101.512, 1361.637}, {
            3102.6910000000003`, 1364.648}, {3104.285, 1367.43}, {3105.867, 
            1370.223}, {3107.07, 1372.348}, {3108.715, 1374.219}, {
            3109.7659999999996`, 1376.4180000000001`}, {3110.645, 1378.258}, {
            3111.129, 1380.145}, {3111.7459999999996`, 1382.199}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3090.027, 1351.105}, {3090.75, 1354.02}, {3091.2459999999996`, 
            1357.0430000000001`}, {3092.203, 1359.844}, {3093.3830000000003`, 
            1363.301}, {3094.9770000000003`, 1366.492}, {3096.559, 
            1369.695}, {3097.7619999999997`, 1372.129}, {3099.406, 
            1374.2730000000001`}, {3100.4570000000003`, 1376.797}, {
            3101.3360000000002`, 1378.906}, {3101.82, 1381.0700000000002`}, {
            3102.438, 1383.426}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3084.465, 1350.719}, {3085.1479999999997`, 1353.387}, {3085.609, 
            1356.156}, {3086.508, 1358.723}, {3087.6130000000003`, 
            1361.891}, {3089.156, 1364.7730000000001`}, {3090.59, 1367.746}, {
            3091.6679999999997`, 1369.984}, {3093.004, 1372.098}, {3093.988, 
            1374.383}, {3094.82, 1376.312}, {3095.523, 1378.164}, {3096.102, 
            1380.324}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3074.898, 1349.684}, {3075.559, 1353.027}, {3075.906, 1356.449}, {
            3076.8710000000005`, 1359.719}, {3077.9410000000003`, 1363.344}, {
            3079.727, 1366.719}, {3081.078, 1370.246}, {3082.2110000000002`, 
            1373.207}, {3083.4410000000003`, 1376.141}, {3084.3520000000003`, 
            1379.18}, {3085.102, 1381.676}, {3085.59, 1384.082}, {
            3086.1479999999997`, 1386.789}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3069.598, 1349.879}, {3070.219, 1352.758}, {3070.641, 1355.742}, {
            3071.4570000000003`, 1358.5120000000002`}, {3072.465, 1361.926}, {
            3073.828, 1365.078}, {3075.18, 1368.242}, {3076.207, 1370.648}, {
            3077.609, 1372.766}, {3078.508, 1375.2620000000002`}, {3079.258, 
            1377.344}, {3079.672, 1379.48}, {3080.199, 1381.812}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGYC4su+SQIzvFY4nF7ouq349FQHEF/Cb4VDkkCE
pcntqQ7nvwc/XhqwwmHe++XHTr+e6hCVYn2/P3SFgypb49TDP6c6SOnfVWmL
XOGwp2SyBAvrNIdCW67rynErHORbXwdaCExz2HKibJ98ygoHBhAQn+agu2nu
e/WMFQ7r3B9WTZGe5vBn5cdLvLkQ873lpzlsBaqfX7jCYUaeUPMB2Wlgd5SU
Qt0nMw1iT+UKh1dqhhw6QPO8zTsdE6qh5gtOA7v/Ru0Kh8qXaoYdXNPA7let
X+HAsUYm6gkj1D31UPOB7p9w6KuGDJAP1vdxqkNPzvPfL4H6Qf70fzkVbn7G
xLc19o+nOng8rBLRA9q/F+SOexD+ulKoe25D1RdB3NNwc6pDKVDZtPwVDjb3
/XvFb0Dlc1ZAwuH6VAdQXBzIRKgHm5e2wuH2z7osmztTHZbNPqJQAAy/oB1y
rdmPpkL8mQxV/wISXzMSVzjwAQ3MfzfV4ekFpduVCVD/fYWob0iEhs+fqeBw
7k6ChEcK0zRI/KVC3L+GHRr+wPjJBPkXGH6gcPTIhoY/zzSwezbkQcMLyAcZ
61CIUA905uvA4hWQdMABCf+lJVD3M0PjqxTqnv9Q/5RB09vvqQ7SQPe4lUHT
x7epqOo/T3VoF7t5rhxong9I/P1UcHpoKYKG5xuofwug/gemV6CvZG7lQe1/
DUnPT3Og6fMt1P4cqPkfoPGbDU0/n6Dhmw2N3++Q+PgA5H+6BJQAph8AcMZj
FQ==
            "],
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}}}, CompressedData["
1:eJxFUm1IU2EUXn6E2VyZlVJhGhgm7YfgsqarMy9rW1elloRUVFj9CfGrD+mD
KCoyEirW+xJIhUT1CiISWCkWNizCUKNBGQY2JM2EWda4Whmde99TDt4f5+6c
5zwfJ72s0ncw2mQyzcGXgy8KX/jUJtutDAEt7tCJxc8Y1JeP/mrKFDA4ffpQ
Zx8Dk/7LEnBx6fs+7SODL6uz45qtAqwPbk7cn2Dwu+nbm4RsASsvjG9bP8OM
vtwcAbY9Hd56M4dqR/y7/XYBwaKyhaVLuNFftFHA87TWms/LOOiwfkVAxtyz
TEnl8DgVgTwCblQsOte1gss9qoB7Dd1prcs57O3wmgPFAtYhvjmZw84DeUP9
W+n/RA5rdl8JRHykB/cjSk96iayvx3BIxn1JWHce8aecR77Hx1BQCeFpzOA5
4CM+X9l/fN2P/HEGSYgXKpZ+1I4w8OCasEr6hxl8er1qcBr567h1IWboubZZ
GL6tRf9077sU2j8k/ap1zvYP3Kly9PzzB/GO+lNi3uYTnzFZ8zzyN8xAuVw+
etJO/L4zyEL9bRsEWHTjppjhS5Wd8FAvuvlCxXlDVzSXvjkEoIwW9zwu8UAY
uQTnc3iCPLsLaD6Bahf5a+HyPjyz/Xq+vV4hv8dzaEf9iSrdTyyX/FWaj+Kw
C3ksKJT9Z/4wiN1hsU6q5NdP6Y+2RfoTh/no+dqwnto+fLfhB5P3gPv1XIOT
Mr9St4BXja6Hh7Guw/lHLprHuu3lsae3FbpvrPs1BEJ9hbmXnPsiDEYwv3bM
42ogkvlBk/fd66R7nJH5NxZIfs3I9y8TXox/
            "],
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}}}, {{{3122.25, 1393.074}, {3123.293, 
            1395.086}, {3124.59, 1396.582}, {3125.828, 1398.207}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}}}, {{{3119.062, 1396.027}, {3120.277, 
            1397.93}, {3121.234, 1399.0620000000001`}, {3122.25, 1400.383}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}}}, {{{3114.398, 1396.883}, {3116.23, 
            1400.148}, {3118.141, 1403.113}, {3120.387, 1404.738}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}}}, {{{3105.066, 1394.473}, {3105.176, 
            1396.25}, {3106.1639999999998`, 1397.984}, {3106.699, 1399.992}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}}}, {{{3100.828, 1396.379}, {3100.938, 
            1398.156}, {3101.926, 1399.887}, {3102.4610000000002`, 1401.898}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}}}, {{{3096.5550000000003`, 1396.379}, {
            3096.738, 1398.934}, {3099.367, 1404.531}, {3100.828, 1406.875}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{3087.9610000000002`, 
            1396.184}, {3088.48, 1399.164}, {3089.574, 1401.906}, {
            3090.6839999999997`, 1404.6599999999999`}, {3091.676, 1407.121}, {
            3092.8590000000004`, 1409.2730000000001`}, {3094.1839999999997`, 
            1411.812}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{3084.3830000000003`, 
            1399.84}, {3084.9530000000004`, 1402.0430000000001`}, {3085.68, 
            1404.281}, {3086.484, 1406.445}, {3087.199, 1408.375}, {3088.012, 
            1410.074}, {3088.8950000000004`, 1412.125}}},
            CurveClosed->{0}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
            0}}}, CompressedData["
1:eJxlU31I02EQnlqyaulKMVFTszKDNItEw1an29RZy9QQmctsLnMiZt+fRGX2
QUGCuyFIQo16CUwkQkTKZElIQpn+oaUVkiGmFK2k/Ai63+99V5B/vIz73d3z
PPfcbYXlYM5+H4VC4UVPQ8+bXp/Roh7YxcDda7TUmBH+jw9pFvY7MxgkFLYZ
bmQg6K6XjyanMairWFrVsQWhwJr8wV/HoCl9+HTgRoS15puuyRQGv3I/3g2N
Rpi9/613sZaBiepehSB8jt6gnNCK/iUIe9sMKhfh5bSGV48rET71RA2eymRw
JejNyxM+CHEPb30d3clk3plZO8ffzfGypuwQUNXxYp9J5KftMD/PL9ZdyEDZ
GGayUn0s9a8pZvIv8xZ6ShgQ/M++BQj09fn2Ugadkc2HS/25vnIbgxrXZMxQ
EMKTo7XBnTaBvxzBos7fvKmM44/QfJLORMo/6jreHhEv/DrAgKxVnE8S85SI
ebci3NG3fNdYeV6h437nW8S8BpR5w4oEfhbCvfrOyPgCvg+1eW4cuv7dKl+P
nktCP+UHp86VPW6aG2tpjjPEF1E9np30lOv5bRX6uhBozapU0k8ux5hfI/Q7
KzWZNuHf239+LCP/ckeQ+0v80twrJ7j+IRu/B/sPhDHiX0f+SjoaZzj+xRIR
ezsgg86mgvbTIO1B6eB+0vyVko8qh4xbvIdB9219yxG1A47VBs8LMvH67gAH
x8kTfgQKvBwGOxKvpRRR/OXstoT3Rs+9Of7elwdfyjeki3mIX8bVi34vzu/U
8Xuun+Z+p2nF/8ONMl+cVvgzxvdZR7G8p2EUe2aw2vcCPhsQfuj5fZl7UOZb
lC7y5P9JKrhq4P3N7SjrC8/m+2p9MDcOIT2XUxn4SQKqEf4Aq1TCsg==
            "]]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           1., 0.33333299999999993`, 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4nnvlx87HbrcYU/JZIkW36kO6HzNmP5DX2OW
O7h05zyvtpnq8FLNkEMnfrkDn+6muflGUx0qgQIeCcsdONbIRKXoTnW47Jsk
EJG43EGVrXHqYfWpDotct33+C5QHmeutNNUBqO39ciDfLG6XJ4/sVIdnF5Ru
W0LNey8O1R+73OH2z7osG5GpDkBrf2dGL3c4qrChKENgqoO0/l2VYxEQ97Hw
TnX4s/LjJd4wqH6eqQ7e5p2OCcHLHSYc+qpxB8gH0XMCljuI3Tz3/TL/VIe9
QH1H/JY7AG2x3CI81YElDKjTB+oeiakORkCPzPKG+kcOah6Q7wOiVSDuVwfy
Mye+rbHXmuoADEIGB6D+ZbOPKBgYQMKr1He5w6dLvkkTTKF8f2h42U2FqAta
DgkHV8zwBgCCqbF9
            "]]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           1., 0.33333299999999993`, 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYr1Nc98/D13u4NKd8/z3nqkO6PzriwtsuWKX
O0w49FXjzvmpDpUv1Qw94pc7vFIz5Fhza6pDyWQJlrCE5Q6qbI1TD9+f6pAk
EGFZkrjc4bIvkPV0qoMRxxoZKSA/KsX6/vlXUx32AjUcAao3i9vlyfMBqh9q
ns5XqH6gfT7mnY4Pfkx1kNK/q9IWvdxh2ewjChv+THUQbj5w6mHEcgeb+/69
4gzTHEDO1AyD6gfynYEC1cHLHTInvq2xB/I7xG6e2x6w3OFhlcg6979TIeb6
LXcAOisq5edUhz8rP1466wN1D9B+rZj+Q1u9l4PdseXdVIh5QP7tn3VZe15M
dZAGusfNG+K/G4+mOngADc4D6m8H2vP9zlSHHXKtryf6LncwBZrXcx3i/1n+
yx2OKmwoenF2qsPc98uPeQdB9R/BDG8A5ZXARQ==
            "]]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            2987.2889999999998`, 1383.691}, {2991.715, 1377.574}, {2987.156, 
            1370.934}, {2982.602, 1377.184}}}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4mWzjyhsaFvu4GPe6fggYZqDN5BOaIbwE4Km
OfTkPP/9smG5w7z3y495O01zkNK/q9JWvdzBNG6XZ4/ZNAePh1UieWXLHdrF
bp4r157mYMSxRmZW/nIH+dbXgRbK0xyAyniaMpY7gOwxkJvmcGNxge2ppOUO
W06U7ZOXmubg3J3zvDpmuUOhLdd1ZSD/lZohR07YcocfwY+XSgP5l32TBG4E
L3ewue/fKw7kg9QlB0Dcc1p8msNi122f9/otd5iRJ9R8QBrqXh+o+QoQ9Y99
lzucXghUqD7NQbj5wKlEf6h+nWkOUSnW988HLnfQ3TT3/XITqPowCF/dYpqD
NNC/btHLHSpfAh1mDfEPUzzUv7bTHHbKtb4WTF7uwAACQD6YTl/ukDHxbY09
kC9+89x34TSo/Z7THP6s/HjpbCrEf7NDoO5Ng5j3PX6aw1agu+enQ8MrfRrE
HVnLHayB/p+eNw3ir2xo/JRMcwAAmmTQJA==
            "],
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            2990.906, 1415.156}, {2990.906, 1416.125}, {2991.414, 1417.238}, {
            2990.906, 1418.0620000000001`}, {2990.504, 1418.7150000000001`}, {
            2989.586, 1418.895}, {2988.844, 1419.094}, {2987.8750000000005`, 
            1419.355}, {2986.844, 1419.344}, {2985.844, 1419.281}, {2985.176, 
            1419.238}, {2984.5310000000004`, 1419.031}, {2983.8750000000005`, 
            1418.906}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJtIGZigIAG3+UOW06U7ZPXnebgY97p+MB7uQNYQm+a
gyHHGplbnssdTi903VYMlN8KVDffY7nDjDyh5gP60xzEb577Luy+3KHAluv6
YqNpDtcXF9h6uS13+HTJN2mC+TSHqBTr+/1uUPXW0xz2lkyWOALkg+2xm+aw
U671tSDQvCMKG4oyHKc5LJt9RMHAE+Ke+c7THOa9X36MG+gekDn+7tMcvIH6
Enwh5gt4TXMA+eWA/3KHzIlva+x9pjnobpr7Pj1ouUOSQITlFr9pDpUv1Qw9
QiH2JQRAzY+A+jdwmoNzd87z6qjlDvKtrwN3BEL9H7PcQQzor8tAPlhdPNT9
AVDzE5Y7FAL9qwzkl06WYLmWCDXfH2L+hiQo33eag7T+XRW35OUOLkB7fntP
c5AC8tuAfD6QQZ4Q9QXJUPd4THMABg9LGJAPDPaoJ67TwPp2A80Dm+sMUf8h
EareaZrDn5UfL51NgKq3n+agGdN/yDQear8dNL5iofEJ5IOcoQn0H8j65bbT
HIDR+rk2CmqeHSS+/COh8WMPDb8IRPzE7/LkORQO9b8L1P3h0PhymwYOd5Nw
iP/ygf6JA6p3AvKPgvR7IdTD4gucPoD8de4Pq6b4Qv0XDg1vP0R8gd0PDG8A
kMQuhQ==
            "],
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJtIGYC4mWzjygUeCx3YAABl2kQ2n25g495p2OC2zQH
zZj+Q19dljvMe7/82Gn3aQ5bTpTtkwfywbT3NIfriwtsu5yXO7SL3TxX7jvN
IUkgwrIEyP90yTdpQsA0B5D5H5yh5gdPc9ACmrcVqH/Coa8ad8KmOTy7oHR7
p9tyB1W2xqnOkRD1IPeAzJ8fPc3BuTvnebXXcofTC123FcdNc/iz8uOlsz7L
HUzjdnn2JEDUG/hDzU+aBnZnd+ByBz7dTXPzkyF87pDlDlEp1vfPJ0P81xC2
3CFz4tsa+5RpDh4Pq0TeRSwHm7MByD//PfhxajTUPanTIPpioe4ByvfkPP/9
Mm65w2VfoE+B/Hc19qZyCcsdbO7794qnQMMvcbnDjDyh5gNA98Tv8uQ5BORb
A+WnJ05zKLTlup6cBDH/cDzUPUmQ8H4QCzFvHpB/VGFD0Qug/4GmnFKEyUdC
3NOfCHV/xDQHljCgTxOg5oVC4qs0frlD0A651uxgqHvioO4Pgrh/ZcxyB441
MlFPAqHhFw3xzw2gPMQeqPth8RUBjc+QaQ5AW03jwqHxEQrRvyEMEv4N4dMc
gNH1WxPIX+cODFige12AAtZA/u2fdVk20RD3+4dB008sNLyBfPnW14EW8dD0
ApNPhLjfIRzKB8YfAJprMQY=
            "],
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGINIGZigAAHj+UOPuadjgkx0xyiUqzv+7svd8iY+LbG
Pn6aw0651tcXXZc76G6a+3554jSHZbOPKBQA+WCNqdMgNJAP0nc+Y5rDhENf
NWRcoeblQtQbuC132HKibN/8gmkOHg+rRPKA5oPUxZRMcxBuPnDqoedyh6Ad
QItKoeb5QPWXT3PYCtLnt9zhlZohh07lNAfn7pzn1YFQ91VC1DuEQM0H8t/V
2JvOC1vucHqh67bPQP6flR8v8UZC9K+pmubgDTI3GqH+xuIC21Mxyx1cgOb+
roCaFwdx351yaHjEQ9zzAOi+89+DH6smQPzrD3Q/axif7qcEqPuKoO5PhKrP
h9oP5IPCYQMwPDRj+g+VAtUDeUUZ2ZDw2QAzP3MaxJ0w+9OngcNdPRbqn7Rp
DqC4OxANCf8GIF/s5rnvwVHLHczidnnyAPkdQIHtEdDwTIXGVzg0vIDmgYyp
BYbP7Z91WTYZUP+HQt2fBQ2fUEj4yOdMc9AD2v8cGL7iIHvypjnEA605BOQf
Bbr/RQHUv6FQ84ungcPROhTqPmB4gc0Jg8qXQ/0bhog/APMeGvs=
            "],
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJVIGYC4ugU6/v83ssdGECgfJqDj3mn4wPP5Q5bTpTt
k6+Y5rBTrvX1RfflDuvcH1aJVE5ziAKq9wfyweqqpznMe7/82Gm35Q5JAhGW
W+qmOYjfPPf9MlD+9ELXbZ8bpzlsBZoz3wNifkPLNIf4XZ48h4Dm29z37xXv
mObQf+irRgzQfj7dTXPzu6Hm+0Lt753m8ErNkOON33KHPSWTJVr6pjn8Wfnx
0tmA5Q5BO4AO64Wo7w+CugfIB6ljCV0OcReQHwe0ryl8uUOhLdf1xb1Q/0VC
1Cf0THMAWvt+eTTEvGyo/edjl0PormkOy2YfUfgQBzW/HcIviF/u8OmSb9KE
Noh9LUA+0NW901ug7o+HhmfzNIdkYLh8Aeq//bMuy6ZhmoMe0L7nQPPlW18H
7qiFmLchZrlD5sS3NfY10xwmAMNDBugeEB1TNc2BNYxP91MEJHzeA+MDZKxD
ONT9QPkOsZvntgP9CwqnNdVQ/4VA/VMPdW8IJDznN01zeAlUpxMCdT/QvS7d
Oc+tgXxg7K473gaNL5h6YPxI699VYQuFxl8XxH6GMKh8N9T9YYj4AgC7XA//

            "],
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}}}, {{{2986.781, 1444.031}, {
            2987.0510000000004`, 1444.906}, {2988.4730000000004`, 1445.781}, {
            2989.969, 1446.656}}},
            CurveClosed->{0}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
             0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGZigICGiBUOYIbaNIckgQjLknvLcfKjUqzv+79d
7uBj3un4QHmag8fDKhG9L8sdXqkZcqyRm+Yw9/3yY97flzvMA9Ey0xx6cp7/
XvlnucOnS75JAiKY/IqXaoYd5isg5glg8kHmv7NZ4cCnu2luvsQ0hz0lkyVY
HFY4BO2Qa82WmuYQDXQPv/MKB441MlEpMhD1eW5Q/bIQ9/Z7rnAwjdvl2QOU
bxe7ee679wqHSpA90tMc3tXYm8r5IcwH2+e/wmHLibJ98qLTHP6s/HiJN3CF
wzp3oIQwxP0vA6H2A90HMm5y0ApwOG3hneZQaMt1PTkYYn8C1zQHvU1z3z8H
8m//rMvawzbNAWgth07ICgeb+/694sxQ9wL5wFDtnf5/KlzepTvnefUPTD5K
fHFMcwAAUL27PA==
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{0, 2, 0}}}, {{{3116.25, 1421.25}, {3051., 
            1421.25}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJVIGYC4ldqhhxv1Fc4JAlEWG5pmuYQlWJ9/7zqCgeX
7pzn1XXTHCpfAhVorYDQpdMcYOrB6goQ6q3v+/dOz5nmUDpZgkVMEcF/ekHp
9k85hPp3Nfam92QQ5sHUw+yDqYe5B6Y+aIdc6+u2aQ6FtlzXlSXQ3CeGUA92
nzBCPYzvY97pmDABoR7svikI88Dum4GwD6Ye5h6Yeph70dWrsjVOdV6EUA92
3zKEerD7ViHCC8aHhSdMPSy8YebB1MPsg6mHuQemHube+F2ePIf00NxngFAP
dp8Rmv+MEOEFUw8LT5h56OkBJXyR0g8AAEcFpw==
            "]]}, 
          {FaceForm[{RGBColor[1., 1., 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3038.496, 1415.387}, {3033.3750000000005`, 1419.}, {
            3064.8750000000005`, 1467.938}, {3064.8750000000005`, 1467.938}, {
            3065.8590000000004`, 1466.305}, {3066.562, 1465.688}, {3067.426, 
            1464.93}, {3069.562, 1464.}, {3069.562, 1464.}}}]}, 
          {FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3033.523, 
            1418.902}, {3030.562, 1420.688}, {3062.8120000000004`, 1470.75}, {
            3064.6879999999996`, 1467.75}}}]}, 
          {FaceForm[{RGBColor[1., 1., 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3030.809, 
            1420.914}, {3027.1879999999996`, 1423.5}, {3060.938, 1475.625}, {
            3062.676, 1470.297}}}]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            3026.8120000000004`, 1423.5}, {2970.75, 1458.938}, {2970.75, 
            1464.938}, {3028.8750000000005`, 1427.812}}}]}, 
          {Thickness[0.002], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3029.297, 
            1427.312}, {3033.402, 1433.828}, {2970.75, 1474.125}, {2970.75, 
            1464.977}}}]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            3033.3360000000002`, 1433.449}, {3035.465, 1437.039}, {2970.75, 
            1478.438}, {2970.75, 1473.938}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigAKT5Q5gesp0B3R+VIr1fX+f5Q57SiZLsORN
d9hyomyffBhEviFsukPcLk+eprjlDkE75FqznaY7sITx6W5KXe7gY97p+EB7
ugPIrgNZyx1m5Ak1HxCe7nD+e/Dj1PzlDkBTe6f/neYAMjasGCp/FpOvGdN/
6GvdcgcboHrx/Zj8drGb58orlzvIt74OtGCAuh+oP2Pi2xp7uekQd+dC3W8F
cV9RynIHVbbGqYeDpztsBfpnfhTUvqzpYPNL/aHub0ELj/WYfADL6nb5
            "]]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4i0nyvbJz1juwAACC6c5oPNfqRlyrJm63KHy
JZDxdprDVqD8/AkQ+QbB6WD5Nz3LHVTZGqc660x3WDb7iEJB+3IHjjUyUSlu
0yHmNUDNi5sOMadsucOnS75JE+qmOxiCFGYud/Ax73RMmDMdoi56ucOMPKHm
A1unO/Qf+qoR47/cQezmue/Bp6DyJlD5F7j5l32TBG78weT35Dz/vTJ4Odid
G25Md/AG2ZsIdd9BqPvzljvw6W6am79qusP578GPU6uWO/wIfrx09oTpYHc+
aIbaVzzdQVr/rgpbL8S/T8Kh/ClQvgVUPSw8JaeD3TFjznIH07hdnj0MUPl5
yx0yJr6tsT87DYMflWJ9//xeaHjrTwfz+48vB4frfHWo+2dBzZ83zQEAQdO8
3w==
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJyFU30slVEYl8oks5aGVZNqKlu2tCjDPElRmGhrJiMflcrQl2jWkqQWpcl5
T7O+x3ltJclHNUyXUlky1tAtn7lc8pFSmUznfZ+ztdUf7vbuvc89z/k9v9/v
+d3lEXGB+2YbGBjM4o8vfwwNxGcDA/X9g0LkgiDn7x4Mbo6wlz4jFCqOZ1ud
C2Bg2dbws1lH1b4zYaJfS8E8tfpNeASDsSa/iKxWqt6bv4/BwCoH47XvKSiz
qg+I/iaq/h4Tj/j1dRR+F3xt8ktiUOjVdWpRFeJDCgMauzC1+hGeZ6Yy0Ct4
hRR6G1dok9IYRHCeJQUUSl8lVN1KF/15Au8yg3SLtoaT1ykER7l0+OcweGFT
dLQ/k4LvxoubO3OZ+t6bQiH02XbTs7cZJPEBFxIptNyLdzPJY2BmX3wjLo6C
j9JXIPjvp3B3a9m3qQcM6u/wL3so5OfW2sQXC/0BWBeVIX7nNsGnksGytMGA
TU44z7AW9V6zFfxfI/4ZcwqJCo9GBtyNQq8pCTwvxfS5tDAwvr80OEonYb9W
6H0rQZZmfM3HTwy0E6cPuT6XwC7kiuZEO96veyyh/x2iP18CBwWoi4EjJ5JB
JDjiZtLS0y32fV5C/z8LvQmS6t87XtsapeRsiZPgiTUX0sswF9ECv1fgh0uq
/lEd4pv6S1DJ+2r7GERfHUp2dxX9/UKvnaT64aEXfi2TQMf366wXebAQfAYY
lCi6TSWYu9vMfozXypx1RoL/IOqvmCZqHTnE0JcJgn4N436NxwnijYp9jRIY
TnZ3tB4T+F8I8vvO4NeunrwlfQTCOD/NT6biruwmsJ77t3gS93+snQBX5Rg6
hXkZ0eL8nmmGuftAMO+GMupvI5AR0zdZMEfG81aCeTKScT6vFZ7e8/6e/1sr
+x23kKHZj/8DKonwTcb3UwInsq3mWKyW0b9ygvl0lFF/zcy1wk/vIYNrh3+m
ZSEBbyVIO2QI5Is//JDgvnbKqr8hRQRzECTONTPXKl6krOapppio+356UAYn
BbiUqHnxjJfxXjn2xyYKPo3/138AkjAzLg==
            "],
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{3076.641, 1462.078}, {
            3055.5, 1428.75}, {3116.25, 1428.75}}},
            CurveClosed->{0}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI1IGYC4ugU6/v8jcsdZuQJNR/YOMMhCsjvr1/ukDHx
bY393BkO894vP3a6ZrlDu9jNc+WdMxy8zTsdE4B8BhAoneEw4dBXjTvVyx2S
BCIsTWJmOLCE8ekaAeWDdsi1vnaaAVFXDzVfa4aDx8MqkXdA+/aUTJZoEZzh
sMh122fb9uUOQOF17j+nO2w9UbZvfi9U/aPpYPV6U5Y7/Ah+vHT26ekO0vp3
VdjmLHc4qrChKGMrVP1SqHsWT3cotOW6nrxuuYN86+tAi0nTHf6s/Hjp7A6o
eS1Q9Yeh/MrpEP+cW+4gfvPc98t50x22AOXlb0PlM6c7gMLqwFMoP3E62J6G
RxD3s3RC+A73oe5ZDuEz3IG65zhU/RUo/+J0B62Y/kNbTy13MI3b5dlzB6r/
MDS8X0136M55/jtz33KIOz5Pd3hXY28qt2s5OB68/0LN2wZVzzHDYdnsIwoG
m5aD481fFBL+m9ZBzVeGhv8aqHqjGQ79wPiKWbUcos8aEr/cK6Hx4TIDEj4r
oO71mwEObzcg3wXksFBo/K+EyDfEo/IZ0iD2NUyFyvfNcAAAeJsD8A==
            "]]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxFUmFIk1EU/coFUmASEoKS1Q+JSKgoSsw6QUFpERmISESsArHQgjIIiUWO
khIbi96ltWwNvWVGNlxYzDAZEu2HpcSGSlZWEKKWEST0o+d7N/zg8X2Xc79z
zzn3rXLXlp1IcxxngT7r9Fko371XGc7cc59QuqVx59ErjCrfZP0OH+FG3+81
ow2MPO/EwW4PIfq67mWLrqlm2eXeWkJwmvtLdb1v7r8KQuysP7vBy/ievyG9
A8L3n38t4a7uX3KNzTuRRdjz6UJWTTOjWc857BCMnpsyf1JhaL87M3Vb8KTC
ovKMgpkQY2ZQA33KzP3Ybvk9nQptgfjKHxHGmeLFyfA9hXP+bNetGCO9I7fy
i19Z/f3S36jw7e3qkcIBRtHYgSblEb6U4PXK6v4s+utsjQ+ir1XwYcnjgcLf
hz8Hm94zyrpXeE8+srjnneBPlPE7lWCjszOqcCyzorBL68koiASnY8r6fyX9
cYUeneeuHkbl8aKxgYQy+bqeMzYfebH3+pD1uz4q+kat3+VPJZ+vyub/WPxP
KXRp/3nton/W8sfbGInQ7me/0gip8OniN2G7761LyeoPCX8OIanxkhbZRz5B
25zwBRlu7WPTRrkfd4R/O8Gl9xUJMP4cGm/NKSHoW5E7rOuR2YvV28rJ5h2Q
fjeZvY3r2tyjU/N8Jo/z87XRc4nwDxNnN3c=
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4i0nyvbJ313uMCNPqPnAjukOPuadjg+uLYfQ
e6Y7iN08933yheUOP4IfL5U+Mt1h2ewjCh9OQeVPT3f4s/Ljpd4jyx1eqhly
rLky3UErpv/Q1n3LHXQ3zX2vfn+6A9AKhoadyx1A9sx/Nd2BJYxP12gr1Lwv
0x0qgBo7NkLt/wdR77AOyuec4VA6WYJFbPVyh/5DXzViRGY4dOc8/625YrlD
0A651mz5GWD3GCyDmC+vPcPh+uICW68lUPVmUPnFyyG00wyHrSB3LFoOtofB
b4ZDdIr1fX4gP0kgwnJL5AyHKCD/PJCfMfFtjX0aGr9whgMAsjOSnA==
            "],
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3050.273, 1498.2930000000001`}, {3050.273, 1498.2930000000001`}, {
            3054.914, 1496.137}, {3056.18, 1494.074}, {3057.273, 1492.297}, {
            3057.117, 1487.887}, {3057.117, 1487.887}, {3057.117, 1487.887}, {
            3053.4100000000003`, 1490.09}, {3052.2419999999997`, 1491.824}, {
            3050.984, 1493.691}, {3050.273, 1498.2930000000001`}, {3050.273, 
            1498.2930000000001`}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3050.086, 1498.2930000000001`}, {3050.086, 1498.2930000000001`}, {
            3046.59, 1494.367}, {3044.18, 1493.887}, {3042.414, 1493.531}, {
            3038.9300000000003`, 1495.199}, {3038.9300000000003`, 1495.199}, {
            3038.9300000000003`, 1495.199}, {3041.5550000000003`, 1498.105}, {
            3043.3360000000002`, 1498.668}, {3045.484, 1499.344}, {3050.086, 
            1498.2930000000001`}, {3050.086, 1498.2930000000001`}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3048.492, 1493.887}, {3049.8520000000003`, 1493.668}, {3051.281, 
            1492.066}, {3051.117, 1490.699}, {3050.934, 1489.148}, {3048.906, 
            1487.613}, {3047.367, 1487.887}, {3045.902, 1488.145}, {
            3044.6130000000003`, 1490.18}, {3044.9300000000003`, 1491.637}, {
            3045.23, 1493.008}, {3047.105, 1494.109}, {3048.492, 
            1493.887}}}]}, 
          {FaceForm[{RGBColor[1., 1., 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4nnvlx/rTl3u8LBKZN3xu9Mc0Pk+5p2OD7KW
OxxV2FCU8Wqaw9MLSrcrs5c7LJt9RMHg0zQH8Zvnvl8G8m//rMva822ag+6m
ue+XA/mVL9UMO/5A1P/MhKjf8H+aQ7vYzXPmGcvB9Hem6Q4u3TnPrYH2mcbt
8uwB8g051sjcSlruwAcyiHG6gwfQIXmxUPMYoPLBUPu+TMPgg90Xudyh0Jbr
uvI7TD7Y3XHLwf48/Q3qvgSofV+h/gfaf3qh67ZiIB/kvt/Jyx0eAcPD/RPE
vqgUqP/fT3P4s/LjpbNAPsg7wa+h9sHc/xiTDwChFsO8
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI1IGYCYs2Y/kOlgcsdPl3yTZrwY5oDOt/jYZXIu6jl
Drqb5r5XZ5juUPlSzdAjbrnDEYUNRRns0x1Ywvh0ixKWO9jc9+8V55nuELfL
k8cpabnDvPfLj3kLTQfrS0+C6F8uMd1BSv+uShuQL9/6OnCH7HSHdzX2pvMS
lzsE7ZBrzVae7lAFNP9E/HKHo0DzX6hNd4hKsb7fHwu1X3u6g/jNc9+Fge4B
uaNDB2IfU/hyh3axm+fKgfx4IP9Q8HIHjjUyUSlAfqEt1/XFAcsdMia+rbHX
hJrvCzUPaL400D1sXssdrEHuV5rusKdksgSLO9R90hD3L3eG+ldsusOWE2X7
5J2WO7h05zz/LTzdoRSoXMweEl4C/Jh8cHi4QN3Hgclf7Lrt817v5Q6mQIke
MWh4BUDdJwUNryBIeJ4GugdEc4cudwBGyzp3WYh69XBo+ALlQe7aHQE1Xwrq
f2B4gfzVIj7doQIUbrD4FJnuINx84FRiFMS/FvwQ/sMwaHzwTnfQA6p7HgKJ
jwwuaPgA3cMAAmwQ/14Dul+VrXGq879pGHwABeEKMQ==
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI1IGYC4j8rP17qtVnuMO/98mPewtMd0Plxuzx5mDyW
OyybfUTBQHm6A0jvAZ/lDhkT39bY6053kNa/q+Lmv9zB+r5/73Sj6Q5RKdb3
zwctdwjaIdf62ny6w5YTZfvkg6Hq7ac7nP8e/Dg1GKredboDSxif7qbA5Q4/
gh8vlfad7sAAAkDzQFRDAMQ9vr7LwebMD5ruUGjLdf2x13KIPYFQ9Z4I9cLN
B04lui53cOnOef4baJ5mTP+hr04Q+8TdoeodoO5xmu7ACrT/kzXUfGuovAnE
PAY93Hxw+Chh8i/7JglEWC0Hu3OxznQHI441MrNsIf6bbQiRvwG03xQYsD1m
0x1AwTTRGaL/tC3EvAZ3qH0O0x2SBSIsv3hA/Qvkv1Iz5MjxXu5Q+RLIcILa
74MIX7A2X2h8WU6HhIM7VL/JdIetIH+6QtUbTHcwBLovCmg/2F3aEPu2AN2n
ytY41VkDEj9GdssdQMpSVCDqbwHD62GVyLrjCtMdxG+e+y5svtxhRp5Q8wFJ
TD4A7GPwNQ==
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGZigAKT5Q79h75qxFhMd0DnL3Ld9tnWabnDZd8k
gQhPqLzbcoeMiW9r7MOnOwg3HziV6A6Vj5nuUGjLdV3ZY7nDOveHVSLJ0x22
nCjbJw+UB2lryJjuIARUrwjUH5Viff987nSHee+XH+t2hth3p2i6A8htBxyW
O8zIA6osnu7gATTmne1yB91Nc98vL5nukCwQYfnFarlD0A651tcF0x18zDsd
H1hAzGcAmufSnfPc2my5w56SyRIsGQj/gO2PJMwHmb/FcrnDp0tADwH1ewPN
T7CF+jdtusOy2UcUCuyXO9z+WZdlkwrx72Kge+VbXwdaxEPVO0DdEz3d4V2N
vakckN8udvPc97DpDtL6d1WOAc1LAtkTArHfwQaqPmi6QwdQ3XZLqHt8Ee4D
+V/dDZMPAHC9ouo=
            "]]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3008.062, 1459.125}, {3008.062, 1459.125}, {3013.137, 1456.758}, {
            3015.3750000000005`, 1457.812}, {3016.414, 1458.301}, {3017.527, 
            1459.7620000000002`}, {3017.062, 1460.812}, {3016.727, 
            1461.574}, {3015.4570000000003`, 1461.4180000000001`}, {3014.625, 
            1461.375}, {3012.3160000000003`, 1461.254}, {3008.062, 
            1459.125}, {3008.062, 1459.125}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4mcXlG5bnlruMCNPqPlA53SHee+XHzt9ZrlD
VIr1/fPt0x0WuW77/Pf8cod17g+rRDqmO7SL3TxXfmk5hO6a7rBs9hGFD1eW
O1z2TRK40QPRz319ucOWE2X75k+c7iDcfODUw+tQ+WnTHXQ3zX2//MZysL4N
s6c77JBrfR0I5H+65Js0YeF0hwmHvmrIANWbxu3y5FkG1X8VYv+UVdMd/qz8
eKn38nIHeaA2i3XTHYw41shIXYS6f/10h70lkyWOnIPKb4S6/zTUPxumO9xY
XGB76iTUfqB+5+6c59XHlzu4gOg10x00Y/oPlR5d7pAx8W2N/YrpYHfPOLLc
4fRC123Fi6c7JAtEWG45vNyh8qWaYce86Q6v1Aw53sD4M6Y7gJzNBNSvytY4
9fDk6Q57gO5hObbcAejMqJR+SPh9Pw41r3u6A3r4AwCQQNKK
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3046.6479999999997`, 1509.207}, {3047.5510000000004`, 1508.984}, {
            3048.8050000000003`, 1509.711}, {3049.059, 1510.605}, {
            3049.3120000000004`, 1511.508}, {3048.637, 1512.836}, {3047.73, 
            1513.0819999999999`}, {3046.773, 1513.344}, {3045.414, 
            1512.496}, {3045.1879999999996`, 1511.527}, {3044.98, 1510.637}, {
            3045.758, 1509.426}, {3046.6479999999997`, 1509.207}}},
            CurveClosed->{1}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3046.414, 1527.281}, {3047.562, 1527.008}, {3049.176, 1528.047}, {
            3049.414, 1529.277}, {3049.6130000000003`, 1530.305}, {
            3048.6879999999996`, 1531.633}, {3047.727, 1531.871}, {3046.609, 
            1532.145}, {3045.004, 1531.258}, {3044.727, 1530.074}, {
            3044.4770000000003`, 1529.}, {3045.398, 1527.523}, {3046.414, 
            1527.281}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3042.629, 1531.984}, {3044.008, 1531.621}, {3045.934, 1532.996}, {
            3046.219, 1534.617}, {3046.4610000000002`, 1535.977}, {
            3045.3520000000003`, 1537.73}, {3044.199, 1538.039}, {
            3042.8630000000003`, 1538.402}, {3040.9410000000003`, 1537.234}, {
            3040.609, 1535.672}, {3040.309, 1534.254}, {3041.414, 1532.301}, {
            3042.629, 1531.984}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3038.445, 1537.3319999999999`}, {3040.094, 1536.945}, {3042.402, 
            1538.402}, {3042.7459999999996`, 1540.125}, {3043.0310000000004`, 
            1541.566}, {3041.707, 1543.426}, {3040.324, 1543.754}, {3038.723, 
            1544.141}, {3036.422, 1542.898}, {3036.023, 1541.242}, {
            3035.6639999999998`, 1539.738}, {3036.988, 1537.668}, {3038.445, 
            1537.3319999999999`}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3034.8910000000005`, 1543.414}, {3036.3590000000004`, 1543.086}, {
            3038.414, 1544.336}, {3038.719, 1545.809}, {3038.9730000000004`, 
            1547.047}, {3037.793, 1548.637}, {3036.566, 1548.922}, {3035.137, 
            1549.25}, {3033.09, 1548.188}, {3032.738, 1546.766}, {3032.418, 
            1545.477}, {3033.594, 1543.707}, {3034.8910000000005`, 
            1543.414}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3031.9770000000003`, 1549.496}, {3033.125, 1549.238}, {3034.738, 
            1550.219}, {3034.9770000000003`, 1551.371}, {3035.176, 1552.34}, {
            3034.25, 1553.586}, {3033.2889999999998`, 1553.809}, {3032.172, 
            1554.066}, {3030.566, 1553.234}, {3030.2889999999998`, 
            1552.121}, {3030.039, 1551.113}, {3030.9610000000002`, 
            1549.727}, {3031.9770000000003`, 1549.496}}}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3105., 
            1425.75}, {3112.5, 1425.75}, {3112.5, 1424.25}, {3105., 1424.25}}},
            CurveClosed->{1}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4j8rP146u325Q7vYzXPf5093EG4+cCpx13KH
PSWTJVjmTXfYIdf6euLe5Q7z3i8/5g3kg9TzHlju8FLNkGPNgukOUvp3VdoO
LXcwjdvlybMYon/hkeUO4kDjLi+f7qAZ03+o9ChUfu10B5funOfWx5Y7HFXY
UPRi43SH89+DHz8Fyj+sEll3fPt0h2WzjyhsAOrPmPi2xn4PVP9hqPyB6Q6F
tlzXlQ8udwgCOiz7CFT9vuUOpxe6bvt8dLoD0FUyUXug8seh7t8J9Q+QDzTV
NA7oX5CyJ0D9O4HygluXQ8w5NN3h+uICW67NEPOK900H+1Nn03IH3U1z3y/f
CZH32rjc4fbPuqw9W6Y7AIOQoQHGXzfd4bJvksAMoHqQP3+vhPKB5lnf9++d
vnQ6OBy7t0LDbyEkPJHDHwBKF9KY
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3037.438, 1514.758}, {3038.34, 1514.535}, {3039.594, 1515.266}, {
            3039.848, 1516.16}, {3040.105, 1517.059}, {3039.426, 1518.387}, {
            3038.523, 1518.633}, {3037.562, 1518.895}, {3036.207, 1518.047}, {
            3035.9770000000003`, 1517.078}, {3035.77, 1516.191}, {
            3036.5510000000004`, 1514.977}, {3037.438, 1514.758}}},
            CurveClosed->{1}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4j8rP146u2K5Q7vYzXPfd013EG4+cCpx9XKH
PSWTJVh2TnfYIdf6euK65Q7z3i8/5g3kg9Tzblzu8FLNkGPN7ukOUvp3Vdo2
L3cwjdvlybMPon/h1uUO4kDjLh+a7qAZ03+odBtU/sR0B5funOfW25c7HFXY
UPTizHSH89+DHz8Fyj+sEll3/NJ0h2WzjyhsAOrPmPi2xv46VP8WqPzt6Q6F
tlzXlTctdwgCOiz7PlT9+uUOpxe6bvv8YLoD0FUyUWuh8o+g7l8F9Q+QDzTV
NA7oX5CyJ0D9O4HygsuWQ8y5O93h+uICW64lEPOKb04H+1Nn8XIH3U1z3y+/
ApH3WrTc4fbPuqw956c7AIOQoQHGPznd4bJvksAMoHqQP38fgfKB5lnf9++d
fmA6OBy7l0HDbw8kPJHDHwAi8tPE
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3029.938, 1521.508}, {3030.84, 1521.285}, {3032.094, 1522.016}, {
            3032.348, 1522.91}, {3032.605, 1523.809}, {3031.926, 1525.137}, {
            3031.023, 1525.383}, {3030.062, 1525.645}, {3028.707, 1524.797}, {
            3028.4770000000003`, 1523.828}, {3028.27, 1522.941}, {
            3029.0510000000004`, 1521.727}, {3029.938, 1521.508}}},
            CurveClosed->{1}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYo+HVSJ6c5c7tIvdPPf99nSH+F2ePIfmL3fY
UzJZguXWdAfWMD7dT4uWO8x7v/yYN5APUp+3dLnDSzVDjjV3pjuc/x78+Ony
5Q6mcUCN96c7gCimVcsdxIHGXX483aEUaMy1VVD5l9MdJhz6qjFn9XKHowob
il68ne4grX9XxQ3IBxq77vjn6Q7RKdb3+YHqMya+rbH/AdW/Air/ZzrYXS3L
ljsE7ZBrzWaYAVG/ZLnD6YWu2z4zznB4dkHp9s6FUHnmGRD3z4P6B8hfDFS2
d85yB441MlFPgPpZgPJFs5Y7LJt9RGHDv+kO3TnPf2fOgJhX/Gs62N/d05c7
6G6a+3751+kOPUD5ldOWO9z+WZe158N0Bx/zTscHMP6r6ZBwBKp3ARn0FMoH
mmd93793+sPpDq+A4fZmFjT87kLCEzn8ASBQzdE=
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3024.125, 1529.758}, {3025.027, 1529.535}, {3026.281, 1530.266}, {
            3026.5350000000003`, 1531.16}, {3026.793, 1532.059}, {
            3026.1130000000003`, 1533.387}, {3025.2110000000002`, 1533.633}, {
            3024.25, 1533.895}, {3022.8950000000004`, 1533.047}, {
            3022.6639999999998`, 1532.078}, {3022.4570000000003`, 1531.191}, {
            3023.238, 1529.977}, {3024.125, 1529.758}}},
            CurveClosed->{1}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYo+HVSJ6U5Y7XPZNErjBOMMhfpcnz6Fpyx04
1shEPfk/3YE1jE/308zlDi/VDDl0GGY4gNTnzVnuYBq3y7OHaYbD+e/Bj5/O
W+4QtEOu9TXLDAegMA/TwuUOSQIRlls4ZziUTpZgubYQKs83w2HCoa8acxYt
dwAas+648AwHaf27Km5Avu6mue+XS85wiE6xvs8PVL/lRNk+eTmo/vlQeaUZ
DntKJku0zF3uMO/98mPealD1s5c7iN889/2y+gyHZxeUbu+cAZXXnAFx/1So
fzRmOCx23fZ57+TlDqpsjVMPA/WzAOWLJi53+HTJN2mCygyH7pznvzP7lzuI
Ac0LVpgBNqe7b7lDJTAAOqRnOPQA5Vf2Lnf4Efx46WyxGQ4+5p2OD2B8gRkO
7SCNQPX9QH/e4YbygeaB6HL2GQ6vgOH4ZiI0/Jgh4Ykc/gBvkL3l
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3019.625, 1539.227}, {3020.527, 1539.004}, {3021.781, 1539.734}, {
            3022.0350000000003`, 1540.629}, {3022.293, 1541.527}, {
            3021.6130000000003`, 1542.855}, {3020.7110000000002`, 
            1543.1019999999999`}, {3019.75, 1543.363}, {3018.3950000000004`, 
            1542.516}, {3018.1639999999998`, 1541.547}, {3017.9570000000003`, 
            1540.66}, {3018.738, 1539.445}, {3019.625, 1539.227}}},
            CurveClosed->{1}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4nc19qbzepc7yLe+DrTQnOHAEsanazRhuYMq
W+NUZ/UZDsLNB04lTl7uYBq3y7MHyAepvzd1uUPQDrnW10D1JZMlWMJmLHeY
9375MW8diP6iWcsd1rk/rBIxnOEgrX9XxW02VN5sBpjmnrPcQXfT3Pfq1jMc
tGL6D20Fyle+VDPkcJzhAHQSQwNQP5h2heqfCZX3muGQLBBh+WXacgcQd40v
VP2U5Q5JQHET/xkO3TnPf2tOgsoHQN3fD/UPkO8BdJYe0L+FtlzXlf0g8g+7
ljvwgRzkPcMBqEvmVgfEvC3uMxxcQAa2L3c4qrCh6IXTDAcjoLwUkA8Wt53h
EJVifd8fxjefAfZXOlD/7Z91WTbGUH7ncofLvkkCN/RmOPQf+qoR0w0NPy1I
eCKHPwA2rK0p
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3016.344, 1549.07}, {3017.2459999999996`, 1548.848}, {3018.5, 
            1549.578}, {3018.754, 1550.473}, {3019.012, 1551.371}, {
            3018.3320000000003`, 1552.699}, {3017.4300000000003`, 1552.945}, {
            3016.469, 1553.207}, {3015.1130000000003`, 1552.359}, {
            3014.8830000000003`, 1551.391}, {3014.676, 1550.504}, {
            3015.4570000000003`, 1549.289}, {3016.344, 1549.07}}},
            CurveClosed->{1}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4j8rP17y7VnuoLtp7nv1yhkOws0HTj3sW+7w
I/jxUunqGQ475VpfC05a7iB+89z3y1UzHEDqe6csdzi90HVbccUMB2n9uyps
05c7rHN/WCVSNsNBCKhfceZyh3nvlx/zLpzhoBnTf+jrTKh8zgwHl+6c57tn
LXeQb30daJE+w+H89+DHqUD+Zd8kgYjEGQ7LZh9RMACq9zHvdHwQA9U/HSof
McOh0Jbr+uKpyx2APMstIVD1k5c7vFIz5NAJnuFgyLFG5tYEqHwg1P0w/wTN
cHhXY296r3u5w+2fdVk2QP07gPITO5c78AEDID9shsP1xQW2Xe3LHV4CzVsT
NQNs7pq25Q7tYjfPlcfPcLgBlD/VutwBaE1USsoMBwYQaIPys2aA3SkB1A9y
p3I+lN+x3KESaGBH8QxwuHB3QcOvHBKeyOEPAPUAvho=
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3015.6879999999996`, 1563.523}, {3016.59, 1563.746}, {3017.844, 
            1563.016}, {3018.098, 1562.121}, {3018.3550000000005`, 
            1561.223}, {3017.676, 1559.895}, {3016.773, 1559.648}, {
            3015.8120000000004`, 1559.387}, {3014.4570000000003`, 1560.234}, {
            3014.227, 1561.203}, {3014.02, 1562.09}, {3014.8010000000004`, 
            1563.305}, {3015.6879999999996`, 1563.523}}},
            CurveClosed->{1}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{3013.586, 
            1575.227}, {3012.3010000000004`, 1573.996}, {3011.9730000000004`, 
            1571.664}, {3012.578, 1569.996}, {3013.043, 1568.711}, {3014.402, 
            1567.645}, {3015.7459999999996`, 1567.398}, {3017.398, 1567.09}, {
            3019.9410000000003`, 1567.449}, {3020.527, 1568.98}}}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{3015.8550000000005`, 
            1573.777}, {3015.07, 1573.312}, {3015.008, 1571.438}, {
            3015.7459999999996`, 1570.742}, {3016.3750000000005`, 1570.152}, {
            3017.8830000000003`, 1570.}, {3018.328, 1570.996}}},
            CurveClosed->{0}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3055.4892880399993`, 1512.4211930620002`}, {3053.8050350799995`, 
            1512.2966662140002`}, {3052.1567181600003`, 
            1510.7097718200002`}, {3051.5869205999993`, 1509.03823753}, {
            3051.148925759999, 1507.7542466880002`}, {3051.4584049200002`, 
            1506.06607125}, {3052.3287851200002`, 1505.0143897839994`}, {
            3053.4073461199996`, 1503.7147736059999`}, {3055.704442319999, 
            1502.3784547480004`}, {3057.0548081200004`, 
            1503.1831861540006`}}}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{3056.2664751999996`, 
            1509.8547448800002`}, {3055.4147836, 1510.0041831160006`}, {
            3054.23576528, 1508.5973219919997`}, {3054.3517931999995`, 
            1507.593047996}, {3054.45407856, 1506.7341024799996`}, {
            3055.4614998399993`, 1505.6553395199999`}, {3056.3876741999998`, 
            1506.135956162}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3033.195, 1506.676}, {3033.195, 1506.676}, {3036.8710000000005`, 
            1503.516}, {3037.516, 1501.285}, {3038.07, 1499.359}, {3036.867, 
            1495.301}, {3036.867, 1495.301}, {3036.867, 1495.301}, {
            3034.0510000000004`, 1498.27}, {3033.414, 1500.172}, {3032.727, 
            1502.223}, {3033.195, 1506.676}, {3033.195, 1506.676}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3033.027, 1506.723}, {3033.027, 1506.723}, {3028.918, 1503.945}, {
            3026.625, 1504.094}, {3024.9410000000003`, 1504.203}, {3022.199, 
            1506.621}, {3022.199, 1506.621}, {3022.199, 1506.621}, {3025.273, 
            1508.668}, {3027.02, 1508.75}, {3029.125, 1508.844}, {3033.027, 
            1506.723}, {3033.027, 1506.723}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3030.523, 1503.023}, {3031.699, 1502.48}, {3032.602, 1500.637}, {
            3032.125, 1499.406}, {3031.582, 1498.008}, {3029.3790000000004`, 
            1497.086}, {3028.0550000000003`, 1497.723}, {3026.793, 
            1498.3319999999999`}, {3026.121, 1500.543}, {3026.7619999999997`, 
            1501.816}, {3027.3630000000003`, 1503.016}, {3029.324, 
            1503.574}, {3030.523, 1503.023}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3019.793, 1519.8319999999999`}, {3019.793, 1519.8319999999999`}, {
            3022.645, 1515.859}, {3022.66, 1513.598}, {3022.672, 1511.645}, {
            3020.258, 1508.191}, {3020.258, 1508.191}, {3020.258, 1508.191}, {
            3018.23, 1511.754}, {3018.125, 1513.703}, {3018.016, 1515.809}, {
            3019.793, 1519.8319999999999`}, {3019.793, 
            1519.8319999999999`}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3019.6330000000003`, 1519.922}, {3019.6330000000003`, 1519.922}, {
            3014.605, 1518.477}, {3012.297, 1519.258}, {3010.602, 1519.828}, {
            3008.484, 1522.848}, {3008.484, 1522.848}, {3008.484, 1522.848}, {
            3012.234, 1523.902}, {3014.0510000000004`, 1523.488}, {3016.238, 
            1522.992}, {3019.6330000000003`, 1519.922}, {3019.6330000000003`, 
            1519.922}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3015.988, 1517.168}, {3017.0350000000003`, 1516.336}, {
            3017.4300000000003`, 1514.363}, {3016.582, 1513.348}, {3015.621, 
            1512.195}, {3013.094, 1511.949}, {3011.918, 1512.914}, {3010.797, 
            1513.8319999999999`}, {3010.7459999999996`, 
            1516.0819999999999`}, {3011.773, 1517.094}, {3012.7419999999997`, 
            1518.047}, {3014.914, 1518.02}, {3015.988, 1517.168}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3009.781, 1536.684}, {3009.781, 1536.684}, {3011.5350000000003`, 
            1532.262}, {3010.969, 1530.094}, {3010.484, 1528.227}, {3007.254, 
            1525.457}, {3007.254, 1525.457}, {3007.254, 1525.457}, {3006.195, 
            1529.309}, {3006.594, 1531.195}, {3007.027, 1533.23}, {3009.781, 
            1536.684}, {3009.781, 1536.684}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3009.6479999999997`, 1536.809}, {3009.6479999999997`, 1536.809}, {
            3004.402, 1536.535}, {3002.3550000000005`, 1537.789}, {
            3000.8550000000005`, 1538.711}, {2999.574, 1542.062}, {2999.574, 
            1542.062}, {2999.574, 1542.062}, {3003.484, 1542.242}, {3005.145, 
            1541.449}, {3007.141, 1540.488}, {3009.6479999999997`, 
            1536.809}, {3009.6479999999997`, 1536.809}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3005.406, 1534.98}, {3006.2110000000002`, 1533.953}, {3006.086, 
            1531.98}, {3005.004, 1531.195}, {3003.773, 1530.309}, {3001.258, 
            1530.629}, {3000.3630000000003`, 1531.809}, {2999.512, 
            1532.934}, {3000.039, 1535.098}, {3001.297, 1535.836}, {
            3002.4770000000003`, 1536.531}, {3004.582, 1536.027}, {3005.406, 
            1534.98}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3005.2419999999997`, 1554.508}, {3005.2419999999997`, 1554.508}, {
            3005.199, 1549.578}, {3003.848, 1547.645}, {3002.68, 1545.98}, {
            2998.602, 1544.359}, {2998.602, 1544.359}, {2998.602, 1544.359}, {
            2999.078, 1548.488}, {3000.1679999999997`, 1550.203}, {3001.348, 
            1552.051}, {3005.2419999999997`, 1554.508}, {3005.2419999999997`, 
            1554.508}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3005.1639999999998`, 1554.672}, {3005.1639999999998`, 1554.672}, {
            3000.1479999999997`, 1556.172}, {2998.7110000000002`, 1558.094}, {
            2997.656, 1559.5}, {2997.734, 1563.219}, {2997.734, 1563.219}, {
            2997.734, 1563.219}, {3001.465, 1562.078}, {3002.715, 1560.738}, {
            3004.219, 1559.125}, {3005.1639999999998`, 1554.672}, {
            3005.1639999999998`, 1554.672}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3000.496, 1554.312}, {3000.8590000000004`, 1553.031}, {2999.992, 
            1551.141}, {2998.68, 1550.738}, {2997.1910000000003`, 1550.285}, {
            2994.9570000000003`, 1551.449}, {2994.566, 1552.906}, {2994.195, 
            1554.297}, {2995.516, 1556.238}, {2996.9730000000004`, 
            1556.539}, {2998.348, 1556.82}, {3000.125, 1555.617}, {3000.496, 
            1554.312}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3006.156, 1573.559}, {3006.156, 1573.559}, {3004.6679999999997`, 
            1568.848}, {3002.8010000000004`, 1567.363}, {3001.1910000000003`, 
            1566.086}, {2996.8050000000003`, 1565.645}, {2996.8050000000003`, 
            1565.645}, {2996.8050000000003`, 1565.645}, {2998.4730000000004`, 
            1569.473}, {3000.023, 1570.816}, {3001.699, 1572.266}, {3006.156, 
            1573.559}, {3006.156, 1573.559}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3006.129, 1573.734}, {3006.129, 1573.734}, {3001.758, 1576.543}, {
            3000.945, 1578.773}, {3000.348, 1580.41}, {3001.516, 1583.953}, {
            3001.516, 1583.953}, {3001.516, 1583.953}, {3004.758, 1581.84}, {
            3005.562, 1580.219}, {3006.5350000000003`, 1578.262}, {3006.129, 
            1573.734}, {3006.129, 1573.734}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3001.547, 1574.664}, {3001.52, 1573.34}, {3000.129, 1571.766}, {
            2998.754, 1571.738}, {2997.1910000000003`, 1571.707}, {
            2995.3910000000005`, 1573.43}, {2995.449, 1574.934}, {2995.5, 
            1576.367}, {2997.3360000000002`, 1577.867}, {2998.82, 1577.758}, {
            3000.223, 1577.656}, {3001.574, 1576.016}, {3001.547, 
            1574.664}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3006.797, 1468.1599999999999`}, {3006.797, 1468.1599999999999`}, {
            3012.223, 1466.785}, {3014.223, 1468.242}, {3015.152, 
            1468.9180000000001`}, {3015.969, 1470.5620000000001`}, {3015.32, 
            1471.508}, {3014.844, 1472.191}, {3013.629, 1471.801}, {3012.82, 
            1471.602}, {3010.574, 1471.051}, {3006.797, 
            1468.1599999999999`}, {3006.797, 1468.1599999999999`}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3004.73, 1476.414}, {3004.73, 1476.414}, {3010.3050000000003`, 
            1475.891}, {3012.059, 1477.641}, {3012.8710000000005`, 
            1478.453}, {3013.426, 1480.203}, {3012.637, 1481.035}, {3012.062, 
            1481.641}, {3010.922, 1481.062}, {3010.152, 1480.742}, {3008.02, 
            1479.852}, {3004.73, 1476.414}, {3004.73, 1476.414}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3001.68, 1484.262}, {3001.68, 1484.262}, {3007.2459999999996`, 
            1484.863}, {3008.6130000000003`, 1486.926}, {3009.2459999999996`, 
            1487.883}, {3009.4410000000003`, 1489.711}, {3008.504, 
            1490.367}, {3007.82, 1490.844}, {3006.8160000000003`, 1490.055}, {
            3006.125, 1489.586}, {3004.215, 1488.285}, {3001.68, 1484.262}, {
            3001.68, 1484.262}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            2996.992, 1492.75}, {2996.992, 1492.75}, {3002.559, 1493.355}, {
            3003.926, 1495.418}, {3004.562, 1496.375}, {3004.758, 1498.199}, {
            3003.8160000000003`, 1498.859}, {3003.1330000000003`, 1499.336}, {
            3002.129, 1498.543}, {3001.4410000000003`, 1498.078}, {2999.527, 
            1496.777}, {2996.992, 1492.75}, {2996.992, 1492.75}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            2991.406, 1499.785}, {2991.406, 1499.785}, {2996.8160000000003`, 
            1501.215}, {2997.8590000000004`, 1503.461}, {2998.344, 1504.5}, {
            2998.2619999999997`, 1506.336}, {2997.234, 1506.848}, {2996.488, 
            1507.215}, {2995.6130000000003`, 1506.281}, {2995.004, 
            1505.715}, {2993.3050000000003`, 1504.145}, {2991.406, 
            1499.785}, {2991.406, 1499.785}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            2984.496, 1506.891}, {2984.496, 1506.891}, {2989.9100000000003`, 
            1508.32}, {2990.9530000000004`, 1510.566}, {2991.434, 1511.609}, {
            2991.3550000000005`, 1513.445}, {2990.324, 1513.953}, {2989.578, 
            1514.32}, {2988.707, 1513.391}, {2988.094, 1512.824}, {2986.398, 
            1511.25}, {2984.496, 1506.891}, {2984.496, 1506.891}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            2977.738, 1512.914}, {2977.738, 1512.914}, {2982.965, 1514.918}, {
            2983.7659999999996`, 1517.262}, {2984.1330000000003`, 1518.348}, {
            2983.8550000000005`, 1520.164}, {2982.777, 1520.559}, {2981.996, 
            1520.848}, {2981.227, 1519.824}, {2980.68, 1519.195}, {2979.16, 
            1517.453}, {2977.738, 1512.914}, {2977.738, 1512.914}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            2970.8550000000005`, 1517.516}, {2970.8550000000005`, 1517.516}, {
            2975.777, 1520.184}, {2976.2619999999997`, 1522.613}, {2976.484, 
            1523.738}, {2975.9730000000004`, 1525.5}, {2974.8520000000003`, 
            1525.754}, {2974.039, 1525.938}, {2973.4100000000003`, 
            1524.824}, {2972.949, 1524.129}, {2971.672, 1522.199}, {
            2970.8550000000005`, 1517.516}, {2970.8550000000005`, 
            1517.516}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3049.145, 1471.605}, {3049.145, 1471.605}, {3046.9570000000003`, 
            1475.91}, {3044.8710000000005`, 1476.4569999999999`}, {
            3043.7619999999997`, 1476.746}, {3041.969, 1476.414}, {3041.621, 
            1475.32}, {3041.3710000000005`, 1474.5230000000001`}, {3042.398, 
            1473.766}, {3043.082, 1473.285}, {3044.8010000000004`, 
            1472.086}, {3049.145, 1471.605}, {3049.145, 1471.605}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3050.988, 1471.648}, {3051.57, 1475.285}, {3051.867, 1476.207}, {
            3050.254, 1478.0819999999999`}, {3049.504, 1478.953}, {3047.797, 
            1479.633}, {3046.9100000000003`, 1478.906}, {3046.2659999999996`, 
            1478.379}, {3046.719, 1477.184}, {3047.02, 1476.406}, {
            3047.7659999999996`, 1474.48}, {3050.988, 1471.648}, {3050.988, 
            1471.648}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3049.9530000000004`, 1469.973}, {3049.9530000000004`, 1469.973}, {
            3045.2889999999998`, 1471.816}, {3043.3160000000003`, 
            1470.7730000000001`}, {3042.4770000000003`, 
            1470.3319999999999`}, {3041.676, 1469.137}, {3041.996, 
            1468.242}, {3042.277, 1467.461}, {3043.4610000000002`, 1467.25}, {
            3044.293, 1467.266}, {3046.3830000000003`, 1467.312}, {
            3049.9530000000004`, 1469.973}, {3049.9530000000004`, 
            1469.973}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3040.609, 1459.828}, {3040.609, 1459.828}, {3038.949, 1464.203}, {
            3036.988, 1464.812}, {3035.8950000000004`, 1465.156}, {3034.086, 
            1464.77}, {3033.7419999999997`, 1463.676}, {3033.488, 1462.879}, {
            3034.527, 1462.141}, {3035.199, 1461.645}, {3036.73, 1460.516}, {
            3040.609, 1459.828}, {3040.609, 1459.828}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3042.9730000000004`, 1459.652}, {3042.9730000000004`, 1459.652}, {
            3043.848, 1464.7150000000001`}, {3042.3710000000005`, 1466.438}, {
            3041.621, 1467.309}, {3039.914, 1467.988}, {3039.027, 
            1467.2620000000002`}, {3038.3830000000003`, 1466.734}, {
            3038.8550000000005`, 1465.547}, {3039.137, 1464.7620000000002`}, {
            3039.8550000000005`, 1462.758}, {3042.9730000000004`, 1459.652}, {
            3042.9730000000004`, 1459.652}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3041.504, 1458.0230000000001`}, {3041.504, 1458.0230000000001`}, {
            3037.2659999999996`, 1460.066}, {3035.434, 1459.133}, {
            3034.4100000000003`, 1458.613}, {3033.4100000000003`, 1457.051}, {
            3033.9410000000003`, 1456.031}, {3034.324, 1455.2930000000001`}, {
            3035.582, 1455.508}, {3036.4100000000003`, 1455.625}, {3038.27, 
            1455.883}, {3041.504, 1458.0230000000001`}, {3041.504, 
            1458.0230000000001`}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3033.3790000000004`, 1447.0620000000001`}, {3033.3790000000004`, 
            1447.0620000000001`}, {3031.637, 1451.699}, {3029.562, 
            1452.3519999999999`}, {3028.469, 1452.695}, {3026.66, 1452.309}, {
            3026.3160000000003`, 1451.2150000000001`}, {3026.066, 
            1450.4180000000001`}, {3027.1130000000003`, 1449.688}, {3027.773, 
            1449.18}, {3029.3590000000004`, 1447.9650000000001`}, {
            3033.3790000000004`, 1447.0620000000001`}, {3033.3790000000004`, 
            1447.0620000000001`}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3035.527, 1447.258}, {3035.527, 1447.258}, {3036.406, 1452.27}, {
            3034.945, 1453.977}, {3034.199, 1454.848}, {3032.488, 1455.527}, {
            3031.602, 1454.801}, {3030.9570000000003`, 1454.27}, {
            3031.4300000000003`, 1453.086}, {3031.7110000000002`, 1452.301}, {
            3032.426, 1450.316}, {3035.527, 1447.258}, {3035.527, 
            1447.258}}}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            3034.387, 1445.32}, {3034.387, 1445.32}, {3029.9610000000002`, 
            1447.629}, {3028.008, 1446.6680000000001`}, {3026.98, 1446.164}, {
            3025.988, 1444.586}, {3026.516, 1443.566}, {3026.898, 1442.828}, {
            3028.156, 1443.0700000000002`}, {3028.984, 1443.1599999999999`}, {
            3030.9100000000003`, 1443.371}, {3034.387, 1445.32}, {3034.387, 
            1445.32}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}}}, {{{2970.414, 1479.207}, {3035.59, 
            1437.344}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}}}, {{{3041.1879999999996`, 1413.746}, {
            2970., 1459.242}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}}}, {{{3026.652, 1423.078}, {3061.043, 
            1475.6680000000001`}}}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3093.75, 
            1425.75}, {3101.25, 1425.75}, {3101.25, 1424.25}, {3093.75, 
            1424.25}}},
            CurveClosed->{1}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3082.5, 
            1425.75}, {3090., 1425.75}, {3090., 1424.25}, {3082.5, 1424.25}}},
            CurveClosed->{1}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3071.25, 
            1425.75}, {3078.75, 1425.75}, {3078.75, 1424.25}, {3071.25, 
            1424.25}}},
            CurveClosed->{1}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3060., 
            1425.75}, {3067.5, 1425.75}, {3067.5, 1424.25}, {3060., 1424.25}}},
            CurveClosed->{1}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3056.25, 
            1424.25}, {3056.25, 1425.75}, {3053.773, 1425.75}, {
            3052.8750000000005`, 1424.25}}},
            CurveClosed->{1}]}, 
          {FaceForm[{RGBColor[1., 0.33333299999999993`, 0.33333299999999993`],
            Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{3153., 1421.25}, {
            3153., 1438.031}, {3166.0310000000004`, 1429.125}}}]}, 
          {Thickness[0.002], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3146.438, 
            1418.344}, {3146.25, 1444.312}, {3153.469, 1438.125}, {
            3153.1879999999996`, 1421.344}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3143.156, 1417.125}, {
            3143.062, 1447.219}, {3133.125, 1457.906}, {3132.094, 1458.938}, {
            3132.094, 1458.938}, {3130.8520000000003`, 1457.555}, {3130.219, 
            1456.875}, {3129.293, 1455.887}, {3127.406, 1453.941}, {3127.406, 
            1453.941}, {3127.5, 1416.188}, {3130.781, 1414.969}, {
            3133.3120000000004`, 1413.375}}}]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Butt"], 
           JoinForm[{"Miter", 4.}]}], FaceForm[{RGBColor[
           1., 1., 0.33333299999999993`], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxFkmtIk2EUx1cZSJRdiRGhLbr5YYYhmYh5CobdJKYRpRGiBaskdTqnS61t
zdXasjE4FbEPa8QeSUyGpJWFDMIwulAfuliIiERIRDeWVNB5d0704eHlvOc5
5/zP7/8YquvKjs7R6XSz6GyiM5uOv/bDr26HAu/yN0+TeoQl7uFRwykFheN7
A5cNCNdNt7/9cUhsRFhK+QnKG+Phz+vzMPWNtSm4lPix4V0BwqtofdG8DgXU
WnemGGHHhGNZ72kFrR/X5aabELQxISfPs+/m/kUeBWWDmZ4TZoTXVD/qlXkV
CBdIX7ZP5tUg1Cw6UPDdryBD+1HL+WMBBQ9X9VktLQi/u7+8eEJxlmfavMXF
eiN+qe9EyD7UlbD5OD94EWHu/gzjV5r3s3zyxrUrCCRjOuiWOMyxmfRagp/a
iqO8n4/2qSYd/TGeF6D9e0to0ZvSn/i8LKUbtxBsIX0aEr+xmY7jQ3GEiiOF
410tXJ+XQEjxt8v9EYSp56vHZupE7z2ENNIXr1ew+fDdnfMHeF6pVfT1CN9G
BdqnJCa8bMI/gqCVuewShzne3qqg/1Hzg6yryD780x9EOEfxAO031BTSnw1w
/xwn9x/xiv8uue8UP4nX4wgZ2c58drmFbzP3T7qE10mEZ8nyySmn+Gf5zzPl
XxWC9jaH2+U9HpR9HMJjH8KKje/XdNrFX3o/URp73yY8TcxnQZPw2Ypwh/xb
3Ch88xFy03tWvm1QsCf//LaqHIRK8mOhVfZbK340iJ5MhL8qwoYf
            "]]}, 
          {EdgeForm[{RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Opacity[1.], Thickness[0.002], CapForm["Round"], JoinForm[
           "Round"]}], FaceForm[{RGBColor[1., 1., 0.33333299999999993`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxNUl9I02EUXWUhPURUVNAflcqkmuVDRdjqlJlCjigtRCNqGYRUbsuNua1f
G2s1LWmS3QoZkaF8golIfwwrhhiJD0n50KLCpMD+EIEVEr10f373oYfv4XLu
Pd85594sR83+4zMsFss0flZ+0/m1twxkbggrjPkXdBUtI0zVDQr5o3sbr2cR
UnectqF6BWtP4sfqtYS0g3OsPYxnRL/t691E2HXp5HhfTIGpLKGdhJmMT1xQ
ONH0PbjdTnDZZr9eEVG4N+h9equMkMs84yGFiqr80eFKQt2X7LxiQ2HVrPC1
gipCMQvJDSgsevNisrSaMGJ3zC33y7yTMDxZ+rGtTiG9c2nFJ4/wM/41Oy+9
M0h4Unt18QDX5lwqQuhdzkIDGl/XQFiy/v3K3UEFdpGoiZOeO6v5M0j3Nxk6
j+c3CQtNHax34pXdEU9ov3/Dkk8rgV1uPByR/nZCAeOB88LXQfCzv8Go0rne
lfqc+O8jsLsttYb4eyj/BWSe+x+znzS/5M985u6SPqX72sSvV+HtH6N6622Z
9yiUbK7fcaSFcJnldpxR6Coa8zc3k96TW/bdSIj3/85551J4ltnt/hwltBY+
+GlziR+DsMfkcQqfl+Bj/TGX6D1FOMb6f7k1/sFBeMT5vWQ9F00hlXp/KZ/k
fYDgYTsUkPxKaGrPI4b8Xyh+Oe8bp+dFktsI8yPJoaOct3knMb63NYeu9N8P
yf3lyL3+d7//AGEpVeU=
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{3133.219, 
            1413.094}, {3137.219, 1414.375}, {3141.219, 1415.812}, {3145.125, 
            1417.406}, {3148.3360000000002`, 1418.7150000000001`}, {
            3151.5350000000003`, 1420.082}, {3154.594, 1421.719}, {3158.938, 
            1424.0430000000001`}, {3162.969, 1426.906}, {3167.156, 1429.5}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{0, 2, 0}}}, {{{3116.25, 1432.656}, {3116.25, 
            1456.441}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Round"], JoinForm["Round"],
            JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}}}, {{{3132.582, 1459.938}, {3132.582, 1459.938}, {
            3136.0310000000004`, 1454.945}, {3137.9530000000004`, 1452.605}, {
            3139.449, 1450.785}, {3141.094, 1449.098}, {3142.73, 1447.406}, {
            3144.141, 1445.945}, {3145.57, 1444.5}, {3147.078, 1443.141}, {
            3149.16, 1441.2620000000002`}, {3151.3120000000004`, 1439.453}, {
            3153.5550000000003`, 1437.77}, {3157.6479999999997`, 1434.699}, {
            3166.2619999999997`, 1429.1599999999999`}, {3166.2619999999997`, 
            1429.1599999999999`}}},
            CurveClosed->{0}]}, 
          {Thickness[0.002], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYCYrGb575P5lnh8CP48VJpw+kO6Px2oEC58Aqw
eLDedIckgQhLEyB/3vvlx04rTHeITrG+zy8MUT9bcroDAwjwQ/mCEL4D9wqH
T5d8kyYA+VFA9f7sK8DiDUA+SxifrhHLCgdVtsapzlLTHfaWTJY4wgQx31tx
usMrNUOONYwrHF6CaLXpDnNB4kD5LSfK9snrQvnMUPONpjvobpr7Pp0FIj/f
YrqDVkz/oa1A+8D+sJnuINR84JQiJ9R8p+kOe4D2sXCtcDi90HXbZ1eo+4D8
SpCFXtMdOoD6tgP5Lt05z3/7Tncw4lgjI8UNdU8gRH8LkA+yVz2SMP/Pyo+X
enmh7gGapwcUfw7k+5h3Oia4Twebq8MHNR/oPrC9QPn+Q1817thOdyi05bq+
mBdqnuV0B4+HVSJ5QH7QDrnWbDPM+EPnAwBQ/Nr+
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYC4naxm+e+a6xwMI3b5ckjP90Bnf9KzZDjjcEK
hxl5Qs0HZKc76G6a+345kH9UYUPRC77pDntKJku0APmVL4EK2ac7JAlEWJbo
rHBQZWuc6vxvmkMykL8FaB5I3ATI3wtUf0RlhUOhLdd1ZSD//Pfgx0sVoeaz
Q+w3V1jhcHqh67Zi/ukOW06U7ZOXX+Fw2Rdoguh0B5DbDwD5QTvkWrNloHyg
eo41MlEpStMdJhz6qnFHEeoezekO3TnPf2uqrnDImPi2xl53ukPpZAmWaWoQ
+xcbQ+wrV4fyzac7zHu//NhpIP8H0FnSNtMdQMboAN3PB/R4vsN0h3c19qbz
NCDmd7giwsvHvNPxgT9hvrT+XRU2bWj4Ac0zBDlcGxo+ltMdQMona0PdbzLd
YSvQ//Oh8lv0poPDQQLIB4XLfKD/WMKALtOC+P+JKmb8ofMBzLHRvg==
            "]], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYCYin9uyptHisc+HQ3zX3PP90Bnf/0gtLtyoAV
DgW2XNcX80130IzpP2QK5D+sEll3/P80h51yra8FgfygHUDG92kOcbs8eZh8
VjiAtKu/h/CdgObZ3PfvFQfyQcoCXVY47CmZLMEC5CcJRFiaOELN/zHNQRpo
/zH7FQ6XfYEyDNMdPEAW2a1wuP2zLsuGbbrDn5UfL/kC5aNSrO/780L5Disc
VNkapzoLT3foznn+O9MR6h7J6Q4dYjfPbQfaVwg0X1luOoR2W+FQ+VLNsENl
Otg+NncoXwNiXx6Q3w7U911nusMzoP93AvkgbrDhdAegMg4doH/EgfzL5tMd
Frlu+/wXKM8AAq6E+SCqwQvqH+PpDnrAcHoO5FuDwkcL6j5vqPtVIO7RA/LX
uT+smiI/3eH89+DHS70g5jVIQcxz8IL4/7AYZvyh8wF81dOm
            "]]}, 
          {RGBColor[
           0.33333299999999993`, 0.33333299999999993`, 0.6666669999999999], 
           Thickness[0.002], Opacity[1.], CapForm["Butt"], 
           JoinForm[{"Miter", 4.}], FaceForm[RGBColor[0., 0., 0.]], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{2970., 1597.5}, {2970.,
             1327.5}, {3172.5, 1327.5}}},
            CurveClosed->{0}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{2992.5, 1687.5}, {
            3195., 1687.5}, {3195., 1417.5}}},
            CurveClosed->{0}]}},
         ImagePadding->{{0., 1.}, {1., 0.}},
         PlotRange->{{2957.421875, 3211.328125}, {1322.625, 1692.375}},
         PlotRangePadding->Automatic], {0.5, 0.75}, Automatic, 0.95], 
       {GrayLevel[0], InsetBox[
         StyleBox["\<\"J\"\>",
          StripOnInput->False,
          FontFamily->"Arial",
          FontSize->Scaled[0.15]], {0.1, 1.4}], InsetBox[
         StyleBox[
          RotationBox["\<\"J\"\>",
           BoxRotation->3.141592653589793],
          StripOnInput->False,
          FontFamily->"Arial",
          FontSize->Scaled[0.15]], {0.9, 0.1}], InsetBox[
         GraphicsBox[
          {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
            "]]},
          ImageSize->{21.381713338743793`, Automatic}], {0.1, 1.25}, 
         Automatic, Scaled[0.1]], InsetBox[
         GraphicsBox[GeometricTransformationBox[
           {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
             "]]}, {{{-1, 0}, {0, -1}}, {0, 0}}]], {0.9, 0.25}, Automatic, 
         Scaled[0.1]], InsetBox[
         GraphicsBox[GeometricTransformationBox[
           {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
             "]]}, {{{-1, 0}, {0, -1}}, {0, 0}}]], {0.75, 0.22}, Automatic, 
         Scaled[0.15]], InsetBox[
         GraphicsBox[
          {FaceForm[{RGBColor[0., 0., 0.], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGZigICGqcsdwIzOmRB6OpRfC+XPhfLjIfyG5ah8
hq1o/N1Qfjkafyoaf9VMB6HmA6cUty93uOybJHBjO9T8zVD5EzMdhIHyC9cv
d0gSiLA0uTnTweNhlci7lcsd1rk/rJryAqp+CVT9j5kOFS/VDDuA7p33fvmx
09yzIOJ9UHlDwvx2sZvnyutQ9TeUI8zfKdf6WrAIYf/bGnvTuByE+8DqMxDu
fweUv5eC6j+GRIT/UfhT0fiw8EtHC/8StPCuR+O3osZfQxta/HZA+T1ofHT5
NjT9eWj8DDT7wqDyzVC+C5r7lLHz4eZpQvlTUfnw9KeMnd8wA82+6WjumYrq
Xjgf6h+GKaj+hfM70fg9aPqB8gBmfsMI
            "]]},
          ImageSize->{21.381713338743793`, Automatic}], {0.25, 1.27}, 
         Automatic, Scaled[0.15]]}}],
     BoxRotation->-0.39269908169872414`], {0.8999999999999999, 0}, Automatic, 
    2.5238795325112866`]}]], "Output",
 CellChangeTimes->{3.880114855980689*^9, 3.8801301082605953`*^9, 
  3.880212878671151*^9, 3.8802134336713953`*^9, 3.880213752214531*^9, 
  3.880214087060341*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"3a1d5a07-8bf0-46e9-acff-10d1b4b0e258"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get and Preprocess the Data", "Section",
 CellChangeTimes->{{3.822149240497149*^9, 3.822149241346787*^9}, {
  3.823044247962643*^9, 3.8230442498756857`*^9}, {3.8722429476383553`*^9, 
  3.872242954863106*^9}, {3.8731436903501444`*^9, 
  3.8731437049219522`*^9}},ExpressionUUID->"b3fd0f3c-1e3b-4be1-beb4-\
d9d9ffb6a74e"],

Cell[TextData[{
 "Now let\[CloseCurlyQuote]s load in the train and test datasets, which are \
stored on GitHub (a repository for storing and sharing data and software \
code).  We will use the ",
 ButtonBox["Import",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Import.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Import.html"],
 " function to read this as a ",
 ButtonBox["Dataset:",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Dataset.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Dataset.html"]
}], "Text",
 CellChangeTimes->{{3.823098801622941*^9, 3.823098870776417*^9}, 
   3.8801314996611705`*^9, {3.88364662473407*^9, 
   3.883646639435886*^9}},ExpressionUUID->"7072bdf1-536a-4fae-a541-\
c466db339ce4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"load", " ", "the", " ", "datasets", " ", "from", " ", "GitHub"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataset1", "=", 
     RowBox[{"Import", "[", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<https://raw.githubusercontent.com/elizabeththrall/MLforPChem/main/\
MLcyaninedye/Data/cyaninedye_dataset_part1.csv\>\"", ",", 
       "\[IndentingNewLine]", "\"\<Dataset\>\"", ",", 
       RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataset2", "=", 
     RowBox[{"Import", "[", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<https://raw.githubusercontent.com/elizabeththrall/MLforPChem/main/\
MLcyaninedye/Data/cyaninedye_dataset_part2.csv\>\"", ",", 
       "\[IndentingNewLine]", "\"\<Dataset\>\"", ",", 
       RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataset3", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<https://raw.githubusercontent.com/elizabeththrall/MLforPChem/main/\
MLcyaninedye/Data/cyaninedye_dataset_part3.csv\>\"", ",", "\"\<Dataset\>\"", 
       ",", 
       RowBox[{"HeaderLines", "->", "1"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Merge", " ", "the", " ", "datasets"}], ",", " ", 
     RowBox[{"delete", " ", "duplicates"}], ",", 
     RowBox[{"and", " ", "drop", " ", "features"}]}], "*)"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataset", " ", "=", " ", 
     RowBox[{
      RowBox[{"KeyDrop", "[", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Chi0n\>\"", ",", "\"\<Chi1n\>\"", ",", "\"\<Chi2n\>\"", ",", 
         "\"\<Chi3n\>\"", ",", "\"\<Chi4n\>\""}], "}"}], "]"}], "@", " ", 
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Join", "[", 
        RowBox[{"dataset1", ",", "dataset2", ",", "dataset3"}], "]"}]}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.822149244595151*^9, 3.822149320022242*^9}, {
   3.8221496348463507`*^9, 3.822149637746245*^9}, {3.822150104753182*^9, 
   3.822150107319346*^9}, {3.822395737575264*^9, 3.822395746801917*^9}, {
   3.8224026692393913`*^9, 3.822402672619112*^9}, {3.823018158898672*^9, 
   3.82301816591755*^9}, {3.823018215482975*^9, 3.8230182280027065`*^9}, {
   3.8230442717507553`*^9, 3.8230442721553526`*^9}, {3.823098884689198*^9, 
   3.823098932189242*^9}, 3.832673227364401*^9, {3.83267331434308*^9, 
   3.832673320233966*^9}, {3.8722429902702303`*^9, 3.872243080406748*^9}, {
   3.872243250402711*^9, 3.872243255703845*^9}, {3.8722439196267767`*^9, 
   3.87224396221485*^9}, {3.8727592132417793`*^9, 3.872759217968561*^9}, {
   3.872777211642462*^9, 3.8727772134297113`*^9}, {3.880129612594713*^9, 
   3.8801296290152006`*^9}, {3.8801296999866495`*^9, 3.880129771851968*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"2b6b6293-1ee3-4ad3-93bb-74804bbda6f9"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nfurl", 
   "\"Unable to retrieve data from \
\\!\\(\\*RowBox[{\\\"\\\\\\\"https://raw.githubusercontent.com/\
elizabeththrall/MLforPChem/main/MLcyaninedye/Data/cyaninedye_dataset_part1.\
csv\\\\\\\"\\\"}]\\). Consult Internal`$LastInternalFailure for potential \
information.\"", 2, 18, 1, 20716169269655768981, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8887576029589996`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"f93fd050-f7aa-4658-a6f1-1c503dbff59c"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nfurl", 
   "\"Unable to retrieve data from \
\\!\\(\\*RowBox[{\\\"\\\\\\\"https://raw.githubusercontent.com/\
elizabeththrall/MLforPChem/main/MLcyaninedye/Data/cyaninedye_dataset_part2.\
csv\\\\\\\"\\\"}]\\). Consult Internal`$LastInternalFailure for potential \
information.\"", 2, 19, 2, 20716169269655768981, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8887576030644145`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"0f5b37f0-44c7-4975-8bbf-8fc29c0988db"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nfurl", 
   "\"Unable to retrieve data from \
\\!\\(\\*RowBox[{\\\"\\\\\\\"https://raw.githubusercontent.com/\
elizabeththrall/MLforPChem/main/MLcyaninedye/Data/cyaninedye_dataset_part3.\
csv\\\\\\\"\\\"}]\\). Consult Internal`$LastInternalFailure for potential \
information.\"", 2, 20, 3, 20716169269655768981, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8887576030723505`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"fd8f60df-eca0-4ffb-9766-46f782722334"],

Cell[BoxData[
 TemplateBox[{
  "Join", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Join\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}]\\).\"", 2, 21, 4, 20716169269655768981, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8887576030809793`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"b6d51cfc-0ac1-4496-bbda-476522b1fe76"],

Cell[BoxData[
 TemplateBox[{
  "KeyDrop", "invrl", 
   "\"The argument \\!\\(\\*RowBox[{\\\"Join\\\", \\\"[\\\", \\\"$Failed\\\", \
\\\"]\\\"}]\\) is not a valid Association or a list of rules.\"", 2, 21, 5, 
   20716169269655768981, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888757603091954*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"13a6a9ed-588e-4b8d-9600-a16a523fcc72"]
}, Open  ]],

Cell[TextData[{
 "(Note that ",
 ButtonBox["Import",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Import.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Import.html"],
 " can be used to import data from ",
 StyleBox["anywhere",
  FontSlant->"Italic"],
 ",",
 " including files on your local computer; here we are reading it from an \
internet URL).\n\nLet\[CloseCurlyQuote]s see what these data look like. You \
can display the current contents of a variable by entering its name and \
executing the cell:"
}], "Text",
 CellChangeTimes->{
  3.823098943422268*^9, {3.8231133221984653`*^9, 3.82311334372296*^9}, {
   3.872774408950446*^9, 3.872774410724917*^9}, {3.883646655276353*^9, 
   3.883646657225412*^9}, 
   3.88367510353815*^9},ExpressionUUID->"a926d07b-5745-4550-84c5-\
0e4d0157879f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", " ", 
  RowBox[{"(*", 
   RowBox[{
   "display", " ", "the", " ", "contents", " ", "of", " ", "the", " ", 
    "variable", " ", "\"\<dataset\>"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.822150130291142*^9, 3.8221501360420017`*^9}, {
  3.822402675607505*^9, 3.822402675995195*^9}, {3.823018230007017*^9, 
  3.8230182387987022`*^9}, {3.8230989475066338`*^9, 3.82309896297338*^9}, {
  3.872243999124589*^9, 3.872244012345277*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"c7eceeb2-6a89-46ba-86ff-e4809b7035cb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "SMILES" -> "CCN1C(=Cc2[n+](CC)c3ccccc3cc2)C=Cc2ccccc21", "InChIKey" -> 
        "AGJZCWVTGOVGBS-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        121.7298744, "MaxDistance" -> 13.50310487, "LongestPiChain" -> 12, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 529|>, <|
       "SMILES" -> "CCN1C(=CC=Cc2[n+](CC)c3ccccc3cc2)C=Cc2ccccc21", 
        "InChIKey" -> "HQCBCYUEDZNVBO-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        324.7678311, "MaxDistance" -> 16.75756006, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 626|>, <|
       "SMILES" -> "CCN1C(=CC=CC=Cc2[n+](CC)c3ccccc3cc2)C=Cc2ccccc21", 
        "InChIKey" -> "HUKKJPBJMKANKC-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        379.527, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        496.4350532, "MaxDistance" -> 17.84710609, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 736|>, <|
       "SMILES" -> "CCN1C=CC(=CC=Cc2cc[n+](CC)c3ccccc23)c2ccccc21", 
        "InChIKey" -> "TVRUNVZRBXNONE-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        589.6421858, "MaxDistance" -> 15.7348213, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 701|>, <|
       "SMILES" -> "CCN1c2ccccc2OC1=CC=Cc1[n+](CC)c2ccccc2o1", "InChIKey" -> 
        "VZUFSMBGWBLOCB-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        333.411, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        425.7622335, "MaxDistance" -> 13.99177534, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 512|>, <|
       "SMILES" -> "CCN1c2ccccc2OC1=CC=CC=Cc1[n+](CC)c2ccccc2o1", "InChIKey" -> 
        "VAGJCLDZLVQVPR-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        359.449, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        302.0248728, "MaxDistance" -> 17.84122912, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 609|>, <|
       "SMILES" -> "CCN1c2ccccc2OC1=CC=CC=CC=Cc1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "YFMAIXBXQGUOBW-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        385.487, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        437.0009605, "MaxDistance" -> 18.54675869, "LongestPiChain" -> 16, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 698|>, <|
       "SMILES" -> "CCN1c2ccccc2SC1=Cc1[n+](CC)c2ccccc2s1", "InChIKey" -> 
        "WCJHMNADZOKGGL-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.210526316, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        339.509, "DegreeOfUnsaturation" -> 11, "MinEllipsoidLength" -> 
        226.7898323, "MaxDistance" -> 13.32275443, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 418|>, <|
       "SMILES" -> "CCN1c2ccccc2SC1=CC=Cc1[n+](CC)c2ccccc2s1", "InChIKey" -> 
        "JGLWGLKNDHZFAP-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        365.547, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        215.2737154, "MaxDistance" -> 14.43050777, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 521|>, <|
       "SMILES" -> "CCN1c2ccccc2SC1=CC=CC=Cc1[n+](CC)c2ccccc2s1", "InChIKey" -> 
        "FYXWDSGGZAMYFZ-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        391.585, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        569.0426561, "MaxDistance" -> 16.72947487, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 615|>, <|
       "SMILES" -> "CCN1c2ccccc2SC1=CC=CC=CC=Cc1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "UMTQICYFVVKJFV-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        417.623, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1280.653595, "MaxDistance" -> 18.70203709, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 700|>, <|
       "SMILES" -> "CCN1C=C/C(=C/c2cc[n+](CC)c3ccccc23)c2ccccc21", "InChIKey" -> 
        "PBYSOAALDIVUSK-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        217.2983613, "MaxDistance" -> 13.15063336, "LongestPiChain" -> 10, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 610|>, <|
       "SMILES" -> "CCN1C=C/C(=C/C=C/c2[n+](CC)c3ccccc3o2)c2ccccc21", 
        "InChIKey" -> "COUGSHBDUFTYFC-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        343.45, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        671.4959959, "MaxDistance" -> 16.0185835, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 560|>, <|
       "SMILES" -> "CCN1C=C/C(=C\\c2[n+](CC)c3ccccc3cc2)c2ccccc21", 
        "InChIKey" -> "CJRNTVYQEXDVCB-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        263.4702018, "MaxDistance" -> 13.70930718, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 572|>, <|
       "SMILES" -> "CCN1C=C/C(=C\\C=C\\c2[n+](CC)c3ccccc3cc2)c2ccccc21", 
        "InChIKey" -> "ONKAXOHRKIYFDJ-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        319.2005747, "MaxDistance" -> 15.97139809, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 664|>, <|
       "SMILES" -> "CCN1C=C/C(=C\\C=C\\C=C\\c2[n+](CC)c3ccccc3o2)c2ccccc21", 
        "InChIKey" -> "QQWIIVKRRBJCBB-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        369.488, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        3395.371931, "MaxDistance" -> 18.18256685, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 662|>, <|
       "SMILES" -> "CCN1C=C/C(=C/C=C/C=C/c2cc[n+](CC)c3ccccc23)c2ccccc21", 
        "InChIKey" -> "MLENNECRNUHQQS-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        379.527, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        589.1816286, "MaxDistance" -> 15.75017387, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 794|>, <|
       "SMILES" -> "CCN1C=C/C(=C/C=C/C=C/C=C/c2[n+](CC)c3ccccc3s2)c2ccccc21", 
        "InChIKey" -> "TWHSTEAIMSNAOL-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        411.594, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        1700.161644, "MaxDistance" -> 19.51365626, "LongestPiChain" -> 16, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 556|>, <|
       "SMILES" -> "CCN1C=C/C(=C\\C=C\\c2cc[n+](CC)c3ccccc23)c2ccccc21", 
        "InChIKey" -> "TVRUNVZRBXNONE-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        461.4927822, "MaxDistance" -> 15.79330819, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 699|>, <|
       "SMILES" -> "CCN1C=C/C(=C\\C=C\\C=C\\c2[n+](CC)c3ccccc3s2)c2ccccc21", 
        "InChIKey" -> "LDIURJODNUMFCD-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        385.556, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1769.016392, "MaxDistance" -> 18.49107443, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 626|>, <|
       "SMILES" -> "CCN1C=C/C(=C/C=C/c2[n+](CC)c3ccccc3s2)c2ccccc21", 
        "InChIKey" -> "DJAQPUXEDANWNL-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        359.518, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        472.5612571, "MaxDistance" -> 16.07508899, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 542|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\c1cc[n+](CC)c2ccccc12", "InChIKey" -> 
        "CJRNTVYQEXDVCB-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        168.6859858, "MaxDistance" -> 14.37076957, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 566|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C\\c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "QUZOOPRJWZTRMY-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        343.45, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        679.9938519, "MaxDistance" -> 16.25694502, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 546|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C/c1[n+](CC)c2ccccc2cc1", "InChIKey" -> 
        "AGJZCWVTGOVGBS-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        121.7202097, "MaxDistance" -> 13.50299347, "LongestPiChain" -> 12, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 548|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C/C=C/c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "HQCBCYUEDZNVBO-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        596.1345603, "MaxDistance" -> 16.4089123, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 659|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C/C=C/C=C/c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "OOAUUXKHPBKQDP-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        369.488, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        825.7660212, "MaxDistance" -> 16.77695005, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 633|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C\\C=C\\c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "NNPJVUBHKCZPII-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        379.527, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        1332.210673, "MaxDistance" -> 18.25942826, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 776|>, <|
       "SMILES" -> 
        "CCN1c2ccccc2C=C/C1=C\\C=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "OKFVOTSYAZGOPA-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        411.594, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        1422.086024, "MaxDistance" -> 20.76883397, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 615|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C/C=C/c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "ONKAXOHRKIYFDJ-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        272.2664441, "MaxDistance" -> 14.68712012, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 664|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C/C=C/C=C/c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "ICQLMXQDTPECJU-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        385.556, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        935.3433719, "MaxDistance" -> 17.63814729, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 627|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "XTSHHMSLNDHACR-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        359.518, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        525.5979632, "MaxDistance" -> 16.41373395, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 540|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C\\c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "ONKAXOHRKIYFDJ-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        493.3616566, "MaxDistance" -> 16.85244301, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 664|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C/c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "HQCBCYUEDZNVBO-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        224.1183797, "MaxDistance" -> 14.67373253, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 634|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C/C=C/c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "HUKKJPBJMKANKC-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        379.527, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        703.6177306, "MaxDistance" -> 17.54168309, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 655|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C/C=C/C=C/c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "CKDJYLWILGWPSZ-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        395.526, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        769.0398073, "MaxDistance" -> 19.45937995, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 749|>, <|
       "SMILES" -> 
        "CCN1c2ccccc2C=C/C1=C\\C=C\\C=C\\C=C\\c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "OWYFZVWJTBJIIS-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.137931034, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        405.565, "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 
        2290.374458, "MaxDistance" -> 21.23861179, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 711|>, <|
       "SMILES" -> 
        "CCN1c2ccccc2C=C/C1=C\\C=C\\C=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "NDBQBHOHIWDEGK-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.137931034, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 7, "MolecularMass" -> 
        437.632, "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 
        4405.333836, "MaxDistance" -> 23.5477297, "LongestPiChain" -> 19, 
        "LinkerLength" -> 10, "MaxAbsorbanceWavelength" -> 880|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C/C=C/c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "NNPJVUBHKCZPII-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        379.527, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        433.6545883, "MaxDistance" -> 17.57606615, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 586|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C/C=C/C=C/c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "OKFVOTSYAZGOPA-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        411.594, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        308.6421789, "MaxDistance" -> 17.53088737, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 787|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "ICQLMXQDTPECJU-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        385.556, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        759.8374883, "MaxDistance" -> 18.44138751, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 618|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/c1cc[n+](CC)c2ccccc12", "InChIKey" -> 
        "FDTNKKIOSYITHD-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        317.412, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        228.1018353, "MaxDistance" -> 13.94501213, "LongestPiChain" -> 10, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 604|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/c1[n+](CC)c2ccccc2o1", "InChIKey" -> 
        "VZUFSMBGWBLOCB-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        333.411, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        312.0662072, "MaxDistance" -> 15.88288578, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 490|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C\\c1[n+](CC)c2ccccc2cc1", "InChIKey" -> 
        "RCVUTZHFPPLMTK-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        317.412, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        161.3957192, "MaxDistance" -> 13.0267547, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 500|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C\\C=C\\c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "QUZOOPRJWZTRMY-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        343.45, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        393.6375516, "MaxDistance" -> 15.67493394, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 446|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "VAGJCLDZLVQVPR-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        359.449, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        1819.50637, "MaxDistance" -> 17.78520625, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 546|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/C=C/c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "QQWIIVKRRBJCBB-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        369.488, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1171.64988, "MaxDistance" -> 18.90021943, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 598|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/C=C/C=C/c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "KKFSTMHKQKXIPU-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        401.555, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1472.484482, "MaxDistance" -> 20.72240089, "LongestPiChain" -> 16, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 680|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C\\C=C\\c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "COUGSHBDUFTYFC-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        343.45, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        488.3426121, "MaxDistance" -> 14.8474838, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 678|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "LPLCWEKDGKZACI-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        375.517, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        1475.141151, "MaxDistance" -> 17.94277396, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 573|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/c1[n+](CC)c2ccccc2s1", "InChIKey" -> 
        "CGMUVVDKGKQWHC-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        349.479, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        514.688406, "MaxDistance" -> 16.05677189, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 605|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/c1cc[n+](CC)c2ccccc12", "InChIKey" -> 
        "COUGSHBDUFTYFC-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        343.45, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        675.8295745, "MaxDistance" -> 16.4400458, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 508|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/C=C/c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "VAGJCLDZLVQVPR-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        359.449, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        461.8182132, "MaxDistance" -> 18.14697192, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 587|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C\\c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "QUZOOPRJWZTRMY-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        343.45, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        377.4624814, "MaxDistance" -> 14.50478508, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 606|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C\\C=C\\c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "OOAUUXKHPBKQDP-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        369.488, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1016.810057, "MaxDistance" -> 17.20857935, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 559|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "YFMAIXBXQGUOBW-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        385.487, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        813.334133, "MaxDistance" -> 19.65238052, "LongestPiChain" -> 16, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 630|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/C=C/C=C/c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "YGOJAHFWSNHIIB-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        395.526, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        720.0455626, "MaxDistance" -> 20.58238652, "LongestPiChain" -> 16, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 716|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/C=C/C=C/C=C/c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "ZMDVVNPXHYAVFU-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 7, "MolecularMass" -> 
        427.593, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        808.590566, "MaxDistance" -> 22.76297137, "LongestPiChain" -> 18, 
        "LinkerLength" -> 10, "MaxAbsorbanceWavelength" -> 720|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C\\C=C\\c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "QQWIIVKRRBJCBB-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        369.488, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1145.364141, "MaxDistance" -> 16.08591529, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 683|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "KKFSTMHKQKXIPU-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        401.555, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1477.259994, "MaxDistance" -> 19.63137023, "LongestPiChain" -> 16, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 655|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/C=C/c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "LPLCWEKDGKZACI-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        375.517, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        900.0075318, "MaxDistance" -> 18.52578052, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 724|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\c1cc[n+](CC)c2ccccc12", "InChIKey" -> 
        "SFTZBFQWPQDHFP-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        333.48, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        247.35545, "MaxDistance" -> 13.0088646, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 605|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "CGMUVVDKGKQWHC-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        349.479, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        585.6969158, "MaxDistance" -> 15.91065365, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 472|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C/c1[n+](CC)c2ccccc2cc1", "InChIKey" -> 
        "UJCNDPYFYMAVSQ-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        333.48, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        142.3248532, "MaxDistance" -> 13.83038591, "LongestPiChain" -> 12, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 505|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C/C=C/c1[n+](CC)c2ccccc2cc1", "InChIKey" -> 
        "XTSHHMSLNDHACR-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        359.518, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        382.3202999, "MaxDistance" -> 16.14987994, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 487|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C/C=C/C=C/c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "LPLCWEKDGKZACI-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        375.517, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        987.9028084, "MaxDistance" -> 18.45664156, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 560|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\C=C\\c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "LDIURJODNUMFCD-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        385.556, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        808.7723925, "MaxDistance" -> 17.61886309, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 618|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "UMTQICYFVVKJFV-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        417.623, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1598.659364, "MaxDistance" -> 20.44475565, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 627|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C/C=C/c1cc[n+](CC)c2ccccc12", "InChIKey" -> 
        "DJAQPUXEDANWNL-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        359.518, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        440.5535254, "MaxDistance" -> 16.55748826, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 716|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C/C=C/C=C/c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "FYXWDSGGZAMYFZ-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        391.585, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        765.5898332, "MaxDistance" -> 18.66408916, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 584|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "JGLWGLKNDHZFAP-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        365.547, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        338.3403723, "MaxDistance" -> 15.80045689, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 625|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "DJAQPUXEDANWNL-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        359.518, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        478.7754681, "MaxDistance" -> 16.41029375, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 519|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "LPLCWEKDGKZACI-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        375.517, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        1539.046994, "MaxDistance" -> 18.34256534, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 565|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C/c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "XTSHHMSLNDHACR-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        359.518, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        192.2760718, "MaxDistance" -> 14.7107037, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 605|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C/C=C/c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "ICQLMXQDTPECJU-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        385.556, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        334.1409869, "MaxDistance" -> 17.73823442, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 536|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C/C=C/C=C/c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "KKFSTMHKQKXIPU-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        401.555, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        596.8851213, "MaxDistance" -> 18.34978457, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 590|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\C=C\\C=C\\c1cc[n+](CC)c2ccccc12",
         "InChIKey" -> "TWHSTEAIMSNAOL-UHFFFAOYSA-N", "AromaticRingCount" -> 
        3, "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        411.594, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        2041.634457, "MaxDistance" -> 20.47113263, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 681|>, <|
       "SMILES" -> 
        "CCN1c2ccccc2S/C1=C\\C=C\\C=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "KBBBKHYFINZFTO-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 7, "MolecularMass" -> 
        443.661, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        3670.176886, "MaxDistance" -> 23.18466236, "LongestPiChain" -> 19, 
        "LinkerLength" -> 10, "MaxAbsorbanceWavelength" -> 631|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C/C=C/c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "LDIURJODNUMFCD-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        385.556, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        371.1149301, "MaxDistance" -> 18.06340994, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 801|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C/C=C/C=C/c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "UMTQICYFVVKJFV-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        417.623, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        415.6517676, "MaxDistance" -> 18.50268615, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 614|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "FYXWDSGGZAMYFZ-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        391.585, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        1412.980761, "MaxDistance" -> 18.463291, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 722|>, <|
       "SMILES" -> "CCN1C(=Cc2cc(C)nc(-c3ccccc3)[n+]2C)C=Cc2ccccc21", 
        "InChIKey" -> "UBRISJAVIYTNDW-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.166666667, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        354.477, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        232.7860488, "MaxDistance" -> 13.63071411, "LongestPiChain" -> 13, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 593|>, <|
       "SMILES" -> 
        "CC1=C/C(=C(/c2cc(C)c([O-])c(C(=O)[O-])c2)c2ccccc2S(=O)(=O)O)C=C(C(=O)\
[O-])C1=O", "InChIKey" -> "KXOWVZNVTQLQPD-XMHGGMMESA-K", "AromaticRingCount" -> 
        2, "HBondDonorCount" -> 1, "HBondAcceptorCount" -> 8, 
        "FractionCarbonSP3" -> 0.086956522, "HeteroatomCount" -> 10, 
        "HeterocycleCount" -> 0, "RotatableBondCount" -> 5, "MolecularMass" -> 
        467.431, "DegreeOfUnsaturation" -> 18, "MinEllipsoidLength" -> 
        97.29578328, "MaxDistance" -> 11.35793677, "LongestPiChain" -> 10, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 454|>, <|
       "SMILES" -> 
        "CC1=CC(=C(c2cc(C)c([O-])c(C(=O)[O-])c2)c2ccccc2S(=O)(=O)O)C=C(C(=O)[\
O-])C1=O", "InChIKey" -> "KXOWVZNVTQLQPD-UHFFFAOYSA-K", "AromaticRingCount" -> 
        2, "HBondDonorCount" -> 1, "HBondAcceptorCount" -> 8, 
        "FractionCarbonSP3" -> 0.086956522, "HeteroatomCount" -> 10, 
        "HeterocycleCount" -> 0, "RotatableBondCount" -> 5, "MolecularMass" -> 
        467.431, "DegreeOfUnsaturation" -> 18, "MinEllipsoidLength" -> 
        82.63668106, "MaxDistance" -> 11.27121876, "LongestPiChain" -> 10, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 419|>, <|
       "SMILES" -> "CCN1C(=Cc2ccc3ccccc3[n+]2CC)C=Cc2ccccc21", "InChIKey" -> 
        "AGJZCWVTGOVGBS-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        152.9461051, "MaxDistance" -> 12.88113187, "LongestPiChain" -> 12, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 542|>, <|
       "SMILES" -> 
        "CC1(C)C(=CC=CC=CC2=[N+](CCCCCC(=O)ON3C(=O)CCC3=O)c3ccc(S(=O)(=O)[O-])\
cc3C2(C)C)N(CCCCCC(=O)ON2C(=O)CCC2=O)c2ccc(S(=O)(=O)[O-])cc21", "InChIKey" -> 
        "MGIODCZGPVDROX-UHFFFAOYSA-M", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 15, 
        "FractionCarbonSP3" -> 0.444444444, "HeteroatomCount" -> 20, 
        "HeterocycleCount" -> 4, "RotatableBondCount" -> 19, "MolecularMass" -> 
        936.051, "DegreeOfUnsaturation" -> 23, "MinEllipsoidLength" -> 
        1291.784707, "MaxDistance" -> 25.02428821, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 574|>, <|
       "SMILES" -> 
        "C#CCN=C(O)CCCCCN1C(=CC=CC2=[N+](C)c3ccccc3C2(C)C)C(C)(C)c2ccccc21", 
        "InChIKey" -> "ZAEMCWBMKGHPLO-UHFFFAOYSA-O", "AromaticRingCount" -> 2,
         "HBondDonorCount" -> 1, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.393939394, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 9, "MolecularMass" -> 
        494.703, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        373.2533386, "MaxDistance" -> 17.24209718, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 528|>, <|
       "SMILES" -> 
        "C[N+]1=C(C=CC=C2N(CCCCC(O)=NCCOCCOCCNCCO[C@H]3OC(CO)[C@@H](O)[C@H](O)\
C3O)c3ccccc3C2(C)C)C(C)(C)c2ccccc21", "InChIKey" -> 
        "SSFADTFCQMBTSO-IHRPVSEJSA-O", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 6, "HBondAcceptorCount" -> 11, 
        "FractionCarbonSP3" -> 0.581395349, "HeteroatomCount" -> 13, 
        "HeterocycleCount" -> 3, "RotatableBondCount" -> 21, "MolecularMass" -> 
        779.996, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1600.506179, "MaxDistance" -> 27.76655595, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 544|>, <|
       "SMILES" -> 
        "CC1(C)C(=CC=CC2=[N+](CCCCCC(=O)ON3C(=O)CCC3=O)c3ccc(S(=O)(=O)[O-])\
cc3C2(C)C)N(CCCCCC(=O)ON2C(=O)CCC2=O)c2ccc(S(=O)(=O)[O-])cc21", "InChIKey" -> 
        "OHOQEZWSNFNUSY-UHFFFAOYSA-M", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 15, 
        "FractionCarbonSP3" -> 0.465116279, "HeteroatomCount" -> 20, 
        "HeterocycleCount" -> 4, "RotatableBondCount" -> 18, "MolecularMass" -> 
        910.013, "DegreeOfUnsaturation" -> 22, "MinEllipsoidLength" -> 
        400.3408426, "MaxDistance" -> 20.16401853, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 432|>, <|
       "SMILES" -> 
        "CC1(C)C(=CC=CC=CC2=[N+](CCCS(=O)(=O)[O-])c3ccc(S(=O)(=O)[O-])cc3C2(C)\
C)N(CCCCCC([O-])=NCCCCCCN2C(=O)C=CC2=O)c2ccc(S(=O)(=O)[O-])cc21", "InChIKey" -> 
        "ABCCZQUSYBNXBH-UHFFFAOYSA-K", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 14, 
        "FractionCarbonSP3" -> 0.454545455, "HeteroatomCount" -> 19, 
        "HeterocycleCount" -> 3, "RotatableBondCount" -> 22, "MolecularMass" -> 
        926.125, "DegreeOfUnsaturation" -> 22, "MinEllipsoidLength" -> 
        1293.84016, "MaxDistance" -> 26.26523601, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 558|>, <|
       "SMILES" -> "CCN1C=CC(=Cc2cc[n+](CC)c3ccccc23)c2ccccc21", "InChIKey" -> 
        "PBYSOAALDIVUSK-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        233.6739985, "MaxDistance" -> 13.75387538, "LongestPiChain" -> 10, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 641|>, <|
       "SMILES" -> "CC(C)N1C=CC(=Cc2ccc3ccccc3[n+]2C(C)C)c2ccccc21", 
        "InChIKey" -> "TYFOKKOWQOKKCH-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.24, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        355.505, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        182.8707552, "MaxDistance" -> 13.68971612, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 560|>, <|
       "SMILES" -> "CC[n+]1c(CC2C=C(C)N=C(c3ccccc3)N2C)ccc2ccccc12", 
        "InChIKey" -> "WNJQWMVHCPGIAR-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.25, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        356.493, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        241.9193572, "MaxDistance" -> 15.44763567, "LongestPiChain" -> 7, 
        "LinkerLength" -> 1, "MaxAbsorbanceWavelength" -> 382|>, <|
       "SMILES" -> 
        "CC1(C)C(=CC=CC=CC2=[N+](CCCCCC(=O)O)c3ccc(S(=O)(=O)[O-])cc3C2(C)C)N(\
CCCCCC(=O)[O-])c2ccc(S(=O)(=O)O)cc21", "InChIKey" -> 
        "KCJWQEQRJODNIT-UHFFFAOYSA-M", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 2, "HBondAcceptorCount" -> 9, 
        "FractionCarbonSP3" -> 0.432432432, "HeteroatomCount" -> 14, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 17, "MolecularMass" -> 
        741.905, "DegreeOfUnsaturation" -> 17, "MinEllipsoidLength" -> 
        916.9850448, "MaxDistance" -> 20.16225923, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 389|>, <|
       "SMILES" -> 
        "CN1C(=CC=CC=CC2=[N+](CCCCCC(=O)ON3C(=O)CCC3=O)c3ccc(S(=O)(=O)[O-])\
cc3C2(C)C)C(C)(C)c2cc(S(=O)(=O)[O-])ccc21", "InChIKey" -> 
        "QDXSFIRROAQGSO-UHFFFAOYSA-M", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 11, 
        "FractionCarbonSP3" -> 0.388888889, "HeteroatomCount" -> 15, 
        "HeterocycleCount" -> 3, "RotatableBondCount" -> 12, "MolecularMass" -> 
        738.861, "DegreeOfUnsaturation" -> 19, "MinEllipsoidLength" -> 
        590.077869, "MaxDistance" -> 21.66942534, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 532|>, <|
       "SMILES" -> "O=S(=O)(O)c1cc([O-])c(N=Nc2ccc3ccccc3c2O)c2ccccc12", 
        "InChIKey" -> "BRDGZOLJYALNOY-UHFFFAOYSA-M", "AromaticRingCount" -> 4,
         "HBondDonorCount" -> 2, "HBondAcceptorCount" -> 6, 
        "FractionCarbonSP3" -> 0, "HeteroatomCount" -> 8, "HeterocycleCount" -> 
        0, "RotatableBondCount" -> 3, "MolecularMass" -> 393.4, 
        "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 108.9952799, 
        "MaxDistance" -> 10.89445232, "LongestPiChain" -> 12, "LinkerLength" -> 
        3, "MaxAbsorbanceWavelength" -> 730|>, <|
       "SMILES" -> 
        "CCOc1ccc(Nc2ccc(C(=C3C=CC(=[N+](CC)Cc4cccc(S(=O)(=O)O)c4)C=C3C)c3ccc(\
N(CC)Cc4cccc(S(=O)(=O)O)c4)cc3C)cc2)cc1", "InChIKey" -> 
        "YVNQAIFQFWTPLQ-UHFFFAOYSA-O", "AromaticRingCount" -> 5, 
        "HBondDonorCount" -> 3, "HBondAcceptorCount" -> 7, 
        "FractionCarbonSP3" -> 0.212765957, "HeteroatomCount" -> 12, 
        "HeterocycleCount" -> 0, "RotatableBondCount" -> 15, "MolecularMass" -> 
        833.065, "DegreeOfUnsaturation" -> 24, "MinEllipsoidLength" -> 
        423.9197688, "MaxDistance" -> 24.84903544, "LongestPiChain" -> 15, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 539|>, <|
       "SMILES" -> "O=S(=O)(O)c1cc(O)c(N=Nc2c([O-])ccc3ccccc23)c2ccccc12", 
        "InChIKey" -> "ZMLWOOMWRCRLCH-UHFFFAOYSA-M", "AromaticRingCount" -> 4,
         "HBondDonorCount" -> 2, "HBondAcceptorCount" -> 6, 
        "FractionCarbonSP3" -> 0, "HeteroatomCount" -> 8, "HeterocycleCount" -> 
        0, "RotatableBondCount" -> 3, "MolecularMass" -> 393.4, 
        "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 476.6328474, 
        "MaxDistance" -> 13.23808021, "LongestPiChain" -> 11, "LinkerLength" -> 
        3, "MaxAbsorbanceWavelength" -> 787|>, <|
       "SMILES" -> "Cc1ccc(Nc2ccc([O-])c3c2C(=O)c2ccccc2C3=O)c(S(=O)(=O)O)c1",
         "InChIKey" -> "XXQVCGHGQCAKKA-UHFFFAOYSA-M", "AromaticRingCount" -> 
        3, "HBondDonorCount" -> 2, "HBondAcceptorCount" -> 6, 
        "FractionCarbonSP3" -> 0.047619048, "HeteroatomCount" -> 8, 
        "HeterocycleCount" -> 0, "RotatableBondCount" -> 3, "MolecularMass" -> 
        408.411, "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 
        101.1130018, "MaxDistance" -> 11.0084448, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 575|>, <|
       "SMILES" -> "CCN1C=CC(=Cc2ccc3ccccc3[n+]2CC)c2ccccc21", "InChIKey" -> 
        "CJRNTVYQEXDVCB-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        240.2525799, "MaxDistance" -> 13.69988583, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 593|>, <|
       "SMILES" -> 
        "O=S(=O)([O-])c1cc([O-])c2c(N=Nc3ccc(Nc4ccccc4)c4c(S(=O)(=O)O)cccc34)\
cc(S(=O)(=O)[O-])cc2c1", "InChIKey" -> "QFVHZQCOUORWEI-UHFFFAOYSA-K", 
        "AromaticRingCount" -> 5, "HBondDonorCount" -> 2, 
        "HBondAcceptorCount" -> 12, "FractionCarbonSP3" -> 0, 
        "HeteroatomCount" -> 16, "HeterocycleCount" -> 0, 
        "RotatableBondCount" -> 7, "MolecularMass" -> 626.626, 
        "DegreeOfUnsaturation" -> 22, "MinEllipsoidLength" -> 602.9866583, 
        "MaxDistance" -> 18.08963468, "LongestPiChain" -> 15, "LinkerLength" -> 
        3, "MaxAbsorbanceWavelength" -> 1393|>, <|
       "SMILES" -> "CCN1C(=CC=CC=Cc2sc3ccccc3[n+]2CC)Sc2ccccc21", "InChIKey" -> 
        "FYXWDSGGZAMYFZ-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        391.585, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        383.7194115, "MaxDistance" -> 16.84957989, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 600|>, <|
       "SMILES" -> "CC(C)CCN1C=CC(=Cc2cc[n+](CCC(C)C)c3ccccc23)c2ccccc21", 
        "InChIKey" -> "OPYVFVSPWOXGSM-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.344827586, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 7, "MolecularMass" -> 
        411.613, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        563.5079739, "MaxDistance" -> 17.95489426, "LongestPiChain" -> 10, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 633|>, <|
       "SMILES" -> "CCN1C(=CC(C)=Cc2sc3ccccc3[n+]2CC)Sc2ccccc21", "InChIKey" -> 
        "DGBHUSPLAMIWPQ-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.227272727, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        379.574, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        421.2541588, "MaxDistance" -> 15.54769416, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 569|>, <|
       "SMILES" -> "CCN1C(=CC=CC=CC=Cc2ccc3ccccc3[n+]2CC)C=Cc2ccccc21", 
        "InChIKey" -> "PCMCPHHEWAWVOE-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.137931034, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        405.565, "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 
        978.3872391, "MaxDistance" -> 20.55560255, "LongestPiChain" -> 18, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 813|>, <|
       "SMILES" -> 
        "CC[N+]1=C(C=CC=C2N(CCCCCC(=O)[O-])c3ccc(S(=O)(=O)[O-])cc3C2(C)C)C(C)(\
C)c2cc(S(=O)(=O)O)ccc21", "InChIKey" -> "YDNYBBRGPORVRT-UHFFFAOYSA-M", 
        "AromaticRingCount" -> 2, "HBondDonorCount" -> 1, 
        "HBondAcceptorCount" -> 8, "FractionCarbonSP3" -> 0.419354839, 
        "HeteroatomCount" -> 12, "HeterocycleCount" -> 2, 
        "RotatableBondCount" -> 11, "MolecularMass" -> 629.777, 
        "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 520.439465, 
        "MaxDistance" -> 19.59705059, "LongestPiChain" -> 14, "LinkerLength" -> 
        4, "MaxAbsorbanceWavelength" -> 506|>, <|
       "SMILES" -> 
        "CC1(C)C(=CC=CC2=[N+](CCCCCC(=O)[O-])c3ccc(S(=O)(=O)O)cc3C2(C)C)N(\
CCCCCC(=O)O)c2ccc(S(=O)(=O)[O-])cc21", "InChIKey" -> 
        "AYFNGAVPORGJOD-UHFFFAOYSA-M", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 2, "HBondAcceptorCount" -> 9, 
        "FractionCarbonSP3" -> 0.457142857, "HeteroatomCount" -> 14, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 16, "MolecularMass" -> 
        715.867, "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 
        1698.535741, "MaxDistance" -> 19.09128629, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 531|>, <|
       "SMILES" -> 
        "CCN1C(=CC=CC=CC2=[N+](CCCCCC(=O)ON3C(=O)CCC3=O)c3ccc(S(=O)(=O)[O-])\
cc3C2(C)C)C(C)(C)c2cc(S(=O)(=O)[O-])ccc21", "InChIKey" -> 
        "WXWLHDCCGVWTDZ-UHFFFAOYSA-M", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 11, 
        "FractionCarbonSP3" -> 0.405405405, "HeteroatomCount" -> 15, 
        "HeterocycleCount" -> 3, "RotatableBondCount" -> 13, "MolecularMass" -> 
        752.888, "DegreeOfUnsaturation" -> 19, "MinEllipsoidLength" -> 
        524.6561381, "MaxDistance" -> 21.26734865, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 488|>, <|
       "SMILES" -> 
        "CN(C)c1ccc(C(=C2C=CC(=[N+](C)C)C=C2)c2ccc(N(Cc3ccccc3)Cc3cccc(S(=O)(=\
O)O)c3)cc2)c(S(=O)(=O)O)c1", "InChIKey" -> "PCDMOSXRPCKDLJ-UHFFFAOYSA-O", 
        "AromaticRingCount" -> 4, "HBondDonorCount" -> 2, 
        "HBondAcceptorCount" -> 6, "FractionCarbonSP3" -> 0.162162162, 
        "HeteroatomCount" -> 11, "HeterocycleCount" -> 0, 
        "RotatableBondCount" -> 10, "MolecularMass" -> 684.86, 
        "DegreeOfUnsaturation" -> 20, "MinEllipsoidLength" -> 697.6015914, 
        "MaxDistance" -> 18.24367261, "LongestPiChain" -> 10, "LinkerLength" -> 
        2, "MaxAbsorbanceWavelength" -> 554|>, <|
       "SMILES" -> 
        "CN(C)c1ccc(C(=C2C=CC(=[N+](C)C)C=C2)c2ccc(N(C)Cc3cccc(S(=O)(=O)O)c3)\
cc2)cc1S(=O)(=O)O", "InChIKey" -> "DCTXQQVUQIODBO-UHFFFAOYSA-O", 
        "AromaticRingCount" -> 3, "HBondDonorCount" -> 2, 
        "HBondAcceptorCount" -> 6, "FractionCarbonSP3" -> 0.193548387, 
        "HeteroatomCount" -> 11, "HeterocycleCount" -> 0, 
        "RotatableBondCount" -> 8, "MolecularMass" -> 608.762, 
        "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 456.2991787, 
        "MaxDistance" -> 18.55364897, "LongestPiChain" -> 10, "LinkerLength" -> 
        2, "MaxAbsorbanceWavelength" -> 516|>, <|
       "SMILES" -> 
        "CC1(C)C(=CC=CC2=[N+](CCCCCC(=O)O)c3ccc(S(=O)(=O)O)cc3C2(C)C)N(CCCCCC(\
=O)O)c2ccc(S(=O)(=O)O)cc21", "InChIKey" -> "AYFNGAVPORGJOD-UHFFFAOYSA-O", 
        "AromaticRingCount" -> 2, "HBondDonorCount" -> 4, 
        "HBondAcceptorCount" -> 7, "FractionCarbonSP3" -> 0.457142857, 
        "HeteroatomCount" -> 14, "HeterocycleCount" -> 2, 
        "RotatableBondCount" -> 16, "MolecularMass" -> 717.883, 
        "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 779.480227, 
        "MaxDistance" -> 20.89949723, "LongestPiChain" -> 14, "LinkerLength" -> 
        4, "MaxAbsorbanceWavelength" -> 536|>, <|
       "SMILES" -> "CN1C(=CC=Cc2[o+]c3ccccc3n2C)Oc2ccccc21", "InChIKey" -> 
        "XLKQLIAYDLMVLG-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.105263158, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 2, "MolecularMass" -> 
        305.357, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        306.0678397, "MaxDistance" -> 14.6591075, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 521|>, <|
       "SMILES" -> "Cc1cc(C=Cc2ccc3cc(N(C)C)ccc3[n+]2C)c(C)n1-c1ccccc1", 
        "InChIKey" -> "QMHSXPLYMTVAMK-UHFFFAOYSA-N", "AromaticRingCount" -> 4,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.192307692, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        382.531, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        178.5212501, "MaxDistance" -> 12.12650639, "LongestPiChain" -> 15, 
        "LinkerLength" -> 3, "MaxAbsorbanceWavelength" -> 412|>, <|
       "SMILES" -> "CCN1C(=CC=Cc2ccc3ccccc3[n+]2CC)Oc2ccccc21", "InChIKey" -> 
        "QUZOOPRJWZTRMY-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        343.45, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        451.0464647, "MaxDistance" -> 14.60792652, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 543|>, <|
       "SMILES" -> 
        "CC1=NN(c2ccc(S(=O)(=O)[O-])cc2)C(=O)C1N=Nc1ccc(C)c(S(=O)(=O)\
Nc2ccccc2)c1", "InChIKey" -> "DNNYNDQWWWDTPP-UHFFFAOYSA-M", 
        "AromaticRingCount" -> 3, "HBondDonorCount" -> 1, 
        "HBondAcceptorCount" -> 9, "FractionCarbonSP3" -> 0.130434783, 
        "HeteroatomCount" -> 13, "HeterocycleCount" -> 1, 
        "RotatableBondCount" -> 7, "MolecularMass" -> 526.576, 
        "DegreeOfUnsaturation" -> 17, "MinEllipsoidLength" -> 524.1669209, 
        "MaxDistance" -> 18.65279047, "LongestPiChain" -> 6, "LinkerLength" -> 
        2, "MaxAbsorbanceWavelength" -> 1585|>, <|
       "SMILES" -> "Nc1ccc([O-])c2c1C(=O)c1c(O)c(S(=O)(=O)O)cc(N)c1C2=O", 
        "InChIKey" -> "SPHQXPPVJCWUGX-UHFFFAOYSA-M", "AromaticRingCount" -> 2,
         "HBondDonorCount" -> 4, "HBondAcceptorCount" -> 8, 
        "FractionCarbonSP3" -> 0, "HeteroatomCount" -> 10, "HeterocycleCount" -> 
        0, "RotatableBondCount" -> 1, "MolecularMass" -> 349.3, 
        "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 246.4193085, 
        "MaxDistance" -> 11.39393467, "LongestPiChain" -> 7, "LinkerLength" -> 
        1, "MaxAbsorbanceWavelength" -> 592|>, <|
       "SMILES" -> "CCN1C=CC(=Cc2sc3ccccc3[n+]2CC)c2ccccc21", "InChIKey" -> 
        "SFTZBFQWPQDHFP-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        333.48, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        238.3608345, "MaxDistance" -> 13.42604877, "LongestPiChain" -> 10, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 591|>, <|
       "SMILES" -> 
        "CC1=C/C(=C(\\c2cc(C)c([O-])c(C(=O)[O-])c2)c2ccccc2S(=O)(=O)O)C=C(C(=\
O)[O-])C1=O", "InChIKey" -> "KXOWVZNVTQLQPD-RGEXLXHISA-K", 
        "AromaticRingCount" -> 2, "HBondDonorCount" -> 1, 
        "HBondAcceptorCount" -> 8, "FractionCarbonSP3" -> 0.086956522, 
        "HeteroatomCount" -> 10, "HeterocycleCount" -> 0, 
        "RotatableBondCount" -> 5, "MolecularMass" -> 467.431, 
        "DegreeOfUnsaturation" -> 18, "MinEllipsoidLength" -> 114.5360135, 
        "MaxDistance" -> 11.21048139, "LongestPiChain" -> 10, "LinkerLength" -> 
        2, "MaxAbsorbanceWavelength" -> 429|>, <|
       "SMILES" -> "CCN1C(=Cc2sc3ccccc3[n+]2C)C=Cc2ccccc21", "InChIKey" -> 
        "FSOAORRRECZDNM-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.15, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 2, "MolecularMass" -> 
        319.453, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        187.3228258, "MaxDistance" -> 13.86741555, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 442|>, <|
       "SMILES" -> 
        "CCN(Cc1cccc(S(=O)(=O)O)c1)c1ccc(C(=C2C=CC(=[N+](C)C)C=C2)c2ccc(N(C)C)\
cc2)c(S(=O)(=O)O)c1", "InChIKey" -> "CXNNGVUGAQWNGE-UHFFFAOYSA-O", 
        "AromaticRingCount" -> 3, "HBondDonorCount" -> 2, 
        "HBondAcceptorCount" -> 6, "FractionCarbonSP3" -> 0.21875, 
        "HeteroatomCount" -> 11, "HeterocycleCount" -> 0, 
        "RotatableBondCount" -> 9, "MolecularMass" -> 622.789, 
        "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 412.0404667, 
        "MaxDistance" -> 19.08097566, "LongestPiChain" -> 10, "LinkerLength" -> 
        2, "MaxAbsorbanceWavelength" -> 530|>, <|
       "SMILES" -> "Nc1c(S(=O)(=O)[O-])cc(NC2CCCCC2)c2c1C(=O)c1ccccc1C2=O", 
        "InChIKey" -> "GMBNNHLANOGOAU-UHFFFAOYSA-M", "AromaticRingCount" -> 2,
         "HBondDonorCount" -> 2, "HBondAcceptorCount" -> 7, 
        "FractionCarbonSP3" -> 0.3, "HeteroatomCount" -> 8, 
        "HeterocycleCount" -> 0, "RotatableBondCount" -> 3, "MolecularMass" -> 
        399.448, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        181.9325934, "MaxDistance" -> 12.94453275, "LongestPiChain" -> 7, 
        "LinkerLength" -> 1, "MaxAbsorbanceWavelength" -> 609|>, <|
       "SMILES" -> 
        "c1ccc2c(c1)-c1nc-2nc2[nH]c(nc3nc([n-]c4nc(n1)-c1ccccc1-4)-c1ccccc1-3)\
c1ccccc21", "InChIKey" -> "YSZJMRCSMGEWDG-UHFFFAOYSA-N", "AromaticRingCount" -> 
        6, "HBondDonorCount" -> 1, "HBondAcceptorCount" -> 6, 
        "FractionCarbonSP3" -> 0, "HeteroatomCount" -> 8, "HeterocycleCount" -> 
        5, "RotatableBondCount" -> 0, "MolecularMass" -> 513.544, 
        "DegreeOfUnsaturation" -> 29, "MinEllipsoidLength" -> 17337.20302, 
        "MaxDistance" -> 15.5047003, "LongestPiChain" -> 13, "LinkerLength" -> 
        0, "MaxAbsorbanceWavelength" -> 478|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "SMILES"} -> 
        1, {All, "InChIKey"} -> 1, {All, "AromaticRingCount"} -> 
        1, {All, "HBondDonorCount"} -> 1, {All, "HBondAcceptorCount"} -> 
        1, {All, "FractionCarbonSP3"} -> 1, {All, "HeteroatomCount"} -> 
        1, {All, "HeterocycleCount"} -> 1, {All, "RotatableBondCount"} -> 
        1, {All, "MolecularMass"} -> 1, {All, "DegreeOfUnsaturation"} -> 
        1, {All, "MinEllipsoidLength"} -> 1, {All, "MaxDistance"} -> 
        1, {All, "LongestPiChain"} -> 1, {All, "LinkerLength"} -> 
        1, {All, "MaxAbsorbanceWavelength"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "SMILES" -> TypeSystem`PackageScope`AtomShape[560.], "InChIKey" -> 
            TypeSystem`PackageScope`AtomShape[302.40000000000003`], 
            "AromaticRingCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "HBondDonorCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "HBondAcceptorCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "FractionCarbonSP3" -> TypeSystem`PackageScope`AtomShape[60], 
            "HeteroatomCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "HeterocycleCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "RotatableBondCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "MolecularMass" -> TypeSystem`PackageScope`AtomShape[60], 
            "DegreeOfUnsaturation" -> TypeSystem`PackageScope`AtomShape[34], 
            "MinEllipsoidLength" -> TypeSystem`PackageScope`AtomShape[60], 
            "MaxDistance" -> TypeSystem`PackageScope`AtomShape[60], 
            "LongestPiChain" -> TypeSystem`PackageScope`AtomShape[34], 
            "LinkerLength" -> TypeSystem`PackageScope`AtomShape[34], 
            "MaxAbsorbanceWavelength" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "SMILES", "InChIKey", "AromaticRingCount", "HBondDonorCount", 
         "HBondAcceptorCount", "FractionCarbonSP3", "HeteroatomCount", 
         "HeterocycleCount", "RotatableBondCount", "MolecularMass", 
         "DegreeOfUnsaturation", "MinEllipsoidLength", "MaxDistance", 
         "LongestPiChain", "LinkerLength", "MaxAbsorbanceWavelength"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 121], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "SMILES"} -> 
        1, {All, "InChIKey"} -> 1, {All, "AromaticRingCount"} -> 
        1, {All, "HBondDonorCount"} -> 1, {All, "HBondAcceptorCount"} -> 
        1, {All, "FractionCarbonSP3"} -> 1, {All, "HeteroatomCount"} -> 
        1, {All, "HeterocycleCount"} -> 1, {All, "RotatableBondCount"} -> 
        1, {All, "MolecularMass"} -> 1, {All, "DegreeOfUnsaturation"} -> 
        1, {All, "MinEllipsoidLength"} -> 1, {All, "MaxDistance"} -> 
        1, {All, "LongestPiChain"} -> 1, {All, "LinkerLength"} -> 
        1, {All, "MaxAbsorbanceWavelength"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "SMILES" -> TypeSystem`PackageScope`AtomShape[560.], "InChIKey" -> 
            TypeSystem`PackageScope`AtomShape[302.40000000000003`], 
            "AromaticRingCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "HBondDonorCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "HBondAcceptorCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "FractionCarbonSP3" -> TypeSystem`PackageScope`AtomShape[60], 
            "HeteroatomCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "HeterocycleCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "RotatableBondCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "MolecularMass" -> TypeSystem`PackageScope`AtomShape[60], 
            "DegreeOfUnsaturation" -> TypeSystem`PackageScope`AtomShape[34], 
            "MinEllipsoidLength" -> TypeSystem`PackageScope`AtomShape[60], 
            "MaxDistance" -> TypeSystem`PackageScope`AtomShape[60], 
            "LongestPiChain" -> TypeSystem`PackageScope`AtomShape[34], 
            "LinkerLength" -> TypeSystem`PackageScope`AtomShape[34], 
            "MaxAbsorbanceWavelength" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "SMILES", "InChIKey", "AromaticRingCount", "HBondDonorCount", 
         "HBondAcceptorCount", "FractionCarbonSP3", "HeteroatomCount", 
         "HeterocycleCount", "RotatableBondCount", "MolecularMass", 
         "DegreeOfUnsaturation", "MinEllipsoidLength", "MaxDistance", 
         "LongestPiChain", "LinkerLength", "MaxAbsorbanceWavelength"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 121], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 121, 
     "DataColumnCount" -> 16, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SMILES", 
                  Style[
                  "SMILES", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "SMILES"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "SMILES"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["InChIKey", 
                  Style[
                  "InChIKey", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "InChIKey"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "InChIKey"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["AromaticRingCount", 
                  Style[
                  "AromaticRingCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "AromaticRingCount"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "AromaticRingCount"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HBondDonorCount", 
                  Style[
                  "HBondDonorCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "HBondDonorCount"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "HBondDonorCount"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HBondAcceptorCount", 
                  Style[
                  "HBondAcceptorCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "HBondAcceptorCount"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "HBondAcceptorCount"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FractionCarbonSP3", 
                  Style[
                  "FractionCarbonSP3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "FractionCarbonSP3"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "FractionCarbonSP3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HeteroatomCount", 
                  Style[
                  "HeteroatomCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "HeteroatomCount"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "HeteroatomCount"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HeterocycleCount", 
                  Style[
                  "HeterocycleCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "HeterocycleCount"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "HeterocycleCount"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["RotatableBondCount", 
                  Style[
                  "RotatableBondCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "RotatableBondCount"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "RotatableBondCount"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MolecularMass", 
                  Style[
                  "MolecularMass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MolecularMass"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MolecularMass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["CCN1C(=Cc2[n+](CC)c3ccccc3cc2)C=Cc2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["AGJZCWVTGOVGBS-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.173913"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["327.451"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C(=CC=Cc2[n+](CC)c3ccccc3cc2)C=Cc2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["HQCBCYUEDZNVBO-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["353.489"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C(=CC=CC=Cc2[n+](CC)c3ccccc3cc2)C=Cc2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["HUKKJPBJMKANKC-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.148148"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["379.527"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C=CC(=CC=Cc2cc[n+](CC)c3ccccc23)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TVRUNVZRBXNONE-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["353.489"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1c2ccccc2OC1=CC=Cc1[n+](CC)c2ccccc2o1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["VZUFSMBGWBLOCB-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.190476"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["333.411"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1c2ccccc2OC1=CC=CC=Cc1[n+](CC)c2ccccc2o1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["VAGJCLDZLVQVPR-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.173913"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["359.449"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1c2ccccc2OC1=CC=CC=CC=Cc1[n+](CC)c2ccccc2o1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["YFMAIXBXQGUOBW-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["385.487"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1c2ccccc2SC1=Cc1[n+](CC)c2ccccc2s1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["WCJHMNADZOKGGL-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.210526"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["339.509"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1c2ccccc2SC1=CC=Cc1[n+](CC)c2ccccc2s1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["JGLWGLKNDHZFAP-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.190476"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["365.547"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1c2ccccc2SC1=CC=CC=Cc1[n+](CC)c2ccccc2s1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["FYXWDSGGZAMYFZ-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.173913"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["391.585"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1c2ccccc2SC1=CC=CC=CC=Cc1[n+](CC)c2ccccc2s1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["UMTQICYFVVKJFV-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["417.623"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C=C/C(=C/c2cc[n+](CC)c3ccccc23)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["PBYSOAALDIVUSK-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.173913"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["327.451"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C=C/C(=C/C=C/c2[n+](CC)c3ccccc3o2)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["COUGSHBDUFTYFC-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.173913"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["343.45"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C=C/C(=C\\c2[n+](CC)c3ccccc3cc2)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CJRNTVYQEXDVCB-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.173913"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["327.451"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C=C/C(=C\\C=C\\c2[n+](CC)c3ccccc3cc2)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONKAXOHRKIYFDJ-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["353.489"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "CCN1C=C/C(=C\\C=C\\C=C\\c2[n+](CC)c3ccccc3o2)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QQWIIVKRRBJCBB-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["369.488"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "CCN1C=C/C(=C/C=C/C=C/c2cc[n+](CC)c3ccccc23)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["MLENNECRNUHQQS-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.148148"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["379.527"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "CCN1C=C/C(=C/C=C/C=C/C=C/c2[n+](CC)c3ccccc3s2)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TWHSTEAIMSNAOL-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.148148"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["411.594"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C=C/C(=C\\C=C\\c2cc[n+](CC)c3ccccc23)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TVRUNVZRBXNONE-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["353.489"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "CCN1C=C/C(=C\\C=C\\C=C\\c2[n+](CC)c3ccccc3s2)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["LDIURJODNUMFCD-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["385.556"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 121, 1], {1, 121 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 121, 1], {1, 121 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[121, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[121, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 121, 1], {1, 121 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 121, 1], {1, 121 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]], 
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 16, 1], {1, 16 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 16, 1], {1, 16 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[16, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[16, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 16, 1], {1, 16 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 16, 1], {1, 16 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1286., {309.134033203125, 314.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1286., {309.134033203125, 314.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8801148590752773`*^9, 3.8801296591424303`*^9, 
  3.880129777286431*^9, 3.880130111206382*^9, 3.8801318863779507`*^9, 
  3.880212882042108*^9, 3.880213234154977*^9, 3.880213435260356*^9, 
  3.8802137540838037`*^9, 3.880214088856874*^9, 3.8887575656307325`*^9, 
  3.8887576032497544`*^9, 3.8887576827398543`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"5a20b6ce-edbc-4f74-aa34-96b61fe15623"]
}, Open  ]],

Cell["\<\
Take a look at the structure of this variable (you may need to use the scroll \
buttons to see each row and column, depending on your screen size):\
\>", "Text",
 CellChangeTimes->{
  3.872244054116185*^9, {3.872759233016572*^9, 
   3.872759254408389*^9}},ExpressionUUID->"e8527a4f-df4a-4300-827c-\
94fd8ba1ff38"],

Cell["Each row contains data for a different molecule", "Item",
 CellChangeTimes->{{3.87224410301265*^9, 
  3.872244117503632*^9}},ExpressionUUID->"2216b9fa-170c-4b1e-b0b4-\
1d969c54badd"],

Cell["\<\
The first column contains the molecule SMILES string. SMILES is an unique \
chemical identifier in the form of an ASCII string.\
\>", "Item",
 CellChangeTimes->{{3.87224410301265*^9, 
  3.872244125138968*^9}},ExpressionUUID->"e5aad24a-7b27-4507-8a2c-\
03ea1dad2ccf"],

Cell["\<\
The second column contains the molecule InChIKey. InChIKey is another unique \
chemical identifier in the form of an ASCII string.\
\>", "Item",
 CellChangeTimes->{{3.87224410301265*^9, 
  3.8722441312024508`*^9}},ExpressionUUID->"2ea6cd70-999f-4306-be1c-\
545a92547dba"],

Cell["\<\
The next 13 columns contain different molecular features (described below). \
These are the variables that we will use to predict the wavelength of maximum \
absorbance. Features are sometimes called \"independent\" or \"predictor\" \
variables.\
\>", "Item",
 CellChangeTimes->{{3.87224410301265*^9, 3.872244138703627*^9}, {
  3.880129134214676*^9, 3.8801291347196856`*^9}, {3.8801298945670137`*^9, 
  3.8801298975420303`*^9}, {3.8801315296874733`*^9, 
  3.8801315335339007`*^9}},ExpressionUUID->"8c07e5ca-2d75-4387-a6a0-\
5a5e574933e6"],

Cell["\<\
The final column contains the wavelength of maximum absorbance \
(MaxAbsorbanceWavelength) for each molecule. This is the target variable that \
we want to predict (sometimes called the \[OpenCurlyDoubleQuote]dependent\
\[CloseCurlyDoubleQuote] or \[OpenCurlyDoubleQuote]response\
\[CloseCurlyDoubleQuote] variable).\
\>", "Item",
 CellChangeTimes->{{3.87224410301265*^9, 3.872244139201701*^9}, {
  3.880129114224469*^9, 3.880129124742642*^9}, {3.8801299031705303`*^9, 
  3.880129905391905*^9}},ExpressionUUID->"fd192e07-8dcc-4365-b9cf-\
eca1aff3c394"],

Cell[TextData[{
 StyleBox["Features:",
  FontWeight->"Bold"],
 "\nOur regression analysis will use the 13 features below, which were \
computed for each molecule in the dataset."
}], "Text",
 CellChangeTimes->{
  3.872244157783339*^9, {3.8801291627017956`*^9, 3.880129175847979*^9}, {
   3.880131541032484*^9, 
   3.8801316155200467`*^9}},ExpressionUUID->"ad58c7bc-5596-41e1-994d-\
7f43caee7f39"],

Cell["AromaticRingCount: Number of aromatic rings in the molecule", "Item",
 CellChangeTimes->{{3.8722441735702553`*^9, 
  3.872244178615464*^9}},ExpressionUUID->"1d104842-c982-4ea2-8ac4-\
3e98f18e9ad0"],

Cell["\<\
HBondDonorCount: Number of hydrogen bond donors in the molecule\
\>", "Item",
 CellChangeTimes->{{3.8722441735702553`*^9, 
  3.872244181898383*^9}},ExpressionUUID->"78bed1c2-9aef-46eb-b8fd-\
f6384f4c4bfb"],

Cell["\<\
HBondAcceptorCount: Number of hydrogen bond acceptors in the molecule\
\>", "Item",
 CellChangeTimes->{{3.8722441735702553`*^9, 
  3.872244184807847*^9}},ExpressionUUID->"42d91439-c943-481f-b4e9-\
9cd1c6691af7"],

Cell["\<\
FractionCarbonSP3: Fraction of carbon atoms in the molecule with sp3 \
hybridization\
\>", "Item",
 CellChangeTimes->{{3.8722441735702553`*^9, 
  3.87224418770755*^9}},ExpressionUUID->"e927f10b-7ed2-41b1-b981-\
d5d12740d6ac"],

Cell[TextData[{
 "HeteroatomCount: Total number of heteroatoms (",
 StyleBox["i.e.",
  FontSlant->"Italic"],
 ", atoms other than carbon) in cyclic rings in the molecule"
}], "Item",
 CellChangeTimes->{{3.8722441735702553`*^9, 
  3.872244191023334*^9}},ExpressionUUID->"464842d3-6351-4e1f-af39-\
4130b98c2e35"],

Cell[TextData[{
 "HeterocycleCount: Total number of heterocyclic rings (",
 StyleBox["i.e.",
  FontSlant->"Italic"],
 ", rings containing atoms other than carbon) in the molecule"
}], "Item",
 CellChangeTimes->{{3.8722441735702553`*^9, 
  3.872244194040449*^9}},ExpressionUUID->"99e074fe-2a23-47f3-a6c7-\
fadcfa34aaa2"],

Cell[TextData[{
 "RotatableBondCount: Number of bonds that can be rotated in the molecule (",
 StyleBox["i.e.",
  FontSlant->"Italic"],
 ", the number of non-cyclic sp3 bonds)"
}], "Item",
 CellChangeTimes->{{3.8722441735702553`*^9, 
  3.872244197000787*^9}},ExpressionUUID->"2590f5f2-2117-445c-a8f0-\
793ae96b22fa"],

Cell["MolecularMass: Mass of the molecule", "Item",
 CellChangeTimes->{{3.8722441735702553`*^9, 
  3.872244200747303*^9}},ExpressionUUID->"b558e433-68ff-4169-8ab3-\
dba37d5a64fd"],

Cell["\<\
DegreeOfUnsaturation: Total number of pi bonds and rings in the molecule\
\>", "Item",
 CellChangeTimes->{{3.8722441735702553`*^9, 
  3.8722442041199903`*^9}},ExpressionUUID->"09b72a7d-b6bc-4020-baef-\
2a4f6df81a01"],

Cell["\<\
MinEllipsoidLength: the major axis length of the smallest volume ellipsoid \
that could contain the molecule\
\>", "Item",
 CellChangeTimes->{{3.8722441735702553`*^9, 
  3.872244206861334*^9}},ExpressionUUID->"0233a284-d162-4631-bc28-\
94aabb4bc425"],

Cell["\<\
MaxDistance: the largest distance between any pair of atoms in the molecule\
\>", "Item",
 CellChangeTimes->{{3.8722441735702553`*^9, 
  3.872244209410717*^9}},ExpressionUUID->"70c25c2a-ee80-41f7-a11f-\
f94b4c56f5c0"],

Cell["\<\
LongestPiChain: longest continuous path of conjugated pi bonds\
\>", "Item",
 CellChangeTimes->{{3.8722441735702553`*^9, 
  3.8722442122825127`*^9}},ExpressionUUID->"c6ad8d4b-bb8a-4586-ae90-\
1d8af94e300b"],

Cell["\<\
LinkerLength: longest conjugated pi chain that is not part of a ring\
\>", "Item",
 CellChangeTimes->{{3.8722441735702553`*^9, 3.8722442119095793`*^9}, {
  3.8801316498647842`*^9, 
  3.8801316513618064`*^9}},ExpressionUUID->"01ee17b9-0c9a-4637-af00-\
062b6f642e69"],

Cell["\<\

Sometimes removing outliers from the dataset can help improve model \
performance.  Outliers are data points that differ drastically from the rest \
of the observations. Machine Learning models generalize from training data to \
make predictions; if they learn from data with extreme outliers, they may \
perform worse.\
\>", "Text",
 CellChangeTimes->{
  3.872244221982106*^9, {3.87276230491533*^9, 3.87276232721093*^9}, {
   3.8727626341845837`*^9, 3.872762635016638*^9}, {3.872774421036778*^9, 
   3.872774455044842*^9}, {3.87277724789375*^9, 3.872777266533442*^9}, {
   3.8728583599732323`*^9, 3.8728583991802654`*^9}, {3.872858567961846*^9, 
   3.872858583966776*^9}, {3.8728586152249217`*^9, 3.8728586290746384`*^9}, {
   3.872858664034958*^9, 
   3.872858755939559*^9}},ExpressionUUID->"534a778f-ba2a-4535-a749-\
e62c29e03d49"],

Cell["https://en.wikipedia.org/wiki/Outlier", "Item",
 CellChangeTimes->{{3.8722441735702553`*^9, 3.8722442041199903`*^9}, {
  3.8728586836152945`*^9, 
  3.872858688114727*^9}},ExpressionUUID->"cee1334a-7793-454f-94f5-\
3f2f2c00a2d3"],

Cell[TextData[{
 "It is always useful to identify possible outliers by charting a ",
 ButtonBox["Histogram",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Histogram.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Histogram.html"],
 " of the data.  (The option ",
 ButtonBox["PlotRange",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/PlotRange.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/PlotRange.html"],
 " is set to All, as otherwise Mathematica will focus the attention of the \
plot on the region with the most information.)"
}], "Text",
 CellChangeTimes->{{3.8728587447365804`*^9, 3.8728587623566895`*^9}, {
  3.872967708823411*^9, 
  3.872967742728684*^9}},ExpressionUUID->"62fce50f-3d01-49ca-97fc-\
ce0c1946f204"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataset", "[", 
    RowBox[{"All", ",", "\"\<MaxAbsorbanceWavelength\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872759282737224*^9, 3.872759283733244*^9}, {
  3.8727621727003717`*^9, 3.872762204468397*^9}, {3.872762294715502*^9, 
  3.872762296491613*^9}, {3.872762331307272*^9, 3.872762333091214*^9}, {
  3.8801297924275217`*^9, 3.880129795716565*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"24aa2a75-7347-4cfa-b8e7-1013b36ab1df"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5249999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5249999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{350., 0}, {400., 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{20.43684895833333, 34.064453125}, {
           77.85859546615644, 94.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{400., 0}, {450., 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{33.564453125, 47.19205729166667}, {
           38.55977163154755, 94.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{450., 0}, {500., 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{46.69205729166667, 60.31966145833334}, {
           46.419536398469326`, 94.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{500., 0}, {550., 25.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{59.81966145833334, 
           73.447265625}, {-102.91599417304448`, 94.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 25]& ,
        TagBoxNote->"25"],
       StyleBox["25", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[25, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{550., 0}, {600., 23.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{72.947265625, 
           86.57486979166666}, {-87.19646463920091, 94.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 23]& ,
        TagBoxNote->"23"],
       StyleBox["23", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[23, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{600., 0}, {650., 25.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{86.07486979166666, 
           99.70247395833334}, {-102.91599417304448`, 94.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 25]& ,
        TagBoxNote->"25"],
       StyleBox["25", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[25, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{650., 0}, {700., 13.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{99.20247395833334, 
           112.830078125}, {-8.598816969983119, 94.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 13]& ,
        TagBoxNote->"13"],
       StyleBox["13", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[13, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{700., 0}, {750., 11.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{112.330078125, 125.95768229166669`}, {
           7.120712563860437, 94.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{750., 0}, {800., 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{125.45768229166669`, 139.08528645833334`}, {
           62.13906593231289, 94.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{800., 0}, {850., 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{138.58528645833334`, 152.212890625}, {
           77.85859546615644, 94.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{850., 0}, {900., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{151.712890625, 165.34049479166669`}, {
           85.71836023307822, 94.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1350., 0}, {1400., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{282.98893229166663`, 296.61653645833337`}, {
           85.71836023307822, 94.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1550., 0}, {1600., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{335.49934895833337`, 349.126953125}, {
           85.71836023307822, 94.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{325., 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{350., 1600.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.880114861317165*^9, {3.880129789836102*^9, 3.880129796302785*^9}, 
   3.8801301132179832`*^9, 3.8801318952292747`*^9, 3.880212885811446*^9, 
   3.88021323553408*^9, 3.880213436623968*^9, 3.8802137554461527`*^9, 
   3.8802140902272124`*^9, 3.888757603412449*^9, 3.8887576904080887`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"006b42aa-161b-46fc-a7ff-0894b01491c6"]
}, Open  ]],

Cell[TextData[{
 "Notice the outliers; these are unlikely to be well represented by our data. \
 We will automatically process the  dataset, analysing it for anomalies, and \
then resetting the ",
 StyleBox["dataset",
  FontSlant->"Italic"],
 " variable to have the \[OpenCurlyDoubleQuote]anomaly free\
\[CloseCurlyDoubleQuote] values: "
}], "Text",
 CellChangeTimes->{{3.8727626370963717`*^9, 3.872762647744425*^9}, {
   3.872762858382895*^9, 3.872762877502561*^9}, 3.872774461093462*^9, {
   3.872777275349381*^9, 3.872777289989135*^9}, 
   3.883645831936167*^9},ExpressionUUID->"4835dcec-f2b5-49b6-9205-\
b4439c9300fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "=", 
  RowBox[{"DeleteAnomalies", "[", "dataset", "]"}]}]], "Input",
 CellChangeTimes->{{3.8727625052904987`*^9, 3.872762558905149*^9}, {
  3.872762681336316*^9, 3.872762714015972*^9}, {3.872762787056046*^9, 
  3.8727627996313763`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"b47b2894-cfe1-4bd2-90c3-d139ebca0f61"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "SMILES" -> "CCN1C(=Cc2[n+](CC)c3ccccc3cc2)C=Cc2ccccc21", "InChIKey" -> 
        "AGJZCWVTGOVGBS-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        121.7298744, "MaxDistance" -> 13.50310487, "LongestPiChain" -> 12, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 529|>, <|
       "SMILES" -> "CCN1C(=CC=Cc2[n+](CC)c3ccccc3cc2)C=Cc2ccccc21", 
        "InChIKey" -> "HQCBCYUEDZNVBO-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        324.7678311, "MaxDistance" -> 16.75756006, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 626|>, <|
       "SMILES" -> "CCN1C(=CC=CC=Cc2[n+](CC)c3ccccc3cc2)C=Cc2ccccc21", 
        "InChIKey" -> "HUKKJPBJMKANKC-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        379.527, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        496.4350532, "MaxDistance" -> 17.84710609, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 736|>, <|
       "SMILES" -> "CCN1C=CC(=CC=Cc2cc[n+](CC)c3ccccc23)c2ccccc21", 
        "InChIKey" -> "TVRUNVZRBXNONE-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        589.6421858, "MaxDistance" -> 15.7348213, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 701|>, <|
       "SMILES" -> "CCN1c2ccccc2OC1=CC=Cc1[n+](CC)c2ccccc2o1", "InChIKey" -> 
        "VZUFSMBGWBLOCB-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        333.411, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        425.7622335, "MaxDistance" -> 13.99177534, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 512|>, <|
       "SMILES" -> "CCN1c2ccccc2OC1=CC=CC=Cc1[n+](CC)c2ccccc2o1", "InChIKey" -> 
        "VAGJCLDZLVQVPR-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        359.449, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        302.0248728, "MaxDistance" -> 17.84122912, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 609|>, <|
       "SMILES" -> "CCN1c2ccccc2OC1=CC=CC=CC=Cc1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "YFMAIXBXQGUOBW-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        385.487, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        437.0009605, "MaxDistance" -> 18.54675869, "LongestPiChain" -> 16, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 698|>, <|
       "SMILES" -> "CCN1c2ccccc2SC1=Cc1[n+](CC)c2ccccc2s1", "InChIKey" -> 
        "WCJHMNADZOKGGL-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.210526316, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        339.509, "DegreeOfUnsaturation" -> 11, "MinEllipsoidLength" -> 
        226.7898323, "MaxDistance" -> 13.32275443, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 418|>, <|
       "SMILES" -> "CCN1c2ccccc2SC1=CC=Cc1[n+](CC)c2ccccc2s1", "InChIKey" -> 
        "JGLWGLKNDHZFAP-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        365.547, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        215.2737154, "MaxDistance" -> 14.43050777, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 521|>, <|
       "SMILES" -> "CCN1c2ccccc2SC1=CC=CC=Cc1[n+](CC)c2ccccc2s1", "InChIKey" -> 
        "FYXWDSGGZAMYFZ-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        391.585, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        569.0426561, "MaxDistance" -> 16.72947487, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 615|>, <|
       "SMILES" -> "CCN1c2ccccc2SC1=CC=CC=CC=Cc1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "UMTQICYFVVKJFV-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        417.623, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1280.653595, "MaxDistance" -> 18.70203709, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 700|>, <|
       "SMILES" -> "CCN1C=C/C(=C/c2cc[n+](CC)c3ccccc23)c2ccccc21", "InChIKey" -> 
        "PBYSOAALDIVUSK-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        217.2983613, "MaxDistance" -> 13.15063336, "LongestPiChain" -> 10, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 610|>, <|
       "SMILES" -> "CCN1C=C/C(=C/C=C/c2[n+](CC)c3ccccc3o2)c2ccccc21", 
        "InChIKey" -> "COUGSHBDUFTYFC-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        343.45, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        671.4959959, "MaxDistance" -> 16.0185835, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 560|>, <|
       "SMILES" -> "CCN1C=C/C(=C\\c2[n+](CC)c3ccccc3cc2)c2ccccc21", 
        "InChIKey" -> "CJRNTVYQEXDVCB-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        263.4702018, "MaxDistance" -> 13.70930718, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 572|>, <|
       "SMILES" -> "CCN1C=C/C(=C\\C=C\\c2[n+](CC)c3ccccc3cc2)c2ccccc21", 
        "InChIKey" -> "ONKAXOHRKIYFDJ-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        319.2005747, "MaxDistance" -> 15.97139809, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 664|>, <|
       "SMILES" -> "CCN1C=C/C(=C\\C=C\\C=C\\c2[n+](CC)c3ccccc3o2)c2ccccc21", 
        "InChIKey" -> "QQWIIVKRRBJCBB-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        369.488, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        3395.371931, "MaxDistance" -> 18.18256685, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 662|>, <|
       "SMILES" -> "CCN1C=C/C(=C/C=C/C=C/c2cc[n+](CC)c3ccccc23)c2ccccc21", 
        "InChIKey" -> "MLENNECRNUHQQS-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        379.527, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        589.1816286, "MaxDistance" -> 15.75017387, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 794|>, <|
       "SMILES" -> "CCN1C=C/C(=C/C=C/C=C/C=C/c2[n+](CC)c3ccccc3s2)c2ccccc21", 
        "InChIKey" -> "TWHSTEAIMSNAOL-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        411.594, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        1700.161644, "MaxDistance" -> 19.51365626, "LongestPiChain" -> 16, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 556|>, <|
       "SMILES" -> "CCN1C=C/C(=C\\C=C\\c2cc[n+](CC)c3ccccc23)c2ccccc21", 
        "InChIKey" -> "TVRUNVZRBXNONE-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        461.4927822, "MaxDistance" -> 15.79330819, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 699|>, <|
       "SMILES" -> "CCN1C=C/C(=C\\C=C\\C=C\\c2[n+](CC)c3ccccc3s2)c2ccccc21", 
        "InChIKey" -> "LDIURJODNUMFCD-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        385.556, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1769.016392, "MaxDistance" -> 18.49107443, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 626|>, <|
       "SMILES" -> "CCN1C=C/C(=C/C=C/c2[n+](CC)c3ccccc3s2)c2ccccc21", 
        "InChIKey" -> "DJAQPUXEDANWNL-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        359.518, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        472.5612571, "MaxDistance" -> 16.07508899, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 542|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\c1cc[n+](CC)c2ccccc12", "InChIKey" -> 
        "CJRNTVYQEXDVCB-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        168.6859858, "MaxDistance" -> 14.37076957, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 566|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C\\c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "QUZOOPRJWZTRMY-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        343.45, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        679.9938519, "MaxDistance" -> 16.25694502, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 546|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C/c1[n+](CC)c2ccccc2cc1", "InChIKey" -> 
        "AGJZCWVTGOVGBS-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        121.7202097, "MaxDistance" -> 13.50299347, "LongestPiChain" -> 12, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 548|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C/C=C/c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "HQCBCYUEDZNVBO-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        596.1345603, "MaxDistance" -> 16.4089123, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 659|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C/C=C/C=C/c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "OOAUUXKHPBKQDP-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        369.488, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        825.7660212, "MaxDistance" -> 16.77695005, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 633|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C\\C=C\\c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "NNPJVUBHKCZPII-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        379.527, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        1332.210673, "MaxDistance" -> 18.25942826, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 776|>, <|
       "SMILES" -> 
        "CCN1c2ccccc2C=C/C1=C\\C=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "OKFVOTSYAZGOPA-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        411.594, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        1422.086024, "MaxDistance" -> 20.76883397, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 615|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C/C=C/c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "ONKAXOHRKIYFDJ-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        272.2664441, "MaxDistance" -> 14.68712012, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 664|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C/C=C/C=C/c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "ICQLMXQDTPECJU-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        385.556, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        935.3433719, "MaxDistance" -> 17.63814729, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 627|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "XTSHHMSLNDHACR-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        359.518, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        525.5979632, "MaxDistance" -> 16.41373395, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 540|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C\\c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "ONKAXOHRKIYFDJ-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        493.3616566, "MaxDistance" -> 16.85244301, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 664|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C/c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "HQCBCYUEDZNVBO-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        353.489, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        224.1183797, "MaxDistance" -> 14.67373253, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 634|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C/C=C/c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "HUKKJPBJMKANKC-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        379.527, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        703.6177306, "MaxDistance" -> 17.54168309, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 655|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C/C=C/C=C/c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "CKDJYLWILGWPSZ-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        395.526, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        769.0398073, "MaxDistance" -> 19.45937995, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 749|>, <|
       "SMILES" -> 
        "CCN1c2ccccc2C=C/C1=C\\C=C\\C=C\\C=C\\c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "OWYFZVWJTBJIIS-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.137931034, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        405.565, "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 
        2290.374458, "MaxDistance" -> 21.23861179, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 711|>, <|
       "SMILES" -> 
        "CCN1c2ccccc2C=C/C1=C\\C=C\\C=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "NDBQBHOHIWDEGK-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.137931034, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 7, "MolecularMass" -> 
        437.632, "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 
        4405.333836, "MaxDistance" -> 23.5477297, "LongestPiChain" -> 19, 
        "LinkerLength" -> 10, "MaxAbsorbanceWavelength" -> 880|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C/C=C/c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "NNPJVUBHKCZPII-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        379.527, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        433.6545883, "MaxDistance" -> 17.57606615, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 586|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C/C=C/C=C/c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "OKFVOTSYAZGOPA-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        411.594, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        308.6421789, "MaxDistance" -> 17.53088737, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 787|>, <|
       "SMILES" -> "CCN1c2ccccc2C=C/C1=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "ICQLMXQDTPECJU-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        385.556, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        759.8374883, "MaxDistance" -> 18.44138751, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 618|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/c1cc[n+](CC)c2ccccc12", "InChIKey" -> 
        "FDTNKKIOSYITHD-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        317.412, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        228.1018353, "MaxDistance" -> 13.94501213, "LongestPiChain" -> 10, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 604|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/c1[n+](CC)c2ccccc2o1", "InChIKey" -> 
        "VZUFSMBGWBLOCB-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        333.411, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        312.0662072, "MaxDistance" -> 15.88288578, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 490|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C\\c1[n+](CC)c2ccccc2cc1", "InChIKey" -> 
        "RCVUTZHFPPLMTK-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        317.412, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        161.3957192, "MaxDistance" -> 13.0267547, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 500|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C\\C=C\\c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "QUZOOPRJWZTRMY-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        343.45, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        393.6375516, "MaxDistance" -> 15.67493394, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 446|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "VAGJCLDZLVQVPR-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        359.449, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        1819.50637, "MaxDistance" -> 17.78520625, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 546|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/C=C/c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "QQWIIVKRRBJCBB-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        369.488, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1171.64988, "MaxDistance" -> 18.90021943, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 598|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/C=C/C=C/c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "KKFSTMHKQKXIPU-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        401.555, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1472.484482, "MaxDistance" -> 20.72240089, "LongestPiChain" -> 16, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 680|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C\\C=C\\c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "COUGSHBDUFTYFC-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        343.45, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        488.3426121, "MaxDistance" -> 14.8474838, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 678|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "LPLCWEKDGKZACI-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        375.517, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        1475.141151, "MaxDistance" -> 17.94277396, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 573|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/c1[n+](CC)c2ccccc2s1", "InChIKey" -> 
        "CGMUVVDKGKQWHC-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        349.479, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        514.688406, "MaxDistance" -> 16.05677189, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 605|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/c1cc[n+](CC)c2ccccc12", "InChIKey" -> 
        "COUGSHBDUFTYFC-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        343.45, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        675.8295745, "MaxDistance" -> 16.4400458, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 508|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/C=C/c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "VAGJCLDZLVQVPR-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        359.449, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        461.8182132, "MaxDistance" -> 18.14697192, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 587|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C\\c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "QUZOOPRJWZTRMY-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        343.45, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        377.4624814, "MaxDistance" -> 14.50478508, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 606|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C\\C=C\\c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "OOAUUXKHPBKQDP-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        369.488, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1016.810057, "MaxDistance" -> 17.20857935, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 559|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "YFMAIXBXQGUOBW-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        385.487, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        813.334133, "MaxDistance" -> 19.65238052, "LongestPiChain" -> 16, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 630|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/C=C/C=C/c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "YGOJAHFWSNHIIB-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        395.526, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        720.0455626, "MaxDistance" -> 20.58238652, "LongestPiChain" -> 16, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 716|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/C=C/C=C/C=C/c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "ZMDVVNPXHYAVFU-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 7, "MolecularMass" -> 
        427.593, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        808.590566, "MaxDistance" -> 22.76297137, "LongestPiChain" -> 18, 
        "LinkerLength" -> 10, "MaxAbsorbanceWavelength" -> 720|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C\\C=C\\c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "QQWIIVKRRBJCBB-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        369.488, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1145.364141, "MaxDistance" -> 16.08591529, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 683|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "KKFSTMHKQKXIPU-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        401.555, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1477.259994, "MaxDistance" -> 19.63137023, "LongestPiChain" -> 16, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 655|>, <|
       "SMILES" -> "CCN1c2ccccc2O/C1=C/C=C/C=C/c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "LPLCWEKDGKZACI-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        375.517, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        900.0075318, "MaxDistance" -> 18.52578052, "LongestPiChain" -> 14, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 724|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\c1cc[n+](CC)c2ccccc12", "InChIKey" -> 
        "SFTZBFQWPQDHFP-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        333.48, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        247.35545, "MaxDistance" -> 13.0088646, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 605|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "CGMUVVDKGKQWHC-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        349.479, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        585.6969158, "MaxDistance" -> 15.91065365, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 472|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C/c1[n+](CC)c2ccccc2cc1", "InChIKey" -> 
        "UJCNDPYFYMAVSQ-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        333.48, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        142.3248532, "MaxDistance" -> 13.83038591, "LongestPiChain" -> 12, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 505|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C/C=C/c1[n+](CC)c2ccccc2cc1", "InChIKey" -> 
        "XTSHHMSLNDHACR-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        359.518, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        382.3202999, "MaxDistance" -> 16.14987994, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 487|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C/C=C/C=C/c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "LPLCWEKDGKZACI-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        375.517, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        987.9028084, "MaxDistance" -> 18.45664156, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 560|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\C=C\\c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "LDIURJODNUMFCD-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        385.556, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        808.7723925, "MaxDistance" -> 17.61886309, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 618|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "UMTQICYFVVKJFV-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        417.623, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        1598.659364, "MaxDistance" -> 20.44475565, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 627|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C/C=C/c1cc[n+](CC)c2ccccc12", "InChIKey" -> 
        "DJAQPUXEDANWNL-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        359.518, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        440.5535254, "MaxDistance" -> 16.55748826, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 716|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C/C=C/C=C/c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "FYXWDSGGZAMYFZ-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        391.585, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        765.5898332, "MaxDistance" -> 18.66408916, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 584|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "JGLWGLKNDHZFAP-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        365.547, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        338.3403723, "MaxDistance" -> 15.80045689, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 625|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "DJAQPUXEDANWNL-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        359.518, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        478.7754681, "MaxDistance" -> 16.41029375, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 519|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "LPLCWEKDGKZACI-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        375.517, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        1539.046994, "MaxDistance" -> 18.34256534, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 565|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C/c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "XTSHHMSLNDHACR-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        359.518, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        192.2760718, "MaxDistance" -> 14.7107037, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 605|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C/C=C/c1[n+](CC)c2ccccc2cc1", 
        "InChIKey" -> "ICQLMXQDTPECJU-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        385.556, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        334.1409869, "MaxDistance" -> 17.73823442, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 536|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C/C=C/C=C/c1[n+](CC)c2ccccc2o1", 
        "InChIKey" -> "KKFSTMHKQKXIPU-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        401.555, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        596.8851213, "MaxDistance" -> 18.34978457, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 590|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\C=C\\C=C\\c1cc[n+](CC)c2ccccc12",
         "InChIKey" -> "TWHSTEAIMSNAOL-UHFFFAOYSA-N", "AromaticRingCount" -> 
        3, "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.148148148, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        411.594, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        2041.634457, "MaxDistance" -> 20.47113263, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 681|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C/C=C/c1cc[n+](CC)c2ccccc12", 
        "InChIKey" -> "LDIURJODNUMFCD-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        385.556, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        371.1149301, "MaxDistance" -> 18.06340994, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 801|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C/C=C/C=C/c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "UMTQICYFVVKJFV-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.16, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        417.623, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        415.6517676, "MaxDistance" -> 18.50268615, "LongestPiChain" -> 17, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 614|>, <|
       "SMILES" -> "CCN1c2ccccc2S/C1=C\\C=C\\C=C\\c1[n+](CC)c2ccccc2s1", 
        "InChIKey" -> "FYXWDSGGZAMYFZ-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        391.585, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        1412.980761, "MaxDistance" -> 18.463291, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 722|>, <|
       "SMILES" -> "CCN1C(=Cc2cc(C)nc(-c3ccccc3)[n+]2C)C=Cc2ccccc21", 
        "InChIKey" -> "UBRISJAVIYTNDW-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.166666667, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        354.477, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        232.7860488, "MaxDistance" -> 13.63071411, "LongestPiChain" -> 13, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 593|>, <|
       "SMILES" -> 
        "CC1=C/C(=C(/c2cc(C)c([O-])c(C(=O)[O-])c2)c2ccccc2S(=O)(=O)O)C=C(C(=O)\
[O-])C1=O", "InChIKey" -> "KXOWVZNVTQLQPD-XMHGGMMESA-K", "AromaticRingCount" -> 
        2, "HBondDonorCount" -> 1, "HBondAcceptorCount" -> 8, 
        "FractionCarbonSP3" -> 0.086956522, "HeteroatomCount" -> 10, 
        "HeterocycleCount" -> 0, "RotatableBondCount" -> 5, "MolecularMass" -> 
        467.431, "DegreeOfUnsaturation" -> 18, "MinEllipsoidLength" -> 
        97.29578328, "MaxDistance" -> 11.35793677, "LongestPiChain" -> 10, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 454|>, <|
       "SMILES" -> 
        "CC1=CC(=C(c2cc(C)c([O-])c(C(=O)[O-])c2)c2ccccc2S(=O)(=O)O)C=C(C(=O)[\
O-])C1=O", "InChIKey" -> "KXOWVZNVTQLQPD-UHFFFAOYSA-K", "AromaticRingCount" -> 
        2, "HBondDonorCount" -> 1, "HBondAcceptorCount" -> 8, 
        "FractionCarbonSP3" -> 0.086956522, "HeteroatomCount" -> 10, 
        "HeterocycleCount" -> 0, "RotatableBondCount" -> 5, "MolecularMass" -> 
        467.431, "DegreeOfUnsaturation" -> 18, "MinEllipsoidLength" -> 
        82.63668106, "MaxDistance" -> 11.27121876, "LongestPiChain" -> 10, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 419|>, <|
       "SMILES" -> "CCN1C(=Cc2ccc3ccccc3[n+]2CC)C=Cc2ccccc21", "InChIKey" -> 
        "AGJZCWVTGOVGBS-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        152.9461051, "MaxDistance" -> 12.88113187, "LongestPiChain" -> 12, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 542|>, <|
       "SMILES" -> 
        "CC1(C)C(=CC=CC=CC2=[N+](CCCCCC(=O)ON3C(=O)CCC3=O)c3ccc(S(=O)(=O)[O-])\
cc3C2(C)C)N(CCCCCC(=O)ON2C(=O)CCC2=O)c2ccc(S(=O)(=O)[O-])cc21", "InChIKey" -> 
        "MGIODCZGPVDROX-UHFFFAOYSA-M", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 15, 
        "FractionCarbonSP3" -> 0.444444444, "HeteroatomCount" -> 20, 
        "HeterocycleCount" -> 4, "RotatableBondCount" -> 19, "MolecularMass" -> 
        936.051, "DegreeOfUnsaturation" -> 23, "MinEllipsoidLength" -> 
        1291.784707, "MaxDistance" -> 25.02428821, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 574|>, <|
       "SMILES" -> 
        "C#CCN=C(O)CCCCCN1C(=CC=CC2=[N+](C)c3ccccc3C2(C)C)C(C)(C)c2ccccc21", 
        "InChIKey" -> "ZAEMCWBMKGHPLO-UHFFFAOYSA-O", "AromaticRingCount" -> 2,
         "HBondDonorCount" -> 1, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.393939394, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 9, "MolecularMass" -> 
        494.703, "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 
        373.2533386, "MaxDistance" -> 17.24209718, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 528|>, <|
       "SMILES" -> 
        "CC1(C)C(=CC=CC2=[N+](CCCCCC(=O)ON3C(=O)CCC3=O)c3ccc(S(=O)(=O)[O-])\
cc3C2(C)C)N(CCCCCC(=O)ON2C(=O)CCC2=O)c2ccc(S(=O)(=O)[O-])cc21", "InChIKey" -> 
        "OHOQEZWSNFNUSY-UHFFFAOYSA-M", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 15, 
        "FractionCarbonSP3" -> 0.465116279, "HeteroatomCount" -> 20, 
        "HeterocycleCount" -> 4, "RotatableBondCount" -> 18, "MolecularMass" -> 
        910.013, "DegreeOfUnsaturation" -> 22, "MinEllipsoidLength" -> 
        400.3408426, "MaxDistance" -> 20.16401853, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 432|>, <|
       "SMILES" -> 
        "CC1(C)C(=CC=CC=CC2=[N+](CCCS(=O)(=O)[O-])c3ccc(S(=O)(=O)[O-])cc3C2(C)\
C)N(CCCCCC([O-])=NCCCCCCN2C(=O)C=CC2=O)c2ccc(S(=O)(=O)[O-])cc21", "InChIKey" -> 
        "ABCCZQUSYBNXBH-UHFFFAOYSA-K", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 14, 
        "FractionCarbonSP3" -> 0.454545455, "HeteroatomCount" -> 19, 
        "HeterocycleCount" -> 3, "RotatableBondCount" -> 22, "MolecularMass" -> 
        926.125, "DegreeOfUnsaturation" -> 22, "MinEllipsoidLength" -> 
        1293.84016, "MaxDistance" -> 26.26523601, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 558|>, <|
       "SMILES" -> "CCN1C=CC(=Cc2cc[n+](CC)c3ccccc23)c2ccccc21", "InChIKey" -> 
        "PBYSOAALDIVUSK-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        233.6739985, "MaxDistance" -> 13.75387538, "LongestPiChain" -> 10, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 641|>, <|
       "SMILES" -> "CC(C)N1C=CC(=Cc2ccc3ccccc3[n+]2C(C)C)c2ccccc21", 
        "InChIKey" -> "TYFOKKOWQOKKCH-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.24, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        355.505, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        182.8707552, "MaxDistance" -> 13.68971612, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 560|>, <|
       "SMILES" -> "CC[n+]1c(CC2C=C(C)N=C(c3ccccc3)N2C)ccc2ccccc12", 
        "InChIKey" -> "WNJQWMVHCPGIAR-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.25, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        356.493, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        241.9193572, "MaxDistance" -> 15.44763567, "LongestPiChain" -> 7, 
        "LinkerLength" -> 1, "MaxAbsorbanceWavelength" -> 382|>, <|
       "SMILES" -> 
        "CC1(C)C(=CC=CC=CC2=[N+](CCCCCC(=O)O)c3ccc(S(=O)(=O)[O-])cc3C2(C)C)N(\
CCCCCC(=O)[O-])c2ccc(S(=O)(=O)O)cc21", "InChIKey" -> 
        "KCJWQEQRJODNIT-UHFFFAOYSA-M", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 2, "HBondAcceptorCount" -> 9, 
        "FractionCarbonSP3" -> 0.432432432, "HeteroatomCount" -> 14, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 17, "MolecularMass" -> 
        741.905, "DegreeOfUnsaturation" -> 17, "MinEllipsoidLength" -> 
        916.9850448, "MaxDistance" -> 20.16225923, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 389|>, <|
       "SMILES" -> 
        "CN1C(=CC=CC=CC2=[N+](CCCCCC(=O)ON3C(=O)CCC3=O)c3ccc(S(=O)(=O)[O-])\
cc3C2(C)C)C(C)(C)c2cc(S(=O)(=O)[O-])ccc21", "InChIKey" -> 
        "QDXSFIRROAQGSO-UHFFFAOYSA-M", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 11, 
        "FractionCarbonSP3" -> 0.388888889, "HeteroatomCount" -> 15, 
        "HeterocycleCount" -> 3, "RotatableBondCount" -> 12, "MolecularMass" -> 
        738.861, "DegreeOfUnsaturation" -> 19, "MinEllipsoidLength" -> 
        590.077869, "MaxDistance" -> 21.66942534, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 532|>, <|
       "SMILES" -> "O=S(=O)(O)c1cc([O-])c(N=Nc2ccc3ccccc3c2O)c2ccccc12", 
        "InChIKey" -> "BRDGZOLJYALNOY-UHFFFAOYSA-M", "AromaticRingCount" -> 4,
         "HBondDonorCount" -> 2, "HBondAcceptorCount" -> 6, 
        "FractionCarbonSP3" -> 0, "HeteroatomCount" -> 8, "HeterocycleCount" -> 
        0, "RotatableBondCount" -> 3, "MolecularMass" -> 393.4, 
        "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 108.9952799, 
        "MaxDistance" -> 10.89445232, "LongestPiChain" -> 12, "LinkerLength" -> 
        3, "MaxAbsorbanceWavelength" -> 730|>, <|
       "SMILES" -> "O=S(=O)(O)c1cc(O)c(N=Nc2c([O-])ccc3ccccc23)c2ccccc12", 
        "InChIKey" -> "ZMLWOOMWRCRLCH-UHFFFAOYSA-M", "AromaticRingCount" -> 4,
         "HBondDonorCount" -> 2, "HBondAcceptorCount" -> 6, 
        "FractionCarbonSP3" -> 0, "HeteroatomCount" -> 8, "HeterocycleCount" -> 
        0, "RotatableBondCount" -> 3, "MolecularMass" -> 393.4, 
        "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 476.6328474, 
        "MaxDistance" -> 13.23808021, "LongestPiChain" -> 11, "LinkerLength" -> 
        3, "MaxAbsorbanceWavelength" -> 787|>, <|
       "SMILES" -> "Cc1ccc(Nc2ccc([O-])c3c2C(=O)c2ccccc2C3=O)c(S(=O)(=O)O)c1",
         "InChIKey" -> "XXQVCGHGQCAKKA-UHFFFAOYSA-M", "AromaticRingCount" -> 
        3, "HBondDonorCount" -> 2, "HBondAcceptorCount" -> 6, 
        "FractionCarbonSP3" -> 0.047619048, "HeteroatomCount" -> 8, 
        "HeterocycleCount" -> 0, "RotatableBondCount" -> 3, "MolecularMass" -> 
        408.411, "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 
        101.1130018, "MaxDistance" -> 11.0084448, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 575|>, <|
       "SMILES" -> "CCN1C=CC(=Cc2ccc3ccccc3[n+]2CC)c2ccccc21", "InChIKey" -> 
        "CJRNTVYQEXDVCB-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        327.451, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        240.2525799, "MaxDistance" -> 13.69988583, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 593|>, <|
       "SMILES" -> "CCN1C(=CC=CC=Cc2sc3ccccc3[n+]2CC)Sc2ccccc21", "InChIKey" -> 
        "FYXWDSGGZAMYFZ-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 5, "MolecularMass" -> 
        391.585, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        383.7194115, "MaxDistance" -> 16.84957989, "LongestPiChain" -> 15, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 600|>, <|
       "SMILES" -> "CC(C)CCN1C=CC(=Cc2cc[n+](CCC(C)C)c3ccccc23)c2ccccc21", 
        "InChIKey" -> "OPYVFVSPWOXGSM-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.344827586, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 7, "MolecularMass" -> 
        411.613, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        563.5079739, "MaxDistance" -> 17.95489426, "LongestPiChain" -> 10, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 633|>, <|
       "SMILES" -> "CCN1C(=CC(C)=Cc2sc3ccccc3[n+]2CC)Sc2ccccc21", "InChIKey" -> 
        "DGBHUSPLAMIWPQ-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.227272727, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        379.574, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        421.2541588, "MaxDistance" -> 15.54769416, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 569|>, <|
       "SMILES" -> "CCN1C(=CC=CC=CC=Cc2ccc3ccccc3[n+]2CC)C=Cc2ccccc21", 
        "InChIKey" -> "PCMCPHHEWAWVOE-UHFFFAOYSA-N", "AromaticRingCount" -> 3,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, 
        "FractionCarbonSP3" -> 0.137931034, "HeteroatomCount" -> 2, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 6, "MolecularMass" -> 
        405.565, "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 
        978.3872391, "MaxDistance" -> 20.55560255, "LongestPiChain" -> 18, 
        "LinkerLength" -> 8, "MaxAbsorbanceWavelength" -> 813|>, <|
       "SMILES" -> 
        "CC[N+]1=C(C=CC=C2N(CCCCCC(=O)[O-])c3ccc(S(=O)(=O)[O-])cc3C2(C)C)C(C)(\
C)c2cc(S(=O)(=O)O)ccc21", "InChIKey" -> "YDNYBBRGPORVRT-UHFFFAOYSA-M", 
        "AromaticRingCount" -> 2, "HBondDonorCount" -> 1, 
        "HBondAcceptorCount" -> 8, "FractionCarbonSP3" -> 0.419354839, 
        "HeteroatomCount" -> 12, "HeterocycleCount" -> 2, 
        "RotatableBondCount" -> 11, "MolecularMass" -> 629.777, 
        "DegreeOfUnsaturation" -> 15, "MinEllipsoidLength" -> 520.439465, 
        "MaxDistance" -> 19.59705059, "LongestPiChain" -> 14, "LinkerLength" -> 
        4, "MaxAbsorbanceWavelength" -> 506|>, <|
       "SMILES" -> 
        "CC1(C)C(=CC=CC2=[N+](CCCCCC(=O)[O-])c3ccc(S(=O)(=O)O)cc3C2(C)C)N(\
CCCCCC(=O)O)c2ccc(S(=O)(=O)[O-])cc21", "InChIKey" -> 
        "AYFNGAVPORGJOD-UHFFFAOYSA-M", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 2, "HBondAcceptorCount" -> 9, 
        "FractionCarbonSP3" -> 0.457142857, "HeteroatomCount" -> 14, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 16, "MolecularMass" -> 
        715.867, "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 
        1698.535741, "MaxDistance" -> 19.09128629, "LongestPiChain" -> 14, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 531|>, <|
       "SMILES" -> 
        "CCN1C(=CC=CC=CC2=[N+](CCCCCC(=O)ON3C(=O)CCC3=O)c3ccc(S(=O)(=O)[O-])\
cc3C2(C)C)C(C)(C)c2cc(S(=O)(=O)[O-])ccc21", "InChIKey" -> 
        "WXWLHDCCGVWTDZ-UHFFFAOYSA-M", "AromaticRingCount" -> 2, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 11, 
        "FractionCarbonSP3" -> 0.405405405, "HeteroatomCount" -> 15, 
        "HeterocycleCount" -> 3, "RotatableBondCount" -> 13, "MolecularMass" -> 
        752.888, "DegreeOfUnsaturation" -> 19, "MinEllipsoidLength" -> 
        524.6561381, "MaxDistance" -> 21.26734865, "LongestPiChain" -> 16, 
        "LinkerLength" -> 6, "MaxAbsorbanceWavelength" -> 488|>, <|
       "SMILES" -> 
        "CN(C)c1ccc(C(=C2C=CC(=[N+](C)C)C=C2)c2ccc(N(Cc3ccccc3)Cc3cccc(S(=O)(=\
O)O)c3)cc2)c(S(=O)(=O)O)c1", "InChIKey" -> "PCDMOSXRPCKDLJ-UHFFFAOYSA-O", 
        "AromaticRingCount" -> 4, "HBondDonorCount" -> 2, 
        "HBondAcceptorCount" -> 6, "FractionCarbonSP3" -> 0.162162162, 
        "HeteroatomCount" -> 11, "HeterocycleCount" -> 0, 
        "RotatableBondCount" -> 10, "MolecularMass" -> 684.86, 
        "DegreeOfUnsaturation" -> 20, "MinEllipsoidLength" -> 697.6015914, 
        "MaxDistance" -> 18.24367261, "LongestPiChain" -> 10, "LinkerLength" -> 
        2, "MaxAbsorbanceWavelength" -> 554|>, <|
       "SMILES" -> 
        "CN(C)c1ccc(C(=C2C=CC(=[N+](C)C)C=C2)c2ccc(N(C)Cc3cccc(S(=O)(=O)O)c3)\
cc2)cc1S(=O)(=O)O", "InChIKey" -> "DCTXQQVUQIODBO-UHFFFAOYSA-O", 
        "AromaticRingCount" -> 3, "HBondDonorCount" -> 2, 
        "HBondAcceptorCount" -> 6, "FractionCarbonSP3" -> 0.193548387, 
        "HeteroatomCount" -> 11, "HeterocycleCount" -> 0, 
        "RotatableBondCount" -> 8, "MolecularMass" -> 608.762, 
        "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 456.2991787, 
        "MaxDistance" -> 18.55364897, "LongestPiChain" -> 10, "LinkerLength" -> 
        2, "MaxAbsorbanceWavelength" -> 516|>, <|
       "SMILES" -> 
        "CC1(C)C(=CC=CC2=[N+](CCCCCC(=O)O)c3ccc(S(=O)(=O)O)cc3C2(C)C)N(CCCCCC(\
=O)O)c2ccc(S(=O)(=O)O)cc21", "InChIKey" -> "AYFNGAVPORGJOD-UHFFFAOYSA-O", 
        "AromaticRingCount" -> 2, "HBondDonorCount" -> 4, 
        "HBondAcceptorCount" -> 7, "FractionCarbonSP3" -> 0.457142857, 
        "HeteroatomCount" -> 14, "HeterocycleCount" -> 2, 
        "RotatableBondCount" -> 16, "MolecularMass" -> 717.883, 
        "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 779.480227, 
        "MaxDistance" -> 20.89949723, "LongestPiChain" -> 14, "LinkerLength" -> 
        4, "MaxAbsorbanceWavelength" -> 536|>, <|
       "SMILES" -> "CN1C(=CC=Cc2[o+]c3ccccc3n2C)Oc2ccccc21", "InChIKey" -> 
        "XLKQLIAYDLMVLG-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 3, 
        "FractionCarbonSP3" -> 0.105263158, "HeteroatomCount" -> 4, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 2, "MolecularMass" -> 
        305.357, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        306.0678397, "MaxDistance" -> 14.6591075, "LongestPiChain" -> 12, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 521|>, <|
       "SMILES" -> "Cc1cc(C=Cc2ccc3cc(N(C)C)ccc3[n+]2C)c(C)n1-c1ccccc1", 
        "InChIKey" -> "QMHSXPLYMTVAMK-UHFFFAOYSA-N", "AromaticRingCount" -> 4,
         "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.192307692, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        382.531, "DegreeOfUnsaturation" -> 14, "MinEllipsoidLength" -> 
        178.5212501, "MaxDistance" -> 12.12650639, "LongestPiChain" -> 15, 
        "LinkerLength" -> 3, "MaxAbsorbanceWavelength" -> 412|>, <|
       "SMILES" -> "CCN1C(=CC=Cc2ccc3ccccc3[n+]2CC)Oc2ccccc21", "InChIKey" -> 
        "QUZOOPRJWZTRMY-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.173913043, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 4, "MolecularMass" -> 
        343.45, "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 
        451.0464647, "MaxDistance" -> 14.60792652, "LongestPiChain" -> 13, 
        "LinkerLength" -> 4, "MaxAbsorbanceWavelength" -> 543|>, <|
       "SMILES" -> "CCN1C=CC(=Cc2sc3ccccc3[n+]2CC)c2ccccc21", "InChIKey" -> 
        "SFTZBFQWPQDHFP-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.19047619, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 3, "MolecularMass" -> 
        333.48, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        238.3608345, "MaxDistance" -> 13.42604877, "LongestPiChain" -> 10, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 591|>, <|
       "SMILES" -> 
        "CC1=C/C(=C(\\c2cc(C)c([O-])c(C(=O)[O-])c2)c2ccccc2S(=O)(=O)O)C=C(C(=\
O)[O-])C1=O", "InChIKey" -> "KXOWVZNVTQLQPD-RGEXLXHISA-K", 
        "AromaticRingCount" -> 2, "HBondDonorCount" -> 1, 
        "HBondAcceptorCount" -> 8, "FractionCarbonSP3" -> 0.086956522, 
        "HeteroatomCount" -> 10, "HeterocycleCount" -> 0, 
        "RotatableBondCount" -> 5, "MolecularMass" -> 467.431, 
        "DegreeOfUnsaturation" -> 18, "MinEllipsoidLength" -> 114.5360135, 
        "MaxDistance" -> 11.21048139, "LongestPiChain" -> 10, "LinkerLength" -> 
        2, "MaxAbsorbanceWavelength" -> 429|>, <|
       "SMILES" -> "CCN1C(=Cc2sc3ccccc3[n+]2C)C=Cc2ccccc21", "InChIKey" -> 
        "FSOAORRRECZDNM-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
        "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 2, 
        "FractionCarbonSP3" -> 0.15, "HeteroatomCount" -> 3, 
        "HeterocycleCount" -> 2, "RotatableBondCount" -> 2, "MolecularMass" -> 
        319.453, "DegreeOfUnsaturation" -> 12, "MinEllipsoidLength" -> 
        187.3228258, "MaxDistance" -> 13.86741555, "LongestPiChain" -> 11, 
        "LinkerLength" -> 2, "MaxAbsorbanceWavelength" -> 442|>, <|
       "SMILES" -> 
        "CCN(Cc1cccc(S(=O)(=O)O)c1)c1ccc(C(=C2C=CC(=[N+](C)C)C=C2)c2ccc(N(C)C)\
cc2)c(S(=O)(=O)O)c1", "InChIKey" -> "CXNNGVUGAQWNGE-UHFFFAOYSA-O", 
        "AromaticRingCount" -> 3, "HBondDonorCount" -> 2, 
        "HBondAcceptorCount" -> 6, "FractionCarbonSP3" -> 0.21875, 
        "HeteroatomCount" -> 11, "HeterocycleCount" -> 0, 
        "RotatableBondCount" -> 9, "MolecularMass" -> 622.789, 
        "DegreeOfUnsaturation" -> 16, "MinEllipsoidLength" -> 412.0404667, 
        "MaxDistance" -> 19.08097566, "LongestPiChain" -> 10, "LinkerLength" -> 
        2, "MaxAbsorbanceWavelength" -> 530|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "SMILES"} -> 
        1, {All, "InChIKey"} -> 1, {All, "AromaticRingCount"} -> 
        1, {All, "HBondDonorCount"} -> 1, {All, "HBondAcceptorCount"} -> 
        1, {All, "FractionCarbonSP3"} -> 1, {All, "HeteroatomCount"} -> 
        1, {All, "HeterocycleCount"} -> 1, {All, "RotatableBondCount"} -> 
        1, {All, "MolecularMass"} -> 1, {All, "DegreeOfUnsaturation"} -> 
        1, {All, "MinEllipsoidLength"} -> 1, {All, "MaxDistance"} -> 
        1, {All, "LongestPiChain"} -> 1, {All, "LinkerLength"} -> 
        1, {All, "MaxAbsorbanceWavelength"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "SMILES" -> TypeSystem`PackageScope`AtomShape[560.], "InChIKey" -> 
            TypeSystem`PackageScope`AtomShape[302.40000000000003`], 
            "AromaticRingCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "HBondDonorCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "HBondAcceptorCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "FractionCarbonSP3" -> TypeSystem`PackageScope`AtomShape[60], 
            "HeteroatomCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "HeterocycleCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "RotatableBondCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "MolecularMass" -> TypeSystem`PackageScope`AtomShape[60], 
            "DegreeOfUnsaturation" -> TypeSystem`PackageScope`AtomShape[34], 
            "MinEllipsoidLength" -> TypeSystem`PackageScope`AtomShape[60], 
            "MaxDistance" -> TypeSystem`PackageScope`AtomShape[60], 
            "LongestPiChain" -> TypeSystem`PackageScope`AtomShape[34], 
            "LinkerLength" -> TypeSystem`PackageScope`AtomShape[34], 
            "MaxAbsorbanceWavelength" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "SMILES", "InChIKey", "AromaticRingCount", "HBondDonorCount", 
         "HBondAcceptorCount", "FractionCarbonSP3", "HeteroatomCount", 
         "HeterocycleCount", "RotatableBondCount", "MolecularMass", 
         "DegreeOfUnsaturation", "MinEllipsoidLength", "MaxDistance", 
         "LongestPiChain", "LinkerLength", "MaxAbsorbanceWavelength"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 113], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "SMILES"} -> 
        1, {All, "InChIKey"} -> 1, {All, "AromaticRingCount"} -> 
        1, {All, "HBondDonorCount"} -> 1, {All, "HBondAcceptorCount"} -> 
        1, {All, "FractionCarbonSP3"} -> 1, {All, "HeteroatomCount"} -> 
        1, {All, "HeterocycleCount"} -> 1, {All, "RotatableBondCount"} -> 
        1, {All, "MolecularMass"} -> 1, {All, "DegreeOfUnsaturation"} -> 
        1, {All, "MinEllipsoidLength"} -> 1, {All, "MaxDistance"} -> 
        1, {All, "LongestPiChain"} -> 1, {All, "LinkerLength"} -> 
        1, {All, "MaxAbsorbanceWavelength"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "SMILES" -> TypeSystem`PackageScope`AtomShape[560.], "InChIKey" -> 
            TypeSystem`PackageScope`AtomShape[302.40000000000003`], 
            "AromaticRingCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "HBondDonorCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "HBondAcceptorCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "FractionCarbonSP3" -> TypeSystem`PackageScope`AtomShape[60], 
            "HeteroatomCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "HeterocycleCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "RotatableBondCount" -> TypeSystem`PackageScope`AtomShape[34], 
            "MolecularMass" -> TypeSystem`PackageScope`AtomShape[60], 
            "DegreeOfUnsaturation" -> TypeSystem`PackageScope`AtomShape[34], 
            "MinEllipsoidLength" -> TypeSystem`PackageScope`AtomShape[60], 
            "MaxDistance" -> TypeSystem`PackageScope`AtomShape[60], 
            "LongestPiChain" -> TypeSystem`PackageScope`AtomShape[34], 
            "LinkerLength" -> TypeSystem`PackageScope`AtomShape[34], 
            "MaxAbsorbanceWavelength" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "SMILES", "InChIKey", "AromaticRingCount", "HBondDonorCount", 
         "HBondAcceptorCount", "FractionCarbonSP3", "HeteroatomCount", 
         "HeterocycleCount", "RotatableBondCount", "MolecularMass", 
         "DegreeOfUnsaturation", "MinEllipsoidLength", "MaxDistance", 
         "LongestPiChain", "LinkerLength", "MaxAbsorbanceWavelength"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 113], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 113, 
     "DataColumnCount" -> 16, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SMILES", 
                  Style[
                  "SMILES", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "SMILES"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "SMILES"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["InChIKey", 
                  Style[
                  "InChIKey", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "InChIKey"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "InChIKey"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["AromaticRingCount", 
                  Style[
                  "AromaticRingCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "AromaticRingCount"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "AromaticRingCount"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HBondDonorCount", 
                  Style[
                  "HBondDonorCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "HBondDonorCount"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "HBondDonorCount"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HBondAcceptorCount", 
                  Style[
                  "HBondAcceptorCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "HBondAcceptorCount"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "HBondAcceptorCount"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FractionCarbonSP3", 
                  Style[
                  "FractionCarbonSP3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "FractionCarbonSP3"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "FractionCarbonSP3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HeteroatomCount", 
                  Style[
                  "HeteroatomCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "HeteroatomCount"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "HeteroatomCount"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HeterocycleCount", 
                  Style[
                  "HeterocycleCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "HeterocycleCount"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "HeterocycleCount"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["RotatableBondCount", 
                  Style[
                  "RotatableBondCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "RotatableBondCount"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "RotatableBondCount"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MolecularMass", 
                  Style[
                  "MolecularMass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MolecularMass"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MolecularMass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["CCN1C(=Cc2[n+](CC)c3ccccc3cc2)C=Cc2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["AGJZCWVTGOVGBS-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.173913"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["327.451"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C(=CC=Cc2[n+](CC)c3ccccc3cc2)C=Cc2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["HQCBCYUEDZNVBO-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["353.489"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C(=CC=CC=Cc2[n+](CC)c3ccccc3cc2)C=Cc2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["HUKKJPBJMKANKC-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.148148"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["379.527"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C=CC(=CC=Cc2cc[n+](CC)c3ccccc23)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TVRUNVZRBXNONE-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["353.489"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1c2ccccc2OC1=CC=Cc1[n+](CC)c2ccccc2o1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["VZUFSMBGWBLOCB-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.190476"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["333.411"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1c2ccccc2OC1=CC=CC=Cc1[n+](CC)c2ccccc2o1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["VAGJCLDZLVQVPR-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.173913"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["359.449"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1c2ccccc2OC1=CC=CC=CC=Cc1[n+](CC)c2ccccc2o1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["YFMAIXBXQGUOBW-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["385.487"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1c2ccccc2SC1=Cc1[n+](CC)c2ccccc2s1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["WCJHMNADZOKGGL-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.210526"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["339.509"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1c2ccccc2SC1=CC=Cc1[n+](CC)c2ccccc2s1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["JGLWGLKNDHZFAP-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.190476"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["365.547"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1c2ccccc2SC1=CC=CC=Cc1[n+](CC)c2ccccc2s1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["FYXWDSGGZAMYFZ-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.173913"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["391.585"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1c2ccccc2SC1=CC=CC=CC=Cc1[n+](CC)c2ccccc2s1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["UMTQICYFVVKJFV-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["417.623"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C=C/C(=C/c2cc[n+](CC)c3ccccc23)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["PBYSOAALDIVUSK-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.173913"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["327.451"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C=C/C(=C/C=C/c2[n+](CC)c3ccccc3o2)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["COUGSHBDUFTYFC-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.173913"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["343.45"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C=C/C(=C\\c2[n+](CC)c3ccccc3cc2)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CJRNTVYQEXDVCB-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.173913"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["327.451"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C=C/C(=C\\C=C\\c2[n+](CC)c3ccccc3cc2)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONKAXOHRKIYFDJ-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["353.489"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "CCN1C=C/C(=C\\C=C\\C=C\\c2[n+](CC)c3ccccc3o2)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QQWIIVKRRBJCBB-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["369.488"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "CCN1C=C/C(=C/C=C/C=C/c2cc[n+](CC)c3ccccc23)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["MLENNECRNUHQQS-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.148148"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["379.527"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "CCN1C=C/C(=C/C=C/C=C/C=C/c2[n+](CC)c3ccccc3s2)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TWHSTEAIMSNAOL-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.148148"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["411.594"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CCN1C=C/C(=C\\C=C\\c2cc[n+](CC)c3ccccc23)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TVRUNVZRBXNONE-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["353.489"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "CCN1C=C/C(=C\\C=C\\C=C\\c2[n+](CC)c3ccccc3s2)c2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["LDIURJODNUMFCD-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["385.556"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 113, 1], {1, 113 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 113, 1], {1, 113 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[113, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[113, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 113, 1], {1, 113 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 113, 1], {1, 113 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]], 
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 16, 1], {1, 16 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 16, 1], {1, 16 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[16, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[16, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 16, 1], {1, 16 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 16, 1], {1, 16 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1286., {309.134033203125, 314.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1286., {309.134033203125, 314.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8801148722869396`*^9, 3.880129828863592*^9, 3.880130123010086*^9, 
   3.8801319110838103`*^9, 3.880212902614788*^9, 3.880213238500801*^9, 
   3.8802134415895243`*^9, 3.880213760727549*^9, 3.8802140954821672`*^9, {
   3.8887575823799324`*^9, 3.888757603476296*^9}, 3.888757698947073*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"b83c0d8a-5360-4917-bc28-69e50c851ebf"]
}, Open  ]],

Cell[TextData[{
 "(A companion function, ",
 ButtonBox["FindAnomalies",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/FindAnomalies.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/FindAnomalies.html"],
 " could be used to extract these anomalies for further investigation and \
visualization). ",
 ButtonBox["DeleteAnomalies",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/DeleteAnomalies.html"], 
    None},
  ButtonNote->
   "http://reference.wolfram.com/language/ref/DeleteAnomalies.html"],
 " has removed 6 anomalous data points, including the outliers that we had \
previously observed in the histogram:"
}], "Text",
 CellChangeTimes->{{3.8727627820792923`*^9, 3.872762784607341*^9}, {
  3.8727628270309896`*^9, 3.8727628533029137`*^9}, {3.8727659549190702`*^9, 
  3.8727660033426437`*^9}, {3.872774473093182*^9, 3.872774479964917*^9}, {
  3.872777321445278*^9, 
  3.872777336797441*^9}},ExpressionUUID->"ab07599e-d074-406b-8295-\
ae0fbeb4164f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataset", "[", 
    RowBox[{"All", ",", "\"\<MaxAbsorbanceWavelength\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872762536889778*^9, 3.87276253749758*^9}, {
  3.87276282498419*^9, 3.872762825911125*^9}, {3.8801298148865533`*^9, 
  3.880129817956973*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"226308c3-4cd0-4a0a-b5f5-3ff0937f6b6a"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.623], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.623], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{350., 0}, {400., 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{20.49137369791663, 51.07467743844694}, {
           77.349744744328, 95.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{400., 0}, {450., 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{50.57467743844694, 81.15798117897725}, {
           34.278794105148044`, 95.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{450., 0}, {500., 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{80.65798117897725, 111.24128491950756`}, {
           51.50717436082003, 95.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{500., 0}, {550., 23.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{110.74128491950756`, 
           141.32458866003782`}, {-103.54824794022782`, 95.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 23]& ,
        TagBoxNote->"23"],
       StyleBox["23", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[23, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{550., 0}, {600., 22.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{140.82458866003782`, 
           171.40789240056813`}, {-94.93405781239183, 95.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 22]& ,
        TagBoxNote->"22"],
       StyleBox["22", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[22, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{600., 0}, {650., 23.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{170.90789240056813`, 
           201.49119614109844`}, {-103.54824794022782`, 95.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 23]& ,
        TagBoxNote->"23"],
       StyleBox["23", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[23, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{650., 0}, {700., 13.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{200.99119614109844`, 
           231.57449988162875`}, {-17.4063466618679, 95.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 13]& ,
        TagBoxNote->"13"],
       StyleBox["13", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[13, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{700., 0}, {750., 11.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{231.07449988162875`, 
           261.65780362215907`}, {-0.17796640619592097`, 95.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{750., 0}, {800., 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{261.15780362215907`, 291.7411073626894}, {
           60.12136448865602, 95.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{800., 0}, {850., 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{291.2411073626894, 321.8244111032197}, {
           77.349744744328, 95.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{850., 0}, {900., 1.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{321.3244111032197, 351.90771484375}, {
           85.96393487216399, 95.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{339., 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{350., 900.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8801148743800087`*^9, {3.8801298183643026`*^9, 3.880129832325436*^9}, 
   3.880130125464357*^9, 3.88013191406134*^9, 3.880212906887166*^9, 
   3.8802132401778097`*^9, 3.880213443319038*^9, 3.8802137623980627`*^9, 
   3.880214097130714*^9, 3.888757603531062*^9, 3.8887577047792945`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"0a1186ae-f32c-4413-a8bc-6d88731ece2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Selection with Structured Datasets", "Subsection",
 CellChangeTimes->{{3.8230991575903063`*^9, 
  3.823099172045245*^9}},ExpressionUUID->"a4dbb9f8-d8e5-450b-b14e-\
c4fd2d4b678f"],

Cell[TextData[{
 "A tabular dataset can be thought of as storing a collection of values in a \
rectangular \[OpenCurlyDoubleQuote]grid\[CloseCurlyDoubleQuote].  We can see \
the size of that grid using the ",
 ButtonBox["Dimensions",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Dimensions.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Dimensions.html"],
 " function:"
}], "Text",
 CellChangeTimes->{{3.823099370706023*^9, 3.823099396956738*^9}, {
  3.823107114940926*^9, 3.8231071242887897`*^9}, {3.8727773761011753`*^9, 
  3.8727773923731813`*^9}},ExpressionUUID->"f369088d-439c-4768-ae4b-\
9f5b4531d086"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dimensions", "[", "dataset", "]"}], 
  RowBox[{"(*", 
   RowBox[{"shape", " ", "of", " ", 
    RowBox[{"dataset", "?"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.872248166557942*^9, 3.872248173148755*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"e3e2283b-0261-4e6c-a2fe-16690d8e555a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"113", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{3.880114874441842*^9, 3.880130125521205*^9, 
  3.880131920482562*^9, 3.8802129069974303`*^9, 3.880213240223626*^9, 
  3.8802134433529572`*^9, 3.8802137624342747`*^9, 3.880214097164668*^9, 
  3.888757603544557*^9, 3.888757711162995*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"f203283e-a24d-48fb-ba94-7e6b24135d89"]
}, Open  ]],

Cell["\<\
(Note:  You can always learn more about built-in Mathematica functions by \
typing ? followed by the function name.  Clicking the \
\[OpenCurlyDoubleQuote]i\[CloseCurlyDoubleQuote] button in the upper right \
hand corner gives more information:\
\>", "Text",
 CellChangeTimes->{{3.8231071267012444`*^9, 
  3.8231071860276337`*^9}},ExpressionUUID->"142181a7-de72-4e99-840b-\
57b9549fa1ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.8231071517366447`*^9, 3.823107154679029*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"0f837ee5-347c-45fb-b0cc-3bc46d420f27"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Dimensions",
              ButtonNote->"paclet:ref/Dimensions"],
             "\"paclet:ref/Dimensions\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Dimensions\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a list of the \
dimensions of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Dimensions\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of the dimensions of \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) down to level \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Dimensions", 
                    "paclet:ref/Dimensions", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Dimensions.\
html"], None}, "http://reference.wolfram.com/language/ref/Dimensions.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"AllowedHeads", "\[Rule]", "Automatic"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Dimensions\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Dimensions",
              ButtonNote->"paclet:ref/Dimensions"],
             "\"paclet:ref/Dimensions\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Dimensions\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a list of the \
dimensions of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Dimensions\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of the dimensions of \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) down to level \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Dimensions\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\
\) gives a list of the dimensions of \!\(\*StyleBox[\"expr\", \"TI\"]\). \n\!\
\(\*RowBox[{\"Dimensions\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
StyleBox[\"n\", \"TI\"]}], \"]\"}]\) gives a list of the dimensions of \
\!\(\*StyleBox[\"expr\", \"TI\"]\) down to level \!\(\*StyleBox[\"n\", \
\"TI\"]\). ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/Dimensions", "Web" -> 
      "http://reference.wolfram.com/language/ref/Dimensions.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> {AllowedHeads -> Automatic}, 
    "Attributes" -> {Protected}, "FullName" -> "System`Dimensions"|>, 
   False]]], "Output",
 CellChangeTimes->{3.8801148749708796`*^9, 3.8801301259484067`*^9, 
  3.8802129075742702`*^9, 3.880213240375105*^9, 3.880213443645295*^9, 
  3.8802137627550755`*^9, 3.880214097462968*^9, 3.8887576037195835`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"b185cd00-c6a7-4c4e-9881-03a3205854dd"]
}, Open  ]],

Cell["\<\
We will often need to access the values stored in particular positions in a \
variable. We can do this by specifying the indices corresponding to that \
position:\
\>", "Text",
 CellChangeTimes->{
  3.8230991793421097`*^9, {3.872777405461329*^9, 
   3.872777407613009*^9}},ExpressionUUID->"a395e22c-f560-4c99-aff7-\
cf5419f86f74"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["variable[[row, column]] ",
  FontSlant->"Italic"],
 "extracts the value at the specified row and column.  "
}], "Item",
 CellChangeTimes->{{3.8230994111126137`*^9, 3.823099426955551*^9}, {
  3.8230995071377172`*^9, 3.823099532222617*^9}, {3.872755314971985*^9, 
  3.872755316708293*^9}, {3.883645847210758*^9, 
  3.883645848583823*^9}},ExpressionUUID->"f8467064-a3f3-4608-a3df-\
125f415b3365"],

Cell["\<\
Note the two square brackets (access the elements in a list of data) as \
opposed to the single brackets used to specify the arguments to a function.\
\>", "Subitem",
 CellChangeTimes->{{3.8230994111126137`*^9, 3.823099426955551*^9}, {
  3.8230995071377172`*^9, 
  3.823099530616314*^9}},ExpressionUUID->"a5286a8d-ea02-4ad8-8184-\
c230f740af52"]
}, Open  ]],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox[";;",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] species a range of values."
}], "Item",
 CellChangeTimes->{{3.8230994111126137`*^9, 3.823099440119391*^9}, 
   3.823099612653792*^9, {3.823099705414146*^9, 
   3.8230997054146*^9}},ExpressionUUID->"165057d2-4e9e-462e-89b7-\
a5ba63475291"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]All\[CloseCurlyDoubleQuote]",
  FontSlant->"Italic"],
 " specifies that we should take all of the values along a dimension."
}], "Item",
 CellChangeTimes->{{3.8230994111126137`*^9, 3.823099440119391*^9}, 
   3.823099612653792*^9, {3.8230997057227163`*^9, 
   3.823099729882*^9}},ExpressionUUID->"ee900886-576d-4edd-b7ee-78b1c6ef6840"],

Cell[TextData[{
 "We can also count the indices from the \[OpenCurlyDoubleQuote]end\
\[CloseCurlyDoubleQuote] using negative numbers, e.g., ",
 StyleBox["variable[[-2]] ",
  FontSlant->"Italic"],
 "returns the second-from-last element."
}], "Item",
 CellChangeTimes->{{3.8230994111126137`*^9, 3.823099455499363*^9}, {
  3.872777413557345*^9, 
  3.872777435789103*^9}},ExpressionUUID->"8e131fae-fed0-481a-aebf-\
32c6a93f2202"],

Cell["\<\
Note that in Mathematica, index values start from 1 (instead of 0 like some \
other programming languages such as C and Python).\
\>", "Item",
 CellChangeTimes->{{3.8230994111126137`*^9, 3.823099475986847*^9}, 
   3.823099609903928*^9, {3.872244290794249*^9, 
   3.8722442932196913`*^9}},ExpressionUUID->"1522bf95-2871-44ec-b209-\
202cb2f7f349"],

Cell["For example:", "Text",
 CellChangeTimes->{
  3.823099484571384*^9},ExpressionUUID->"470e91b1-d5fd-4537-9947-\
164a66e83f21"],

Cell[TextData[{
 StyleBox["dataset[[2;;3, 1]]",
  FontSlant->"Italic"],
 "  take rows 2 and 3 and the first column"
}], "Item",
 CellChangeTimes->{{3.823099634683651*^9, 3.8230996879790497`*^9}, {
  3.823099750980075*^9, 3.823099771059081*^9}, {3.872244270530767*^9, 
  3.8722442713097277`*^9}},ExpressionUUID->"d30a26d8-cd1b-4b9e-b971-\
cedecd08d70c"],

Cell[TextData[{
 StyleBox["dataset[[ All, 1]] ",
  FontSlant->"Italic"],
 "  take all rows and the first column"
}], "Item",
 CellChangeTimes->{{3.823099634683651*^9, 3.823099698656006*^9}, {
  3.8230997333036346`*^9, 3.8230997682127657`*^9}, {3.8722442721273518`*^9, 
  3.872244273207196*^9}},ExpressionUUID->"418ef362-2638-4c6d-98f8-\
e2029ad32777"],

Cell[TextData[{
 StyleBox["dataset[[All, 3;;5]] ",
  FontSlant->"Italic"],
 " take all rows and third through fifth columns"
}], "Item",
 CellChangeTimes->{{3.823099634683651*^9, 3.823099698656006*^9}, {
  3.8230997333036346`*^9, 3.8230997985175037`*^9}, {3.872244274760743*^9, 
  3.8722442758448143`*^9}},ExpressionUUID->"d5ed92a1-fe4e-4297-b99c-\
3ce969f2f3d2"],

Cell["\<\
Try the following examples.  Can you predict what the output will be?\
\>", "Text",
 CellChangeTimes->{{3.8230998065477543`*^9, 
  3.823099822192205*^9}},ExpressionUUID->"c506b615-8af8-47ce-a8ac-\
55955b3e9adb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "access", " ", "an", " ", "entry", " ", "by", " ", "its", " ", 
     "indices"}], ",", " ", 
    RowBox[{"using", " ", "double", " ", "square", " ", "brackets"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.872608888411932*^9, 3.872608911512705*^9}, 
   3.87277745242982*^9, {3.8801319525285616`*^9, 3.8801319531325493`*^9}, {
   3.883645904801343*^9, 3.8836459054314137`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"f691a4d8-286f-4272-ad6b-8a4ec042e59e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "SMILES" -> "CCN1C(=Cc2[n+](CC)c3ccccc3cc2)C=Cc2ccccc21", "InChIKey" -> 
       "AGJZCWVTGOVGBS-UHFFFAOYSA-N", "AromaticRingCount" -> 3, 
       "HBondDonorCount" -> 0, "HBondAcceptorCount" -> 1, "FractionCarbonSP3" -> 
       0.173913043, "HeteroatomCount" -> 2, "HeterocycleCount" -> 2, 
       "RotatableBondCount" -> 3, "MolecularMass" -> 327.451, 
       "DegreeOfUnsaturation" -> 13, "MinEllipsoidLength" -> 121.7298744, 
       "MaxDistance" -> 13.50310487, "LongestPiChain" -> 12, "LinkerLength" -> 
       2, "MaxAbsorbanceWavelength" -> 529|>, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"SMILES"} -> 
        TypeSystem`PackageScope`AtomShape[470.40000000000003`], {"InChIKey"} -> 
        TypeSystem`PackageScope`AtomShape[302.40000000000003`], {
         "AromaticRingCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"HBondDonorCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"HBondAcceptorCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"FractionCarbonSP3"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"HeteroatomCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"HeterocycleCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"RotatableBondCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"MolecularMass"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"DegreeOfUnsaturation"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"MinEllipsoidLength"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"MaxDistance"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"LongestPiChain"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"LinkerLength"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"MaxAbsorbanceWavelength"} -> 
        TypeSystem`PackageScope`AtomShape[34]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "SMILES", "InChIKey", "AromaticRingCount", "HBondDonorCount", 
        "HBondAcceptorCount", "FractionCarbonSP3", "HeteroatomCount", 
        "HeterocycleCount", "RotatableBondCount", "MolecularMass", 
        "DegreeOfUnsaturation", "MinEllipsoidLength", "MaxDistance", 
        "LongestPiChain", "LinkerLength", "MaxAbsorbanceWavelength"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"SMILES"} -> 
        TypeSystem`PackageScope`AtomShape[470.40000000000003`], {"InChIKey"} -> 
        TypeSystem`PackageScope`AtomShape[302.40000000000003`], {
         "AromaticRingCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"HBondDonorCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"HBondAcceptorCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"FractionCarbonSP3"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"HeteroatomCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"HeterocycleCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"RotatableBondCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"MolecularMass"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"DegreeOfUnsaturation"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"MinEllipsoidLength"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"MaxDistance"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"LongestPiChain"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"LinkerLength"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"MaxAbsorbanceWavelength"} -> 
        TypeSystem`PackageScope`AtomShape[34]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "SMILES", "InChIKey", "AromaticRingCount", "HBondDonorCount", 
        "HBondAcceptorCount", "FractionCarbonSP3", "HeteroatomCount", 
        "HeterocycleCount", "RotatableBondCount", "MolecularMass", 
        "DegreeOfUnsaturation", "MinEllipsoidLength", "MaxDistance", 
        "LongestPiChain", "LinkerLength", "MaxAbsorbanceWavelength"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 16, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SMILES", 
                  Style[
                  "SMILES", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SMILES"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SMILES"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["CCN1C(=Cc2[n+](CC)c3ccccc3cc2)C=Cc2ccccc21", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SMILES"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["InChIKey", 
                  Style[
                  "InChIKey", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["InChIKey"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["InChIKey"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["AGJZCWVTGOVGBS-UHFFFAOYSA-N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["InChIKey"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["AromaticRingCount", 
                  Style[
                  "AromaticRingCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["AromaticRingCount"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["AromaticRingCount"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["AromaticRingCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HBondDonorCount", 
                  Style[
                  "HBondDonorCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["HBondDonorCount"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HBondDonorCount"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HBondDonorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HBondAcceptorCount", 
                  Style[
                  "HBondAcceptorCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["HBondAcceptorCount"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HBondAcceptorCount"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HBondAcceptorCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FractionCarbonSP3", 
                  Style[
                  "FractionCarbonSP3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FractionCarbonSP3"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FractionCarbonSP3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.173913"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FractionCarbonSP3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HeteroatomCount", 
                  Style[
                  "HeteroatomCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["HeteroatomCount"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HeteroatomCount"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HeteroatomCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HeterocycleCount", 
                  Style[
                  "HeterocycleCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["HeterocycleCount"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HeterocycleCount"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HeterocycleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["RotatableBondCount", 
                  Style[
                  "RotatableBondCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["RotatableBondCount"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["RotatableBondCount"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["RotatableBondCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MolecularMass", 
                  Style[
                  "MolecularMass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["MolecularMass"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MolecularMass"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["327.451"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MolecularMass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DegreeOfUnsaturation", 
                  Style[
                  "DegreeOfUnsaturation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DegreeOfUnsaturation"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DegreeOfUnsaturation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DegreeOfUnsaturation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MinEllipsoidLength", 
                  Style[
                  "MinEllipsoidLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["MinEllipsoidLength"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MinEllipsoidLength"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["121.73"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MinEllipsoidLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MaxDistance", 
                  Style[
                  "MaxDistance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["MaxDistance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MaxDistance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.5031"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MaxDistance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LongestPiChain", 
                  Style[
                  "LongestPiChain", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["LongestPiChain"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LongestPiChain"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LongestPiChain"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LinkerLength", 
                  Style[
                  "LinkerLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["LinkerLength"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LinkerLength"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LinkerLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MaxAbsorbanceWavelength", 
                  Style[
                  "MaxAbsorbanceWavelength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["MaxAbsorbanceWavelength"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MaxAbsorbanceWavelength"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["529"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MaxAbsorbanceWavelength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = T\
ypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{651., {221.634033203125, 227.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{651., {221.634033203125, 227.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.88011487521246*^9, 3.8801301261985297`*^9, 
  3.880131953960271*^9, 3.880212907839566*^9, 3.880213240517651*^9, 
  3.8802134437330666`*^9, 3.880213762850187*^9, 3.880214097585641*^9, 
  3.8887576037425117`*^9, 3.888757729191134*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"bb0a1568-5f9c-4187-8ed7-222dde49d88d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"access", " ", "entry", " ", "by", " ", "its", " ", "indices"}], 
    ",", " ", 
    RowBox[{"using", " ", "double", " ", "square", " ", "brackets"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.823044475011709*^9, 3.823044535109525*^9}, {
  3.872244266979138*^9, 3.872244267708309*^9}, {3.880131965305663*^9, 
  3.880131965416129*^9}, {3.883645909841445*^9, 3.8836459133816977`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"9e4ce3d9-c9fe-4b8d-b272-7a7277c12007"],

Cell[BoxData[
 RowBox[{"Join", "[", "$Failed", "]"}]], "Output",
 CellChangeTimes->{{3.880131967850659*^9, 3.8801319736759973`*^9}, 
   3.8802129086563773`*^9, 3.8802132408120103`*^9, 3.880213444069187*^9, 
   3.880213763199215*^9, 3.8802140979246798`*^9, 3.888757603748497*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"f25d7f76-fc62-4025-a33e-677c795e9ac8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "3"}], ",", " ", 
     RowBox[{"1", ";;", "10"}]}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "get", " ", "first", " ", "3", " ", "rows", " ", "and", " ", "the", " ", 
     "first", " ", "10", " ", "columns", " ", "using", " ", "`"}], ";;", 
    "`"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.872244317446878*^9, 3.872244318090406*^9}, {
  3.883645931873567*^9, 3.8836459382133207`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"96e79342-33e3-455b-8fb1-16ca0bbac6e9"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"1\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \\!\\(\\*RowBox[{\\\"DeleteAnomalies\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"KeyDrop\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Chi0n\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Chi1n\\\\\\\"\\\
\", \\\",\\\", \\\"\\\\\\\"Chi2n\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Chi3n\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Chi4n\\\\\\\"\\\"}], \\\
\"}\\\"}], \\\"]\\\"}], \\\"[\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\).\"", 2, 30, 12, 
   20716169269655768981, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8887576038073397`*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"d4f1dd57-0912-489b-8a59-b61617e3436b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteAnomalies", "[", 
   RowBox[{
    RowBox[{"KeyDrop", "[", 
     RowBox[{"{", 
      RowBox[{"\<\"Chi0n\"\>", ",", "\<\"Chi1n\"\>", ",", "\<\"Chi2n\"\>", 
       ",", "\<\"Chi3n\"\>", ",", "\<\"Chi4n\"\>"}], "}"}], "]"}], "[", 
    RowBox[{"Join", "[", "$Failed", "]"}], "]"}], "]"}], 
  "\[LeftDoubleBracket]", 
  RowBox[{
   RowBox[{"1", ";;", "3"}], ",", 
   RowBox[{"1", ";;", "10"}]}], "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.88011487566636*^9, 3.880130126680287*^9, 
  3.8801319765487113`*^9, 3.88021290894522*^9, 3.880213240942684*^9, 
  3.8802134441808968`*^9, 3.8802137633115683`*^9, 3.8802140980369577`*^9, 
  3.8887576038235607`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"1b02a7d1-e676-43e0-b1f0-fc6e18962744"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "predict", " ", "what", " ", "the", " ", "output", " ", "of", " ", "this", 
    " ", "line", " ", "of", " ", "code", " ", "will", " ", "be"}], " ", 
   "*)"}], "\n", 
  RowBox[{"dataset", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "3"}], ",", 
     RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.823099845079996*^9, 3.823099861901079*^9}, {
  3.8231003211240873`*^9, 3.8231003239084806`*^9}, {3.872244319210251*^9, 
  3.872244320257564*^9}, {3.87297060077875*^9, 3.872970601578815*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"e8763933-77d2-4e0c-8d42-6cc902ff954e"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"1\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \\!\\(\\*RowBox[{\\\"DeleteAnomalies\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"KeyDrop\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Chi0n\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Chi1n\\\\\\\"\\\
\", \\\",\\\", \\\"\\\\\\\"Chi2n\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Chi3n\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Chi4n\\\\\\\"\\\"}], \\\
\"}\\\"}], \\\"]\\\"}], \\\"[\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\).\"", 2, 31, 13, 
   20716169269655768981, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8887576038374896`*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"9f133cff-8757-40f6-9d54-67bdae105d4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteAnomalies", "[", 
   RowBox[{
    RowBox[{"KeyDrop", "[", 
     RowBox[{"{", 
      RowBox[{"\<\"Chi0n\"\>", ",", "\<\"Chi1n\"\>", ",", "\<\"Chi2n\"\>", 
       ",", "\<\"Chi3n\"\>", ",", "\<\"Chi4n\"\>"}], "}"}], "]"}], "[", 
    RowBox[{"Join", "[", "$Failed", "]"}], "]"}], "]"}], 
  "\[LeftDoubleBracket]", 
  RowBox[{
   RowBox[{"1", ";;", "3"}], ",", 
   RowBox[{"1", ";;", "3"}]}], "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.880114876068059*^9, 3.8801301272291574`*^9, 
  3.880131979316345*^9, 3.880212909933932*^9, 3.8802132414620833`*^9, 
  3.8802134444904394`*^9, 3.8802137636202517`*^9, 3.8802140983364415`*^9, 
  3.8887576038791533`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"311bfb96-c9bf-42be-a4dd-25b6156541b6"]
}, Open  ]],

Cell["\<\
The columns in datasets can also be addressed by name.  For example, the \
SMILES column in the first few rows:\
\>", "Text",
 CellChangeTimes->{{3.823100329295319*^9, 
  3.8231003626459837`*^9}},ExpressionUUID->"67f18ed1-2f06-4e52-8a39-\
526d415d1a2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"1", ";;", "3"}], ",", "\"\<SMILES\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.823100363733984*^9, 3.823100380545808*^9}, {
  3.872244323432725*^9, 3.87224432575511*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"4f9e27c8-5a28-4985-8cc7-316fd0ee0b81"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"1\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \\!\\(\\*RowBox[{\\\"DeleteAnomalies\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"KeyDrop\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Chi0n\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Chi1n\\\\\\\"\\\
\", \\\",\\\", \\\"\\\\\\\"Chi2n\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Chi3n\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Chi4n\\\\\\\"\\\"}], \\\
\"}\\\"}], \\\"]\\\"}], \\\"[\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\).\"", 2, 32, 14, 
   20716169269655768981, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888757603886788*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"364ab829-b87c-4b31-96ee-9db25170840e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteAnomalies", "[", 
   RowBox[{
    RowBox[{"KeyDrop", "[", 
     RowBox[{"{", 
      RowBox[{"\<\"Chi0n\"\>", ",", "\<\"Chi1n\"\>", ",", "\<\"Chi2n\"\>", 
       ",", "\<\"Chi3n\"\>", ",", "\<\"Chi4n\"\>"}], "}"}], "]"}], "[", 
    RowBox[{"Join", "[", "$Failed", "]"}], "]"}], "]"}], 
  "\[LeftDoubleBracket]", 
  RowBox[{
   RowBox[{"1", ";;", "3"}], ",", "\<\"SMILES\"\>"}], 
  "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.880114876352429*^9, 3.880130127541464*^9, 
  3.8801319824352903`*^9, 3.8802129105297966`*^9, 3.880213241668927*^9, 
  3.8802134446807165`*^9, 3.8802137638091927`*^9, 3.880214098529154*^9, 
  3.888757603896761*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"2d33cfd2-b1fd-4306-9eaa-ec29b204807f"]
}, Open  ]],

Cell["\<\
This can also be generalized to select a collection of columns  by providing \
a list as input:\
\>", "Text",
 CellChangeTimes->{{3.872608844138666*^9, 
  3.872608867671411*^9}},ExpressionUUID->"d6713763-bd9d-4272-89ce-\
84165f24090e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"1", ";;", "3"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<MolecularMass\>\"", ",", "\"\<MaxAbsorbanceWavelength\>\""}], 
     "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8726088619444313`*^9, 3.8726088622050247`*^9}, {
  3.872608920463801*^9, 3.8726089320335093`*^9}, {3.880129850644046*^9, 
  3.8801298551662846`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"e8011728-cbbd-4fd1-bb1e-992b6e31d780"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"1\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \\!\\(\\*RowBox[{\\\"DeleteAnomalies\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"KeyDrop\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Chi0n\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Chi1n\\\\\\\"\\\
\", \\\",\\\", \\\"\\\\\\\"Chi2n\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Chi3n\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Chi4n\\\\\\\"\\\"}], \\\
\"}\\\"}], \\\"]\\\"}], \\\"[\\\", RowBox[{\\\"Join\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\).\"", 2, 33, 15, 
   20716169269655768981, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888757603903783*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"6933893d-a22a-4a59-9ec7-5e3f5cee7df2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteAnomalies", "[", 
   RowBox[{
    RowBox[{"KeyDrop", "[", 
     RowBox[{"{", 
      RowBox[{"\<\"Chi0n\"\>", ",", "\<\"Chi1n\"\>", ",", "\<\"Chi2n\"\>", 
       ",", "\<\"Chi3n\"\>", ",", "\<\"Chi4n\"\>"}], "}"}], "]"}], "[", 
    RowBox[{"Join", "[", "$Failed", "]"}], "]"}], "]"}], 
  "\[LeftDoubleBracket]", 
  RowBox[{
   RowBox[{"1", ";;", "3"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MolecularMass\"\>", ",", "\<\"MaxAbsorbanceWavelength\"\>"}],
     "}"}]}], "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.8801148769138513`*^9, 3.8801298554757805`*^9, 
  3.880130127802763*^9, 3.880131987000489*^9, 3.880212911055153*^9, 
  3.8802132418789206`*^9, 3.8802134448458424`*^9, 3.880213763967943*^9, 
  3.880214098685446*^9, 3.8887576039137154`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"5a2ce2a0-e2e9-4973-887b-33b3234606e5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualizing molecular structure", "Subsection",
 CellChangeTimes->{{3.8224062335479193`*^9, 3.8224062364663963`*^9}, {
  3.823076398982312*^9, 3.823076400197507*^9}, {3.8231116305442133`*^9, 
  3.82311163679956*^9}},ExpressionUUID->"def53aa9-b486-4e59-b4fc-\
3c7aae82815f"],

Cell[TextData[{
 "To continue familiarizing ourselves with the dataset, we can visualize the \
structures of the different cyanine dyes.  Before we do so, let\
\[CloseCurlyQuote]s first get a quick overview of making and plotting \
molecules in general in Mathematica.  The ",
 ButtonBox["Molecule",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Molecule.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Molecule.html"],
 " function can take input names (either in machine-readable ",
 ButtonBox["SMILES",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_\
system"], None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_\
system"],
 " or human-readable ",
 ButtonBox["IUPAC name",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/IUPAC_nomenclature_of_organic_\
chemistry"], None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/IUPAC_nomenclature_of_organic_chemistry"],
 ") and covert them into a machine representation: "
}], "Text",
 CellChangeTimes->{{3.822406544021036*^9, 3.822406556405654*^9}, {
  3.822408601128043*^9, 3.822408627169105*^9}, {3.823076406397807*^9, 
  3.823076416709776*^9}, {3.8231116393223877`*^9, 3.823111698365699*^9}, {
  3.872777488408393*^9, 3.87277752021838*^9}, {3.873800050451808*^9, 
  3.8738000868314476`*^9}, {3.880131996598996*^9, 
  3.8801320053010426`*^9}},ExpressionUUID->"99ec7554-c192-40bf-abde-\
8d461e746548"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mol", "=", 
  RowBox[{"Molecule", "[", "\"\<CN(C)C(=N)N(C)C\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8224064736999617`*^9, 3.822406495197997*^9}, {
  3.82311172263205*^9, 3.8231117237085133`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"b9d8ee84-b330-427c-9349-bc0f137eb20e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Molecule",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               AbsoluteThickness[1.3], {
                StyleBox[{
                  
                  LineBox[{{1.4611111111111108`, -0.6735753140545634}, {
                   1.2567043402777776`, -0.3195324015601419}}], 
                  
                  LineBox[{{1.2567043402777778`, 0.7044325810198925}, {
                   1.4611111111111112`, 1.058475493514314}}], 
                  
                  LineBox[{{0.38131356944444444`, 
                   0.19245008972987532`}, {-0.03888888888888891, 
                   0.1924500897298753}}], 
                  
                  LineBox[{{{-0.03888888888888891, 
                   0.1924500897298753}, {-0.24329565972222225`, 
                   0.5464930022242968}}, {{0.01503415956524369, 
                   0.3390526301083191}, {-0.16437261126808966`, 
                   0.6497942724135186}}}], 
                  
                  LineBox[{{-0.03888888888888891, 
                   0.1924500897298753}, {-0.2432956597222222, \
-0.16159282276454615`}}], 
                  
                  LineBox[{{-1.1186864305555555`, -0.6735753140545633}, \
{-1.5388888888888888`, -0.6735753140545632}}], 
                  
                  LineBox[{{-0.24329565972222214`, -1.1855578053445806`}, \
{-0.0388888888888888, -1.539600717839002}}]}, {
                  RGBColor[0.4, 0.4, 0.4]}, StripOnInput -> False], 
                StyleBox[{
                  
                  LineBox[{{1.2567043402777776`, -0.3195324015601419}, {
                   1.0522975694444443`, 0.03451051093427959}}], 
                  LineBox[{{1.0522975694444443`, 0.35038966852547104`}, {
                   1.2567043402777778`, 0.7044325810198925}}], 
                  
                  LineBox[{{0.8015160277777778, 0.19245008972987535`}, {
                   0.38131356944444444`, 0.19245008972987532`}}], 
                  
                  LineBox[{{{-0.24329565972222225`, 
                   0.5464930022242968}, {-0.4477024305555556, 
                   0.9005359147187182}}, {{-0.16437261126808966`, 
                   0.6497942724135186}, {-0.343779382101423, 
                   0.9605359147187181}}}], 
                  
                  LineBox[{{-0.2432956597222222, -0.16159282276454615`}, \
{-0.4477024305555555, -0.5156357352589676}}], 
                  
                  LineBox[{{-0.698483972222222, -0.6735753140545633}, \
{-1.1186864305555555`, -0.6735753140545633}}], 
                  
                  LineBox[{{-0.4477024305555555, -0.831514892850159}, \
{-0.24329565972222214`, -1.1855578053445806`}}], 
                  
                  LineBox[{{-0.6984839722222221, 
                   1.058475493514314}, {-0.8640723055555557, 
                   1.058475493514314}}]}, {
                  RGBColor[0.291989, 0.437977, 0.888609]}, StripOnInput -> 
                 False], 
                StyleBox[{
                  
                  LineBox[{{-0.8640723055555557, 
                   1.058475493514314}, {-1.0296606388888891`, 
                   1.0584754935143137`}}]}, {
                  RGBColor[0.433333, 0.466667, 0.466667]}, StripOnInput -> 
                 False]}}, {
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{1.4611111111111108`, -0.6735753140545634}, 0.2]}, 
                 "1"], Annotation[#, 1, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{{
                   RGBColor[0.292, 0.438, 0.889], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{0.8765160277777777, 0.08507717306320871}, {
                    0.8765160277777777, 0.29982300639654197`}, {
                    0.9056665277777777, 0.29982300639654197`}, {
                    1.0184595277777777`, 0.13121983972987536`}, {
                    1.0184595277777777`, 0.29982300639654197`}, {
                    1.0457061944444443`, 0.29982300639654197`}, {
                    1.0457061944444443`, 0.08507717306320871}, {
                    1.0165551944444444`, 0.08507717306320871}, {
                    0.9037621944444444, 0.253828006396542}, {
                    0.9037621944444444, 0.08507717306320871}}}]}}, "2"], 
                Annotation[#, 2, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{1.4611111111111112`, 1.058475493514314}, 0.2]}, 
                 "3"], Annotation[#, 3, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{-0.03888888888888891, 0.1924500897298753}, 0.2]}, 
                 "4"], Annotation[#, 4, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{{
                   RGBColor[0.292, 0.438, 0.889], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-0.6234839722222222, 
                    0.9511025768476472}, {-0.6234839722222222, 
                    1.1658484101809805`}, {-0.5943334722222222, 
                    1.1658484101809805`}, {-0.48154047222222224`, 
                    0.9972452435143139}, {-0.48154047222222224`, 
                    1.1658484101809805`}, {-0.45429380555555554`, 
                    1.1658484101809805`}, {-0.45429380555555554`, 
                    0.9511025768476472}, {-0.4834448055555556, 
                    0.9511025768476472}, {-0.5962378055555555, 
                    1.1198534101809805`}, {-0.5962378055555555, 
                    0.9511025768476472}}}]}}, "5"], 
                Annotation[#, 5, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{{
                   RGBColor[0.292, 0.438, 0.889], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-0.6234839722222221, -0.78094823072123}, \
{-0.6234839722222221, -0.5662023973878967}, {-0.5943334722222221, \
-0.5662023973878967}, {-0.4815404722222221, -0.7348055640545633}, \
{-0.4815404722222221, -0.5662023973878967}, {-0.45429380555555543`, \
-0.5662023973878967}, {-0.45429380555555543`, -0.78094823072123}, \
{-0.48344480555555547`, -0.78094823072123}, {-0.5962378055555554, \
-0.6121973973878967}, {-0.5962378055555554, -0.78094823072123}}}]}}, "6"], 
                Annotation[#, 6, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{-1.5388888888888888`, -0.6735753140545632}, 0.2]}, 
                 "7"], Annotation[#, 7, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{-0.0388888888888888, -1.539600717839002}, 0.2]}, 
                 "8"], Annotation[#, 8, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{{
                   RGBColor[0.433, 0.467, 0.467], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{-1.273117138888889, 
                    0.951102576847647}, {-1.273117138888889, 
                    1.1658484101809803`}, {-1.2446993055555557`, 
                    1.1658484101809803`}, {-1.2446993055555557`, 
                    1.077665076847647}, {-1.133078138888889, 
                    1.077665076847647}, {-1.133078138888889, 
                    1.1658484101809803`}, {-1.1046606388888893`, 
                    1.1658484101809803`}, {-1.1046606388888893`, 
                    0.951102576847647}, {-1.133078138888889, 
                    0.951102576847647}, {-1.133078138888889, 
                    1.0523234101809804`}, {-1.2446993055555557`, 
                    1.0523234101809804`}, {-1.2446993055555557`, 
                    0.951102576847647}}}]}}, "15"], 
                Annotation[#, 15, "Tooltip"]& ]}}, Frame -> True, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> None, ImageSize -> Dynamic[{
                UpTo[
                8.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])], 
                UpTo[
                4.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}], {
             AspectRatio -> 0.8849156361468187, 
              PlotRangePadding -> {0.08, 0.0707932508917455}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Formula: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    SubscriptBox["\"C\"", "5"], 
                    SubscriptBox["\"H\"", "13"], 
                    SubscriptBox["\"N\"", "3"]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Atoms: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["21", 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Explicit: \"", "SummaryItemAnnotation", StripOnInput -> 
                    False], "8"}, {
                    StyleBox[
                    "\"Implicit: \"", "SummaryItemAnnotation", StripOnInput -> 
                    False], "13"}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]], Annotation[#, 
                    Grid[{{
                    Style["Explicit: ", "SummaryItemAnnotation"], 8}, {
                    Style["Implicit: ", "SummaryItemAnnotation"], 13}}], 
                    "Tooltip"]& ], "SummaryItem"]}], "\"  \"", 
                  RowBox[{
                    TagBox["\"Bonds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["20", 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Explicit: \"", "SummaryItemAnnotation", StripOnInput -> 
                    False], "7"}, {
                    StyleBox[
                    "\"Implicit: \"", "SummaryItemAnnotation", StripOnInput -> 
                    False], "13"}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]], Annotation[#, 
                    Grid[{{
                    Style["Explicit: ", "SummaryItemAnnotation"], 7}, {
                    Style["Implicit: ", "SummaryItemAnnotation"], 13}}], 
                    "Tooltip"]& ], "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               AbsoluteThickness[1.3], {
                StyleBox[{
                  
                  LineBox[{{1.4611111111111108`, -0.6735753140545634}, {
                   1.2567043402777776`, -0.3195324015601419}}], 
                  
                  LineBox[{{1.2567043402777778`, 0.7044325810198925}, {
                   1.4611111111111112`, 1.058475493514314}}], 
                  
                  LineBox[{{0.38131356944444444`, 
                   0.19245008972987532`}, {-0.03888888888888891, 
                   0.1924500897298753}}], 
                  
                  LineBox[{{{-0.03888888888888891, 
                   0.1924500897298753}, {-0.24329565972222225`, 
                   0.5464930022242968}}, {{0.01503415956524369, 
                   0.3390526301083191}, {-0.16437261126808966`, 
                   0.6497942724135186}}}], 
                  
                  LineBox[{{-0.03888888888888891, 
                   0.1924500897298753}, {-0.2432956597222222, \
-0.16159282276454615`}}], 
                  
                  LineBox[{{-1.1186864305555555`, -0.6735753140545633}, \
{-1.5388888888888888`, -0.6735753140545632}}], 
                  
                  LineBox[{{-0.24329565972222214`, -1.1855578053445806`}, \
{-0.0388888888888888, -1.539600717839002}}]}, {
                  RGBColor[0.4, 0.4, 0.4]}, StripOnInput -> False], 
                StyleBox[{
                  
                  LineBox[{{1.2567043402777776`, -0.3195324015601419}, {
                   1.0522975694444443`, 0.03451051093427959}}], 
                  
                  LineBox[{{1.0522975694444443`, 0.35038966852547104`}, {
                   1.2567043402777778`, 0.7044325810198925}}], 
                  
                  LineBox[{{0.8015160277777778, 0.19245008972987535`}, {
                   0.38131356944444444`, 0.19245008972987532`}}], 
                  
                  LineBox[{{{-0.24329565972222225`, 
                   0.5464930022242968}, {-0.4477024305555556, 
                   0.9005359147187182}}, {{-0.16437261126808966`, 
                   0.6497942724135186}, {-0.343779382101423, 
                   0.9605359147187181}}}], 
                  
                  LineBox[{{-0.2432956597222222, -0.16159282276454615`}, \
{-0.4477024305555555, -0.5156357352589676}}], 
                  
                  LineBox[{{-0.698483972222222, -0.6735753140545633}, \
{-1.1186864305555555`, -0.6735753140545633}}], 
                  
                  LineBox[{{-0.4477024305555555, -0.831514892850159}, \
{-0.24329565972222214`, -1.1855578053445806`}}], 
                  
                  LineBox[{{-0.6984839722222221, 
                   1.058475493514314}, {-0.8640723055555557, 
                   1.058475493514314}}]}, {
                  RGBColor[0.291989, 0.437977, 0.888609]}, StripOnInput -> 
                 False], 
                StyleBox[{
                  
                  LineBox[{{-0.8640723055555557, 
                   1.058475493514314}, {-1.0296606388888891`, 
                   1.0584754935143137`}}]}, {
                  RGBColor[0.433333, 0.466667, 0.466667]}, StripOnInput -> 
                 False]}}, {
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{1.4611111111111108`, -0.6735753140545634}, 0.2]}, 
                 "1"], Annotation[#, 1, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{{
                   RGBColor[0.292, 0.438, 0.889], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{0.8765160277777777, 0.08507717306320871}, {
                    0.8765160277777777, 0.29982300639654197`}, {
                    0.9056665277777777, 0.29982300639654197`}, {
                    1.0184595277777777`, 0.13121983972987536`}, {
                    1.0184595277777777`, 0.29982300639654197`}, {
                    1.0457061944444443`, 0.29982300639654197`}, {
                    1.0457061944444443`, 0.08507717306320871}, {
                    1.0165551944444444`, 0.08507717306320871}, {
                    0.9037621944444444, 0.253828006396542}, {
                    0.9037621944444444, 0.08507717306320871}}}]}}, "2"], 
                Annotation[#, 2, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{1.4611111111111112`, 1.058475493514314}, 0.2]}, 
                 "3"], Annotation[#, 3, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{-0.03888888888888891, 0.1924500897298753}, 0.2]}, 
                 "4"], Annotation[#, 4, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{{
                   RGBColor[0.292, 0.438, 0.889], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-0.6234839722222222, 
                    0.9511025768476472}, {-0.6234839722222222, 
                    1.1658484101809805`}, {-0.5943334722222222, 
                    1.1658484101809805`}, {-0.48154047222222224`, 
                    0.9972452435143139}, {-0.48154047222222224`, 
                    1.1658484101809805`}, {-0.45429380555555554`, 
                    1.1658484101809805`}, {-0.45429380555555554`, 
                    0.9511025768476472}, {-0.4834448055555556, 
                    0.9511025768476472}, {-0.5962378055555555, 
                    1.1198534101809805`}, {-0.5962378055555555, 
                    0.9511025768476472}}}]}}, "5"], 
                Annotation[#, 5, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{{
                   RGBColor[0.292, 0.438, 0.889], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-0.6234839722222221, -0.78094823072123}, \
{-0.6234839722222221, -0.5662023973878967}, {-0.5943334722222221, \
-0.5662023973878967}, {-0.4815404722222221, -0.7348055640545633}, \
{-0.4815404722222221, -0.5662023973878967}, {-0.45429380555555543`, \
-0.5662023973878967}, {-0.45429380555555543`, -0.78094823072123}, \
{-0.48344480555555547`, -0.78094823072123}, {-0.5962378055555554, \
-0.6121973973878967}, {-0.5962378055555554, -0.78094823072123}}}]}}, "6"], 
                Annotation[#, 6, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{-1.5388888888888888`, -0.6735753140545632}, 0.2]}, 
                 "7"], Annotation[#, 7, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{-0.0388888888888888, -1.539600717839002}, 0.2]}, 
                 "8"], Annotation[#, 8, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{{
                   RGBColor[0.433, 0.467, 0.467], 
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{-1.273117138888889, 
                    0.951102576847647}, {-1.273117138888889, 
                    1.1658484101809803`}, {-1.2446993055555557`, 
                    1.1658484101809803`}, {-1.2446993055555557`, 
                    1.077665076847647}, {-1.133078138888889, 
                    1.077665076847647}, {-1.133078138888889, 
                    1.1658484101809803`}, {-1.1046606388888893`, 
                    1.1658484101809803`}, {-1.1046606388888893`, 
                    0.951102576847647}, {-1.133078138888889, 
                    0.951102576847647}, {-1.133078138888889, 
                    1.0523234101809804`}, {-1.2446993055555557`, 
                    1.0523234101809804`}, {-1.2446993055555557`, 
                    0.951102576847647}}}]}}, "15"], 
                Annotation[#, 15, "Tooltip"]& ]}}, Frame -> True, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> None, ImageSize -> Dynamic[{
                UpTo[
                8.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])], 
                UpTo[
                4.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}], {
             AspectRatio -> 0.8849156361468187, 
              PlotRangePadding -> {0.08, 0.0707932508917455}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Formula: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    SubscriptBox["\"C\"", "5"], 
                    SubscriptBox["\"H\"", "13"], 
                    SubscriptBox["\"N\"", "3"]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Atoms: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["21", 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Explicit: \"", "SummaryItemAnnotation", StripOnInput -> 
                    False], "8"}, {
                    StyleBox[
                    "\"Implicit: \"", "SummaryItemAnnotation", StripOnInput -> 
                    False], "13"}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]], Annotation[#, 
                    Grid[{{
                    Style["Explicit: ", "SummaryItemAnnotation"], 8}, {
                    Style["Implicit: ", "SummaryItemAnnotation"], 13}}], 
                    "Tooltip"]& ], "SummaryItem"]}], "\"  \"", 
                  RowBox[{
                    TagBox["\"Bonds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TooltipBox["20", 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Explicit: \"", "SummaryItemAnnotation", StripOnInput -> 
                    False], "7"}, {
                    StyleBox[
                    "\"Implicit: \"", "SummaryItemAnnotation", StripOnInput -> 
                    False], "13"}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]], Annotation[#, 
                    Grid[{{
                    Style["Explicit: ", "SummaryItemAnnotation"], 7}, {
                    Style["Implicit: ", "SummaryItemAnnotation"], 13}}], 
                    "Tooltip"]& ], "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"SMILES: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                  "\"CN(C)C(=N)N(C)C\"", ImageSize -> {{1, 300}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"InChIKey: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"KYVBNYUBXIEUFW-UHFFFAOYSA-N\"", "SummaryItem"]}]}},
              GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Molecule[{"C", "N", "C", "C", "N", "N", "C", "C"}, {
    Bond[{1, 2}, "Single"], 
    Bond[{2, 3}, "Single"], 
    Bond[{2, 4}, "Single"], 
    Bond[{4, 5}, "Double"], 
    Bond[{4, 6}, "Single"], 
    Bond[{6, 7}, "Single"], 
    Bond[{6, 8}, "Single"]}, {}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8801148823374166`*^9, 3.880130133285974*^9, 
  3.8801320127529025`*^9, 3.880212919409917*^9, 3.880213242294256*^9, 
  3.88021344706083*^9, 3.8802137655813365`*^9, 3.880214100344349*^9, 
  3.888757606236786*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"c00260e5-b3b7-4c52-9d7e-05b12def086c"]
}, Open  ]],

Cell[TextData[{
 "The ",
 ButtonBox["MoleculePlot",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/MoleculePlot.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/MoleculePlot.html"],
 " function takes a Molecule as an input and returns a two-dimensional figure:"
}], "Text",
 CellChangeTimes->{{3.8231117034337893`*^9, 3.823111755417042*^9}, {
  3.8801320151611805`*^9, 
  3.880132016458391*^9}},ExpressionUUID->"2dd8dcfb-0037-47fc-975a-\
69051713573b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MoleculePlot", "[", "mol", "]"}]], "Input",
 CellChangeTimes->{{3.822406517189495*^9, 3.822406521235197*^9}, {
  3.823111706959717*^9, 3.823111728692659*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"c81d5410-8cff-48fe-affb-76c43e572785"],

Cell[BoxData[
 GraphicsBox[{
   {AbsoluteThickness[1.3], 
    {RGBColor[0.4, 0.4, 0.4], 
     LineBox[{{1.4611111111111108`, -0.6735753140545634}, {
      1.2567043402777776`, -0.3195324015601419}}], 
     LineBox[{{1.2567043402777778`, 0.7044325810198925}, {1.4611111111111112`,
       1.058475493514314}}], 
     LineBox[{{0.38131356944444444`, 
      0.19245008972987532`}, {-0.03888888888888891, 0.1924500897298753}}], 
     LineBox[{{{-0.03888888888888891, 
      0.1924500897298753}, {-0.24329565972222225`, 0.5464930022242968}}, {{
      0.01503415956524369, 0.3390526301083191}, {-0.16437261126808966`, 
      0.6497942724135186}}}], 
     LineBox[{{-0.03888888888888891, 
      0.1924500897298753}, {-0.2432956597222222, -0.16159282276454615`}}], 
     LineBox[{{-1.1186864305555555`, -0.6735753140545633}, \
{-1.5388888888888888`, -0.6735753140545632}}], 
     LineBox[{{-0.24329565972222214`, -1.1855578053445806`}, \
{-0.0388888888888888, -1.539600717839002}}]}, 
    {RGBColor[0.291989, 0.437977, 0.888609], 
     LineBox[{{1.2567043402777776`, -0.3195324015601419}, {
      1.0522975694444443`, 0.03451051093427959}}], 
     LineBox[{{1.0522975694444443`, 0.35038966852547104`}, {
      1.2567043402777778`, 0.7044325810198925}}], 
     LineBox[{{0.8015160277777778, 0.19245008972987535`}, {
      0.38131356944444444`, 0.19245008972987532`}}], 
     LineBox[{{{-0.24329565972222225`, 
      0.5464930022242968}, {-0.4477024305555556, 
      0.9005359147187182}}, {{-0.16437261126808966`, 
      0.6497942724135186}, {-0.343779382101423, 0.9605359147187181}}}], 
     LineBox[{{-0.2432956597222222, -0.16159282276454615`}, \
{-0.4477024305555555, -0.5156357352589676}}], 
     LineBox[{{-0.698483972222222, -0.6735753140545633}, \
{-1.1186864305555555`, -0.6735753140545633}}], 
     LineBox[{{-0.4477024305555555, -0.831514892850159}, \
{-0.24329565972222214`, -1.1855578053445806`}}], 
     LineBox[{{-0.6984839722222221, 1.058475493514314}, {-0.8640723055555557, 
      1.058475493514314}}]}, 
    {RGBColor[0.433333, 0.466667, 0.466667], 
     LineBox[{{-0.8640723055555557, 1.058475493514314}, {-1.0296606388888891`,
       1.0584754935143137`}}]}}, {
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{1.4611111111111108, -0.6735753140545634}, 0.2]},
      "1"],
     Annotation[#, 1, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.292, 0.438, 0.889], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
        0.8765160277777777, 0.08507717306320871}, {0.8765160277777777, 
        0.29982300639654197`}, {0.9056665277777777, 0.29982300639654197`}, {
        1.0184595277777777`, 0.13121983972987536`}, {1.0184595277777777`, 
        0.29982300639654197`}, {1.0457061944444443`, 0.29982300639654197`}, {
        1.0457061944444443`, 0.08507717306320871}, {1.0165551944444444`, 
        0.08507717306320871}, {0.9037621944444444, 0.253828006396542}, {
        0.9037621944444444, 0.08507717306320871}}}]},
      "2"],
     Annotation[#, 2, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{1.4611111111111112, 1.058475493514314}, 0.2]},
      "3"],
     Annotation[#, 3, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{-0.03888888888888891, 0.1924500897298753}, 0.2]},
      "4"],
     Annotation[#, 4, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.292, 0.438, 0.889], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}}}, {{{-0.6234839722222222, 
        0.9511025768476472}, {-0.6234839722222222, 
        1.1658484101809805`}, {-0.5943334722222222, 
        1.1658484101809805`}, {-0.48154047222222224`, 
        0.9972452435143139}, {-0.48154047222222224`, 
        1.1658484101809805`}, {-0.45429380555555554`, 
        1.1658484101809805`}, {-0.45429380555555554`, 
        0.9511025768476472}, {-0.4834448055555556, 
        0.9511025768476472}, {-0.5962378055555555, 
        1.1198534101809805`}, {-0.5962378055555555, 0.9511025768476472}}}]},
      "5"],
     Annotation[#, 5, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.292, 0.438, 0.889], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}}}, {{{-0.6234839722222221, -0.78094823072123}, \
{-0.6234839722222221, -0.5662023973878967}, {-0.5943334722222221, \
-0.5662023973878967}, {-0.4815404722222221, -0.7348055640545633}, \
{-0.4815404722222221, -0.5662023973878967}, {-0.45429380555555543`, \
-0.5662023973878967}, {-0.45429380555555543`, -0.78094823072123}, \
{-0.48344480555555547`, -0.78094823072123}, {-0.5962378055555554, \
-0.6121973973878967}, {-0.5962378055555554, -0.78094823072123}}}]},
      "6"],
     Annotation[#, 6, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{-1.5388888888888888, -0.6735753140545632}, 0.2]},
      "7"],
     Annotation[#, 7, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{-0.0388888888888888, -1.539600717839002}, 0.2]},
      "8"],
     Annotation[#, 8, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.433, 0.467, 0.467], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}}}, {{{-1.273117138888889, 0.951102576847647}, {-1.273117138888889, 
        1.1658484101809803`}, {-1.2446993055555557`, 
        1.1658484101809803`}, {-1.2446993055555557`, 
        1.077665076847647}, {-1.133078138888889, 
        1.077665076847647}, {-1.133078138888889, 
        1.1658484101809803`}, {-1.1046606388888893`, 
        1.1658484101809803`}, {-1.1046606388888893`, 
        0.951102576847647}, {-1.133078138888889, 
        0.951102576847647}, {-1.133078138888889, 
        1.0523234101809804`}, {-1.2446993055555557`, 
        1.0523234101809804`}, {-1.2446993055555557`, 0.951102576847647}}}]},
      "15"],
     Annotation[#, 15, "Tooltip"]& ]}},
  ImageSizeRaw->182.75533973233308`]], "Output",
 CellChangeTimes->{3.8801148826506042`*^9, 3.8801301336616945`*^9, 
  3.880132027219325*^9, 3.8802129200009584`*^9, 3.880213242539987*^9, 
  3.880213447369752*^9, 3.8802137658571424`*^9, 3.8802141006250896`*^9, 
  3.888757606385523*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"60e4ad9a-ff04-4c40-8529-cc755331f665"]
}, Open  ]],

Cell[TextData[{
 "What do you think ",
 ButtonBox["MoleculePlot3D",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/MoleculePlot3D.html"], 
    None},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/MoleculePlot3D.html"],
 " does?  (After you run the code below, be sure to click and drag the result \
to rotate the molecule!)"
}], "Text",
 CellChangeTimes->{{3.823111762992073*^9, 3.823111778958506*^9}, {
  3.872777529069409*^9, 3.872777542789508*^9}, {3.873800174898383*^9, 
  3.8738002510097666`*^9}, {3.883646223479395*^9, 
  3.883646236271546*^9}},ExpressionUUID->"9f3b5f93-d2a5-4ed2-be45-\
87b536320f37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MoleculePlot3D", "[", "mol", "]"}]], "Input",
 CellChangeTimes->{{3.8224065273990593`*^9, 3.822406527929311*^9}, {
  3.823111759467663*^9, 3.8231117611686993`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"fab79c80-4a14-475d-97d5-224e09951b03"],

Cell[BoxData[
 Graphics3DBox[
  {EdgeForm[None], Specularity[
    GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJwBYQSe+yFib1JlAgAAAC4AAAADAAAA60W8GGeDA0D8xsGZuHvcP6Q5ED8h
/tS/HuJe7oXa8j/p9LvmX4PQv9ojvVPXcba/PlM63ewe9T+Uyop7M632vwP3
ULgJVuk/dDAL2dWcmT/yCXGepsTfP4CaUYTbGaG/GNhkcQzUrz8R9oU0tp38
PzQnAaOSq7W/1ZzIm65U8r+gCg5GI2HMv7hL5Cbf860/pzkGXAl3AsDOqOvP
iN3VP/44xLmejOc/5Q16Mtfq97+Cg8AeyVvxv2gGJpMzKPG/HtgelmzXAkDw
DcG/1uPxPzzfAAHCA/O/7jY5kyjvCUB837P4o+HQv/Ar3bxl5eG/3ojrk+Tg
BUBVuOgmomnwP5ZEdQp7reE/otWlKPeY9j+jGOXeUILxvwdHNKNuWf0/ggQC
ORKzAUDZFQMEXPT/v5LofKVLA+E/RdY5VjAW3j/nXHKP/dAAwMHTzIU+4uY/
NB95eM577L94e8BwUCwBQHyFtrc4JLK/w9/XZQ2xBsBRH7g/c8rwP/BFwL3L
nbY/Q8BXpPANCMBwTd7m6Ojcv/jgfgKgW/A//vosCpETAMBXoD3PRXDrP0gC
oOe5evo/tn3Uurp1/r+PEaq82Sbfv9yfIQ0pTf6//RT68if3AcCnfG+BeC/9
v3TrFb7Fvui//iBWapwg5L9f3mzX6zL6v7KZMyFoOPe/+rbrD6rw/D8opAtm
sfC3P5qC/xOXmsq/rprMZbn88z/Oxzl1C87qv4hS2c3Oh9Y/4A7DRflA4z8U
KmpvjYK+Pxrx5RXF/q6/wi8m+zKTuL/K0jhseVnyP6KISbhAL6m/9rMNVTdy
xz/EZelvZjXyPyMwBQngoLG/uf9dXJtUvb//8YdLZgbgP1xd4q43IZi/yl/u
mcrRs7+UrK2yv6/8P0vxkMzyJrO/+stxJIMRxT/mL9KlgHzfP1IGMjEbI6a/
8ZuphevSyT+OP162rIv8Px1dcXkyMLi/E3BkRDvu4b+iBGr7FJTBP3BiJUUH
tIk/EojqqWCh+7/4jZKz3LOuP7l9Mqzca9k/XVUh58If9b/WRIKH7efkvwrk
7pmUOOC/BI9t12ktA0CvfzHmxALpP6XtxFBKQ+i/bL761Ue5BkAAzxtCKTS3
P8JIZVx2ZNy/ZOdT1iWyBEAUKllNkIjnPxCftKupubw/cBTwAvLb9T+c8Tct
whf0v0Rhrr85AvU/IS6fp4hC/D828Ma/x1D7v8rv5q6qLOU/z8jI8nik7D8x
wjdNlyf8v2LlDh8kHOg/s9FisY1+2r+AdgOLK3v/P1jWW63l57O/tQzvYAuU
BMCECbNz1UHmP7xBfDFYYNo/9fwuAH1CBcCIkspbgC2sv3f9YF/vIew/UpoZ
M01FAcBfupkbhS/jP2QPQaKEIPM/zkWn9kgw+7/mB+uNfyXpvyLTI1Cuuve/
8Bs3jJPs/b8UABjQoEX3vyL8MHKWh+2/Mo/Ss5L98L/wsBZ7Wsf1vw3QLNpN
MPS/Ss1Txw==
    "], {{
      {RGBColor[0.4, 0.4, 0.4], SphereBox[{1, 3, 4, 7, 8}, 0.34]}, 
      {RGBColor[0.65, 0.7, 0.7], 
       SphereBox[{9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21}, 0.24]}, 
      {RGBColor[0.291989, 0.437977, 0.888609], 
       SphereBox[{2, 5, 6}, 0.32000000000000006`]}}, {{
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{1, 22}, 0.15]}, 
       {RGBColor[0.291989, 0.437977, 0.888609], CylinderBox[{22, 2}, 0.15]}}, {
       {RGBColor[0.291989, 0.437977, 0.888609], CylinderBox[{2, 23}, 0.15]}, 
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{23, 3}, 0.15]}}, {
       {RGBColor[0.291989, 0.437977, 0.888609], CylinderBox[{2, 24}, 0.15]}, 
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{24, 4}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{27, 25}, 0.08]}, 
       {RGBColor[0.291989, 0.437977, 0.888609], CylinderBox[{25, 28}, 0.08]}, 
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{29, 26}, 0.08]}, 
       {RGBColor[0.291989, 0.437977, 0.888609], 
        CylinderBox[{26, 30}, 0.08]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{4, 31}, 0.15]}, 
       {RGBColor[0.291989, 0.437977, 0.888609], CylinderBox[{31, 6}, 0.15]}}, {
       {RGBColor[0.291989, 0.437977, 0.888609], CylinderBox[{6, 32}, 0.15]}, 
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{32, 7}, 0.15]}}, {
       {RGBColor[0.291989, 0.437977, 0.888609], CylinderBox[{6, 33}, 0.15]}, 
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{33, 8}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{1, 34}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{34, 9}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{1, 35}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{35, 10}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{1, 36}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{36, 11}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{3, 37}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{37, 12}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{3, 38}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{38, 13}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{3, 39}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{39, 14}, 0.15]}}, {
       {RGBColor[0.291989, 0.437977, 0.888609], CylinderBox[{5, 40}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{40, 15}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{7, 41}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{41, 16}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{7, 42}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{42, 17}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{7, 43}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{43, 18}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{8, 44}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{44, 19}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{8, 45}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{45, 20}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{8, 46}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{46, 21}, 0.15]}}}, 
     {Opacity[0.7]}}]},
  Boxed->False,
  Lighting->"Neutral",
  Method->{
   "ShrinkWrap" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  ViewPoint->{-0.04042000547627311, -0.13426891290859388`, 
   3.3770901797529245`}]], "Output",
 CellChangeTimes->{3.880114882827697*^9, 3.880130133880413*^9, 
  3.880132031614976*^9, 3.8802129206057825`*^9, 3.880213242697563*^9, 
  3.880213447534453*^9, 3.8802137660362606`*^9, 3.880214100789687*^9, 
  3.8887576064992027`*^9},
 CellLabel->"Out[36]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
CPXcM7jYG3GkXpqErtT2N/rqQDrTUKZzk/e+d54MwT5JnIZnn3GQA6b9Qqp7
4yGzHh0RG678IERwvFMg5ofIHucVQtdaxCz3NTHL2wpZLh/DYbHzGSfDCLha
MYlrkAoGMVbAtSbuqIMK6ziXl2FIbTyz17SH8LRzjS7RgPqXxg4ZcKFtaDgr
Krmo4OBfhsawuA/3w8uNNbe3luW41FDstBYeW8NZboe4GAygwdsqlc9pCUe+
OeGsOyS9aQf1oCQ6TbWfFK1S3+xFyquIrN8oqjmtmV2QQlvKYc4epYphToE6
0qQfIF9T3PbI88/n+ZqpjNXCkHPFD2CM116kwrk4smg9mdo0ets2awmYShzr
Xg3N93NGWVOsyjlOcm/KHasTx3TkIlokYK1yzcWfDY21qqPSvMpoKQL7uyEC
+4t5BHZuv9dyG6XDXL1vJwIbLxfGixNdVBhlQnO4UuaDwAN1KE67i10E3Yn+
CV/cbTe9xlDQZ3pI2Ol3nZfyd0cZ8/INvulcAoPBjIEb8jOUTZrG6JCqPMah
mIHBYLghL3BzoDC/IflgEbhD+HEtChdB50YHvk8PCxMM+mtq9kihr74EqUg4
fiBBqidEvOSW4qV6WUYEZxhvvfXWiMQPvxWBlGMjEJK/T81xracsPZgpYSOe
el6XeZHK0uIDWpW+khJEXg81LrzprxV2TEG3hPoX+US0yAw9JRM/9Ej+f96o
ah3LZMdb7g3cD0lF5g1NeTvMVJ3urISmfvifRFNLF0yeeCH3bK3Zi1BdUjA5
fAHtuuCNoMmN77IuiFAk0n+S/5H4C1ozchfB1RlFHbITR0B4EGD+H7/fZ4OE
MHnALXyZi3Ax5w1uCPEvya6owkwMkutwPWcC7ulMgDDAMmNhQJ0UM1ySC9cO
wwg7S1UeLewMzCQk4hFG/xaFgZkewh5wzCQJviAVO+AwY1RKc/qXtMmPQmhb
zOLHXuEckIMOMnCp6W2N4lOSy2tZcwau91Z+wzkglXbo927kSSvcUeIA3atL
COngnAO6Z0kJW+9hLwyY4q6PTGGuTQApHeqbV7cFQGo67C6ddZQPu99GJPwt
TRzQNYEsOxFF2akLYUEMCFY3Xp36WyGhKsnqROXS1QkrUH1BYCLvOjevo4/a
oDXtDdQG1fFf3X5vaeoqcEbBEc4NsBY3g6qHYs0qimdgXCcNyO7FGBALeLqh
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
8iOscGaANN+IkIZT0NCT6LylgDSXLwHS9AwR43/W4Bj/VMastpr9Xg7qJ7G1
B+3lzX639WYlKUWEPMCUJtJGdHxteOODu+3W977ttut+9/rr03iGCIPaubki
JHR4SAaKkD8yEO7p6I5xuD8UA0WXdJUDr8Q8hfQ3NhHDDIPy66Qx1HnWBrAR
FEE5wFd81NmIy3BJeNNZiCFwe4c/QHmHP0QcAX+IYC3DH1hCLFKHVySU/0l7
8ptuMn1CLUnq5sBV5IPCYeIqESPss97bR0mJfR4J5aechZx97omVu6U7sEKB
DtDRT7wklgdWpz5ZZAFw/DOoYgKlPRJL4XrUdaXCdQfNAAh1dzmwQNaHrtUj
hfLVnICsAomV7qHGZShj6CFprdoTvZ3EgKVCUkMnBiROWtV+T0LnzFtTI9/C
K3imagc7VNSLaUoVF/2QcEUYhWXW6sFfvda/8267dc1YZx2Kxn7fbrNuP/HG
DtZacVaV7cGp1NvlrFYOmrJrPHCVsQ7WARrF2Eogixr3FOmQwcDf9FxkwXvT
LYmIj/M1HpHzXHk518Ft4EgvikexIGJgya4uwzNS7oBnKCXgGSzGaygrMlFJ
VIIbYTESlki5Jj6Q+PPbbrstPz6a9R9Dcs5tIDIvdV0EcoaGKiits1OezEUB
+Xn22JUpnMiyKFPZh6qaJXCZrl+HrcV8/07M7XGj5j7VV8V8fVJIRxh9Te4h
P5BcvwNbBLgNlWnQEvAtOcBtEN4rZRqkvE2GQKZBXtm3NtV+r0BbJqui62UL
0WJDZrJ7355UbSS1ZbIUr4996lNt1sRnuP1LiyZ9fN5Gm21mLXvOtltuWkBF
58Ny/H8ZJpZ9ABxXuX92afiwlbO/7Cgt8yA2jjOe2zpY7PwF7WHBp7+ClvpU
7TP2eb7HIzIn145MyVgYF0gSlUfuEsHoMFJEhSBCGPFmDmkDKiRoHWbj8zAg
jIjO4zWYEyb2kqgwsQfpRPi4uAQfXxwCPkZujPDR9V+5k8mt3t4o5UrjSUgl
s4pgvJ+k4KOekn4skiL0vXJhFq4Nx3MfAopgydhSyRsjyL7rPaG7+8gcZlq9
uD0JtvO2fbFreilz/H+V2DAEzFxSZsMX8syGVKS/NsV+dwAzBxprlfqm7dAi
E7lcTA1upNwEh5U4WoAI+6VOS/zl/33TX32moe8DJShxcZYNY32Sdkx5ViXs
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
ZxSWvPoBLd+QwLaUvOplM4jxPlLDjRnviTlz3myLJ3r6b8BLNBSo9VB5QK12
dbaooXZgzpfxMCUZnqsWhqc7ZpwvaX9uqDYerHhnMg2T6ZrahCdTpJp3JbNK
6akKtDlnwJbJOYMnBsrFL1Pnv9oIw518BgzKkomiu2XRJf4cZ79XZ7Er+RP8
jVnMKB3xFvwZ/HbeW5oRWV3qUsOoWGi0qEstPsSfx/kbbvmf/OpXwziIE/pF
qAJ/ME74CCwLu/J1zum5JKyPYNYt+w8+7DB06Yk2m73oAl6ZShVLqJaRr3uU
qvRo2TyNetRRbxWHQuZwDJwD6cMCsAJsgbvGuRRPDx4fONVTL+BY/serxNEN
flxMSk5oXf+VdV8rFvNO6tCxe7UiW1YhW82loe/NkxSbu+qqq4Js83y5iUNm
y36zRbZst6b5WZF3VS2KEGfznwK2fdpegO1nbMjDCHoecJVus00d1qxNbfIK
lZnTTj2TWjIvUPKcfi5BSAcK1sIgNfnwFgZenv2kZv+LOV3M/1Jb1ujXrDnJ
L+j4xMSotGJZZdVV12liUAvf3FojLZoeJvXO+Syq3f27n07N6ZuYU3sC63P1
k1L3gNi/ypsqFBWAvWB8aj3i5SBliOTtONrN7463gAf2CW/zMc7R+Sq8DZ8j
kAHB3O6kvBnAnNXXWitn1DVmLbPMMsaoVfWwWqVuVPmRott3KFXqpmkM30iM
qX0RC9XWLRg0pgDDfJifuIDxGXHYggqlJRRAmPRgzlZRo7hm3RfbSg9WMRzj
8m7dbwPI5mX1Vuxcs5xz676Iil6sh+k9tw1aBcO/XRwbmbKc7wniEfrpnjFj
Ru2AnCPRODHeKefIdZrORT0WcZdE57un+CPnSM4ygLDeTrzwiJZ6MMeGInDi
d6pdL8YLgMhzkt+FqLAzkvXGd6VK+7WsnGPPjNy5Rv/GUizl5uhughKMhV28
f0r6+mKCtXbcFTkTs1OjK1RmKlRfbnUS2zhYElhy2Flw6tVXa9Muv+YaYTBO
tHG0856FoKfkr5gYfX4qOMqMmaXs014ZB7XEn1bTrqpcRqtcSAzSGHUZoa4f
tA6lRMvVtUItl5phy7o9nWHM5SGXOG/pz4YWxeoE13o2MKewMC0alHMUrFfO
c5xBHe8OpUnLDMrAqwCsFsYAbF7hcsW88kopEZe4N284SYeCT2kxQBlL8q21
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
PM/jPqDC30OgsIJkgAIt810P8kleeeWVmbZQBtVINJGck21YorLQz1iTYwU2
Mv0agEYIGIAV4MXfH3744dTA7psi1Dg2AAZ/4zgcIyoT6b7AqSGabAhB/gsg
A9D8gnC/OrNT9IB4EnmB3WY4NWJ8l5xzySXq1KDnh4Z6/htRA9H9llIDITIh
NTjOUYOxepYb12wgQqYjSBPzbkhMUygczkjUxo4gvBFO8g9XaXvOFFWJADSn
oPhGr+VWIpPU8gbZHblROiPHLJFPNbO6U/HKjp06qyq3RMX756n4KV7Fq7yK
z/EqPi9W8S0Kq3hl7/V2dCq+me5+SHZUNDKXOK80prmL75PpnOTgK/Sb48AJ
3icZYAlbWnlf3keHhoqOm36jM6JHWRQqSz5GdJzMDLqFTlHygkGnBCZwOeRj
R9N7hZGPPB2HhEAIePyfQt3/JRYXXUanky4EZIFALO9L7jp0IczigzVyvqrO
un4yS6GgqMfjAg55voNvHLLdyOaXq+9wxhlVYu0IW453ujxwVWy2XApNVqHN
/qYZNvv75tps+SjUZldXV7ADzGvyEgrh4uyIldv6lfKcO5kO7LXlnWYHW4Su
DIp64sXUvlhN51LIfUh9ajluMwrdGsvRcsyf77mnes/Ro2NNXn3NvhoOKKjJ
v29Mk09KaPLZTpN3LaTJfxVNvjPU5Kq+Q/ZxmrxOLcOvQkPdlBaHVbhNDeBK
iw0kx7yg+VqzQmVNx7xUcXKBRJIwACIYURSZlOpNN91UBO3OtFEWjZ0k+Idb
jg5RWYsui73OErrMrB1HEPAPkqoMLcBUEzGAJuD9Q9bJgRhZr6FIjFHocELm
O4nahmS9gSl2q2M7NNjUCB5hf7HDukzYM3Ut/XBMfZGYqoott902c1Sou7+u
Haa2ghxxU3ZYwCa2wyLuZocXmx2eN8/Z4VatxjjtraXj0GzwPn4ogpatEnn2
c0Jxs2MbXCBdgwbeFqRr7vclebaePq0Q7MZVLwTTT04+waqd99gj0N51mqG9
B6yi9i4Q7b022mLUnwppb3W/TY9w2luq+yoLDeJtbJ1moc2Cyd7qNI6N5qLR
op7Ffq56oRhjYzOBAQ2oNqqKPkGByTMS4yeRSNkWJhF9osQLdYFu8xxMMckH
0V/55DHIXfP0FzqPGcYvJ9rHexh1pugCtDDqjJlNoc5KnPNMbVJfbb3OGfKY
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
X5/34n0JMWHp5PyWCBpk/udC0atkZrDwhqtUou8nggPfwqHePTmhNTGYLzYz
eIjezBCeJy1PtRIped1dzjz866/X5A+xIZJBtgU5qT7WcI3ZwITQ5P3R119H
X/7wA2sRMkV+pDsNie+KarEhhAle1nhtasTzTYVQyTvcUtWh3Xv2zOTpz6r5
G97UEIm9885Mp0ZNDXGjxkwNOgqr8sYknkonNyoqt9iiiDqLNnyFmVZacsHZ
yl/RJc4+s6teyf6lRcVtRaG6V7bvtE51h24bikKVaSFUnw18e248vyPZ9ei7
dgp1Psb17r6lYvvTXLeYmCM7llrS2IWJV3vlFrlrWCp2X1KUbPyz0U4ToG7e
bVG3/E11uZ278r/ALHkFE0VBwcaKEu0z8/to3Gk/Rgec8X30x7O/jw4488do
XNXKaL/Tf5bbD3L/+2jMqdy+i0aL4o2e/p2o3DdR+bSvndKpwi3X1zdlwzyi
9MLr6uW8tWrwXadsebaKibIttVVI1ji5D6fDsRnhSw3ibrdgDmDo2IS2yiJX
FGLFfM47NeQRmApGV7htMQ4DsLo6lQlh+PLYKrFD7CD51PO5nwJlg+N9sGKF
Dqpk1AyKqdMOxOGB4zHgwxSO1+T1b7nvvqFr9+5tyra9/uz7mxorPByWiKYZ
K8E5r2DFoYI5p150Kot6ZfnmirSjtkjRkr4e9z+dl+Smm8rR9fJCld26daMj
Y7he2SGqfG3adyfNtqhTz01V+ahg6OMLsU351gkbS3zLcU75TkxRvmle+U7N
U764fW6HuH0u2pDGk10uVI7I83nO4DLhjDueG8cUyDPnllveklNI/KlAIXdE
IfGlNI7gueJE4Ypq8YwnfqgWCsWB/40SRRo93ZTxJ1HGn6KDzvkpqjj/5+hQ
uVWcF0WHXRDJYyujg2f/GB141o/RvlU/RfvIsWNn/RSNmfljNPrUH0RBvxWr
iHJ+pdZQLaFYVt4THrnrMa8pWAw/5NHyjj03ybzjEgHlQizUAjLedlUtIFK4
r1g7Ig7JXoWwyc/6FeLhnN4CWrSBIJtlSJRABk6W7SXW4JoopQbXfNs7ztES
P9iMMSNEFljs84k4V186xQz1ku10DDG2/SXoJhNJ4kkkopvxtEFhcoIDQ7t0
7Zqvly03gnR35xvBDs0ygn+lkkkgCiMKRPpB9PIamLvieJyOH8mqOpdVHSyO
B/n5W4luI26t/+VPoK48ZYnQH/TSVUJNcHq5Wg/0sqZzr61ru/ffxcckDnJD
rTY+rOHMingUAHo5qeHcirjLenrQ0npa0NZ6ltfLczWeZw0VcYX77pe7lp24
unih6nKOpV7g0ut+EmK8vM/HuF3s7+F842m6esxSzcooO/U+HbGOnOGsV8Mp
fFP1bJ9ZP4qBjKI/ik6ip+MvXBkdeUkUHTcvik64MoqOvTyKxldH0eEX/Rwd
ct7K6MCzo2jf01eK3v7s9fZH0VtnXDGso7xB3UveR3VWDDf+JaxVzrVaMND0
9VcxokjmIazPkL/v4UugyoNZ6nljpP0sdaKDGNGpoRElKCIWhYA4NXoxW/XO
nqZ8fCDcRlQ8KMYOxXrMT7piwhWBkbr6emWtK0RBE/r6gdfXZX58rOpsXZ36
gDwde2rDuSCutz3wAB0jpq/Df6EdJQXfXDt622236aec2MPlSKkzhOE+lSxa
mOU7E3tJXJfOse11WKacqSgq/+dxvlU5vla+8dLWrVu7UWjHelewV8GASePD
ZU7IH4Y0bErQqZnsPT8tv//cFNXK/2NFdf11uIqbWOcTSSeqBbQV5U9xGwDu
Iy0CWtilm50C9ouL6YMzFFiRoNLAvQYuG1PekPV+7IyssFSUC+M4Zsb3orw/
qfIedK4o6IWRKu7EK6LopIVRNP0Guf3J3T9eFPmoS6PoCPn7oWKA9z8rivY7
8+do3BmixKrIP3oD/JMo8ffy+t/K+3ylYAFwYPAhADuOf36RkJPM27+ywUVc
x4si7+KZcGhwlQUHBpeOetsYpqPP/QBoy2qFBldZsIgxLBh3U3O2wYwZFBhj
C3PFSsKE0USUmKHPH4m2ita6JXydNIjDSBwNdAoh5hDG5zKLEWVmNiOT7Rgq
CjlmXyV2nCCOeLgdi5OK/GsY3jZ5hhfSizLTkIPhPfPMMzVoKa5jyh7KTNa7
lTbYw2wspjWr2lsUl/bJTR4TPC6hNypTotDMHzgA5ZYnci3lFKK7Hd2Tytu1
a0dggua+Jb16960r7T8k6jdk70YCPA1HnNmAkwZavV2o1eKPlp2uGmi92NBe
68WO+xm1leLy/H5G32BGIXvY3KPhVG2psIUitv/dlWBCpzUUS6rCaLWWX9zi
gkkcTyr6kEfjEOxOGkhylDpP0zUlYXT6M6W9saafiqaLtmKmxfweJpp+jJjl
E6+JoqmLo+i0W6Lo3L9F0Tl3RNGZf42iGTdGUeXVovVXOY3/4+woOkDM+/5n
rRSNd+Z7n6pItD5yWi+UW+n21C8UZaALnNdOR764RJDMa/vI2t69e/8q5ppW
HTaO4vda7aflr231iZlrq9igCOkUIY0zbQglG0q9zzvPB5fCmTzhFD/sKGY6
mICmdpapfdhf5gG/Jar88Vdf6aban/y+wO/k9vXPP0ef2G7NYOcBfjCrnU3l
8Yct38HuwBvuuMOnNMp+RZNNeiM02VTPoYGNbT/Ha1Xb7LlyYJpNtVWrRdNp
eQSIGFRaTOdEEd9llntZfbCVHuJ1vl5evYJJ5evoFU6l3AN9r+zQoUN1165d
l/Tq1auelqFwZzpyY3vTadf4/SZ7NBnQtXkLTt9nNlPf/dyF3S9N9C9fk9fM
t2WihUr1PW4OuCfRHPCoawo49O9xCRXWe+txNWrxofSkY8CRHF13sS7ygpRc
a5oyDia/qlY1FQNONgz4Sq0xOjp21krFgAPEelecL9Z+bhRNXhRFM2+OorNq
omjOPVF02aNRdMUTUTT3kSg6+05hAIIFJ10reCF0/tALDQvE+strjDsz8ngA
FvzsqPypQuGnO7cb1sF5yXnWbrb3tW/p17xJs4w+wtUco8+mYPJse/rB6Fa0
Fa7AOMRKan1e38Jfls4kzkzR1qWBl61G/847lbXjYZN3t9IVwlWi+tnoxbq6
TE/VXkbiotX/+eST6APR9BWi8T8FMxt/ZF2LIMPHrMCSv2P437AB+X6auLF5
jD+Ou0eCmlOqqjJ5UND/lxh9NepkNzHwGH3SL6h0oU3TKZY9VP1Mmu57jRfd
lz9YRbTcqGjddVd9SMAEmKe7imfJK9XLO5V36tTJzZJa3dCgSh5a1L179yVY
D1ITWI8CaCBvbEnWzMT4arhttOWoRkPRuWFSyTEsuYEZG+eNMljgxhjsvch1
XMRQcHMOCqyTMugT2j6vkP1xrTwIoSCvJFgjZ68oqSeHlIu+XedzTre5Cs08
b/4fWgzP8zXXpFE38+ST8LBCw9ejpn8navujwsO+Ytb3F7U+aLbz2iH+025w
9OCiB6Jo/t+jaHFtFN28NIoWPB1F1Q9F0RkCHafIMccvkOcIXTj4/HyY2C+G
CfP4XYSufNo3SlUoiSAvJdeecRgx7FenCkj5WPlbXoNT4NmHTU4n+BXcOAZx
JM6ncil3MM+eNO5NfmkGw2PuF4fAyhv+JS75awII5J9QdN0KI7c6oQAffP55
VP/NN6zrdhuGO8WLVFkxSaCOEW+UBdmKPJyEZcHWAV2mQbWcsBHxQarGHHCA
YcQf9Oc6q0QXoAVGF6AG6LltCE6uuktuQg1xgW/G44FCQaYongOM6mcdCuy2
225tga8s9wQPrH0CTJBn1wvigAddAjwQ04EnEOMBzKBJPGBGkr8AAviaW/YZ
ZS7GX5DzZI7Va9pou2PSxsu5+PjOfiiTxuEMEa50iMCsHAaaxIhwk58s4Vta
fC9W2NW6/R8f0rh5WmuLqzlNR4S47lRj6v/VhNOIyneikUICtpb3c0TiBnVE
eN8GzoSGDWq1loN4OHUc7jV8yCB2JBIoMXOlEn+0+o+i4RVzxEmASAhJOEOc
h4sFEeY/GUXX/lNQ4tUoqvlPFF0viHH54+Jg3CXOhZCNSUI6jrhUkEKee5Cg
xYGCFvvLa+1/thGLn52TIaRCY/ozvtc6EQgF8fudjvxXaas2nTL/VdHYtKxt
27Yxo0AUWsIoGGyVxijYCn2IoAOIEc4Z0nlpfs7QkX6lXBy7984Fu6QsFkjm
msKPcMQyjgXdC4YWUIe3qAjUjWnvrVghhvJ/QhPYwfzxl19GXwid+P6nn/we
5o5aCMLWzU++/15XDL7lnYs3k3t3xMGAnhDMx3F54JlnytYbNCgPKfqtEpug
exKsNRqedCBChAiZg8UCDCH80mK5aoChWL8dSpg5D4UGAfdi2liL+dJacU8f
E7jgMA4HWeTUgYuhwhdW16sqKaOsMA4c9OpVR5OShwt5NzZXFifhwqFFcYgW
rkpLrsgFLVvFFxbAXyaIXB7ropTDdxPWMDuI11/mR2xd6drdNAxoOPGnHE7E
3e+3J7rfH/C1uo8kejZDnEjrw0jBiRNyOLGnOOp7Tf4w2nvKx1H5yZ9Go075
LBo97fNox8OfSrCMvwX5vScCJ8SHHDXRXudzBWDHx7kghGDH6Bg7YAAr1WE4
QHT94PNcMOLoy6Po5OvFCbndOR5XPxNFN/wrim57I4ruedexjauEbVwgDOS0
2wRr5NijxSGpkOcefIHgkMeQA851OGLOiXNMVgqG/Kx5BWUbco67HPWyJuMd
fmzdgG0g0b+UbVDadJzct/7/BnN7Ao+ESmMmRVE8Ri6BEdcXBR6Jjrn+61/j
YcGwDRLljKp7Q3SdbbwMRPxMsKDeb+XV33L7hsqXn38W0XXYsdIXkoEfHwsL
UXeEpYx+N51RjVc8djzvseOR55+n989jxw76c91F/fr1axbLYOARem/aZqwi
uTw06WkYXph3YUvOzakwrOBbUWyQk8jSANGavvcs35SYf1rgaYqQW0b/qsdl
SrQ/nqfyEh5L6uQ0StkZ0lovsW1+BDIAkoBzZLSwnwXWHg7BkVytZ4GaAcZO
eRQJUyCZE9P8rJBTxZ/CtrtPCrBkcQ5LmCyUmKSh/d9us7fHkmT/d1NYYrXQ
b+b6XDTF4LHkpASWTHVYMmb6imjsjK+oXIv2nfWd3H6Mxold33vy+w34CVxI
0xpaP/Cc92IsyAF2vaPeQpzOiAMchi8/KWfYt8oFKg8UPDhEOMbh1Q4vpoqX
crZ4MnMf9RjzksOYv73t7l8u3s3se6No5i1RdKLwmSMFlw6V5x4iOHOQvM6B
56XgjLzPPvJ+BEJHTf9aUyzUGQhP8/CiW6N/C3oCRccgj/Frh4CYA3y9TzyI
yc++iYMefvtfnOkQh4Z6Hx3w7CfpUytK0wLBDtZeEbv0BXQ4LVAR/f2jwMiP
bsJ/HrxY1INyg48EYqAntvvVPBr2qBnE+LVYS2bPnXtRSE3WhfPrJ4d+JOnJ
Hn6pO8piugi8FNpRn3RWktDSCKzoN6KwIUhCjb+fAeNvbfi2irmX6ax/C/Am
hhheUt6iRk61uUFOgRBahVrFl4TQeHLi3JjGyh4yM2I0LRC7ScWUgh/BnmOi
Yfvc6GdEGabc49vzf21MeVf7ivY86QPBlI8EUz4R/r9cMKVeMOULwZQvo7Gn
Ug37reDJ9w5TqijUWxkdKDp5CNGLi6LoqLmuDmHivO81OpPjMve5/j4NqD7j
CgfVD1rm/CA4EvVJJ33oq3E/DwKpLtVJJIMahnFnrFQcIOIRYs0U4Siniz90
4YNRdIX4QwufF4x5OYr+8noULXhW/CThOWcJFk37cxSdcI1gDQHWiz3WeE7z
xxBvvG+EXzRWMG70jG/UNxt54vv1fzj8ac9lNvnNuAwrZig5PVx8H+MzFj05
LEi0kFalYZDWWIb0nm3RExItvi6CeUU3BL4QkVW6nl4SMHh/xYro259/Vjxx
296LFFT8v7iokMe+FRD6THwgNpe9Lc9jtXq4Z1dB5r33FGQoZnq0traCUWJ5
KFOkHxkoIx+bdw36KJLwMYLZpprmLoQOT6HN57bhwBYr2i4vU60EsihkyFeR
VRQpUviHS8lNTknYUxu+JL2X1Qc76CEGQiHo8KooLl8woNFEnLQojJP6OqpW
SUDxSSCcnaq8OqqWIkqBy9aLsGuGK+6y/2XxlBo3S+nvrtjhsKdjRNmppYhy
YksRZWW0/xkuZUrl4QRBlKMvdQUSkxaIhi9ysdGZosGn3yrM4o4oOu/uKNqh
4i5NA7legAfzGM3Oymh86la8sZzH9ImrrNKUraVrfnYIc3oOZYipggqHCEIc
BtLIuUy+LopmyfvPvsehyjxBm2sEba7/l7t/gSBQlXhWp9woSLMwhzQV8vyD
DW3mJLyosyN9z32qXHoX9Bt54kf1cg3/Ua3ZrElWY3s+VpXV2KpxXTATgo2N
lvADT7UPP6jhuIC9VhRhWeAlSOUwDoIutH+8+mq07P33o4/EafI7ihyuFMeh
2B8ckXG8Zg09agV8xi/gaAA3AachOvv0smX1Am3VYeKmKG6xcJtT+bl2kyjT
nC3z4bbAQqqGK+TgpThP1QRXimhQzvLNlDDsXU6NL4mmZbnRbzJ2bKatHsyT
eDI3Ax3eAMBxgV7X4BnmXuLoSXEyeuIQ5ZwWI0ojFK0gomDjuCKujIH22Ds8
1bF/nOI6dMiaTHjB9bcR12gpopycQJQZCUQRvhAiyqGibUeIBh4jiHL8fPE3
ro6ik691ZVezbo6iM25zBRnn3+0yL5qYFf/kqqfk9g/3e99TntQMUy4D9ESC
z7zmsz9vK59xftNnGkulecGSwvhL+53hCjzQfEWZ2S6TQ4zlMEGLY+Y7nwi+
csYdzk+qfsT5TPPkXOY84B6fIb7T5MXCu+R6Joj/dNgl8hrwmotyaIMvZdzG
/CiyQ+pDyXnJedYJ8nukqWFNBlqChhSiNIjKqlIagpmMqzhUjiHMa8sKwqSx
DbK1ajH6+2yfEzNCLWl8o98ASZkndSPMMyA7TFaYLHCMNN1jV+k7NgZ7xPGH
6D8Wq3wpDGe5uF7ve9gJXal/e1eKBDJJIcpRnnzllerxxx1nI0ddlVhRPIAV
xHF7m/vpJ4rjkcSeMKSbhj182kl2EyplqJBNKGNGMUdwwRTS34rRTDaOCvSj
o/wvy88sf80qRrVTTeaFeEHDJt4oxCRBk0axp3+T2NMs32gVsYfrI8rOYg0R
VLnGgw8+ODNITePuR/3D6e+xidkiqsuNYM/0BPac5so8DXsOOsdjDzp9mcvw
Ugh28nWu3FOxR/yWc+4U7LnHYQ+5GzK/4M6Cf+hvOdf5T0aZbRWT5vnb5U8I
O7r0TVdjrkUrLtcUxnK08zGOFTv/ytWTfx0Xqu3ni1TIL5GJJk4MFpEvAo8O
FSyZILh53FUOk6bLOZ8uDOfsu4SB3SfnLLg0R1jP2YKds+RaTrkpiiopYpHj
x8s1HzbX+1rV+bikDOg8x4D2O9vFdsaeFml8ac/Jn9YOG3f7v1Wj9h7aqmS1
guzHVvr8UvZDWpalo8zvV1zysZ0Yl4KZxpasPtevCDdcsj4uStBvuf9+ZUBU
rjJj5Z9vvhn996OPok9pkPzuu+hb4TffyY3fXwvofCW3z8W9qpffbHNk8yib
SL8WULL003sCTP8L3K+8OI+89qve/Xr29dfr73zssdI1OnTIB6f+i7p162ak
yNywBsAUBneSwBQGdtLWJ4dbRwIylKelhQDJo0+W7yyLrpagrHpPH8uspodw
KE8x2sTLGVXirXhLTkFOMUgW9UtNif0fAo7CTRZZFNBhTAGW8rDDDlPJZHYN
VnO/Y26IB14o4EzJAc5oAZwxAjhjBXD2EcDZVwBn3Gm4TwnAmeMAh2YQmkJO
EsA55XpXaXraX1zVKSUmcyAVorjzHndJZMCGMhOA58qnDHRKGoDOZdzkOZc+
zjFzH4syXaJJ8992QeWDHtLSGIY+atLqqJdcoGfivxVMR/qAMu7XKG23/k7J
2v5CiKiLp959fHWUjSZcIj8OvzjKlEaHX+IA6NgrXTL7FAHOmeKCnSmgORsA
eljORc7pgofksbscKTqJEhk59ugrAxAycoQrZkDkXbEDZpsb5iptqbDdc/LH
VetsepQDoS1quvfspxrzWxOjKr/fcPxRR+UPP/ANpXmTckJytHChDj6w/JWB
EDEfmskY8IQr9vLbb0f/FSbzvgDIRytWZKNPvvoq00qr5+l3eV+ID1u9xfeS
b/fTH37IdIg+phdGMOs9GrnNHwvJERV2PgREGpyetqdefbVih113zfidFa53
bb04yJzEH4rNrMCkOfgTOmRhQDkkReESkAT2JJXV4UtRrK9yk6uXr60YtVWt
9fegDsV6jE57caTJsaQ++sohO+IMOLPfAnKCK1C6lmmdhjiceRa4yayfCjhH
HHGEmsWjRNqoO8A8kkMcX3l5fkYJwJmVA5z9BHAOONM1sxw2xzWzxICzMIqm
CuCcKkyg6hZX7jpbAOeC+1zFyjxR1iufdGBz9dP6Wz5sIKdYgYgIrgedLIgj
30tDzNkuukSctIuXOAJy4cNO/0+8+gNNvG0fBpyPqI3L83JhoBwZ0ibYWT86
/PS9OfTfHCdO2ES5nONorLvCBZqPIsC9QHDoWhfiOfVW54ide687B3Do8ifd
/XOE0M2iXE+cuElC+I6R5x0uWHS4vPahcx0WERY6pDpBiryjRlKdhDohKsHM
yrUHjcm8qWq0JQssor4Dtvw/YUQAki0IPsBve0h2uFPtf6ofJ3FOmrdmgOQr
/W1M1xO+cRbW8pq4Vm9+/LF8v/9dvjyLxyWwBLzQoQfdAXYEmkQc3vnyy0x7
9c+MBnEDht70WXWoEAW+z77xRh2Dzi8JYWj9PBq0KhCUjAklF0mG615suYYp
bxNcweGOXKTXXmUMRahwazRY72X66l84Aj3nFqCRvnLIjDgDYMXWKzQHbhph
N849FGZQAG/0DLOcbGZwQcDBDIaAg0mk6AmzyAhLpJFyyZNOnhntN+srTTcB
OAef69rSDXAqxc2YvND11gA4pwvgnC3uyXnCBC4UwLnkYVdjTwgHsCEVHbCc
aP5TkYGOnHMMObsa3OhNACe65DEHN8RhLvJwg99zvvhs590vECBvds69zg86
8ZpPtYaHiLr5ZNpE4Ot3tPbPx4iMCo2d+b1epEEQ0e8TrnK1fuS3iDzTHAAF
wg+jLmfaTY4KkdsCBq+Qi7r6+Sha/LJc4HNyznLu5xErkr/PkONOWuxgaILA
2HjiRZfmaFFF6J/5/PsBMQz9pH7ZyBM/KG3dppOHoeE1a669RVQ6YPNmcSJL
J/8STnTmmWfqvvLj5TgCR1QSm3N2UsCL4vA0TUe+LjAJQzVBwxFthdTdAEUM
xySwTMia2j4cK/0tnAl0IRIkSCPmVjAn0zYmQJZspxbQIkR/f/nl8k233NLQ
x02xGUSEKA99QPEk+tjHGea+mos+aeQnhTYU8lIUcZQ0qBJn0eE2KHER9zI9
9WvDgwkxyPCH17VgEe/LOXBOLfSeMo6RtS6ELw5eOjQbXjBwCXgRUBVZy3TS
xAfShsHD0J177rnRyZe+6aBlkYOWmTf5vNPtLu90kWj83IddpGaBRmiueYbC
DOBFoSUHL/I3ARfFFvGUEh5UNNfDy8XCZqpDNhNAC14ODONsYRRn3e28nDPE
+6m6Q172tNuJb05a9IWLAmn+K9/5ci1L72juiylxkJ4xM77VyiCNjs9xUKqN
yOJcVd3q+gzIqFfdxvnPuDmSr2KGOI+zbsuhzXyB0etfklO49T9Rplt0vYDO
lXL51Y+6s5wmSDxJQOoo+RiPnO9A5zDPffJ8MeM+FgzKAU79LkcvdVgzTCkP
M4n7DfpDHuXBNP9WlMfwhhFQE0SaqEUm935cMLE0nKLFDBFrckx2NjHQh4G6
+GI6zMfPIQBzwAookOBGFvARQXpVYITSQG1mAHqEDmXpZSoCcTJtYrajBT4M
KBDMop3pH0uXVu41duzcPMip7NixYyrchFUwVisYwk24od3gxmI9RiOSW8SS
flYTUGPBkIwCjfgAps/+1hbFznJP1Ie/ofPcgCGDIF7T4AcYMfix7fEFSJcG
l0S0C5ySO6M1GiAM3lIzECYNYBApAIZhRxeLyDD+ldYwRr8ybOUSUSZLQ126
xAHM1eogXfMsDpICzNMxyGRBGAUY+ZtGaHJRmqy6Sx0de0lxloy9zL7fwQsO
y9kGL6LjpwcQk8WVyUYz/xpltopO/Sve0fJctOfwp/1UhJfzvayTKFFcrqMn
GTN0wBmuF5JSIcCGaBSRqIvlhC6RE5srJ3jB/S65TnQHoCHMDC5e9ayjNbf9
N4rufj+Kbn87iv7yZhRdS+JdPovzH3Te1okC1kcvcIgz3iNOWvTHvC1FnLO8
pzXt25pNRy5wiNPHre4dOCoqHTK6WewGE2fsBoFaRXaTBW4y6ygAHS6CRgSa
VqlwbJ+1UzIimcpCJomxkcQaH5ifQGUho/rwtRhq8IgfVATRYXYCjQo6EdwB
j5IeyMsyT3recISnWKGnRAM82lDt65U18f7aa0sumDcvc2ke2Fj2K8+ragxo
woLkQkBjHlVyqXCS0zQBMkYYMg5QimKVlps8JsahNdpdxL2sPriGHoL2G/YY
9THaA5ZwCpyOuU4as8aba13oLLJ6Gqs3iitITRJXxCnyzKWrShJ2CylCembP
nq3Acom44LaaiEkxrMCgB5W2dEYb3nXXXTou9GGmOT6xLFr4XBiJIeNUknOO
nnIRGapbPMDIMQIvgsZGYAxdzDe6MOEbzTbfyAhMDl2i07gJq5qVBzKlCjKn
CtuYcZvzXabf6n4ff/UX+fl3De8Eua7Arxo97SutLqJOkRrFygUuDI5zSI5/
kVz3dS+4nqkFz7jr4zrmPCCnIaiTWTu6Rv5867+j6L6Pouhv/4uimrcEd+T/
N1Fa+E/BK7ncmYI7x4tLduzVgjtXOteKSI+xnYpLUnDHu1YUHu09dUVFzwEj
Mm+o/vSNqQ6rF5gFOWTodqlUh3Dir0x1MoY+0J5T5ZjxPvRsjZqUGp4WjGGi
dYIJLlrX7Gc6UNdMo6btIcDFIvxslIembmgPcxigLARq6MimfNAQiCCOUJss
MCRs53Xf14knBjV62Y+tlpepk7e7zAGQm0g9OC6XKgRAydBOCECgeuhYJQEo
DOmEABSynCbAJ9R5Bzqi0ab7cpP/CQLIT748sID/ZfmZ5c9ZjhVawdcLaoT4
ZK5ZGjZx1pxRQxhcTV/D4sCNIZAPy2QVgLqoRIUghNQAQux4AIRsyg0gtHjx
Yt1CBQixG43Rj4yvYk8PC30fZU+WIFKW4XNy8Xc+8ny+CyWPxQwnBqFOCkKX
pHlQHoQIgJgHdU7oQeVAKOPcqGJASFkEGi0wlAWFMn3ycIjfYBHuzSk3R9HJ
fxYvkcENf6Ije7kLPTPjnp5P8vAW8znhLZf+Ug/scw07MwQVD2yCgMOkq120
nIDVdQIst74ub3/7f6NMv+impQLPzzoI5oq4Upyva+Swv7wRRX+ti6I733W/
4UTXCU+67CkXkpoqHKvyOuFrwreOSmBTyIsMmwj7aPT5jJU6YWrkie93zPzu
dx6bjBSV61g+5gGtv+n+TZIihO8XkqIihaUhKmDA1RSh1Exz1BkTdHQlxoFf
kEjLW0dXGPm514ZKvfBCHjGi2ZsUFgwnhiZhPOAO7EfhSW78xvMCsl7xzeI8
7x/LltVedeONHdu0bZuHSxtq2DksQQyDPcl2ijDgY9n2MNiTxKQw0BN6XiEh
agYepaFAMQ6OaJ+BgfzOuMd6hRClT+GpSWAy0sTbcyqcFqfI6XJaybe0eHBB
4FkzFXjOE1IM8MydO1eBh6E7zM0DeJgxy7w8gIetGg8KORbgyeajTpbHs6BS
Fn6U6Rzddf9joUuViwY34k/lRYPvicFGQEbgRphVgvWEgJNRxCkCZDI7xTCD
DgMzU25yMHPiDaLT1zvOMXGR8I5rouiYq+EUHyr8hCHnvOy7BYCmugDQfqf/
qOFmqgWAH/wxKgKuESr051ddu9YtwnNulPtXP+eQl4vnQi8jgSePLXpR/LJX
5Hg57tb/Ol50pTx+wSPuIjnfE65z53fEFc3HH1ovaLvYdv+7F/UePK6j6M9r
jh7F6wWNHumGni2Oj4Zusdv/ET0qVXnjMSBKIKt23H771ZGpt0F3FoXW9i9z
0vw8i2t9R0bSSbv/6aejh59/XmkSA+5s9NVzCTyKo0RtFXZe9TcbasdhBJSE
ZS0RGMzMy8OgeloqC+FPWgTIAs5W7ZMMNhfCn6RDFvKhFmCPxVayIIF4U+YG
WY6I3/KXIo7xEMUzAKcszxeCYNBksBRCEmfFGXK2nDlwZLATpKEyhjuEcsCd
GWJzkA8ig+AOE3/AHYaAgTtM/2EhLBM+mM3JnhNwh7m6QnYUd+R04T44YQ/r
ptCGCJRlPIhcAguDeDqcCeetsURUarS4JfAj7wfJwQFrCoHQbBAIdoGGH7XA
eUBHzIetTbiCaFH51DeDRNjzMSppWLrSh6XJxU9dEaPSwbNdhg9UmvUXVzoA
F1z8omtQ//NS10QKKgHJ8D4+B6CYpNflTzkUWiiO3bUvOU/tYnn8zLvdNUxa
7M6b2LQlw0KPTVEp8NjIyVOkSPPpzke9okNGNtv72uqeA0a+VoAY6c6krSZF
g4ZVRlsO22GViBEJ0GYRo9KYGCGUcvjQTp060UJew24V6qnD8blGkEiNhSVD
N/mSIQiShaof9JEjpm6a76ag9OabCkr4b4I4rUCmTCsFn2C83pLzLrssc4UD
ILczbkPNfkGCwvlSyUlzaY4ZkSErN0xmuwoBUNIhS5Kf5oCPz0xnwQMXedHv
RJBA1EVshn/ML8fN2HF8fyAJuJRVytRPX84IE2+VhkacMqfPafOaIA5WCcTh
uwdxzhfLAuKwngLEufrqqxsgDnPHgA2POABO9Nhjj8m5KO9pSHnknIkJMY8I
0Mny7MwaebDDPDOQDBZFHIkJ4Rfe97WLIHvG4yEnC+Y4yOnZGOTEcR5+m2/V
XLg5ugHcFDl1dje828ujzLDocFHvEZUvJ2DoJa35zsHQh9rnnoOhn7Qm2sgR
MDTnPle9tEjg5EYhPX8SR2vxSy7thVMGDPMZkJzj85gjkHTxYw6SuH/OfQ6C
gFSuCwLHdciZp8JQHDi6MFemSHps71M+0+lm9NfS07/ZXgurupaWLW2CIOnu
j+1mRBsOnxxtt/2OvyFBapUkSEsokMvq+a0FAlQPGz68njSa7TqLF/4l4kmM
37/Z4knhNOAAl54QXIIsqfP2+uuKTQJCRQCUUAZdf+HHdf/dLXutHDFq1PwQ
ljbVSYlpVdDJqTthiVUYK7JgdVpGrDmQlORDTcBR6BTFnhA2QnBCvgT5X1bv
tlYAAaA40BiTPNkRqp765SZxSUc8e1zi/OBvVlQE9lTLlwX2MMPMsIfBxmAP
mAD2gCNQG4hOVpGnWHEIyuNpT2HG07EB47FRikn4wakjosTaXN4eR+/cO79S
+Mm0cQGehpFmQ6Ai5Tsd8oCHoM6vAzzFCjxa8+duWTQ7s406Pn849LFG8Ojd
PDxiVv+4qp+iA85aqcVPx85zlQnM8FFM+rsLEJEYnP8P56RBA0+/w3Wjnupj
V3wa0MGz7nGfBpdsl8ol4kgeMd/hEZdyeBKPfG+Zpetx1EbP+Fpj8ExXpAKB
HjkmMwo9qujQfaPMqyE/Wt/40eExP9J9edvP0tlvm+40I9pp5z1+fX7UKo0f
ZYr11HqUdevRo5ZOV+3r8KVDc4KZHXlOWxDbTmIRjhuBpL97PIIrCSZlyZOJ
IvJfHsa3k0MXCS0r7dS585UhDg2t7tKlS0yNwoRZ2qiN0DdLi1e3BINCn6wx
SmSBmRB/ggR3lg9fLpaPH6piXwVfi+BRVnlTjzRAUlTz4SVFJPPbjCVxhniQ
2kk6dqz6Xag9MAA8gDggi4Z0BHCy4E0znCxx63hqcxEHcpWGOjfddFOWLFsW
KMx0j86t+SyV9EB0+J0MJKOIBJJ/E8wpdsEW79ocSneFKHNmW1HlH9yWg7y4
UQ6KRqRAkauW/lnbxSZc7OYVT6OdTa7knL+5MRxz7nftYeTvtSFerm7Kn1xn
Bjl6rhLYmXKjo3p4ZCdcl7tartRgSGkR5YqX5ZcsKhTNcd7ZqOlfaJxLV1ZO
eEHTg5RgMj5lyzF/rh+66yXl7Tv1f7kBRdpHx9sz0j6mSNvO0HHVzKRlJPXW
I86NRowc/VtTpBqaxkv0/DqX91t33TomfJzhZ6ISQwpnoi7y1MhSbbd7l83i
SMS1iSUteeEFERMhSVmQCRMsOCV/rL38uusqttthhwUh+GxbS+Y+rTc+OUKs
MZ/MgtJpwGMBoTAYXcgXSyM+IfAAIeYY8THzUVoImNwTDtIc+fggLIZEGAmA
iucJEGU1trNGKgoZJwoRCJ7GqSMF8+bNy6FMmlMlnzvpLXwqQMYRmzVWldhk
wRh5STJopPLlllGkyeL1ZQlyC46R6D/rts9inAFjkokqNM+0rQC+/FrwMiBu
cEh2pO828SXfMPawMocwXN0Adk4R2Jn+bTR25o86n4NphkxCHS8QMJGuVLmI
kxe7SWJMPKVD9eQ/uSaNicJojrvG/Z64UC8Yb3yhnKBcN4nWq10UCFTN6mV3
Tac+CVdsn9O+i/Y86UM9UVqG6TBhfCz1UIw8YszalqNvrB+629zytmv0zrzU
AhrE/gsGXzNmbruxV0d773PEb0mD2uipdenYuqSkrHffvrUTJk6sp8jovGAn
aDwZMdyw5Be0gDuk+QkXkeqn2OiBp5/O8h/5hOXhmqmnn142cPDgzDUh3Gxc
b7OTkr5WsjgomQOzRoZk+McqD8PcVxrHaUnNTQg1ILrFYICWyy67TIRmwYIF
QniIw1BzQxQY/4g6HPmknRe2pj4d48AtjfyEkMMpcXqcKijJpfC2hjHyoRLV
IYcFzgRMpuMvZTLNgZlOCjNk1ShYxPcjvU8B48wbP41z4QYxxDh+SwrTvyDG
xFO9fGExJTdjT/vKTSbb/25fvviEZupdd4alyiwo7aYe2iQyJncwr51JhxUX
OPw5Us7w2PmuKey4BYotV3NVcl874I++kqrwo66UkxWUkT8Yr+His3rR3dJz
YhZ9nkNn6k/aIsJ6bzCHE9T13LZc+JDHtOuNQUhbjLoRrjO0VUmHF1vEdc5T
rsOcfVZsbLPfXVHZQfdFex98fnRQxRG/CddZzeEObepV2++4Y+1xkyfX01Yf
u12sRhWxpGvjBr8a1XCHPRFUVBOqFu5TM3nmzKpR48aVrtm58yKHMcP053AN
N0Np0jAm2doVUprQlwrjOWkYY/mtNIxpKrltWSaLKwPgfEpWRkMmmyy2dzFU
K9E94i7U94E3HAvo8y1Ahzy98fHp1fW108CG87FYD+fOtfBtxqiSaRvHhBsB
FTlWYEW+5RTuIn8TWBHBt/OXWybnJymsFCmsdIjhhMsFTkikUT1EmImPAXgl
7HT8Nd9pqOK3gJPVWwQnOrjizJWMMjh9pbi1DPgZNe1b9agczNylgVpXJW3F
ikv94MO3XZ8/ix51KIcbErTPLDdQdX8/6FCHAjGEYy4gMo8fV8iPI/kx4XKu
GfzgmuXa3SdQpJffM3acFFzSnKcL3LwP3e0661s5hRVasA36OZB5Q4u62S/L
LHu9rH3/yuzb/4+57wCPqtq+n99M6C30DgFRQBAiqIiixvasQOhFhIBKEZEA
FnoSemgRKdIkSBFUNCr2FruCaOxPfU/z7N2xgNLPf699zr733Dt3Jgn43vfn
+yakTCZ3Zs5ae+1e3C5tdnI4qWKo6BiFDR4HDhoYGN0q3Uc/qYaOmvN3CZvk
mvVCNfjSqiVXqFgRy8Qzu55zTl73Pn3yBw4bVnDt2LGFmVOmFM2YP7+AHK38
jNGjs6/s3TuD7pPW8sQTQ5ttFrmK+9b9jaFB2xrsRXq2UrErdYKiMTaDSDQ4
iEH8zpCfQRCJAYLxMqDNAC0GUCbCIEAwkAwUA6n4HtgEEAPbSKgGTILHAZOY
bJdHupi0O1+DeEm4VrAfFBeu7xhlSHzGoO8hyowsF91CmjaSWY2AOkqiDTiF
eD3gGEKdQcHNX7gs/L9lDrOsZZCHOVJImBwl9B921imzXSfWAIPITnZsrsRK
C24txWqJEa9xrAO+h5QYcvkzDzj8VY+Dn3aA10hg2Qyzylx9LRjvw4MNiQqu
4WEboBd6YvT08NTwFEEX9KzL48UI47UgSnF0ih0SNn4RjzBbqAc4XjXnIFHK
n9z7gey+ppTP1SVjP+HGNLAhwt9wAkEFRAlFbbpNIUqpEHrzuITLTh43i54U
xLHwumDNRr+Je9SoCXkqc9LU4xIuF/RdGHre5oa+XG0sE2Dteev+HQ0lqQu/
ByO8IMESO0tk80JJbdTCC+LBwHvB+Qc2oNyBMeDzBfLjXn/9dc4UI3IBrAKD
wBRUBn5PKNYOpCTiB1yPqAxcN54HPk/AAWGQgOaAJJsDvJqBvBDwFrjAj38o
o1Lin/7CwoULw4gbEQPMWbhaTCZ9VXLstNR4n+/gXfXHoE8eK6zxDrXQe+qf
Baf13Jjf4eLFmDiTVr1u+5TylWonhyPlC5q2G8hrcPS+ug2eVfB6O62J2163
x9t/xWPif+DVzum86n0/1/Niug1WNSCNzOMH5+vrxGoYrHfA88DzwXMDtvkp
az7gV6M8XpdQRUdOxPRWaR6IgAiImzNy0bZ/kCfSpztU8A13wONS4XcBqoAs
fDKIptPTNxWknDoCZcd7POKiJ4mLwXHExRxLXGyKERcIK+FPIqQErYXKwoEz
flCjpj+tJk27nUVzKcTFxNkFasjsX1Kr1m7tJYGevBYHUdOgqeh+ceAPY/gj
pkEhDCEAGFg7RRMkDBIRgJSRQBwA1AAMwAXjjETJrl271Ntvv61eQ1t8YSEb
cIATIAOY4GoIH4q7AR71k4Htcoi7ISIBzwPPzQA+VCLiI4z4GjExBxvpEn9J
iPQIkB7BkwjjFaBvTlu0wz3HOOMOvhvE4HtoCfge6Mc3r0JhfBd2HfCgg+8a
9TsA3zrW3wIwL2p1+jhed4sVt1hYzSttzUpKx4EwcQpd0uurWsGUUWdi+hFe
GQtzj9ZGZGkRs8Al4/KvtmA+TMM8xM+bSM8y/aHy/LFibMP2YjO1FBsfFuLV
YqgPZ8svcN/HbeaoNsZweTRmIaOEy4dqQdgXygaLM0jd5DVq3eMNfjVOsox+
3wCjP9U1+peWbPTBNjxmbPp+nu7MpEdXPmx+VI2a/081fl6hmjL3LjV97lo1
c/46uq1X0xdsUbfmPqzGL9ylRiyK4g0uOKv/jhc8cE+vWrWqs0/Tb+/tJQhS
IWJX7dsRy0R+gEAdfkBZoO6XN2AuaF2gAzYSCUvYe9j5PXv2qA8//JD/xx55
xBRhm2VNNX7Pb/dLgjyux7b7eB54bqAQRBfDrOgjHMnA30G6NGwhHPezEQ49
j2uxEQ7qKgHhESA8jF17Wss1ZhrPXLTLM3npb8B2EenY/A7/WJLd8rQxhO2O
KeUr1w5V54OSklKuQo1iaFVspsfqGHuZZCIdL61C0PG9jI7HejZeuZKjewdl
fDDyn3HAzVRmSI1wHKruahlL02Qss+a/LHK3SGIu6NWxKB+24IgaPOsAjz1F
KxNQfoWD8n9y2xOGsCPAqkvUsCIP1bJX7NbSPq9GvfbaoLcPNujtSmHQ8eds
g46VuOLi4G3DW8kvh8tzzHL6lSjnSSETT6ZUrt4s5IF5d4a5v2M5aI0SZP2x
WnRx9f15z5Ig7g+MAKJw4QETGEm40wjcAdaw6J988olj2VEOAQoABGFAASEs
pbTd/3hQx98WiS/uP6gJz0NP0QOgvVC2XXMbyph+UHYoh3WbPF1sGM+a/mLW
rFwma3or6e0dwic1LoKzLQSTKqajU3zRyKKCzt3XMYJJaxKC69TV1jm1QpW6
UVQCYOdkzA4l6UN2LPNHvDuJ9zpO+l7P/3a2DIhlPupaZhHgBsBDLADzqdVC
PKQFSTLjdLh1y7BnNxn84jEGztL4xQJqxvFcxnHEwvDQ+UfUoBwXw1gjB58B
l49EiC7peoWXKoCr8LTPSN+UWatxl9e1KC+Tpe5sWepzy2Cp+ZVZZChNY1hL
lfIeWYIfw1B37b/jRRvBaWmVK1cOnKVkG2kJ2EkVg99Iwyn3G+kgPW475P6K
BdO676BX9Lgdg4B9AgqADqAGhhrBMxjq3bt3q3feeYfRC52O4BocZyAdSPIj
2KQDwoBxqL4HxLatBrngUnHZeBrQHUFghfT/u8AK1wGXSE+ZTjZdKB1JvASZ
Ofd7wDogBqwH/GBNr9OsG8DahN/tpgTWesXt6NjBU3aWENkDsskquZb2EzOI
zVhaWaDIlvaI4ynbMjoArBgkvgTDEEROy0086CClAdOEVCKOeSBYF2iDGwZW
iUuHzj+sBuaQBz8N296j5Nl/z7BBqQTyCZi+kuYpwNzuFGC+FmByU0plcu9P
bHKn/j0m1wPYVhxNgxOdaGuh9NJIFE360OySI9vcJlLUQXWNAlYCqi5YbMTA
AYBgEe0yAFhc4A+AgTVFQAtW98UXX2RfGthFCg3BNOAZ9wOQIKwFrwAE8E9Q
COPB0YBlGV7b6Iq2hkiQrJ2NS6k8KDsu69q4lMuJEQIiAibdMlMNyNrn4nL6
X4TLtwmX67NPOO16wuU5qZVrNAudIKHcSIWCFp1GsgTG9lW2oE4O3iTHSDZe
4snBf2dy8HqDRm+2oMoF5uw4wFxoSWEBaARnUkO1hrOF56r5R7n/Hjo3CI74
+ioNR644gvkUSF49D1NwCZJT9/KsEQ3JL50iREDGU4TYe1u04yW3pVep2TL0
SowF7fP/kQV9yQNIrCx2ABnk4so0Qr/+tUPa8aynP81lu7cBYMTRC+MMhho6
YLTzghLZhocI6wUJiiATjCgkLyLcACOCXfg+vE8bkAiKSayPHg9jIchGVeXH
96NArKjIYPCIKdr5bwJPguziaNOfLx447NaCLlcuBvAyGrS6lIF3svY/EVzK
a9y2tyVdHzJx42fZYriFd6507S7S1RNUOhoLPON/QmVDbQv42DJqACaxJG/p
bHsYMOsQz5AePPsIIysh8uihhxrkYUYhZCv+v3ouBt7D9UZJzC+lLMNbllax
aoOXNR1lV6vd2msLT7s+sS3s97+xhS/Z9XHnemDnX34n9XBBotXOMNsup20D
7QCy3930QY6xhkOIw4jv2/fHYRTXE7iDYoSCRPxWjCHEKqJKwBziuxCtuB8s
FspzgTtg1xjDMIOvGmPBxoFtDEW8gi1kzoTO4vwvEEf8VUA8l01eRUaLFi1S
q1evHurEb1qj9Br1TinG2eEsjUR57EYfjOXkLE2xydJ4HcXeWBTFmZqjrv6c
rWtNxNQNhj4kZidlL8C7Sm4LXLe3z/S9nIDtO/1PQsxBddWcUqIul1GHo7pI
HMYhc4FcurwEhWjncSHa43YhWkpSuSovJjR347zm7sJcJxDuMXcj/lvm7mUb
c92LUStW0tYBYC5Id/ozt6I745k5P97EKcT9gV3g23ZcbdMLHsC1wLzimMKG
QYACYwjtILuKzyE6xc7Bi4NCRJm8jTng14aEDQfb3uEaBXTCHUij+KAWwYMS
Eq2HNaa0QiKkmXK1ig7S6OZHWlqtWrW68jvVANVHeU3bDYiSo0NA2xk7cZuB
Zm1AmmTlSqAnTUhVojICNmPewmDyMA4VqT0u2TBlG3pRyBF6vG+5rAFo4Ane
hLKBjLKjNsroaRHG6PwJyoC8IS7KIgyyGmoIirCy/EVYnztFWBfEFGFtKWp9
9mQuwnrBZ9ea2nati9i1Gcdo1w4el12rRHbNi7GClJQUT4t/vDkjgjG79lKk
ZKIwqm3TREbi7AJ7kKRBvXXxMGZvO8L14G8iMyE6EslR2DqEOqE54QwCY2LX
4ORJEUkQzoIwhusVw4bPUZDyd4GK8BsEKr2ft15qpWqNC046c6JedTj4CUcn
epOPPgfNWtkMJw11Bgwqsx6egJWEIxQGtOikA2hoG+WVa8h3ZH7B5gRiDkDC
KrWBOTFAYhiF8UDk2uIxuEIS6YlcAyJtqeKXHn0cW3rE9QabDZAqFLqWqrh+
y4tVk7awVENjLdV5ZbNU6X+LpXrFRtE52fXr1487wTCoxEAcspKiI/GsFE4Q
EChTFe3hHaVBkY1u2RmGx4RKRHhEkAT1iJijoAglBwZFIVZxoeoOCmxrJRLR
jyI8J6CBEHO8gCExLoC5jN+FOmlVa52UR2ImeiYdgXOwl500EI4A6BS6yJZ6
AAyX+1rbh3tzCuIgFwP1nXEkCcgJ1cKnHFzB4YVB01HLDxh7MGZQjcALRpxq
vGCUYAxeAuGy0IFLxkL6jVKU55zrLc/Jb9p+UHIo9H/PBZqdEcbsZAaYnTss
s/OEY3b+4TE7v/5tZscDmPRC7B6XLTlBIz/lUAa5Un5ZV5LJwaGTveZBgIlX
J2QtAXciK/4lezCFMDOQeQANiuCQxZPgn+1SxTM9NmAgH+HhCGDwnAKQkQAY
eXTZGS1btkyrXbt2L3612yZHkipl1Gl+bhGqM8+7+jkLGG8xMHgt97jPtCUx
e+HgBwEcHIsnmcZWZco+4s8/+XOEAvEzrowF3xLgGB2mrl5aB4GOdAwAnkro
mLlfDcrRgzYTWRMr2S2SbPjCspeznNbzrryGJ/UIPRtkSjqQKek0Mo4pud2Y
km3xTclNf4cpyT+t+/pXNTK0lG6K8vYioANDc3Ei7ZNobxuJF2yA4yPxPVuU
xTMnegErduN2+VsQ4h/CApMHU4cAA7JkCAQi4IDCMKBEgn0wK0Eo8YszGyES
6LND8j4oZLZu3RpQCA3m17d1cqRc5fSajU7PJoIs6nTFmiiWSEvkDfPE7OXR
wAMGgLDLQriABbhiwtcF9Hv5JFOiHS5ezBXhiC9wfwlaaJHXGvm21T77FWd0
02/VGOgPDMzSA438GIgwBiKSd+IgtwAgIzdepcdnutJjZFClR35eg1aXh57k
594yhXggrXylWukVqzZwclBkP1RKarCh6PCPJQkMxYfHaiiC7AThhu2EQcOZ
kkWsUIHHJMqOHpzEksYhAhESCpAibttNSSSwsINCb6g/NWYb2fGgwT+qEdcF
BMBeoGQS4brSoEHyyXHQUEQs4Dn11/LrWBWnPrVyckp6rcZn0O3MjHotL8ok
GsxscnL/bHr3M+qfcAnqpVKr1GyZnFS+SoR/rW5mrUanc7kzDgAYlWsgmQ1f
c3vEucT5azqQP/DB7DNtX9kO+SL3kKOcKX4pxIcBpRD3SClEaCdf84kY2Z5Z
peYJvBELXVCN2/RSjdv25RFcKOHGZMBYCzAp2AL09luAd4wF+LIsFiBUggnQ
eeFQF33onQ0xcsMhxOFLdPD9MTDxz4M8C79QwvRx3gUa6vBfPfQwU7guqWTA
oUf1gngW9sEv6dCD7iHu6DmkVK5c+VY5sI27uG1txFhwLOFg6hSdya2AtfjA
/ugeWE6EeA/sQN+BxfeRBBluhWOxcBMVAYNKWxGgZ6CYioAOBVqgpZWvXAeE
HCWy9p3ZfnRmB7Cab3bKEPp/YDBpn1Ua0t4TQNr7XNKeU3Z1L6xtDvAZWmjx
4KSgnY44TLI5IWiYdmkOcTy1T16EPsOnlLhJO149Q2nPMC4PzgXOMWK9Esf1
n2G7Yck+w+IZQ72TBItiHfUUnbIgc32Z6nTlWk4SouwDIUaEGhEp4WFA7MPq
otQeN/+oek3+jdlSMnlYO40dG4PmJMwpROzze+zp8x36/GZUrtGsqG5KGp9N
vrXBGe5NPEtnmM/vID6/4NyUjsPM+U7EwQtiOfjqOBw8+W/hYF1KFzpN+9Ho
VXdkuH2MbU7EGQo6yvb8waCjHM9xhQjBNvbyfI7bH/MZjreV2X+G4TLgvIKH
kTMs6xk2c1YhnDLpGqfqI5yPN52bJ3pt5eg4YpfscSJuafqiuK564jc6d+Sk
xQ5wWmxICUfYBOyZgsM4waYEpDSJ6G4mEX2GPsOpRLyhe/i6IxAN7B7SAabD
go+t9UFu29sQ8UDuemre4WrOmYGAcahLRcgsou76nxGyOc2d+WNKjIy2Nx/Y
cUOcKjlJiU60XUwiJ9qO/tuymk5sSQfabt2Id6D9y2CCdvwirApRIMns0h5o
GdSAAw0lTZcNUaEPdGNu/gNT8aHufTfnVPWb+KLJbr3HIRQZ7C+L1tws1JGE
tU2ShRqWa4SFc6p9iV6cEkn06mEAbqK3Kyd6txa3v2AuEr2hu/WpxvSRmFMt
9NtEZHH7gTwsACc7pWMG56tadLqOKTw+TWcH0PTDhqZf+2/R9C59sHWGv0Vm
nbp1Y6QyTljQgAAp3bAHA9ixPJuu7cB8vMMNX5KAZOi6XZlPt53ODlorIvuh
7dMNPxZUXdrTbY8hgZ9I6Cigxw5Nd492YcvTxuiSNnoHwY1uFnKPjg5yH8wX
qruVYHXyQnMTl+1ZgW7v0UYNQ2CKdaw/xaqb0s9IR4r1Vm5K36KPttOK6h7t
tkZ5GPXcrr9RHlcZ5eEebXwdTNy3xCXuboL5/yJxm/N9qvbb85o0axaopONs
Rg/jYIXqxG1v9SuSoCNuh0Vw/OjPBp1w/7CwoBEcQSfcnlEYtFEQogQnONEJ
t2ODMh4DTiEENQnztHr16oVm8CvYBCe8GG/oaT3y2fOCgoUnlpbxso5j8cI6
b+azt3XCh5TihJtYtXu+k+lT+rWY7Oc3bvZzlJX9HGRnP/mM36WPOBxDh72T
POwtzG0d71T3eCNLip8Je7coNXs/+19j787d1+mes1BH/tgqGbHujnRmcKbi
iWw/e9rd2/aKmUTHPEim2Mccv+cc8yaBe6GO9ZjHW5yJY44jS0c8jDMeqhoY
/rAltyiU8ePHg8OzdMgjtULlulG8lai9wbRnfhuHPF1iqhJThgbNCkhVzpZk
TDlPMiZjoYQ+RizW+f2jnN/XCcvfSpGwRIPxpnyS0UhY6tlgkfSKVRs6JB7h
jyebEIjWHq7yjiVxnHIQN+5bKiLv+bcSeSCPz9c8bk56Bx2UTK1StWr0DDoe
negElyTAg1aO4TjBpcPX/gpve/VPIjdTTjse19UtzTyLqBOV4/xNx10YnSvV
QpU9kiUOoadUqVIlW457lbrRDhcvQnKPq6hLzD168i6HdIDEd9wjJvdohaTV
8MVKn3Sde7xKco+Tg3KPbwfkHjdy7nGDPuZOXt495m01kcccc3EwM/g4u8d8
DLcJ8SKJMhL6+f81Ql+vRwWETuGPJ2U2bNxYnUXHAbdTiDFLI8fteTz2scbX
Qd1FQcnOEo66n9hLOumJCs/inXQZHYRLQ3DaGWxRJVC6+OMoROooaQnN0sc8
o3rddqVLL074ymReoqrPVASy96vBsw6XeMyHxh7zjIVH1ODZx5JhvCy0Xh9z
J6voHvN2zOZOQNAEtFHt38yKo2BNE455S3PM0XojEAhk9IttRt9RakYfeCzS
3FC6Oevt+WPtvBYnnOCc9W50KEDlCaR54NgZk66kP0vHJ1TLcUv9513qxexU
pr+iOea8twk876cR5LrRn78QD48FuvSQvbBybdAg1YesRjq5BD3IilxGzJ1G
l1ia844/ncgTlRw+PFFD61G65DmStDnGLOMAnPXZic66N2kTMQfdPzShxCxj
H51lrNvo5NDaAN+TS+np5QafN/H4nUO8B5w4Gzze6vQbVKsu47nNpWXnMf8r
Li+ByvWAJ9Ot1NbR5nzE6Uh2o7NwLh3L0mhzu4rLHq0mtC307q9h8ZdFSg2L
P3EJmLgKponjN8DkdCFlcjGdz8tI+19J57iHdb770WMNwNoKMhNXYaIzJiBh
XsKYMepq8gf60v1wbXLNNvzknAcoF79QB6ebpHx6s2bN5soxL2tukneDSmon
4JjbuUlTxD58sSvQr1mM+SBubjK9FLnJbr2WReldSa9Vq5ZeyhRBbsd30k92
A4h+cZ463KFy0DZoHKccJxv0jUqrWDqfnZjOx1h0fkuZ6DyIzQcbNjfHva0+
9BDoxZ3p+OK4n01H9xw67ucR5Z1PR6G0Aj1eClNYG8cd9/NXAsdzU6VIBUce
cKIjrk98Y9WW2Px0Qhou7yL6c5fQn+MTT+jCiU+XE491UdaJvxonHmOGx45V
o8aPV9eTUsFyi0FkTOz0kJx4vZhcH3dbwkjtop3OpOOeR+ifr4976TOZThro
N08aCD5nvCJByWQOy7UUjD7xTn9+CdnMtME7VI/0fni2UTLF6TVq1FjlBl2c
E5/kcUndsLlz6jsOdXU6ixfh9onqpLNuVq3PnsyL3tDKyN9jjp8SyPFn/Zc5
/sp1epxnqA1/bOiR62fDw8QBJT7mE0UnoCxy3V/Wbg4zvWWYRFOT75uoWcuW
NXZ8BqACt4PvdYK/tepAQBR7JAj4h0HAFYIAsh8OArDMURCA5SEYgSkIIBfz
Rjq9E+gUj6Gve9L12wlS2J94msbnqhbS/UO5OrJusqDrSpUF7WllQQfK8Y+t
RInJgnLM0cf4fP59mVDENrk5cMz76uJrX6HXZSy/R3j96X3D+U+tJCvSI6ig
ijY48XKL8dt5fFUW8Hz2h3EoRuua61nDgNnB8igjhJbBuUczIWZOg+m5vPAc
l/VPLZH1vy0r6weKeKF9g4DW2m2NEfFAAE4UFMSl9O7jNEHZlELEB9ap23EY
GesuqAkaQOdXPSLugTBBQcSgQMyVjYQLBQnm2gUJvUtCAtrmUY5ikHATnWz8
359+T5CA64pXjyg5JvJ8UX0bWujml0pOnd7gS51O+Z2Dijr6fsSpyQqqB7Dz
SxELBVfPO6TrAaRF1mROLx/7nho8/GZnjSLMrkFBMb2nmLCwXKPArmdxrYCT
XertQQHmpmnNM9ZoHs3+bc6eQqd9OrF9lmqXNlu1v2Ae77JCB0b7C+f5rMC6
OFbgkxgr0K80VqCC1wosZhBEyf4lR5IqChBO5I+dIPcL2xHd++X+BXTwLqZD
igMFOd2TaP0sOvyJ5H5QlMY+2P5kKsBRVk2ExzeA0AFV+vyMrl3DeAKhExnL
uHxYswsJZ/8wT8GPib70sP2BCazWNJgYBkxcf70aKZhAVQBhYRJpnVvovN9C
zN+Pzg6eHi7PX61u93OQGxAlryE1OTk5tMjFROlzrpyRcnOugyQjVQpMZPgx
YaoJJOXaY0Ix4X+6Z7Uo3ia87Hhu9DYWkbVPjkQiywJ8AY2J9h5lFIgJhHNI
EaGVEZof6gcWAGcfoRycf0S6Ol5yG48PR+0iMKKtwyrXOgz+W6yDNg7lHeMw
RBsHehceLiDxZmDRSsMixi3oZtwCPlPEi5fTMe1Or5eojYvp+6V1C4LaZ4Pq
0gEbqQXw2xi700PsBX5uQ+O0Ll0iDItWgbAQM9edHo5hQWgTWAy0YUFeiMBi
jB8WWPVAELiFTEE6PRaeou0m2DsMAAl6Wth3tcRFxDHkaHW3Haew5pWMCJPC
MlqpJiNiBJK0cw+q/ll/qj63/qBGjpsds/EJ744fFUR8yf/3f/8XytOwcKYp
OFFPVCOks5/c2/IWhnBI0/GPMfQLuDC+sV8tYdoQElewDadevpJ8qTU8ZRcv
EjCi7cXdf5+9qBRkLxhmYKgz+96bjhlmxm/W06Q6pdeqXTuhC3E5CRs+WXRQ
+9JLCQGCkGMZXIjAzlh7RKe0MgEMErYJApqd/gWABCSndu6cxAA5gZ/CueYp
eAAiTyMAIIPpkgQgIwQgEyZogEATWQDBMrcbCDw4SbAPAWXtxXR5qeSNmtPV
uMwJ3nSgY6qb4L3aRkdABQMneBfImBEvOobO/p28o8We6aKyXETQgZcXLyee
E738+W3atEnGlS8NCJXqMp0OXncaQSSESzsMsQzHaHalXYD43AlHSOVx57cA
AuDA0G7YVQ7bwvti4/G40Zx/g/Go5DMeR9XZAx7mcB4RVzHZMDRcSrqgJX/s
XCpPQ2KVfU3UhmOUdLIuJIAkGi7k9zQSdcTac2zxfTwWgBf0eGJVIOCk8ois
YEijpWUMWi72oQVikdECDrXQMgTjLQUtGKFHaLkhDlpmzp+vBtPvykIu6ZIl
f7uIQJ1Mil2rk3o6NXxRKVPDN3lTw4NnH2ITAaAM9gIl7GtYsosgrlv8l5o6
azVfFbJ+9rBt/6JkwQkojt7FvJYtWy5xPW5f2qy9VT/vyyZYukp72154tEub
xfBAkhya6tTLVhA8tO2AlgIkYGSRaYE7BjrBjrm/xYZUCbQhiDgj9oE/ASef
/mQ2oV8gouf7pqVVr1EDIam8lq1aFZzcoUNhaufOxV3PPbeYjlxRl7PPLjqz
W7eCjp07553Upk1Gg4YNS+2v4Agi9M9qho7ecDr2IOkBBBdbmJXUQmtnlv1N
5v7tT/gfbzjg5Q9z4XEBU8AMsILApOeoUZXiMaMXCKosU+pBlXlagqqhQBV2
Owiq6FLGE6omkj8CVE02qJpBqMokFOGyZdwJIlhkenUUqF561VqtSpGB/szK
QEsrlc7KDRU0zQlAU10nCY0xcqMXfstzo0UyAk2mOSYGTXjhZO24oAm9vi1a
tAgtTmBx3Cr+ATHJOQ5giZsCOJ3tg9OF89lFSb1kGUuxzleu5bm2SFhCgukV
EQ+wbkXyEmccycNzObvzxvFbnCoei9M/55BOHBFaIZGRKyUHsphQzpbH1B7V
4o8pGfXq189v1bp1lODjnivAhFgfeQMw9uUmcgrI4Izha0CqtH4PziHiStBB
YPXRGI5KZ2rcTTeFga1QizK7PfEmwdpjm/E1HkNQ5m/3xf+tyWjh8l3D1dyB
GJ6SvBR+iPWKBzHIHwMxPE0bYjeTnJuck6OmzZnDEJtOUMNzMCtmszt37hzS
WYZ6x5X1vgrpwET40onva+czrggDOTk5ZK2ALyhOIN6UVnnwBZKz8QUhDmIk
a5VRt27dhSZWZLk75pbuzQZ6ijuGc35bsoFuFCAAXpcuY48f8909Qg7j+9hS
7WSVBdcQTIRsEoImbLVGv8tBxDJbrGpxLRYeErIBKxchIfSgosfTazbsLBBj
nRtiq8XlfbBE5/gFEc6VSc3hbEn4CUKPvhfSIas2ib0nwMx4TziHOINI4YHi
x6MFHOWh9OZeR29mSd5T0A4TWxTiYPhx5gx7rcxnRtS+HaDDeel46qkCNY20
ZjqXGg9pxj5zel6QBqfCjzRMRRekQfoFIC0rN1dNuuWWIjq6aN3RyetGZcu5
SzslQMZZGAOyONXfw7I/lW1VYT0rExMtazDCoFBBWLJrSZauCcLkFUvX2SbO
QGIBuM4edUYvmgMt/K/h5e3UcUpLOl2ny0pM4NmF1wyG1ylB8CJfEolZCEH4
R/DwYeBhueBb4jWCv4Rzj9cKsXr4mojXQxjykL0ypWOqekxY72m/c0QHWTD4
r3gv4Jvh7xEJFra/YK6BmN7ekuz4T3Zy3rFidKAk9+fQN6L7hsLJi9coO8lB
GacNS3C9kBwByyNBjkgXztzU2bPVzAUL1Axi9v50/2NxvUQnCsoIYWGed1XN
mW0uN4APDwvE2cbtNJKMXqPWJBBqQiJX+qAmlTCD6XIdqNGlXmughqfMUJs6
1YHaVEBt3jyVtWBB/j8uu2ydDk948/z9Sp/nl0Tn0ACIDcv61LMmDZCCCYsY
iCGeCIiBrwRieLUFYtAEeFckyQmIpaWlpVerVi20gK/7VGmr8MHLbadwKnAR
r2N4jdO1LMjrIIZN8NKhCIHX7ZzNBLxOd+B1D78mXFpD9h1hfr/luuCa3Rzk
hKaGyQEc2Pbf8G/V45afVL+sAyVU59bwmLAhuVhl+AvDFBYRGp2hRo+Jx0f8
3FS3pVWr01Y6jvQK8LPghLkRb8skxUTDEA+lE5Vu4QynCvc7HqcMJD+BTh28
FZB7NhH7nKVL1YLly9UU+t7xOGV+c5YEjBF+ZL4wfofQFsa5obMmwjcGZBb9
XCQgM+VmQSAblABkN8JQGJDd6gVZHj2urqs9jmoCk0O17djoGU97loUJyBCo
t0GGaIup64kBGcQE3gVwkV1JcMEFF6DZODSPr/tCq5TGqv9t7+vmcOp/JeYn
JQSTTfI02wloaA9slQWyrRznY+9r4MOWPNRTzjz2a+RbbGdQBcGzM8d+wv3h
sP8Aig54fKf6zviNXKx96qrcQ2TTDpHNOqoy8o7S/0foewTGuX+R7fudN5Vg
UhoK0/C6QzNqwH1qBly+xzYtbdiLefT8BGhVNNDgkrmRczpVMcUsYpnw8kIv
gs/kVJFJEKAFuWeXldI9g5K6lRzu6XTicrBfDo3TK1aopdhmf+edaiLdp6R5
lIn8My/QKnsGeaMImB4ro0mTJnnt2rWLCmEQ6QjYzgoCm/E+S1vbCbChzscG
G6ob8LRhzAE2Muj5BFwNtrrHWLTwh6doAeU7N2Q9Ipt+QtrAl+NXRVaFBQHO
9AJ4AGcnaOMULYR0kemFpgBfB9cDW6esYvuYkMc507hSAdknxFE5eugRjC7Y
zrbAhn2PLBZHvMpWn63ZqLf5dUI9NcCggfaZAzQIbqTy4NkyYSEWO/lXIq5f
2dOFSgCJYdYfivgRNkE5X49bfuFBtxp83xvgfckgvtRZaP16EYl+AVwl/nh2
bEWzHb2OU0FmWza4JvhejGU8RmcNbsss7IpatkwtwqjitWvV8g0b1B2bN6s7
Nm1SNxFYjtFZCzHqIoy6CjGbIQmpCPQlly9fPhTWIbOizl26MNToiYVs+DGz
WMzkFJr64RdUaAr4WYWmXGbng990Db/CYaNG3enCr8z1Eb2t+oiJWVucnJoX
fkl++CUZ5MH8CfLsNFcpSiNCuosh1dQLpXurQwPact26aNdVO/ncLK6IQ84X
Ka1TL5MgY75eFxKDOnHRjIYkGcDumW3ebviETRGvorcRdzPGXv3CSOsz9Xfu
gug3/a8w2ttCtVSfadgywts0ed5nryl7ecwZgio885OAiE3WGJ7LtbVonDCN
cIiWpGW8jK2bZgBJRf7YNQZ7fvwE1ef4jxUkFIxkjAtH2DsWF272kiVq/u23
q8WrVqnb1q1TK/Lz1eotW9Q6DD6+7z6Vf++9aiLBJZGqtFw4c8Yitg9H38PH
8h4ImkmVCAYm8cuTVNixc2dBH14eDcDGJYIvbpV3ghrXAPAVkRwwjYrJx1SL
0XfyT2rczYu1uScs0YuQCHxmaZc2e8lcN4W7m/kUMQCMV4Vx+umnI/6mO+Yu
dqKSLDPb9ecopOCvhQd/YzyVqm0gM51QyQKuzdN1SGvMmvfNJkxyvyUxvfhz
5aXx38bqceqOxeOJ099qa4dyLrR2TP1D9Z+5j0dvDcw+zBnIofP2c6fpAPq6
P0a2k+/XdwamUuMGUP7Fk6p5EC8D8jdtDQWI6GCiv08+JUY9yhggvd76LKDQ
8e0EiR7/zpKd4shI0QZHCkyVA6zh3+nb5WIA1erVatn69WolFtJs3arWb9+u
Nu7YobY8+KDahv2oDz+ssujMls23K++RnGZpBppyymnkFbTv2JFfggDkBVWX
X3kM1eXjfMibAuQhs71gQXEmwUN3wpetkb/3hHfU9eNu4lcBzx7PMmBLrAd6
st+ylNALKvEwqev81q1bA3p6BMElgF5mlZotC2s3PZvgl25VdFwd0K8/xq3s
OFOnrtuy8MwxXp4OpSBqyylr5Nj6bHPDKI7o9MOvyIRPjOCE6btRTN83Rmz+
aGrHpNZ+Pw/puHruUW7yvmbxUXXd0sM8iz0jF+Goo+QxH1IDcrCa5DDvAsJG
BWzhAiR7GRvJA6m51v4HZ+rYRaPeySOP1gvBrq4RtEIk5xkYwQhyYs0SkZJ9
YpfGSu4CYn6P78q/weNbRcJz7d13qzvvuUfddf/9autDD6ntjz6q7nviCfXA
00+r+598Ui0gw5nA4wvFxR9qNgYOHIjSv/Iaf/lt2rUrNf4S1bSXtn4XlSUu
/lT2woWhjYK/UpSP9B2znR1g6AHocLwMifAXMZpAsGe7ewBfWetGkOlu2bKl
md90OeIrGC1A4vN8Rp7EWPSw2wHeFlQfAj2F6tx2mqULclFXJa4fucAoAOAs
N+cJTCDTcfv8CNQun54oL+JTGz89Vf5ndu9685Kev3g82tB5R3gO5ehlR9X1
K8htXqnUuFV0u0Px1+hyGbrgCM+aQr0aFgRhnwkQ2WcG1jUc4AVCQCOMYg/T
9QX/gFRpIbGJAaE+dF1jQi8CQoAJGgvxTZwytmN0wgBAu2bJrq7AfcrsAdJJ
KMkDhArdQAp00wMPqK1k+xiEBL6CZ55RDxUWqkdefFE99vLLai0B9lYz3SuO
B1g+xgOkY1vYs2fPiolA2KTUjSWBRfSlqBaebsq7CITJFSpWNDhMWHjSZ/ht
ThLTxiGoCM9e5GU8HAYlE8pScYJ8ncFhdtOmTUOT+Zq7Y4oNqk6iDVpdYdU1
9vcMPgUOm7YPbpR18ThBxz7ZKk73iFIUcrFT2DNfh2KwQxJpcWxV5sSChGG8
eHSdQQm/GDzeJHj8jaup+xKOBmQfImt4BNVtjL9J65W6OV+pKZuVmrpVqWl3
KzWBvjfqdj0+AthEIyYWRPfPOcLtif2yDrvWcvpB3uyOjRHAJcI1ZB2LyKkV
y6iVWBdPJbG4iOcKKOklv9KIUlg3G1jDA8qdJtHbjBN5PK7hAts13LiRXUOI
UriGmwsK1N07d6p7HntM7XjqKVXw7LPq4eefV48SKB9/5RX11Ouvq2d272aw
LrvjjrK6hpnt27fXUauk7JQTTgjE5jFU8pe1UHmmzqun1EhO1vPIYkc1nDdg
E72wY1gkSiFPImwmspHxsFlStYqdS7eqVUKT+Jp7edRpozY9TWi0rzWHZIhp
47WUaqeRbDNT7IJ92246hZe6oQUBnPYXzNU5ClGvcB5RwuIEb3bq/Dr2eCE3
gXApAjdwHKFcHbspTuPXZk3Rj2YH7G+sNjVOtT1E9dxYspG3bFQq5z6l5hYo
Nf8hpRbsVGoOfT59u1ITNyh13TKlrsnTMwK4hsEsde+fQ7dsvcgZe8I0Xv/k
vwV+IPtdTIpbsJrkhlJdR9KHVWBOlCicx4EGb2IRJBgvlRxy4mA9yuxALlyo
5mD6doADCQVrO5D3Pv64up+w+uBzz6mdL7ygHn3pJfXEq69qrL7xhnpuzx71
/FtvqRfeflsVkNJdk5+vZmZlhfw21DiS0cwJE9Kat2hRWb8wmU2aN/87cTrE
xqm/RNp61SycptZv2HATX01tp+7l3O7TnUodxE+CcAqnD84fcGr7iQanoiRc
kCJvAXiGjReJBrjSFr0gWegrehnP19wPNtTSsr18c5ftmpfhnoAOt90bG4r/
tdYd6ZklBLzaLfnwOLVttQOu64zW3WZqYsx+ZgR7hj1vcom7TKBVe5quzvXh
FWvFeLnlPtWHPMV+hC3kXjFEb/Tt2oZm3avUbU8rtfw5pVYU0u15pW6nz3Mf
JVtLdnYs2d+Ry5UavoRnEPFWFdTaYCkm6m76sxY+wtuOUe6Gv4W/i+sg3Zsc
KVdJBvNr3F7oCl8rZwj3ysGssZEieHlUBN5NYyUkUz3ZqLcsspW4T8+/y+sk
wRvkdULwArMQvE+89pp6etcu9Sww++ab6vmiIvUiYfald99VL7/3nnr5/fdV
IX3/IbLJmwn/qwnHy4kbVpC4Xrl+fVHOwoUpterUMXnYpIwGjRoxcLt5gRuv
EwhVNfgcMS98jpdPyvycCBFRGPwGvAwAr6dEVKqw3cK19NYnn7xZAzcvpcWJ
XJMuLRkCXOldknIHRGkEuDCOcYFrSw+T9dDA1fv73HK1stTSYEQMamnG8lUP
zKhcvakpurbaetr19839d7OPDE9rql0rW/5y3/RkhrKbLxnHASNbHnvN7mLT
BrTG5ExsefyoFTB6WZcDXPemyZV8oOuTYiD8kwfCcC8hZwfm6KL1a8mU3nCH
lsMLHlFqzStK5b+h1MY99P8e/f8ygvKsBwjqZH7HrNTm9+pcXSon+2sFzpDO
/bIPc0kdAktwY+HCklROIRffoFhv5TkrhXylwPAtXFeguJcfxYjowbHBom40
mdExABpxBKF2gUiEYfEzj9tKp8Dvtk6x3Nb5ttuKTZHitpJC3kQKGW4rK2Tj
tj5s3FYo5CeBYlLIz5LVBVpfAIrfecdGcRifkOF9ib7EjwB0gJ5+PW/YqFHV
DH4xxORcg9+zY/ELisNN0it2hdxFJvME9wLY5uwvjBMq4U01PFwHUBsSmngR
AgpPMzp27qxnUtfORz+HjV9p0gV+pUE3CL9AIHBrNY9r/IbKOd6Blbj0Qhi/
dKyVOiP5wocgkmSp5ETT+oZ7VDJX7bD1haW9wbR6T/JUoUpLaxvyaP0D0BwV
bap9HI/3kjw3AsUxYJ2COZvXSxsV7Xi7e7h8jlOfEvt1Ik+xFhkQA5z7Z+mK
KKjoMcu1VZ55j1J5ZJXvelOpHR8pdc+HSt39nlJb3iEL/QKpalLXk+5S6nqC
/7WkqocuMsvesQveA2utrhGpwmprpG2g4um6Uqskt/BA2o1I+bMxOIkspC04
ixgWx1WiSTCuEMSc1yRowsDmEExLcnizbIf3jjtiHV4yoptJRAc6vCSibYeX
4WxEtA/OIQfP9D0YbNwPhpwoIZMQqAt9k9Jq1qrFitnGc5hr8Kq6RYV2jb0p
CrrMFCZKCwsBN4zXjn5NaoHlxl8jjECvDDANMjRYzuzSrZvGch3sgCnA2ETg
WTpMEuEZ0ENCBl684FkcXsJuEJxNPsYL52OsA+JqhBF87cMgplELVFy/5T98
AanSi2nX0b3JmWOlJ5nM8kwygcPbgf53xbaGtRbbsNTTtKU+33aQbUt9Hxd5
ILXjEdvsHNtBrH9zJTGndDiA9SOnXRxYT93Pu3v7ZelAMbpjxFJPytfWGAL7
rreUeuBfBO1/KrXtfaW2vqvUqpeVmkeW/JYtdP81JLzJqc7A7KCFqKjV1be2
5dZWWzvNUAfIxF4+/ovUyjWcbVi6tKYLnGUH2+dbtUaIFsPZFSeZsY23Whxd
OyhlTC6EM5xd4BRmF+IZbiI4YdSxOMjYWUti23GQSWzHOMiE0WcssW1hO5Rk
YRrfhxNNXBClx0slj7iGxnRqterVbUyXYxtdM7iW30BZqtZhf+16fggUrsiC
wzxkCDbGXn01XQHCBfgewgWosDIFtFv5CpKBjULM7/Nj2W5zlrkCwJuNZVbR
BMpQZWeuC9S0HbizsAwkRwKQXNa6oqv5yq+R8JXZZ2jCV6yv3b1wMdV9jmGO
1detpX7dM4NlvjODRfcLrzapH131B8PMTMAT7ATVU0zdRI4bokZzpG2wTdgL
4WlJF7n627jQCE2jBJdR/Y0JS//CiHJRfYhc6MOskxG6Qhv2tbcRUldrZOc8
oPU2kL3jY6W2k9HeSkZ7M4z2i2S0H1bqpk3kUq9V6jpB9iLdsuJHNxvvWdq1
RmoJoesrJ3yNFZo+ZKOzkjWltGxJgkQ0o2N57fAVujoInSj0FsvL1pqE9FKD
UFQioQIQQl1caAR9UCAuLvS8OC40ckZ3IWcU4EI/ksiF9lnriEE2vg9k477E
BkXEIsmVKldO9iNb18nrQTO1tdK200e+PmYH2aYRjtNIps4SYTC8ctA7gzIy
6BrIGSGcI7CA75OOySe1freL7GJMocIEEdlNhXCwIFuGCfqRbdK2GtlBBUvl
PE41srU66AVo615KsEEZq5YKTjnlFLx2g/jqR3oSuF7ZXYKddmT3DY53HDwJ
wJ4ks8xMkgloXzblFR0vWWZ52bc4wTKHKcjm43GcALdjvx8y9vsZXXg/4lWT
hHJlufayv2AvG94tkk8elJMkB8qBPASneWxPrkY65DY86Zn3KbXoCaVWv0po
L1JqA3na63crtXYXff9JpWbsUGriRpLzxAzXkqTPyNMdM2hME8RfletFO2R6
3xkHeLU5uQtAugfoZxR36tLFW21hip1wdBHzgrc8zJLXHpDn5jqlhotWrdJm
e8MGNsNSbgjTHNfDNr9je9j5xsO+u7QedrAk9yhyeNh0N1h64ohsQqNuIE9K
qVSpUizGk50Aol2jYU//iKmhlhC3rlQMgxoJeJA9JitF4MLHChx5wOsJaYOf
0T2jRKgZzVJSzGKzuhhYGcUEIVn3bOPeHiIquPeXawDUwWXCLvBNOsoCfg0G
/jHUTOWdcMIJof587aNFnZeQLo6Nl7UMipd5WmXcOYNcwS/jcUxfmk4d63pG
oLarmf/BRVWmNw0h75OcUPmtViupFGgtMaloO1x+v8/Ov+yGyke/66h3Lsia
8JWpQ/6JK/tRYOw65IT8HKBf23ko7aELdexs9EqlxpODPu0erdSXFWoWWPkS
qXpyzJc9r9T8x+jn99L9SBOMhoNOtn64aTuNxwID5+pUGGJvSFV3n/SDyXbp
hcys3+Fw+ucIil8Ou8QVHshPTpzo+tYG/Ny9ZvnWy411lzIrJKkAZlh1xx/3
/U4if5yTWnH88edK6Y/j5wjDGX88vdMZZ9Thl6AJIx9+t79qLV55lt2A28eq
DjHmnAURslt4yYBvHsCOLdSEo2vHjk3C60gQROARxW6IWhAFZLfr0MGBfuXK
laOYvirQB8wANxmsItD3V2rZFSJ+6NuVWm4W2gv5Y6nU6sXXfENwFlpGJsZk
oZHBujY4vuZpHTBtqOflxIxSlLE/nT1jf+7xdnsT1HUp83Mx3d6nEH244xqn
W9VhuU5sDvWZ3J6AULvHgbcEwKi3deUqMmUYZ2Gcd67FvDXK8O8j8M8+qgbC
8AP6c47yjJghJM2HEWyvuU1TwI1EAbduVSrrfqVySQgsfppuT5Hxp1suCYCZ
5ApM2kyuwXqXArjzPM+lgaE2DSzQQgAOPYRH76kHopeO+7dQwOn4kF6rTh0+
6wx/0yLk1KLQmy/5LjtSzlCG7fdDGW0GVoEX8l1bDJzXESXAZZ/733PZPeLe
dttJLxTlrVuX2qRZMwN9MF+0y9lnewb8lQX6/fxJbdMEa0Mekgm+Efk5Ybx+
SeBQurTR9FKiVADDH4aPGVNI7ItZX9qfr5uenJwcxcxZUADgZlNAaQpR7MF7
8QpRYPWFAqRYs7RFYqAlkvuZDRs2NE0wkRR6OdOrVKmSRsolFE5F9xV/D3FG
vsc5/HE83ae6t6iztInwGJ8g0xpnNM0zHUx3Gi01XeurfCONtsWMNNIhd9L2
Q6Vz/VVf5/p77M2fQb/LsULfsD63rHsNqxD4HaAiqA/92BId2OUMmmDVMO7f
us8SPgN3T0T18AnMws86rAbN0oMNUYSGobegCxS5gDJGEOSvu518gVXad5i8
TamcB5VaSDSx4HFSEY8qNXunUtn0vSmkKiYgrL9WqZF0/2uWa+Xgpw4oiCGL
LPUwB7SBgRb7C07rkS+FMnqPeDbpVQ73+evQ+hmfIcOE7ZBbn2TaAmeWFI63
smvi4EMC4H5OQID8i5iAgHX/B6SI1AQEnrQCAoXBAQFNGeWcTNwzOhNXmLNw
oRng5l2i4S8NcopIfQUwzjSzoEpuE9lE2RDUleEJVllws1AQg74m9PWCdpFj
h/rC//gacRPEXFCASr9bdGWvXhaHZDZo0IBnj2L+m3BIvCIZ4D2oSCYRh0id
jOaQOgkLTUsqZoMVwha8WrVqFTZu3Lg4JSUljOFx9I7Ihids5jErK0nbtWvX
LlQ+Sl8XkeOR36hRo0z6VWT8QDds1ULpGdWqVcuvV6+es5KwaZvLjztvLy37
6Gfk2RjcSZznzHZGfNAeP3Nmv3jTndC+T37ECGv8DHL2o932/ctMkweyBF6h
Mtvq5dJls+yrSEwSJbOoCTCZhlihUmzGqX5njaTfr8vuSJigjOfapSqsrsMY
KfJOQhU5SoFynVHwU+4kkXI3iRESKXMfYaESVguewEz2+UQ8OQ8RGW1XKnMj
aZQ1hnBWyDiPKrGkY7SKEA4q9npP3ZdNBO8QDq9650ZCbiOxKtElvyA+Cgco
MG8WWa958zyBBj/ZwDfxFLtaFeggkWV33ln2wAT5JiUEJkL+yATnCul3iKwy
SW1owonYdYhmjlYjZwxOUFObf2CA01lj1uJIcT+EB7ScTTIgFFTf4aUjro5A
5IXh6NF7D70H/kaBD2I/IB76/XwiP5twSAzwDFcQTqKqvFIU98R0eFn1PW4u
sQEvbMC38GNwF3jHX+ETpzbPna1v1mvZRIO8KFFMGDvlwtiOFMa2mCTsSAol
RembheT8ZNauXRt0o7egDoTwyaxRowYILOaB8aCt2l9YhhqDiYE1BtoHWqIn
hVy20jv6tLcZYMDBTvGBnrDaOeEDmSEGXFNQFL+lk2sLvuFAJhKR+Luu4Jkb
00WDSmCPn0RiCn8P4/44HWKHSXiwxDdmItmvplftME9yRmX+qGU6qTmexMqN
a3Ua5Po7iGJI6RDFZELrEPtkP6B1Tl6hUkufU2rJs6CYxc/gPrOJlabeSxRE
mmfsOqIhxEuJuUbcLjRU2aEhDPRi3bOQFwmpgXN17rPX1L/S6zZPEwZKxYci
jMHz94JKiBS2HPZb6mgkQ8m5DFNIJO6Rwz7GNZLyXbvyAK4Ovu9hK9/9PZER
KfcNjozEJDNJCZEnFSXVlNb65JPr8bNs7I6dtceeSxZTYkTWOCDpIhpgRts5
PaKmtFdGAUEEjncJBqRCb8UtWVmoGUAdPFwQEojoXyPnEg0Es2eH8S1UJ9MP
EXGWxS3EWnnkupmICaajHlNZoZQxyI6XWOZxKwtRx6ClTj2mndIUFtpVSVgn
koBqHKYhspNt3GZxaxI2VEWwpCfEn0bp59n169dPrVixol7wdg3EU16dOnWK
mzdv7uGegL+i2p+SSrwzooSCCDMw5dzgggjXqcrn6YMyyNKZVOSMA3vGjAN7
2RnlEDhAZZxMKvrClClKR91P7BShCAKpym70mE6RxoXzvf20krAxjhd3IyD2
M9yEa9HlONoka0ysBhII4yL6TturBmQdZA66ZonuzJtAxHELEciULUQ4dLt5
k1IT84lU7tTpVjhcsx/SsZnlLyq1+nWl1r0Bglm7W5EgXobULDlhU4iIJtD9
b0Sp5FpDRMuZjHi0WYYZbWbrIY7bgIhIkhERJUfKVfEQUTECFdLI10scDBOr
YRmEKc1YW2R8Lm5EN/6T3YQn4dZtQioB8RYQCioYIXXuCojPPGTuz8lXuv/T
vvgM1y+DhGxfy8q9SnhmzRqULmsiauFpY7TDM5KpusQUmUAIelr5/SRk+oDg
KsmIJBCQzCSbYsqVkXpGZgrFKHjFshYsIMBn5eZG8CUZFahJNCQg9IVfBBkR
o2WeTKDVTFT2Akl/QVVMgXNAgaTLRHVKZCK7PhLOoL0z188LInNCSc7KaLMe
LwzyiWBJXjmsRgrjs1CkkJ5sevXqurJNLwKoDj0EEVQAMViCunIWVNPfDLO0
ukG17jwo1u1yXB+dpNW4XxSnnGOLb/z7ThMHfkpzQUlT03xjZa6Y8I3VpfQz
z4dB+XKvKX/yuAp0JiC5esn171lJ5Fyno7ETu2Yb3TSSuGZDn2ctxgO32DX7
0Ez9+Y/ZkPqD6j3lNzVg5n519dzDvLECHYvoVpxBvtVsEj9zHqT/6Za9Q6lp
9L2pdJtiOAmx4+UvKXXnHqXueluprR8odQ9KR+i2ZrdSi58l962A+GwzPe4G
7aeBl8hPY26yRy4Oy7N4KVfzUr/sI1HiaDODKtQRH6KQB54ufTM6IsMSRrDi
6K1gt8zEgBADXnXXXRzPsfsP/XwksRzwEZK5cKfe+vRT/l5M7Mc0EJci9hOK
E/zJIwYJ1efnl+Lt35TGamKk86weTvHBpL9rkK+xeuS42LH1zmREads3035z
SDjiNUKsjLi7HILm5DuDxvEt3PBj6EvcHcQFEqOXN0ovdUqVqlVD2i87vkJP
UT8WLyUq9NS0VJdpScq249V5yiKnEphBuIjoUJiICEr22JtbGMs7y0Nj8Wea
m1IQg8a/pvyRI9MSYQp00Ky/HtJabKJ9Bc6yUKxL7Hj6pb5J38YxujBXO2hO
NcqauNUosSOJX7KmzO2xhn7YDlqxt80ZlSbcz6FryiCSmJym7ef6rr4zD6h+
JGz6Zx9SA2ahenQfE5STQ2cnzmoPMzEkCDhcl27l9DpxessIBiR9y/N+IJ4w
muyaRUd5vAHaNWcRKS18VLd/LS/UlamobJn7MP3sQU1SyGffVqirW7a8r9QD
nyn10BdKPfqNJqq1bxiiovvfioDSJkNUCChBRFlkBRHleHNGQMGT65d1pICe
nxAV++pRzNXyTEAw9anI2MBXATAhC5CrRrLK8d42btSJKjO5QOJAduOlTVLw
wEA0r334oXr/yy/V57/+ql6hr8XLs2NGJdSXxysvJ41WQJxSPzhkdN55oaYs
nBzRZGhK0ntC0SyYrIF2dgurZ0Ky0NOiRcxBeHUQXUM4Hyk9hOgXrVxJCF20
ahXxFV45yE78HDdU+ILDZtHv4nEgusj7KyAhZzRUnWMuZrUnlViNJvH4Cilw
HUeq6Sz+lKGw/opWhLDADsJVATwV0hKmnIclcINWCjskFdYk1aVLl/LYLsmf
hSJRumNmvXr1uDS2Ib8OVcWni7Zs2dKhqxK1W2+HrXANstrY3md5ZtdzVPu0
mbFLpqSKxrebIKiKhl264Ylcuk+4TQX17Bil5nXpfnZdOozgIxnFbDXjAFep
9MvCSKLDaiCx1aA5RzhVzgvgFypipXti9ymYilyEvtzw07NONS4knt/t63HT
96rX5CjPNB0y57C6luTNpDt1k3keuXOrX1ZhtektLOPe+KZSd7ysC3I40E3u
XqiqWvmKFlfbPlJq55dKFf6qeQtfM2+hP24nOYnk/N24EbH0O7CNIVBj5Xn9
PsTA+848HKUnhlIqJwbejh0/VJJL3Lu/cXcgMODmIJALtIrAAuKQZEcF7R0S
dbIaUHeYCJLDW6ZZnHmL+OfVDz5Quz/+WH34zTfqyz/+UNGjR1XRv/7F/PaE
L9r0vJe3TO18BW+4ie4P3iP+zL7osstEXLnbw1CIY6rm00zzrp+xbBfPHo7B
Dbwyh8zqYJOeIWEqZiliJQhPVCQTr4eRGEiCDKU3FjkCcD0cZbx2yBvgdyBW
0WsA5sPjEiNmtD75ZKtOtwgoO+Y6XaKkUKW4Ffj2hCWp0bVJC4l/KddDjB2y
pQRRFWZVVc7hKvCE4YqQUVHMGVj4CZIKa77q2rVrBew3pDcYa0Dpe1H6LSyY
13UVFcUFDJRZdE1hTuElxfMAbfq0t7KDurBWEbupURiJ8ojTL77V5wEGVAI5
HuDTxgN8MY4H+AFP+WSRNc4e5Use4CR3TkU8D9ARWaCu2Zq2BmGXLXYPLtbd
dGiUHbdWqd4379KRfBNNQ+LQW21kevOd6NVuM6PrA6ehQHZ6YNrbABJ5mDM1
kpjkpg1afK16gbw+8vwe+pRuJKwe/FR3+t35huaypSSsljyjI1cb6X73fqLU
Y0RgO79SquA/Sm0mQbbyVeK8p7QAu+luuv51So1CRu8Ox1sMg8pCld0VM0uc
jeRcd4iXrUvfe6P0NqWWr1TrtRgu44IBX/8fnEVkuhEXluAVMAtsriQNxol/
4ygiEAXHD8GpncQt4DHwzLOGk8BHr7z/vtr10Udqz7//rf5JXPb5b7+pnw4d
Un8cPqx+IE32EvFTTMAqxkGs6O8W4L95L/3tjTt2ZJLK0pGrVk5LlDP73N57
Y9oee/qGaKEBd4RpjxLxJRNrZJC3Q2UkokDtDo0RVeGl4XTlhg2cZEBNFXzq
VZs2hVGPSbYHJRP4Fn4EJYu7wvUG2+FhoN0wqwt/AnNTUay8TWuy4ypHtmsS
42gyuyxRKpGF3qQNAQ8LQgjw1oJ9xVDEIRGX05JsTnMYje4q3EI3ktndunWj
j3jG2HOM79PPo/QAGUj6uQIN/mRR06ZNSwy6OwJtcKA7KQJNtivjavCXUQeK
LcvYj4lNy8ivnnf5uLi72dxCpiB30i1kcoeWm5h7jDsZdd3JqbY7eVAzXY52
J8F0A1HLOE83M4wg92vk7bqh4cZ1ulkBTYcoa75x9XfWRJIV1gha02RhYvao
1/SWLVixMZM3xHjZgcS2wxYc4Xwh4mI5O/SkkQ27lbrvI2KmHR+rUEu16W1d
SQ1PE/nCJc/qfCFUGtTaPUR8Wz5QKv8dpdaT2LuNCHEu3W/a/drjFNIjAcde
p8i3EfZirSUmfzhPcZknqjng3ZMhina6fBWY71XDfCfjQ8FpZM04dyj+F8Hf
9j4BecAdigXYtBUcjxAhzxPhMfQ+ofrgsZdeYvUGJQb2AnNBvTHrkWJ7u7hY
ffTdd8x83+/fr34/eFAdOnJEHSIG/Bd5pq+YSoQYj7Oy2z5hImMgWETY4Lgi
2kYknEksp8nvBCdsf7Z/NJDVE+ofciaDkxAYc3q+oeHMEBbuDSXtJaS3ROs2
Zq/lptkENefIlMI/h31Yt20bgZ1erzB/WoW/iTvgjjAieEnxIBB4WL8C2iNh
l96yVSuH9o63FFvqMG3ak5IGqw4TPBcG4RFL40s8FIgjgbtpu3khf1QMmknc
TGJZSCchFUNz9CuguAhTHJ4h3YjwSFTRR3xtUV9e8+bNIer0SJkIaE/Kquhh
iPTIMpYqvH9OjLiz/VJcoYg7m/aQtkAoAO8B0ip4H67s3sfnl/qrql4rsarq
cg7vy0SUH9zwvum3Fr+Uxd1MS9zNOuL6paRyhi3SPVyjV+hSBU4P3kWe31al
ZtyHdGDW/Sp0AdcrZBco1aXXaivqttbTJ67rRZ9k+tbpgT36+p1a0S90efnN
PxEFImWpKRDjHYQCMXRpLXmnW9/Rvd9b6HYnUeLyF7TgQ8UWeHAxfX7b8/T9
l3VKYPUuok/6vTz63gIj+iZt1fw3GnWjq3XkzXFhV7gurKQIhpj0AEwFzA6e
h+HBYqL+lEi5Sq8YHuTMdT4quuxeUrRFIUwObw4sIJ4sPLA8kjkSgWP19+CD
ajupP1RhIfqGaBo8Uyg/kNbr//yneuOTTzhFUET89/Z//sOe7Kc//aS+2rtX
/XTggNpLKvAIebVHlVKH6fYX8eFHX3/NXq9bqVUlposE5IeKLShGVoLkRW8q
KEht0KiRqRc1MtBXIyo15RiEzBFIE4OzmZCXARpvFt48t8wZ+QclLNMvllhd
8pB8qwwDGvbjcnqUxyKlQgo1AsMRqs7VsjAhKCfBj3AXmBXmRzIx4EYQK0jW
8GIBvUXbNSUeV2m6yLxgSqxpl5Wy9IMERJ0GmMRmmJK5sLyfC71yL8mRe+A4
YpwwE2CEvUoQz/nnn09f0ccIOCjMX5fjn+Ae9AuFdA0crdMphkolVn+5datJ
wZ740IRur7lO/vOoXhMxiHgDCu6EGZFVkY3MCJpeNGid1QATp/grxu39ygwV
/951e1kM/mHlFnxu7yzX7ZXGFox2kwp1uL0TiKFu3qwTlcSMzIhZhhVzCnT1
+qyH6PawUpeNKgje0OOwpKlvRSPOdXv0Lj6TmxCWRG1rH96Arscwj7xND8HJ
pr+9+AlykV9ksRiGTxxqxa12S5/RaQnUsGYV6EtBDcc8Isz59CuLSDzOf5J+
vlMLxJu3KTX2Tq9I9JCkpCdMfQcKzRDjQws+AqMwTJoonzNEub24/YXzUyJJ
lV62UxaZGJTKpa6WmwzJdKPJqSIkBXLAxKrbkE8lMgAJbPSJRbjIICy4sBB6
b5JL/MFXX7E4/Jhu+P+TH35QxdEok+QPJBR/JZLcT2IR/44YojxApPkLCcmv
/vhDffT990yuINpdRJwg3lcgIOkLQg28b0QU0ZdPHnOULi1kXGWeMXBWnPVg
KOyQ+jrJUQg/2uP6ZIIIj96DSiTSgqiDWyzzBvByrDHtyMyLmhM5i4MoAkpa
6GUqh7wziTC8YvgWTAzugrvi18CReChQLh4eQUH6s2mNmzYNGYI87rr7+ATZ
wCFIkCN+x0+MIr0CiNGjuXykKOowzNKwnEM2kGGGEUOaA5McT9TcyuO5Et3i
S/wI3ES/UkR/FZox7HWVS1Wf5rjK58XkMoJcZWFxv2a02RFpJLwXYEeELlAg
KFuEZcdpT/Jfg3p+YlzlCV/FlKf1NOVpTi5jupvLsF1lyWXAVUbX7yiih7Gr
defvpI269W/6vVxZTy848SO94Nk2Mz5EbDVnpwq1YYaaTnJveO4nPNbAnWe/
kde6aaI0Tcs2UXIS9yNNlLLlxlnxdoDXu41YdFSNWaEr3zDHE2R5O7nPy5/X
A0eWPK1lJC5rGpHpLXfrin9UuuGaZhbQZZJ+ROUmOo82a5K8fr2jJMNgyVAt
j0MtPCnONIQkdjPBHEH84g0BVyIqimfWpff2ojbdpoErXzJcyVVIPLWjn2ld
5ria6V1EfTtSA0g8oihXHGuoHqB7kwkniqBE/RvEHrzfPSQkOXT466/q2z//
VN/gRtz3DXHkd3/9pX4m4fgbceSfxIvEj2FwJSka6Mq/iD5/obt8s28f+9//
Jv0JmoUWfZ+o953PP1dvffaZ2k1/Aj47HG3oWHKuC8gjFq4s5iVmshnKmkgg
o035KZN54HZNDKiFR214UsKIM403jaefazQkd22jpcoa2YCXA+IQYhEkiIwR
SnKQNULGm8xJOYRdiSthWfAt/Ah3AW/ilcSvQ1fi1cXD49Um6ZqHxM89/JSO
r2VA/GeLK63C3aZOKhhxw0R1Jol4MoAjbdVoEyTTY1irRSJDUo9CQuS80lf0
MQI+CvPXNfknuAeIk361gC6trEVzJuW8NDBnIm61P2cCgo7nVoMiRTzKPmZQ
JCqFoO/xtsgq6EEZNyWomvs6oGpOxphZOZOZ/pyJpkg7Z4Ku6HFrdIsjKnCn
3O0Tjw/Eisc5xE2zH9bd0mgDAD9NNBW4I1fsd/esevZ/WO53IF+6FcN4Tr0m
/8GzygfmYP/sUTWCWOvGNXpg00z6m7ML9DRFLnh5SA9uQNPUzVv0AAd0R6El
ExV4qA5GqBFEOf4uTZROrgVut60q7cIX43q7qvIIN3PhdWfWvEFY83VuQXVZ
c2pyOKnii5o0tY1uXoyqfs+0B9NJhRJiiUXCKYSegg8OgKO1+x4CPsr0kNmF
XwwfeRdJwA+J2z7/+Wf1A1FllDjwd1Akyck/6PO9RJN7wY10O6Rg5sCXyeoA
/fc70ShkJ+Tnv+n3PyY5+k/iyw/IL3/3yy/Zl0dME1U18MmR7SFdmU08qF1v
PZQuaHSVk0i2h9L5xlfdbFElYoLz/OOryD9GKFYGXHhoknQjLAj4kDtX6WVB
kghJdq6SppcIsVNYF3wPP+O9Q089xffH7+H3waF4TDw+KBlWiiQtr7K7V3Pn
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
Sj3p85PEguVPzrFE1zy6ZCKvMK6KnCXoQe5em+cmPlCFPGTOfnXN4qM8+nXB
w5hn87oKNWG6gmspdDUmgK4w2UHoCkPDltDXUzbz+kcvXU38jiOCmq7esujq
AXKria5aXfa4pqtK/LFhxklt20YxcAHz+2TYAjqH11kJV1tuPWXklsxrfZ3c
LZuuIJ0gOZA0BXxJetHxIGFFLwxkGDxH/Byw5mCZqWGmxyy6bf365AoVKzbR
TFWEPjfP8EUzSpq9RzNCe5qpx0MedYkMYJSZOlBY9ghtM3zMZilRjZiHg1gg
VBKc449lCCOxEWpr0MYiw8cOmH4+5JW/IDfyEyv+52Erejx4o6K00BqDvjli
zXzyhDVTVXRmreAW0Miru2VTnExBUJ1dInEVb+JUvGYHv1dnyCkMgiEqskWR
EUbYkz16dASfhvG9UD2+B+4ppCWyKyjrWZoCOU/Iv5LjGSLkD88QIX+oKYT8
15GtClJTNR01BWYCc4HFcG/8Fn4bj4JHu3XJM341ldAnDCqNY/w7IX/cDhac
0WtrRqM2veATakeiQXIkqWJe0/aDogh56VDXE1pSyS60UW+bBdQ2PbmVc9xr
B3qacZj7dpFdkIg//eny4ClSUPgS3wab6Xbfn1S/Gb+rIXMP8Moi9JAt2KnV
07rXtDsISoIbON6iJMzBuWmjXmUESrrtGV0vt+ZlTUmTQUlLFG+o7Tt9n0tJ
N1qURGpRKKlLn23ZdVPSHtOUVFnH9lNr161bDC9KcI0aEMS9EQ3a7AtwwXOR
FR4S54antNtQkgwUBC0RNsnrI/IJVWScykAXCXRDrTy7Z08h0WAz7ZAWnE7g
6mNq3ZzZf9I7RqwpI73g5EHo8exDM3eBR9XYQsl3yYgwQcwgLP/u55/T0XqP
LrAx0wjo5z/RKI+wwcga1PMdPKr7RQ6ZrCZmM/xoWuUQs5N6PpuG8BLwvBoS
TJg3i78LCiRKzOx2/vkhHcrqgIayRBzkmYTnT1dKE5gdukpEQqWpmAhyx/yB
c6YbIpFykDikIsAjEDvmFga58B1CzZhv8Dv4XRFTeGx8nagUzXbp4gXexaWz
A+93khkigZQUoIvEn0NcHnfD3aGroK+gs4iBwgjm01HFI2ctuLMEdy6m+Mxy
58jVKr70ho/z2qXNJnfu1FCKLrlKKV+pVnbjNr2LMbJPu3FmD6zjxlkrqBGD
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
/v/Rdh5gUlVnH59vtlBERZSigCwiFhRduwgq9oouiAURXWzYkLUhYGFV7GVV
7CXYjS1rI1ZcS2JBdI3RJJZkEzXGKMmqMVGj5nzv7z3nvXPmzp3dxS+fz7Pr
Mjs7c+ee///tJd0oVTS/7rXX2u9+5BFSA56vW+niwniSRlymlbUlJ04HpO3p
tM+dlQZYVq7GvratTAPn6NbA00QnQiVoBNcs5q6pvblz/YLdXkpbXiaLtkZZ
1DyUjyxnI2q5ioZgPVd0aDl7qnbP1K0RXfNcXK6iWSyXBpaqVVVV5SZGdB00
Yt+ErlRakVIs0PUdP/gHup4qdJ3rdey0y313zGVC19tfL9D1zDJ0nSV0nfdg
obHwmqBjz3/YV4EefEGg65yvNNyvdJ3+B61K9XR9NqLrlXU9VxySm+fpSuNy
iq4r6VboMULXrcNmaCibKFqR/DZeNqYrVKW2kqql/bVOT+xgoQ/e76T6+nah
c8PwtdfW++eD/zlvpvRrQY+z5iDuj54TOn2KtGuauzT+Be4Sq8OQpbeZpV/t
336bZ2JQbjVdJPut+MmE1Vnu8Lmo1C/Ceu1/yu9saFB7CNP/JRqvlgwOshFr
cSe4iArSEGI3N4gw83HIbhp1N3WbyuSF7X+bFw1TTKvbtLmcDpnF7Sjl6Fuu
vdhyb0Zfc4NRp1DUqHvvvfe6h8QlWbhwofsZ1XBy56ExxEIL2uJrmzMe1K/n
Su+ExkgK3pK3hlIxb2Oj2AJhuM1WB7As2jXLHJaP3DR69OixIlEnFejaPGSD
g3Vul6frI4GuL5bQtS6m6xW+h7fpCU/X642u9wa63uCzZdCVdVnMn2C3SkLX
5z3Fz5PHTrxJ6Hq+06V/E+b8Q+lKcN7T9e0CXSctVLputPvVdd17rZo729MV
b9eWtwe69its8TS6ml0shloWXVWzBqqSaqfIkCofdCiOK9U+8v88P+QqWuUl
mFWjF7BczNz+taK52vlrwt8zUo1tVsJ0dZjZkN4wYMUEZPTI5GEbW/3P35JR
NgN0NxWjsf8a1loxtobxNZ+EcTb8n8fIlkFbG+Jgrcq2biDdu/fMkiXt4tj7
fOQuLYMGDSrpxy03cBkrOda6FukuZyGnO8gswh17t1ndFunSwDC+VbmELoOK
8Oeee+5xDz74oNL1qaeecs/JrX2avS7sBxSeoRehLjTPWhGQESVPuEvQK08m
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
TSsdNWEC93EpwfMshnNeCOe9EE58R3i7TS+4+OL8RmedlVc7JxfwOPlXcg8b
5Nc6voH0rcgwbpvLH47XbDPTi+HUB9JinKpRwUZWOogyAUcbWLuw1PRZ6VeP
WEwGzPcEEHoQBFzpeOmeZ/x3JqLvnQh3VIwJ1n9WVd5ZIAIERqX497dMOiyX
1biMEpkMZFP9Nh4LkzFS0/Qk0XGZvKYkFm68pcaEPj/DFQrPTLyw9Ipt7azT
2Eohlb3s+Dfn7W/WVa+Td2Np7KCGzD/oNBwbnGeJmHj0Ljwz+CUyRE9bQv2G
N9eUsBKNTqWNDo9Xe2BEuNqnhHn3IGfNrBdtFW0eDQlXMAN8TvpigM+BPRQA
ONCDeaKt+DeHedATo+XgSmfEL8N8dNyXrXZG/gQuA3bah7SFq7RutezS4eW/
l+E2l4FkZuMRlPQeOLAYpFTUtnPnQjjWBdfddFNHRKNUQPNzGzXKPSEnJ6dG
zZq/8VFcYd3T8xF1IECvYqST1Em3+1jG0np9OBC2NDf7N1u49MoeOSSDGdg0
xhkt7L5u/6RvtbxrdJxeYqYpW/JOncf5FXk3C6jB0H6lVhPh9+7weEZ+OeUS
jUu5RBZfIAKbDXeuQq6rUSHbruNxgoFaZdMPrfIo3kkiyP2PC3P/ytkkPD4K
S5kw+8bdIQ4oyZHQkszt42ckQa7cwzYz2sesLKLbpiNd1ukUeeu/CuNWLl48
/WKszrS120CmTPBCKLfFWVycvITaGX3ksf+mTC3SGvjR9ryh0kS9dTNzGSyV
wnfuf0OtliyMM4w4ZyJRV5YrJ07wpNfpy/GYCV6ATrWVEfiABuh59qNPPFEI
u1n4N3DnH//8Z+HO3MaN8351yilcgonL5JJOK65/TjPJTzCDeKm2/l6urb9S
7iO1AV/K4FPJTcjaWycDjfwuBbv8jKABB2U+kLQhD3Fxm++duv46jvbZzLvG
cCn5HMvT/DKOK3K897izuNL8QqsdU2UczI4JFtvjruzmB9bkZFc/1i+4M3Jr
1qyZZA2NbYwT97hoLXs8VFBVnqHqJFgAG8vv4BwGr5RHaMek0hs3m+WX+3R2
mDWA0Fnlzw9q5j1bV5ssSKw4DjHfrKst5JmV6REgrSrrg3S1+S0/6xecfe65
cuYPBg1HhIl1Jz9n3cmhT2DhNruT4bjKamNtOWvK8Ylc5yu1wUi7kqUnWcYW
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"57cc1306-0e48-49b5-af28-e77676850a0b"]
}, Open  ]],

Cell[TextData[{
 "(One caveat: this structure is not necessarily the true 3D structure of the \
molecule, rather it is the result of a molecular mechanics calculation, \
selecting a single random conformer.)\n\nNow let\[CloseCurlyQuote]s use these \
tools to visualize some of the molecules in our dataset.  The code block \
below displays the structure of the molecule in the row of our dataset \
corresponding to the specified ",
 StyleBox["molIdx",
  FontSlant->"Italic"],
 " variable. Try changing ",
 StyleBox["molIdx",
  FontSlant->"Italic"],
 " to visualize the structure of a few different molecules:"
}], "Text",
 CellChangeTimes->{{3.872248195493452*^9, 3.872248197707069*^9}, {
  3.8722521108130198`*^9, 3.8722521438470984`*^9}, {3.8730179569247932`*^9, 
  3.873017966052355*^9}, {3.8735592425631404`*^9, 3.873559264793912*^9}, {
  3.87355938022585*^9, 3.873559415746275*^9}, {3.8735594458506184`*^9, 
  3.8735594503385105`*^9}, {3.87380025315361*^9, 3.8738002637060823`*^9}, {
  3.883645989619154*^9, 
  3.8836460153016167`*^9}},ExpressionUUID->"d6682da8-7a65-435a-8dff-\
eca03e823709"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"molIdx", "=", "1"}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "index", " ", "value", " ", "corresponding", " ", "to", " ", "the", " ", 
     "row", " ", "in", " ", "our", " ", "dataset"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"MoleculePlot", "@", 
    RowBox[{"Molecule", "@", 
     RowBox[{"dataset", "[", 
      RowBox[{"[", 
       RowBox[{"molIdx", ",", "1"}], "]"}], "]"}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "display", " ", "the", " ", "molecule", " ", "in", " ", "row", " ", 
       "molIdx"}], " ", "*)"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.872252120664597*^9, 3.8722521315972767`*^9}, {
  3.8735593355000772`*^9, 3.8735593742616262`*^9}, {3.873559424835512*^9, 
  3.873559494802229*^9}, {3.8801320481104107`*^9, 3.8801320543830414`*^9}, {
  3.883646043127768*^9, 3.8836460755088053`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"aa859fab-497d-4e8d-9bdf-b0fe5001af6f"],

Cell[BoxData[
 GraphicsBox[{
   {AbsoluteThickness[1.3], 
    {RGBColor[0.4, 0.4, 0.4], 
     LineBox[{{1.8600000000000008`, -1.3509996299037237`}, {
      2.360000000000001, -0.48497422611928537`}}], 
     LineBox[{{2.360000000000001, -0.48497422611928537`}, {
      2.155593229166668, -0.13093131362486343`}}], 
     LineBox[{{1.2802024583333342`, 0.3810511776651546}, {0.8600000000000005, 
      0.3810511776651548}}], 
     LineBox[{{{0.8600000000000005, 0.3810511776651548}, {
      0.3599999999999997, -0.4849742261192849}}, {{0.9139230484541331, 
      0.23444863728671095`}, {0.5139230484541324, -0.4583716857408411}}}], 
     LineBox[{{
      0.3599999999999997, -0.4849742261192849}, {-0.6400000000000003, \
-0.48497422611928537`}}], 
     LineBox[{{{-0.6400000000000003, -0.48497422611928537`}, \
{-0.8216101562500008, -0.7995322439148087}}, {{-0.793923048454133, \
-0.5115767664977292}, {-0.9505332047041335, -0.7828335141040306}}}], 
     LineBox[{{-0.8444067708333348, -1.862982121193743}, \
{-0.6400000000000017, -2.2170250336881647`}}], 
     LineBox[{{-0.6400000000000017, -2.2170250336881647`}, \
{-1.1400000000000026`, -3.083050437472603}}], 
     LineBox[{{-1.719797541666668, -1.3509996299037255`}, \
{-2.1400000000000015`, -1.3509996299037255`}}], 
     LineBox[{{{-2.1400000000000015`, -1.3509996299037255`}, \
{-2.6400000000000015`, -2.217025033688164}}, {{-2.293923048454134, \
-1.3776021702821692`}, {-2.6939230484541343`, -2.07042249330972}}}], 
     LineBox[{{-2.6400000000000015`, -2.217025033688164}, \
{-3.6400000000000015`, -2.2170250336881656`}}], 
     LineBox[{{{-3.6400000000000015`, -2.2170250336881656`}, \
{-4.1400000000000015`, -1.3509996299037272`}}, {{-3.5860769515458686`, \
-2.0704224933097217`}, {-3.9860769515458694`, -1.377602170282171}}}], 
     LineBox[{{-4.1400000000000015`, -1.3509996299037272`}, \
{-3.6400000000000015`, -0.4849742261192876}}], 
     LineBox[{{{-3.6400000000000015`, -0.4849742261192876}, \
{-2.6400000000000015`, -0.48497422611928714`}}, {{-3.5400000000000014`, \
-0.6049742261192876}, {-2.7400000000000015`, -0.6049742261192872}}}], 
     LineBox[{{-2.6400000000000015`, -0.48497422611928714`}, \
{-2.1400000000000015`, 0.3810511776651521}}], 
     LineBox[{{{-2.1400000000000015`, 
      0.3810511776651521}, {-1.1400000000000017`, 
      0.381051177665153}}, {{-2.0400000000000014`, 
      0.26105117766515223`}, {-1.2400000000000015`, 0.2610511776651529}}}], 
     LineBox[{{0.8600000000000005, 0.3810511776651548}, {0.3600000000000008, 
      1.2470765814495934`}}], 
     LineBox[{{{0.3600000000000008, 1.2470765814495934`}, {0.8600000000000013,
       2.1131019852340316`}}, {{0.5139230484541335, 1.2736791218280372`}, {
      0.9139230484541339, 1.9664994448555877`}}}], 
     LineBox[{{0.8600000000000013, 2.1131019852340316`}, {1.8600000000000017`,
       2.1131019852340316`}}], 
     LineBox[{{{1.8600000000000017`, 2.1131019852340316`}, {2.360000000000002,
       2.979127389018471}}, {{2.013923048454134, 2.1397045256124754`}, {
      2.413923048454135, 2.832524848640027}}}], 
     LineBox[{{2.360000000000002, 2.979127389018471}, {3.360000000000003, 
      2.9791273890184704`}}], 
     LineBox[{{{3.360000000000003, 2.9791273890184704`}, {3.860000000000002, 
      2.113101985234032}}, {{3.30607695154587, 2.8325248486400265`}, {
      3.7060769515458696`, 2.139704525612476}}}], 
     LineBox[{{3.860000000000002, 2.113101985234032}, {3.360000000000002, 
      1.2470765814495932`}}], 
     LineBox[{{{3.360000000000002, 1.2470765814495932`}, {2.360000000000002, 
      1.2470765814495928`}}, {{3.260000000000002, 1.3670765814495933`}, {
      2.460000000000002, 1.3670765814495929`}}}], 
     LineBox[{{2.360000000000002, 1.2470765814495928`}, {2.1555932291666684`, 
      0.8930336689551714}}], 
     LineBox[{{-1.1400000000000017`, 
      0.381051177665153}, {-0.6400000000000003, -0.48497422611928537`}}], 
     LineBox[{{2.360000000000002, 1.2470765814495928`}, {1.8600000000000017`, 
      2.1131019852340316`}}], 
     LineBox[{{-2.6400000000000015`, -0.48497422611928714`}, \
{-2.1400000000000015`, -1.3509996299037255`}}]}, 
    {RGBColor[0.291989, 0.437977, 0.888609], 
     LineBox[{{2.155593229166668, -0.13093131362486343`}, {
      1.9511864583333345`, 0.2231115988695585}}], 
     LineBox[{{1.700404916666668, 0.3810511776651544}, {1.2802024583333342`, 
      0.3810511776651546}}], 
     LineBox[{{{-0.8216101562500008, -0.7995322439148087}, \
{-1.0032203125000012`, -1.1140902617103319`}}, {{-0.9505332047041335, \
-0.7828335141040306}, {-1.107143360954134, -1.0540902617103318`}}}], 
     LineBox[{{-1.048813541666668, -1.5089392086993212`}, \
{-0.8444067708333348, -1.862982121193743}}], 
     LineBox[{{-1.2995950833333345`, -1.3509996299037255`}, \
{-1.719797541666668, -1.3509996299037255`}}], 
     LineBox[{{2.1555932291666684`, 0.8930336689551714}, {1.9511864583333347`,
       0.53899075646075}}]}}, {
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{1.8600000000000008, -1.3509996299037237}, 0.2]},
      "1"],
     Annotation[#, 1, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{2.360000000000001, -0.48497422611928537}, 0.2]},
      "2"],
     Annotation[#, 2, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.292, 0.438, 0.889], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
        0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
        1.7754049166666677`, 0.2736782609984877}, {1.7754049166666677`, 
        0.488424094331821}, {1.8045554166666677`, 0.488424094331821}, {
        1.9173484166666677`, 0.31982092766515435`}, {1.9173484166666677`, 
        0.488424094331821}, {1.9445950833333345`, 0.488424094331821}, {
        1.9445950833333345`, 0.2736782609984877}, {1.9154440833333344`, 
        0.2736782609984877}, {1.8026510833333345`, 0.442429094331821}, {
        1.8026510833333345`, 0.2736782609984877}}}]},
      "3"],
     Annotation[#, 3, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{0.8600000000000005, 0.3810511776651548}, 0.2]},
      "4"],
     Annotation[#, 4, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{0.3599999999999997, -0.4849742261192849}, 0.2]},
      "5"],
     Annotation[#, 5, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{-0.6400000000000003, -0.48497422611928537}, 0.2]},
      "6"],
     Annotation[#, 6, "Tooltip"]& ], 
    TagBox[
     TooltipBox[{
       {RGBColor[0.291989, 0.437977, 0.888609], 
        FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
         0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
         0}}}, {{{-1.2245950833333346`, -1.458372546570392}, \
{-1.2245950833333346`, -1.2436267132370586`}, {-1.1954445833333345`, \
-1.2436267132370586`}, {-1.0826515833333346`, -1.4122298799037254`}, \
{-1.0826515833333346`, -1.2436267132370586`}, {-1.0554049166666677`, \
-1.2436267132370586`}, {-1.0554049166666677`, -1.458372546570392}, \
{-1.0845559166666678`, -1.458372546570392}, {-1.1973489166666678`, \
-1.2896217132370587`}, {-1.1973489166666678`, -1.458372546570392}}}]}, 
       {RGBColor[0.292, 0.438, 0.889], 
        FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
         0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
         0}}}, {{{-0.9188649166666678, -1.2721633799037253`}, \
{-0.9603099166666678, -1.2721633799037253`}, {-0.9603099166666678, \
-1.3136083799037255`}, {-0.9776732500000012, -1.3136083799037255`}, \
{-0.9776732500000012, -1.2721633799037253`}, {-1.0191165833333344`, \
-1.2721633799037253`}, {-1.0191165833333344`, -1.2548000465703921`}, \
{-0.9776732500000012, -1.2548000465703921`}, {-0.9776732500000012, \
-1.2133567132370588`}, {-0.9603099166666678, -1.2133567132370588`}, \
{-0.9603099166666678, -1.2548000465703921`}, {-0.9188649166666678, \
-1.2548000465703921`}}}]}},
      "7"],
     Annotation[#, 7, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{-0.6400000000000017, -2.2170250336881647}, 0.2]},
      "8"],
     Annotation[#, 8, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{-1.1400000000000026, -3.083050437472603}, 0.2]},
      "9"],
     Annotation[#, 9, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{-2.1400000000000015, -1.3509996299037255}, 0.2]},
      "10"],
     Annotation[#, 10, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{-2.6400000000000015, -2.217025033688164}, 0.2]},
      "11"],
     Annotation[#, 11, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{-3.6400000000000015, -2.2170250336881656}, 0.2]},
      "12"],
     Annotation[#, 12, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{-4.1400000000000015, -1.3509996299037272}, 0.2]},
      "13"],
     Annotation[#, 13, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{-3.6400000000000015, -0.4849742261192876}, 0.2]},
      "14"],
     Annotation[#, 14, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{-2.6400000000000015, -0.48497422611928714}, 0.2]},
      "15"],
     Annotation[#, 15, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{-2.1400000000000015, 0.3810511776651521}, 0.2]},
      "16"],
     Annotation[#, 16, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{-1.1400000000000017, 0.381051177665153}, 0.2]},
      "17"],
     Annotation[#, 17, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{0.3600000000000008, 1.2470765814495934}, 0.2]},
      "18"],
     Annotation[#, 18, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{0.8600000000000013, 2.1131019852340316}, 0.2]},
      "19"],
     Annotation[#, 19, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{1.8600000000000017, 2.1131019852340316}, 0.2]},
      "20"],
     Annotation[#, 20, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{2.360000000000002, 2.979127389018471}, 0.2]},
      "21"],
     Annotation[#, 21, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{3.360000000000003, 2.9791273890184704}, 0.2]},
      "22"],
     Annotation[#, 22, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{3.860000000000002, 2.113101985234032}, 0.2]},
      "23"],
     Annotation[#, 23, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{3.360000000000002, 1.2470765814495932}, 0.2]},
      "24"],
     Annotation[#, 24, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {Opacity[0], EdgeForm[None], 
       DiskBox[{2.360000000000002, 1.2470765814495928}, 0.2]},
      "25"],
     Annotation[#, 25, "Tooltip"]& ]}},
  ImageSizeRaw->408.1622156503548]], "Output",
 CellChangeTimes->{
  3.880114883303193*^9, 3.8801301341729193`*^9, {3.8801320452453794`*^9, 
   3.8801320547168293`*^9}, 3.8802129216881137`*^9, 3.880213243032159*^9, 
   3.8802134477708673`*^9, 3.880213766281877*^9, 3.880214101022111*^9, 
   3.8887576067566276`*^9, 3.8887577406807737`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"1e2c1796-0cd8-45f9-9379-8ae3a272a8fd"]
}, Open  ]],

Cell["\<\
Alternatively, we can display a random sample of molecules in the dataset. \
Run the first code block below to define an accessory function, then run the \
second one to display a random selection of 5 molecular structures from the \
dataset:\
\>", "Text",
 CellChangeTimes->{{3.872252269697126*^9, 3.872252285582341*^9}, 
   3.8727775484093857`*^9, {3.8735595123934155`*^9, 3.87355958908407*^9}, {
   3.883646089668704*^9, 
   3.883646090066741*^9}},ExpressionUUID->"510628dd-f643-4749-9e06-\
b2099c99c700"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "define", " ", "a", " ", "function", " ", "to", " ", "perform", " ", "the",
     " ", "sequence", " ", "of", " ", "operations"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"plotMolecules", "[", "smiles_", "]"}], ":=", 
   RowBox[{"MoleculePlot", "@", 
    RowBox[{"Molecule", "[", "smiles", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.872252287679491*^9, 3.872252304657143*^9}, {
  3.872766045724475*^9, 3.872766078615026*^9}, {3.8738002802570877`*^9, 
  3.8738002821374454`*^9}, {3.8836460819353867`*^9, 3.883646083116994*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"01bc5a84-a261-4cf8-b903-3b901b058126"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "apply", " ", "the", " ", "function", " ", "to", " ", "a", " ", "random", 
    " ", "sample", " ", "of", " ", "5", " ", "molecules"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Map", "[", "plotMolecules", "]"}], "@", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"dataset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "5"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{3.880132063534249*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"8deeff9e-3920-44fa-b132-f1f53986c12a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
       Graphics[{{
          AbsoluteThickness[1.3], {
           Style[{
             
             Line[{{-2.4360554727704007`, -3.3761877885803937`}, \
{-3.302080876554839, -2.8761877885803933`}}], 
             
             Line[{{-3.302080876554839, -2.8761877885803933`}, \
{-3.7088175196306397`, -3.789733246222994}}], 
             
             Line[{{-3.302080876554839, -2.8761877885803933`}, \
{-2.7142956242623653`, -2.0671707942054462`}}], 
             
             Line[{{{-2.7142956242623653`, -2.0671707942054462`}, \
{-1.7142956242623657`, -2.0671707942054476`}}, {{-2.614295624262365, \
-2.1871707942054464`}, {-1.8142956242623658`, -2.1871707942054477`}}}], 
             
             Line[{{-1.7142956242623657`, -2.0671707942054476`}, \
{-1.2142956242623646`, -1.2011453904210097`}}], 
             
             Line[{{{-1.2142956242623646`, -1.2011453904210097`}, \
{-0.21429562426236465`, -1.2011453904210108`}}, {{-1.1142956242623647`, \
-1.3211453904210095`}, {-0.3142956242623648, -1.3211453904210106`}}}], 
             
             Line[{{-0.21429562426236465`, -1.2011453904210108`}, {
              0.28570437573763635`, -0.3351199866365728}}], 
             
             Line[{{{0.28570437573763635`, -0.3351199866365728}, {
              1.2857043757376363`, -0.33511998663657416`}}, {{
              0.38570437573763616`, -0.45511998663657294`}, {
              1.185704375737636, -0.45511998663657405`}}}], 
             
             Line[{{1.2857043757376363`, -0.33511998663657416`}, {
              1.7857043757376372`, 0.5309054171478637}}], 
             
             Line[{{{1.7857043757376372`, 0.5309054171478637}, {
              2.2036049210377113`, 0.574828534378736}}, {{1.8726131496823466`,
               0.6607008909188216}, {2.240787600214007, 
              0.6993975849863114}}}], 
             
             Line[{{3.1758072244416375`, 0.19609672301279035`}, {
              3.4493568774647656`, -0.10771094506188023`}}], 
             
             Line[{{3.4493568774647656`, -0.10771094506188023`}, {
              4.427504478198571, 0.10020074575587666`}}], 
             
             Line[{{4.427504478198571, 0.10020074575587666`}, {
              5.096635084557427, -0.6429440797215192}}], 
             
             Line[{{5.096635084557427, -0.6429440797215192}, {
              6.0747826852912326`, -0.4350323889037627}}], 
             
             Line[{{6.0747826852912326`, -0.4350323889037627}, {
              6.743913291650088, -1.178177214381159}}], 
             
             Line[{{6.743913291650088, -1.178177214381159}, {
              7.722060892383894, -0.9702655235634028}}], 
             
             Line[{{{7.664997501406185, -0.9517245039009059}, {
              7.790750718323384, -0.5646958984480135}}, {{
              7.779124283361603, -0.9888065432258997}, {
              7.904877500278802, -0.6017779377730073}}}], 
             
             Line[{{7.722060892383894, -0.9702655235634028}, {
              7.994360888238762, -1.2726853067477597`}}], 
             
             Line[{{2.903140847246556, 1.2137014962205803`}, {
              2.9881379619236696`, 1.6135814811493199`}}], 
             
             Line[{{{2.9881379619236696`, 1.6135814811493199`}, {
              3.8541633657081107`, 2.113581481149318}}, {{3.014740502302114, 
              1.7675045296034524`}, {3.7075608253296672`, 
              2.167504529603451}}}], 
             
             Line[{{3.8541633657081107`, 2.113581481149318}, {
              3.8541633657081125`, 3.113581481149318}}], 
             
             Line[{{{3.8541633657081125`, 3.113581481149318}, {
              2.988137961923675, 3.6135814811493203`}}, {{3.7075608253296686`,
               3.0596584326951857`}, {3.0147405023021188`, 
              3.4596584326951874`}}}], 
             
             Line[{{2.988137961923675, 3.6135814811493203`}, {
              2.988137961923676, 4.020564106149321}}], 
             
             Line[{{2.988137961923675, 3.6135814811493203`}, {
              2.1221125581392357`, 3.113581481149322}}], 
             
             Line[{{{2.1221125581392357`, 3.113581481149322}, {
              2.122112558139233, 2.113581481149322}}, {{2.2421125581392354`, 
              3.0135814811493216`}, {2.2421125581392336`, 
              2.2135814811493217`}}}], 
             
             Line[{{2.122112558139233, 2.113581481149322}, {1.378967732661838,
               1.4444508747904645`}}], 
             
             Line[{{1.378967732661838, 1.4444508747904645`}, {
              0.7911824803693664, 2.253467869165412}}], 
             
             Line[{{1.378967732661838, 1.4444508747904645`}, {
              0.5129423288774005, 0.9444508747904672}}], 
             
             Line[{{-2.7142956242623653`, -2.0671707942054462`}, \
{-2.954590194991486, -1.7364336914665022`}}], 
             
             Line[{{-3.1193942140855, -0.6959020662871286}, \
{-2.9930638821798894`, -0.30709728353534516`}}], 
             
             Line[{{-2.9930638821798894`, -0.30709728353534516`}, \
{-2.0149162814460837`, -0.0991855927175867}}], 
             
             Line[{{-2.0149162814460837`, -0.0991855927175867}, \
{-1.705899287071136, 0.8518709235775667}}], 
             
             Line[{{-1.705899287071136, 
              0.8518709235775667}, {-0.7277516863373298, 
              1.0597826143953253`}}], 
             
             Line[{{-0.7277516863373298, 
              1.0597826143953253`}, {-0.4187346919623814, 
              2.0108391306904787`}}], 
             
             Line[{{-0.4187346919623814, 
              2.0108391306904787`}, {-1.0878652983212387`, 
              2.7539839561678736`}}], 
             
             Line[{{{-1.075390596872173, 
              2.6952951001238454`}, {-1.4775629807448376`, 
              2.609810721009236}}, {{-1.1003399997703043`, 
              2.812672812211902}, {-1.5025123836429688`, 
              2.727188433097292}}}], 
             
             Line[{{-1.0878652983212387`, 
              2.7539839561678736`}, {-0.9621120814040394, 
              3.141012561620766}}], 
             
             Line[{{-3.8535011066888316`, -1.4373210935023146`}, \
{-4.253137392849991, -1.567170794205445}}], 
             
             Line[{{{-4.253137392849991, -1.567170794205445}, \
{-5.119162796634431, -1.0671707942054443`}}, {{-4.399739933228434, \
-1.6210938426595776`}, {-5.092560256255987, -1.221093842659577}}}], 
             
             Line[{{-5.119162796634431, -1.0671707942054443`}, \
{-5.985188200418869, -1.567170794205444}}], 
             
             Line[{{{-5.985188200418869, -1.567170794205444}, \
{-5.98518820041887, -2.567170794205444}}, {{-5.865188200418869, \
-1.6671707942054441`}, {-5.86518820041887, -2.467170794205444}}}], 
             
             Line[{{-5.98518820041887, -2.567170794205444}, \
{-6.348713889012137, -2.7770524483721104`}}], 
             
             Line[{{-5.98518820041887, -2.567170794205444}, \
{-5.119162796634431, -3.0671707942054445`}}], 
             
             Line[{{{-5.119162796634431, -3.0671707942054445`}, \
{-4.253137392849992, -2.5671707942054445`}}, {{-5.092560256255986, \
-2.913247745751312}, {-4.399739933228435, -2.5132477457513116`}}}], 
             
             Line[{{-4.253137392849992, -2.5671707942054445`}, \
{-3.302080876554839, -2.8761877885803933`}}], 
             
             Line[{{1.378967732661838, 1.4444508747904645`}, {
              1.7857043757376372`, 0.5309054171478637}}], 
             
             Line[{{-4.253137392849992, -2.5671707942054445`}, \
{-4.253137392849991, -1.567170794205445}}], 
             
             Line[{{2.122112558139233, 2.113581481149322}, {
              2.9881379619236696`, 1.6135814811493199`}}]}, 
            RGBColor[0.4, 0.4, 0.4]], 
           Style[{
             
             Line[{{{2.2036049210377113`, 0.574828534378736}, {
              2.6215054663377857`, 0.6187516516096085}}, {{2.240787600214007, 
              0.6993975849863114}, {2.6089620507456677`, 
              0.7380942790538013}}}], 
             
             Line[{{2.90225757141851, 0.499904391087461}, {
              3.1758072244416375`, 0.19609672301279035`}}], 
             
             Line[{{2.818143732569443, 0.8138215112918408}, {
              2.903140847246556, 1.2137014962205803`}}], 
             
             Line[{{-2.954590194991486, -1.7364336914665022`}, \
{-3.194884765720607, -1.4056965887275579`}}], 
             
             Line[{{-3.2457245459911115`, -1.084706849038912}, \
{-3.1193942140855, -0.6959020662871286}}], 
             
             Line[{{-3.4538648205276723`, -1.3074713927991841`}, \
{-3.8535011066888316`, -1.4373210935023146`}}]}, 
            RGBColor[0.291989, 0.437977, 0.888609]], 
           Style[{
             
             Line[{{{7.790750718323384, -0.5646958984480135}, {
              7.916503935240584, -0.17766729299512093`}}, {{
              7.904877500278802, -0.6017779377730073}, {
              8.030630717196003, -0.21474933232011476`}}}], 
             
             Line[{{7.994360888238762, -1.2726853067477597`}, {
              8.26666088409363, -1.5751050899321164`}}], 
             
             Line[{{{3.4795318077570103`, 4.673581481149319}, {
              3.8104522702570107`, 4.673581481149318}}, {{3.4795318077570103`,
               4.55358148114932}, {3.8104522702570107`, 4.553581481149319}}}], 
             
             Line[{{{2.496744116090343, 4.553581481149321}, {
              2.1658236535903423`, 4.553581481149321}}, {{2.496744116090343, 
              4.67358148114932}, {2.1658236535903423`, 4.67358148114932}}}], 
             
             Line[{{2.988137961923677, 5.113544814482654}, {2.988137961923677,
               5.427473397815987}}], 
             
             Line[{{{-1.4775629807448376`, 
              2.609810721009236}, {-1.8797353646175021`, 
              2.524326341894626}}, {{-1.5025123836429688`, 
              2.727188433097292}, {-1.9046847675156333`, 
              2.641704053982682}}}], 
             
             Line[{{-0.9621120814040394, 
              3.141012561620766}, {-0.8363588644868402, 
              3.5280411670736584`}}], 
             
             Line[{{{-7.153156795097042, -2.66418984657803}, \
{-7.310121086763708, -2.392319718437303}}, {{-7.0492337466429085`, \
-2.60418984657803}, {-7.206198038309575, -2.3323197184373035`}}}], 
             
             Line[{{{-6.549270413309575, -3.4701517418328582`}, \
{-6.392306121642909, -3.742021869973585}}, {{-6.653193461763708, \
-3.530151741832858}, {-6.496229170097042, -3.8020218699735846`}}}], 
             
             Line[{{-7.27677315795831, -3.3128677171221104`}, \
{-7.563358685115405, -3.4783279483721103`}}], 
             
             Line[{{8.564994331731224, -1.6764674164522602`}, {
              8.718116520122202, -1.6439202905724852`}}], 
             
             Line[{{-7.87111933086009, -3.4783279483721103`}, \
{-8.006689570903792, -3.4000564337887766`}}]}, 
            RGBColor[0.800498, 0.201504, 0.192061]], 
           Style[{
             Line[{{2.988137961923676, 4.020564106149321}, {
              2.9881379619236768`, 4.42754673114932}}], 
             
             Line[{{{3.1486113452570104`, 4.67358148114932}, {
              3.4795318077570103`, 4.673581481149319}}, {{3.1486113452570104`,
               4.553581481149321}, {3.4795318077570103`, 4.55358148114932}}}], 
             
             Line[{{{2.827664578590344, 4.553581481149321}, {
              2.496744116090343, 4.553581481149321}}, {{2.827664578590344, 
              4.67358148114932}, {2.496744116090343, 4.67358148114932}}}], 
             
             Line[{{2.988137961923677, 4.7996162311493205`}, {
              2.988137961923677, 5.113544814482654}}], 
             
             Line[{{-6.348713889012137, -2.7770524483721104`}, \
{-6.712239577605403, -2.9869341025387772`}}], 
             
             Line[{{{-6.9961925034303745`, -2.9360599747187566`}, \
{-7.153156795097042, -2.66418984657803}}, {{-6.892269454976241, \
-2.876059974718757}, {-7.0492337466429085`, -2.60418984657803}}}], 
             
             Line[{{{-6.706234704976242, -3.1982816136921315`}, \
{-6.549270413309575, -3.4701517418328582`}}, {{-6.810157753430375, \
-3.258281613692131}, {-6.653193461763708, -3.530151741832858}}}], 
             
             Line[{{-6.990187630801214, -3.1474074858721104`}, \
{-7.27677315795831, -3.3128677171221104`}}]}, 
            RGBColor[0.602953, 0.646767, 0.0900267]], 
           Style[{
             
             Line[{{8.718116520122202, -1.6439202905724852`}, {
              8.871238708513179, -1.61137316469271}}], 
             
             Line[{{-8.006689570903792, -3.4000564337887766`}, \
{-8.142259810947495, -3.3217849192054434`}}]}, 
            RGBColor[0.433333, 0.466667, 0.466667]]}}, {
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-2.4360554727704007`, -3.3761877885803937`}, 0.2]}, 1], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-3.302080876554839, -2.8761877885803933`}, 0.2]}, 2], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-3.7088175196306397`, -3.789733246222994}, 0.2]}, 3], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-2.7142956242623653`, -2.0671707942054462`}, 0.2]}, 4], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-1.7142956242623657`, -2.0671707942054476`}, 0.2]}, 5], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-1.2142956242623646`, -1.2011453904210097`}, 0.2]}, 6], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-0.21429562426236465`, -1.2011453904210108`}, 0.2]}, 7], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{0.28570437573763635`, -0.3351199866365728}, 0.2]}, 8], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{1.2857043757376363`, -0.33511998663657416`}, 0.2]}, 9], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{1.7857043757376372`, 0.5309054171478637}, 0.2]}, 10], 
          Tooltip[{{
             RGBColor[0.291989, 0.437977, 0.888609], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
              2.6956311877725767`, 0.528060963748848}, {2.6956311877725767`, 
              0.7428067970821812}, {2.724781687772577, 0.7428067970821812}, {
              2.8375746877725767`, 0.5742036304155147}, {2.8375746877725767`, 
              0.7428067970821812}, {2.8648213544392434`, 
              0.7428067970821812}, {2.8648213544392434`, 0.528060963748848}, {
              2.835670354439243, 0.528060963748848}, {2.7228773544392433`, 
              0.6968117970821813}, {2.7228773544392433`, 
              0.528060963748848}}}]}, {
             RGBColor[0.292, 0.438, 0.889], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{3.001361354439243, 0.7142701304155147}, {
              2.959916354439243, 0.7142701304155147}, {2.959916354439243, 
              0.6728251304155146}, {2.94255302110591, 0.6728251304155146}, {
              2.94255302110591, 0.7142701304155147}, {2.9011096877725766`, 
              0.7142701304155147}, {2.9011096877725766`, 0.731633463748848}, {
              2.94255302110591, 0.731633463748848}, {2.94255302110591, 
              0.7730767970821812}, {2.959916354439243, 0.7730767970821812}, {
              2.959916354439243, 0.731633463748848}, {3.001361354439243, 
              0.731633463748848}}}]}}, 11], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{3.4493568774647656`, -0.10771094506188023`}, 0.2]}, 12], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{4.427504478198571, 0.10020074575587666`}, 0.2]}, 13], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{5.096635084557427, -0.6429440797215192}, 0.2]}, 14], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{6.0747826852912326`, -0.4350323889037627}, 0.2]}, 15], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{6.743913291650088, -1.178177214381159}, 0.2]}, 16], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{7.722060892383894, -0.9702655235634028}, 0.2]}, 17], 
          Tooltip[{{
             RGBColor[0.801, 0.202, 0.192], 
             
             FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
               3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQHaLYX7hmm7zDC7sFYsUzpu2H8S/IPNgTcb7bPuea
jHPlAaC8CdOcNNul9qZfgq4IXZF3YNGZu3z9hPX2+xN3FKx5Lu8wTXBO5J+P
W+zPqG+bW8Og4KCXZ71sU9t2+wNs5+f/4UfwN3CUsShLIfidJ/xyPZUVHKxe
inYkBWyzf/EvaV++toLDJxmb+K7Hm+07VVgNpxkrOKwKSDLbVLbR/tlthY4z
lgoOHX5vLOO01tgf2rzot5CdgsOJPRd9JtUutp/XrZIf6aTgwBGWt79n4VT7
nvKnK2pcFBwYJny/YOceD+dziNhpu3FP2Q/jRxRrNcrrLN2f9l5rpg1QP8++
Wzt3q67ffzt30cY9tgoOuUeDnV1+bt7fG6s7yQZo/xXtXStXxe/Y/25j/c47
RgoO0d11v8u27N5f4Xtg+xwtBQfmJwssVn7fu7/Rc9H8GCUFh7RppxXyZQ/s
l3vXYVEmCXS/gfxfq3UH9l+YLZrzkh/B31Jz9VI/K4LfE5Mwf/4PeYe2j4kX
rPgO7O9mWHU76IW8g/L1RTvL5+zdfyrkCA/bDXkH6dtr2cpldu+fzxlQtua0
vMPHlac/3N60fb/HeVlet8PyDkeMLzivjN+8/9OU14vv75J3MKheqftWYh08
vt80TXzT+WnJfvT0AABf7wDY
               "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvd1brmjNFXmHF3M+K0dzT98P4wv8nf5s99EV+38J
zyg8c1veYefX9+vuzNq4v2FJdwHPK3kHr14L7XtZW/ezmdbn+/yQd9hjsvb2
Haud+3OvvzQVY1VwaG64OPOu0u799w1iLK7xI/hz/p/PPCmF4If7ey88o6zg
sKfAJljQbOf+/ob8E/e1FBwEEu1+lcZs3d/OePjXJ0OgekeR3LtNG/encD5e
X2Oq4OCTXfvzvcQKOP/Gd9Mk56eT4XyGhao1J1/E77cJ7Ir7aazgEKC+f+lK
p2779flHP38yAMqHnd124dcse8U+hs43ugoOPX5vLOO0ltgvOz/zfL2mgoNL
dsd6wfCV9jJzsxesAbrvSWvE1E/Ma+03HVqafVNWwUHqvc9x34gN9npvHl72
F1dwiFr25Pdk5432Gwo7LvMLIPj3Z+axH2ZF8LkczuSd+SnvUJJ/8HrR33X2
h5bb3P0EDE+PcocWh1fL7Xfvr3WQvCPvoFC/34Dv+gJ7WHwEzJkjwibTYo8e
XwBiqtlg
               "]}]}}, 18], 
          Tooltip[{{
             RGBColor[0.801, 0.202, 0.192], 
             
             FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
               3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQLWVUw7F9soLD4y6xVVdKf++H8dd5Oulcefxr/zIe
58K5MxQcHH7cXtFe+Gt/l/Q9y6xFCg4dCvUJb+V+7fe/JMBhvkbB4ZyHkkTw
mZ/7bU5m5d7doeDAGhyxmX3xz/0GK5rzY08g+AqrtK40X0Lwf2Yy2666reAQ
stpqa862n/sjFoj3XXis4CDhccLc6i5Q/uhOhu+vFRzuPgndxc7ya39Y7dVw
3U8KDsXL37yWt/q13yg0/HTxNwUHxppQ77b6X/v5dG/a7fql4DAhYN+qN0d+
7f8jMavi7h8FB5Yz7HwLhX/D+RZMmd/mZyP4TbFHb14+8nv/tQn3M+YC9d+4
37V7gcif/d784Y2yQPPt3D4qskf/2f/338PEuR8VHJauCe/IXfhnf1ywSact
0H1zPxX77rr2Z/+LdyXtfx8pOGhIuBW+/fVn/8dXYfl7byk4bKm5elBB/u/+
vn5bjusXFRx+vo+3tTL8u9/B9pS11wkEX0Wua9GHvQj+tvMp8zdsgYaHLJC/
sNO2CxjeUeZhkVZf/+y/elrsWvISBYeZz9X8rM7+2W+/7A6X+TwFh/YjJ+Ys
mPZnv0in8zXmWQoOKrw/C3MD/+x/mb1q4YWpCg4HQzXdrXj+wOP7/1QFXfbD
iPiHpQcAoogWUA==
               "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQ7X38MMf2RQoO0Te8vRaU/94P4184+WHPgoe/9+eu
buBwX6bg4My5eoWC6Z/9G4p/saevVXDYMyn/gELRn/2frUvY27coOBjfLVut
sP7P/rsV81jL9yo4fFCM3L7g7J/9/pcEOMxPIPg8C1sstS4j+Mc//C/QvaPg
8PnC+0+X1/3Z/19RZYbDYwWHn+/jba0K/+z/vqj8VPArBQcGv94tC4z/7L+y
anr93bcKDk5f22Ot7vyG848/dHnNno3gBwhLC+Qq/96/5pOdXtQbBYeZ3QVd
b5/82i8vWHU4+KWCw4QrD2a1r/+1f6L+1gjfZwoOxcvfvJav+rVfrNBv/oOH
Cg59x+wDdgX82t9jp1DAC3TfDldBz2DjX/uVUqKsra4pOHyzcmd8J/pr/7ze
aYs3nFdwaNr/d64l+6/9CsK2iwtOIPj+1srXlfch+KUHpdjdtyo45Pz769au
/Gt/4Ncgu1vA8NRlm3VTIebXft/Gz/m5wPB+z2uWs2vKL3h8rL8w6aLVZwQf
Fl8AaLbsgQ==
               "]}]}}, 19], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{2.9881379619236696`, 1.6135814811493199`}, 0.2]}, 20], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{3.8541633657081107`, 2.113581481149318}, 0.2]}, 21], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{3.8541633657081125`, 3.113581481149318}, 0.2]}, 22], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{2.988137961923675, 3.6135814811493203`}, 0.2]}, 23], 
          Tooltip[{{
             RGBColor[0.603, 0.647, 0.09], 
             FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
              1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
              1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdlXtMk1cYxlsuOwd0qAczNVy0iFoEIQxawKq8RRIRY0VEo9Qb9wrITT5U
2NAWUAijOEAmtOAQdQWn0QFORTEF5S6KCsJQ54V4YWOCoziE6k5GQ5P9cf74
5cv7nsv7PM/HCY71DzNksVhsusLpMqCrN/qFq8odQdp1Uy17PYF/NA+Py2MR
tLTiPZINBCo6V9hzExCoq2MiJd4Ebhc0sngHENj+xBgECwi0nDRn1UgRDJdZ
OW92JXCncvdn12wEdcrbu3yWEfA0esDWFCGItdzvfHwJgfk/RyLNeQTenQYK
wUICqdXloyNqBFv5u8aeWxNIrtjyIbEHQf3MRY41lgTMs9NMmGE9ix76CVQI
T3GP8PIjoQWGs8P9BWJa7+S6uVnogCG2KjRYxSGAG/3vCldicGf6nTS2BFz2
fmv3Zi2G1qDRohQ7AjWSPEOeP4YQu6jjAifKt3yapIEY6mCGcpzeh58n81Tt
xGCy/tO4UKDnxsHCNjMvPc+1+oan8SGwZWDAQ0XrB2+dyx8XESgsrnVU0f6N
6ekTnADdd18Mpd47wny20fO8/MOQoecznt1drNhB4LytVbmZPYax938pLYII
uPm+axTOx/DWJj5EEkLg0utuO66xrn84AQvtgzb1YwTGvaXLuqIIZJDOveJq
BH1aw7MX4gicMUs7bXYCwdiC1k9ChsDB4bexfUcRKKuMWLkHCah/DQjpo/Nd
6V562ewQgZyPuaa8EAQ3A75+/TyDwOPkp+5vtiKwMVF/j+UE7McdIhQiBOwf
k9odCwlsEgR8SlyLgLH3HRKd1PN4TnCOpELP22QHnGXVBBaax7SqN1BmLBe/
qKN6qi8LFm9HMBEuispsJhCe0PVxRILg5NbDFx3vE4i5Z5AgTkFgtiq/X9pL
510SrZDnI1gz5yiSPSWwOqr7lvocAulQ8lLZSwJJXptcVY0Iim5atLNfERhK
S38g7NdzfN+G+D4jPMUus5rCFBwMNpIrXUEvdfNfjoF3dfgNh/a/MsfOU7IJ
g4+p/cTzHgLPqr4olodjyLArz+Z2Ur31lBpp9mGQjB1eomkkcEgwohBLMdx9
5eZSf51A7gnvFHkmBrlU4Ma7RCBiqZdMnoVh6evQctFpAg/5e3rUGzGEm3us
4p0isE4a16AWYbC2cd1jcZGAYElQqMIbQ2pJ8S+Ka/T9sh6fFrlgSPa9trxG
TSBr3VgH2wbD/g+99R3NOv9gDKN33h4Rt+ve4xWa4tUzFrCZBj3PT80901GB
4LC2m2fTQvu985pWQ/36Hedz1YV6An/vHo1TZCGwDGGdEtD7VMy7Vy6nfm+b
jr5iqvVsteLPQ+Jzen6fbDKDKad5UmR9X0j1djA0YaNGqfNDHgLVjcSIvh/o
flbWe/tKEGx39RtU51G9W84Os6hFwAcveWYOgQX8CQfJAIJLDfG/OWbqzjcP
w7I1ZYu7ZAQiOdF8Lp3XxL7KJG6qTg/rMCgcqgO5yQSeGMXtFIdh4OS2fxAm
Ergf2WvsdQBD3sKkiOZo6p8yK8yk07zw9c+vpf4KfRRkqjqG4Uv1jtYLgXS/
92nZ6kIMbLdQrdBPz9MnCtwYbz0Pfn7Bqnen+oBeTzNav8vaurCW5l/RXH6m
SoYn85Lm3dqaZ0NCBgP3WUkInqebXzCGJyf2F47P1PnNB0/m4zSqr8qGUx1O
1P9XdxakGOv0b45BqxUoFQYEAjVuHtwRNMX/+aldz2U5Ta1s6o/YjCyWjNYP
ba6ItziGIKDAtkVE+99IdTDgMWgyb2bpvu9G0BVgwO+i5zuiDM7v8EOT+y8i
UCJLbpMKab7HDGg5zgR+7z/GYjwQiCvrmkSrCPz/f/IvhjiY8w==
              "]]}}, 24], 
          Tooltip[{{
             RGBColor[0.801, 0.202, 0.192], 
             
             FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
               3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQ/Sbx+/90UX6HApe9xxMLhRxg/L0hRs8fThVykDkj
tJhRk99B8iU3R+kmIYf17PVHTQL4HdjllWdJHxdyOPTI8196Ob/D1xArnUO3
hRxK9m2czLiK3yHjUg6r6DMhBxcr0TmMLxB85oUR0305BOD8LQpcmbOkBBxC
bL4csX4o5FDca8T9XEvAQflqQErHdSGHrTfKPhhbCzh8yl3LfPWskEO++7p5
C9wFHHz2un/3OyDkoP59Y6tugICDRkdu/Nd1Qg73l23N2RUh4MAaPPn47LlC
DrvrzB8wxALlvxxY964TwZ+9bMWXd8UI/on+i78Xxgo55OUdOtAA1G+sn3B4
naeQQ0T2xo8N/gIOM6ce0xS1EHLY63V8U4ObgAPDH50J1WpCDnWfsxkPWgo4
NL56GqchKeQwSevtXwdNAQf5xI9TpQWEHJYobTx7QELA4U/72YN87ED3Zdf9
/8wm4KD9+lVSB5OQQ3Of/tktz/nhfFEh/Qy/fQh+zI2Z0X4z+SHhAdQfo6B7
ZUsFv0NQ5NvoDkEhh1snEs2kI/gdnHR3xnVIA80zquTMsAfGzzaB03qaQg7X
9oqYz9bjd3iw+MjUaishB03PDSnnZPkddkysSDjhjYjvlQd/qYnGIfiw9AAA
G9fdig==
               "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvWmbKGNGIL+D0Mf1998VCDnA+Fu3sB3OCxNysHDn
ZFgRz+9wQ0XiRJ+jkINLxoe/6jX8DlVM6of8jIQcAjqv/14+g9/hjn7qcT5l
IYdfNQ1f0vfwO6ydl3MkT1rI4dAjz3/pzxH82308SbM4BeD8QD3miwukBRze
fGr7qgjUf3CCt/xxTQEH7devkjqA5m+c9Kn5rbmAw8rJ8kffAe3PXmT0jsFe
wOHGywdRJ8IR/O3rCr+LlCD4oUo26363CjlIGzV6/7IWcHA6sqx/9lQhB4b8
76VvTQUcWDd1cX9dJOTwdHXuggf6Ag4+e92/+20Qcnivt0CXXV3AofWrUdyK
XUD3nnQ+nwB03+6p/+SZDgk5sIvuSN3FL+CQLfGxMPqkkMP/dAOz5UwCDh7l
h7s4zgo5sD77leX3gh/OP9Q22Up6P4IfMb/w1/LZ/A596c0KX48KOZzKC7r+
pZbfYW7qnd3ntgs57Jp3Za5jAjC8kk3DV6xExMdfo3u2HJMQfFh8AQCqnbv2

               "]}]}}, 25], 
          Tooltip[{{
             RGBColor[0.801, 0.202, 0.192], 
             
             FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
               3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQfenwu//ntf7ZF7nsPZ5YKOQA4+8PMXr+cKqQg/EM
VTfmoH/20i+5OUo3CTlE8P/rylzwz55TXnmW9HEhh/qjk/+cf/fP/nuIlc6h
20IOj2qS1ZlD/ttnXcphFX0m5NBUomXBfAHBZ3LaqDdbgMEBxk9xFLlkYsrg
EGbz5Yj1Q6B+qVSxc6EMDqpXA1I6rgs5pG18+yC9jMHhS+5a5qtnhRxu98XY
OvYzOPjtdf/ud0DIwftdMnf0AgYHrY7c+K/rhBx2+2bfLNnI4MAePPn47LlC
DsV/8w4w7gLKfzmw7l0ngj932Yov74oR/FP9F38vjBVyuHGnpZERqN9UP+Hw
Ok8hhzXXkh4zzmdwmD31mKaohZBD+dS+VMZeBgemPzoTqtWEHH4+u87UVMzg
0PzqaZyGpJCDYuit341BDA6KiR+nSgsIObi6Js1uNGRw+Nd+9iAfO9B91//8
e87L4KD7+lVSB5OQA4Ns/KzM8//tYXwVlbgLc2oQ/M0bjLfPMfpvDw4PoP6N
DlErMj/+sw+JfBvdISjksG7i4RyzDf/sXXR3xnVIA81L/SR0oQ4YP9sETutp
Cjksq9bMM4v9Z/9o8ZGp1VZCDj6TEk7Osf5nv2tiRcIJb0R8rz74S000DsGH
pQcAYHDz1g==
               "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQHZ+rzXRh0T97kY/r778rEHKA8bdvYTucFybkkN0n
xBCw/5/9LRWJE32OQg7NFx789v/xz76GSf2Qn5GQw2yh9d/9Df/b39NPPc6n
LOTw7ifDy/MV/+3Xz8s5kict5FB/dPKf8+cQ/C2ykkdMhBkcYPz5MWyLHM0Z
HN59avuqCNRfpzjdri+YwUH39aukDqD58apP2W/nMzisnix/9B3Q/isuqXcY
6xgcbr18EHUiHMHfua7wu0gJgh+uZLPud6uQg0kK0/Qv5QwOLkeW9c+eKuTw
7+6717eyGRzYN3Vxf10k5HA8/LbDwXgGB7+97t/9Ngg53I51iObzY3Bo/2oU
t2KXkMPmye3zDpoxOOyd+k+e6ZCQA5dWwekSeQaHXImPhdEnhRx+nU/I8WNl
cPAqP9zFcVbIgeXM16tzLvy3h/HreNVLzeoQ/FV2j7/4m/+3n5DerPD1qJBD
790l617+/mc/P/XO7nPbhRzybFdaNx/4Z78+2TR8xUpEfPw3umfLMQnBh8UX
AJDwy2A=
               "]}]}}, 26], 
          Tooltip[{{
             RGBColor[0.800498, 0.201504, 0.192061], 
             
             FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
               3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQ/Sbx+/90UXaHIpe9xxMLxRxg/P0hRs8fThVzkDkj
tJhRk91B6iU3R+kmMYf17PVHTQLYHTjllWdJHxdzOPTI8196ObvD9xArnUO3
xRxK9m2czLiK3SHzUg6r6DMxBxcr0TmMLxB8VqeNerMFOOD8dEeRSyamHA6h
Nl+OWD8Uc3gqlSp2LpTDQeVqQErHdTGHzI1vH6SXcTh8zl3LfPWsmMO9vhhb
x34OB7+97t/9Dog5+L1L5o5ewOGg1ZEb/3WdmMM+3+ybJRs5HNiDJx+fPVfM
oexv3gHGXUD5LwfWvetE8OcuW/HlXTGCf6r/4u+FsWIOt++0NDIC9ZvoJxxe
5wn077Wkx4zzORxmTz2mKWoh5lA1tS+VsZfDgfGPzoRqNTGHP8+uMzUVczg0
v3oapyEp5qASeut3YxCHg0Lix6nSAmIOHq5JsxsNORz+tp89yMcOdN/1P/+e
83I46Lx+ldTBJObQ3Kd/dstzdjhfVEg/w28fgh9zY2a030x2SHgA9cco6F7Z
UsHuEBL5NrpDUMzh1olEM+kIdgcX3Z1xHdJA84wqOTPsgfGzTeC0nqaYw7W9
Iuaz9dgdHi0+MrXaSsxB03NDyjlZdoddEysSTngj4nv1wV9qonEIPiw9AADE
Od/d
               "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvWmbKGNGILuDyMf1998ViDnA+Nu2sB3OCxNzsHDn
ZFgRz+5wS0XiRJ+jmINLxoe/6jXsDtVM6of8jMQcAjqv/14+g93hnn7qcT5l
MYdfNQ1f0vewO6ybl3MkT1rM4dAjz3/pzxH87bKSR0yEOeD8RTFsixzNORze
fWr7qgjU36g43a4vmMNB5/WrpA6g+UmqT9lv53M4rJosf/Qd0P7rLql3GOs4
HG69fBB1IhzB37mu8LtICYIfpmSz7nermIN5CtP0L+UcDi5HlvXPnirmwHjv
3etb2RwO7Ju6uL8uEnM4FX7b4WA8h4PfXvfvfhvEHO7FOkTz+XE4tH81ilux
S8xh2+T2eQfNOBz2TP0nz3RIzIFXq+B0iTyHQ67Ex8Lok2IOf88n5Pixcjh4
lR/u4jgr5sD67FeW3wt2OP9Q22Qr6f0IfsT8wl/LZ7M79Kc3K3w9CrQ/L+j6
l1p2h/mpd3af2y7msGvelbmOCewO65NNw1esRMTHf6N7thyTEHxYfAEAvhK8
5Q==
               "]}]}, {
             RGBColor[0.801, 0.202, 0.192], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
              3.2162303202570106`, 5.69255123114932}, {3.1159786535903438`, 
              5.69255123114932}, {3.1159786535903438`, 5.709914564482654}, {
              3.2162303202570106`, 5.709914564482654}}}]}}, 27], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{2.1221125581392357`, 3.113581481149322}, 0.2]}, 28], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{2.122112558139233, 2.113581481149322}, 0.2]}, 29], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{1.378967732661838, 1.4444508747904645`}, 0.2]}, 30], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{0.7911824803693664, 2.253467869165412}, 0.2]}, 31], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{0.5129423288774005, 0.9444508747904672}, 0.2]}, 32], 
          Tooltip[{{
             RGBColor[0.292, 0.438, 0.889], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{-3.386675959888171, -1.365526716497165}, \
{-3.386675959888171, -1.1507808831638315`}, {-3.357525459888171, \
-1.1507808831638315`}, {-3.244732459888171, -1.3193840498304983`}, \
{-3.244732459888171, -1.1507808831638315`}, {-3.2174857932215044`, \
-1.1507808831638315`}, {-3.2174857932215044`, -1.365526716497165}, \
{-3.2466367932215046`, -1.365526716497165}, {-3.3594297932215045`, \
-1.1967758831638315`}, {-3.3594297932215045`, -1.365526716497165}}}]}}, 33], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-2.9930638821798894`, -0.30709728353534516`}, 0.2]}, 34], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-2.0149162814460837`, -0.0991855927175867}, 0.2]}, 35], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-1.705899287071136, 0.8518709235775667}, 0.2]}, 36], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-0.7277516863373298, 1.0597826143953253`}, 0.2]}, 37], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-0.4187346919623814, 2.0108391306904787`}, 0.2]}, 38], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-1.0878652983212387`, 2.7539839561678736`}, 0.2]}, 39], 
          Tooltip[{{
             RGBColor[0.801, 0.202, 0.192], 
             
             FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
               3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQPdF+wtK6SMYDh+xeeTZGsDjA+DHxVzoaF7I4JF4t
YXrqynhAuKP91PJbLA7nZnI82CjHeODD563vvjCzOuzeZ7u87jvDgTPxT4Sc
dFkdOB9fFXx6hOHAxijPo88dWR0s04s4n7Yh+BXx18q84xB8sYTiyxstGQ50
6UW4mFqwOsxoU+qXkGQ4oJ4g2HxOhdVB44Fx598P//cfnXjqYLogq4OdatgF
r/3/91cZ/F8R/Y3FIS7N3UR87v/9xse8KldcZnGoW24x43HV//1voqd5ft3A
4sDvYXjqZOb//UbzPorP7kTwJZgPLp4di+AXXRXaxGjI4uDSyepxqvr/fg8R
A0dpThaHOVM9W07O/79f5OEf3hdPmR3YJD7Vnzr8f//DtSdvbTnE7MBYGu96
8tv//U+7rCv4VjA7RPqsXZkiw3BAoSLo2ZepzA6mMapcqbYMB24e5bK73czs
sP9k17J/CQwHzHtcG85VMTv8Eoq4YdiO4Gf0R9jO2IDgK5586znjKjQ8WoD8
xqiLht8YDrRneBWdm8HssPiGav5pMcYD6QKPys+tAZqXxzenTh8YP4oTA6RP
MDssf1yU5+3AeGDR3x9Pt7xidgiJuO4gEch4IPhmQrUfLyK+TSxTOV4YIviw
9AAAsP73Jw==
               "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQfepV4ZI6WcYDbDPOV84OZ3GA8b3lax1mK7E4uEbV
LbXjZzww6f98r9s/mB0sLacv3/eJ4cDVXXvtom8xO+hKbFhpd43hwCxRK8/b
u5kdmlXYN9ZtYjhg89nDefYaZofd+2yX17Uj+Mea8x5ujEbwb7s0Mi81Zziw
a3btUsY9zA5/6j+kRUgzHDDvcW04BzTf7IeLtfi///tN7q5zmf2T2cFnp8uk
kw//75/UaVjgp8oC5wcIB698Hovg9/x6Lra1kcWhp4pL9snb//vT7fbe/LKA
xaHm8Iyd3MwMB95Itl5cvpvFYbPnmhRVfoYDVQb/V0RfY3GY7+zudUOB4cDb
BVfL+F6zOBznZWBXtWA4EP4w59fBnywOBeXitwr9GQ7seBY4r4SD1aHhoprl
jEyGA0VLvp0/x8/qULG7x2pGG4K/W+pL1un1CL4qk9hqu8sMB/61lP1ezsjq
sNnI9NzHDwwHZBs1jKKfsjgcZtrMvpSP8YBN7a0MvpOI+LgjrWN2biaCD4sv
AOxjz8o=
               "]}]}}, 40], 
          Tooltip[{{
             RGBColor[0.800498, 0.201504, 0.192061], 
             
             FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
               3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQLc2pf6LN9M3+/sr6TKF5vA4wvtaszBVCz3kdIhMO
Wis8f73/4SGZVxYKfA78RQKbgr1e79+r583X5snncJD16bm2ta/2z5pVaXS5
iM/hzzTXSoXHL/fXTb33pKKdz2HX8u3hCq9fwPlbO9x5d3kg+Lrdu+uDtz3f
H575NvlYLZ+DmWpF3jvj5/u/zlq2KD6Lz0H9dKhL+8Zn+yediX/4I4zPITh0
1iVFv2f73bOnnHhjzecw+XrNrF2cz/YzMD6YYSnJ53AlMj4p+OjT/TunaWe2
feN1+DIr4Jj84qf7/99oM9c5j+A/tQ07rLMYwXcQWHFxUhmvQ7zsz4MKx5/u
F/U/mrDGj9eBz6zRSp7/2f5H0pN0K7V5HZ5YXTJUDH+2f92LuF+uHLwON7+s
2SO399n+TUcvTJ//lsfBymbxDTnH5/vfbnrO2nabx2F1dXOUwtHn+5czLIjN
OcnjcMlQ8kxb8Iv9rMdvzY8/wOOwL8xvcvAbBL/cI0D97cSXcH6U/tLIt6qv
IOFxischlj+iPHjFq/0hi+9PjL/H45CS2/pup9br/Sbe5dPjP/E4HDimvqit
9/X+fTFqBWt4eR1KZu58vfPC6/35Fn2sbga8Dho53qZvhd/sVxD5Nut+ECK+
GUt+qVeWI/iw9AAAN6YM5g==
               "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQzbht6+E219f7L19Kmakzl9cBxpeMEkrQyeB1eFn8
/Hgbz+v98VamWTl2vA673ntdaJv1av/ir0Fxb+R5Hbqy191o03i1Pz3gfEYO
I6/D4zlc39pmvtzPqXcvSecTj8Mh1qfn2t6+gPM/SK7YHmyH4DvJfbZXWPd8
f/s1oaOTgPqPcW04+9bm+X7W47fmxyvwOrj8Ll+x6/Sz/YwSLik69rwOBbXl
YfKTn+1POHKs/34Wgi/r9+JExWIEP9K01sztOK/Dh/9MOSGrn+03qQz62fqM
1+GERKDE7tvP9u8MkfpowcjnsMhw/hFFnuf73bOnnHgjzecQJMkd/Tbo+f5d
t7OmzTfgc/jk+M5XYcPz/aoyTFLB9nwO0154zwrmfbG/TfH5XlY/PofrAZ1i
b0tf7He43/0+PpTPYfsPBZm3LxH8w6X77u7sewnnZwm73WuTebX/9H5uaUt3
PoclVw9lBU9+tf/V7r2Bb7T4HB6J7gpQ4Hq9n2tHfsd8Pj54fKwMOxgafx8R
P7D4AgCymds3
               "]}]}, {
             RGBColor[0.801, 0.202, 0.192], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{-0.5507559456129578, 
              3.784010222463026}, {-0.6510076122796246, 
              3.784010222463026}, {-0.6510076122796246, 
              3.8013735557963595`}, {-0.5507559456129578, 
              3.8013735557963595`}}}]}}, 41], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-4.253137392849991, -1.567170794205445}, 0.2]}, 42], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-5.119162796634431, -1.0671707942054443`}, 0.2]}, 43], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-5.985188200418869, -1.567170794205444}, 0.2]}, 44], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-5.98518820041887, -2.567170794205444}, 0.2]}, 45], 
          Tooltip[{{
             RGBColor[0.603, 0.647, 0.09], 
             
             FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
              1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
              1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdlX001GkUx6dsfs/PVt6HPE1ySAxhQqM9UgxNrDacil5UXmNOFodpjIqK
cqizjWpXW9he5GWQ5GWKlntit02RoSJrhmq00R4hrV7tPifTmXP2j+ePz/md
e597n/v93p9FeHxQlBaDwZhFTjQ5s8nRcS8dYDdjcLe87MPuRbBvyqFKdglD
lXZZXGg3gov0PpXgIobm5QpB6DACY5t6ceQvGN6vv/+N4AOCUxd1U4vOYtgV
kq7IoGnQZ8Wmqn7E8Hu448ECExpCxhzFmT9giIy4169lSUPMwsi9mZkYGt/V
0jI7GtzO3E7LTMVwyvGjv8CFhgbW92ne8RiaUhOetbjRMFoRLGwN13AASuyX
Bmv4WKDHfOV6DG+ujxmLXGnY2TtqvMOH3Oc6nqpwoCFJN8FA6Y6hq3p8gGdD
g6Jx61DOCtJfb/vXXHMaWB4BKZHLMezzVRnJDGlYqCdkejhguG2WT3ERDdtt
Q/rY9hg4s5v4UtLvF5bB8VK9UQ0bhN96wBtE4P/JUsEm8TEGEabcBwjsLzc+
ZZP8spPVa0fuqL+T+7UNGcKCZgTKg5YpraS+lcnzdabqEVgM5pROkfoD6/vn
TFUh2NZ+gan8FkPC5t6U0HIEhdPLhkZC1PmLEAwnORotisPgNrJflXEWgcuw
Ey/wEIbj56+97pQgWPKyp0R0AkPAVmsvaRaCBrGVV24eBh3X6tV66QjymPHr
9Ml879ildeklI3ASypNVZRhaJzYlCqIR0K5ShU4Vhulst4WszQieTB5ey6nF
4Lm9vbjTB0HHxleprfUYQnysd0qcNex/8I1VqLmGJXl3+m1pBEMxT40KazCc
qD70OnaSAuPcP9YFVmLw7WDFsp5Q4H3jyv6vSjBovbyh7GynYI2Oqae8AMPS
xaf3spspOGYZUSHLxVAbV+HErqPgofsVk8IjpJ7G1hHbcgrc5a8G2CmY6DCj
hF1MQbpTsN6OWA03ZSZ66m/RsHLYlV/tR/q763taQOI/z98DQ69tT9wIyX/u
eWZfGwdDTVYkXwAUZJkyK7k25L19k20U9ynYpd0myrTAkFR2fYynokC20dxe
boahqMPvcdlbCpysRTe5Jhisf+bJW3QR8ELfXpcxMYy2j72V2CKY16OaV0j0
IRSua2lZhqCLE2a6yAXDnJCguCl9BH3KF3zOSgz8sCN9/3yk4Pmy8pIeTwzr
qbVtLaMUXLuXb5BG6t9Yqd0gGaRm/EP8Ecz4iyN6rH6PGA0/EmSLW8UajqkJ
LMk7isHrwtwHwwMk33tRchHxq92Wmz2df1PwybPQs/onopdHNz7Uv6PgUhSn
VEb8XnG4wtCbzPMLU1ZPV4uwhkOLSyy87cg+WaKjryR629D9MJ/npvbDSQzj
i+UJIi8E1yJyeLnHMeQ4m0VJ/YmfIk/wxw9geIRXWLKCEewOPvfMLxrDoFFP
TmcYmqnvOwzD81ImMvYguBX2TCkg8/KrjQpSCNGMHlwxzOUF5SgOEP0mPPGT
k3nNSrMIkGYjmP+r/VSoOQbWpo6EgjMIRi7o7PVeQPYFxVwgkyL47eiLSbYh
Bluzf6WdNxE4i4NdFulhWOMw4S2Va9i2SNLJG9ZwTP7kKimDBqrLvk9E4jN2
phnKmDSwo6fr2GbqfUn2XbdJ2SzlYgwTf6alsNbQM/NjY8gS3DXgBtAzfuOq
9+M2GnYVyErzeBjibT4xubvpGf0HEr+c96Km9tDQJjqgEIRp+LOfhBouLq8z
mib+iMwt8WCT+PTb3p6JpzCcS0qslJD8C5y1xKrz6n2zQf29HMOZibruDA8a
XKxirprUqO9fSoMNZ7tRUwPZ701DvBFd0i9DLm5twnCMv+qq5A2C//9P/gPD
5O9r
              "]]}}, 46], 
          Tooltip[{{
             RGBColor[0.801, 0.202, 0.192], 
             
             FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
               3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQ3XhQ9tepC7IHTBi0vp1eyHgAxp9133776QjGA5k8
EzT+HZM98HhbT+lSecYDC95FTk/ZLHuAzTsuMOIbwwGxxi+/Ts2XPaB1X1+X
+yzDAbvJDgZ1bbIHXJ+cqkrdwXAg9CqfTl06gl968UCSYTCCfySQf+ITB9kD
OQJ7fosfYjjA+vTZu+kGsgfO32PaW3eV4cDhmYs4vRVkDxiu9ax7+oLhAId2
dvQ9YdkDNXyi0z8yMx4IrE4vCeSWPXC44uSxJWqMB2aeTu49wiR7gOtx7bdw
T8YDez8/lKz7J3PgyAIljU0FCP496+A5G+cg+C2ZjH3eJxkPcLGEW/4D6l+n
9eSf4UfGAwrsGRz/gOY/ihU3ShVhOrBbPcj9n4jsAdGJXqkzzJkO/Kxb+2Ov
ouwBwS03jtsFMR146q7zx9ZI9sC1YwcjI1KYDlz2z9DZ5yR7QLaSk6mojOnA
DLbZv7pCZA/s33Ruf1090wGz1Y2Tl6Qj+LkvGY+F1yD4nm0+Z673QcOjlOmA
1yOmCSrA8M6/dvJsXSLTAe6+F3GF62UP9OsZnajzBZp3M+brqd3A+JFtfm9o
xHSgV7g/zvCI7IEQR+moGfxMBx77Hjw+/YzsgcWpm4/8e4OI70Os681TTyD4
sPQAAAbUCh4=
               "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQLTe97+epTbIHPixzObZxEeMBGH+1/PT/G68zHrh9
TuTXqtWyB1LsS74WMjIdCLVT/J01V/aAYksY4yd5pgPn1+r+0eqXPRCjeetb
oR3Tgd/GN/971coe2OV9+s9GX6YDYo1ffp1KR/DnPOaZ8SQQwVdzEdO8Zy97
wGbxtFneQP3bH569td1Q9sD+Tef21wHNP35frWyisuyBQ4mpvzcyMB3gufCM
u04G6J6tj87/u8II5y/TPjgtdQ6Cn+WiozmjgvFAjMOMdS3ysgf6GcLTIiIZ
D5QzK7VMVJU9wKXan7fUjvHApGOrI+dpyx6o4ROd/lGZ8UCHc+WZchPZA5zz
7E7a8TMemLPiqpacg+yB+bHLXbsZGA8UxiZOOeIte8Au4tDCGx8ZDlRyvTx8
PUL2QMss2YK6VwwHSv/PPhKejuCLrz8f87EawT+96MGfVb2yB37snOuy9AfD
AWHrgr6WObIHbu59zftJhPGAlLK+dhwwvHcdtLxuZ4iIDynlF5z1CQg+LL4A
frbcEg==
               "]}]}}, 47], 
          Tooltip[{{
             RGBColor[0.801, 0.202, 0.192], 
             
             FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
               3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQ3XhQ9tepC5IHutTCsjhr+Q/A+B9Yc7Q5TfgPZPJM
0Ph3TPKA5d0dLx/94juw4F3k9JTNkgdiCruOTr3Id0Cs8cuvU/MlDzSwxiz0
WMF3wG6yg0Fdm+SB2Vzf3y2azHcg9CqfTl06gl968UCSYTCCfySQf+ITB8kD
h8xe5IfO5TvA+vTZu+kGkgdUWfUN92zgO3B45iJObwXJA+2XSz8pHeE7wKGd
HX1PWPLAJRNHbv37fAcCq9NLArklD0jO/2r1iJH/wMzTyb1HmCQPJHCuypqq
wn9g7+eHknX/JA5IHfeb894bwTdJqhd4X47g3+rXZepcwn+AiyXc8h9QP0ug
QHH+Gf4DCuwZHP+A5lu0OC9b9J7/wG71IPd/IpIHtkbvfpPFKXDgZ93aH3sV
JQ+Y5DLJ7RMTOPDUXeePrZHkgWnfvj07JS9w4LJ/hs4+J8kDO89L7b6uIXBg
BtvsX10hwPDO+SsZpytwwGx14+Ql6Qh+7kvGY+E1CL5nm8+Z632SByY1TZeI
A+r3esQ0QQUY3sn/finEyQkc4O57EVe4XvJAsZa+XJwI0LybMV9P7ZY8sG7h
9Y3b2QQO9Ar3xxkekTywKt393NVX/Ace+x48Pv2M5IGf3fctbE4g4ltC5/bq
RYsRfFh6AAAuhQYG
               "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQLTe97+epTZIH3M4WWL2v5T8A4zO6HS5+v4n/wO1z
Ir9WrZY8sCt1Qeb6O/wHQu0Uf2fNlTxQvqqpVP83/4Hza3X/aPVLHrip3rz1
Oo/Agd/GN/971Uoe4NhZvaNcROCAWOOXX6fSEfw5j3lmPAlE8NVcxDTv2Use
OJmS2H4EqH/7w7O3thtKHhC9+ct4zy/+A8fvq5VNVJY8INExMf/9bf4DPBee
cdfJAN1zm8/FZgOC/yfwLdficgT/QFbE3KvB/AdiHGasa5GXPPBUrfnWVBP+
A+XMSi0TVSUPJHjvfvRIkv/ApGOrI+dpSx64ZOLIrf+f70CHc+WZchPJA/FH
smxrXvEdmLPiqpacg+SBr82Xd564zXegMDZxyhFvyQNT6t6Jip3lO1DJ9fLw
9QjJA7cOeD7ZfZTvQOn/2UfC0xF88fXnYz5WI/inFz34s6pX8oDfg5M7Hl3m
OyBsXdDXMkfygP4T8Sb9D3wHpJT1teOA4S3wItW7hgcRHwWeInV7rBF8WHwB
AKbl4W0=
               "]}]}}, 48], 
          Tooltip[{{
             RGBColor[0.801, 0.202, 0.192], 
             
             FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
               3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQLX5aI3yWu/yBOGGHDVn9PAdg/COfQguz3HgO/Bed
3XrWVv4A76lF+i68PAfMfqR8MdaSP2AQV8L9/TH3gTVd/8NnickfCPnk+nzl
Lu4DV+Z49/r+lTuQ//2BCcsy7gOv70l2+t5D8Llvn97PcArBj4qWerd5u9yB
acqXtm5bz31g9ruP3unL5Q78/ChRLnuY+0Dk4rVpUtPlDkQfiLdoucZ9YJ5J
2Y61XXIHlilqB074yH3geUvRRYUmuQNvu+83OIvwHNC/mvdqcqXcAZNvkzd8
M+M5EPz3TZlvqdyBd5stHgXEIfgc/plhAV0I/roacY9X23gOLOBNmnYWqP+G
7a8dF+7xHNgmUJx6Fmg+T6HuG2Ym3gOBhrFLznbLHbBfkiBvrsp7oL9jR2jv
DLkD1sffNd615z1QHWgeybtS7gDDrevC3wN5D2RGFnf27pQ74N4jv0cghfeA
nsCy8KjTcgdeHn1SKZvLe+DMlp4PxfcQfObPPMrqnxH8+/3hmstZ5SHhkcx7
4MFr3refReUPzHx5v13Wn/fAwumfdzuoyR/Y6ejRJGsNNO9RetAsI2D8GMxc
eUGe94Cy7KzdDNbyB+pCDEXM//IcqAw/o5LuLH/gbMXJurm3EPH9RuLoR+Zt
CD4sPQAACPIGiA==
               "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvWXBzLBZmvIHpHZFNQRM4DkA4181Wrsz4CjPgcIb
8uFVSvIH+oK61gu85znw2l0nwkpE/oD39JzdE3h5D6Rut4j8xSp/oM3mwwYB
Hd4DE22fxEh9kTvwJO7htgBr3gNruv6Hz7qH4Bu9Ff+6+QSCv8dXsW3tNrkD
advWhLzS5j3g+/qGefsKuQMvjz6plAWaH/vS8HLCLLkDb0qqtwa84zmw6ObH
DN/Jcgf6TvzonHsIwb9gdz2ApQvBnxLu9NgsjefAJ8/F3CHT5A7sFM5V+O7G
c4CXV/dhwhy5AyYWSzVcdHgOaFzYti13kdyBZYragRMEeQ7I+bZouq+WO2C8
MaT57h/uA0abHrS/BbrvZMHe/5rvuA+wp+d8nHxI7kBG9o3o8vvcB/hFvigs
Py93YN1aYy3ZG9wHuDmXK6rfQ/DX7ri188AnBD9xzevIKhb5A0pnN/9zfsZ9
YKVL9etgYfkDzBcZT0xg4jmwQceqQxcY3k+u+E+8K4eIDxezf4dl/RB8WHwB
AKpg2cM=
               "]}]}}, 49], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-5.119162796634431, -3.0671707942054445`}, 0.2]}, 50], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-4.253137392849992, -2.5671707942054445`}, 0.2]}, 51], 
          Tooltip[{{
             RGBColor[0.433, 0.467, 0.467], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{8.942759189219721, -1.6856406666759243`}, {
              8.942759189219721, -1.4708948333425909`}, {
              8.971177022553055, -1.4708948333425909`}, {
              8.971177022553055, -1.5590781666759244`}, {
              9.082798189219723, -1.5590781666759244`}, {
              9.082798189219723, -1.4708948333425909`}, {
              9.111215689219723, -1.4708948333425909`}, {
              9.111215689219723, -1.6856406666759243`}, {
              9.082798189219723, -1.6856406666759243`}, {
              9.082798189219723, -1.584419833342591}, {
              8.971177022553055, -1.584419833342591}, {
              8.971177022553055, -1.6856406666759243`}}}]}}, 73], 
          Tooltip[{{
             RGBColor[0.433, 0.467, 0.467], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{-8.364383770447635, -3.34954371087211}, \
{-8.364383770447635, -3.1347978775387766`}, {-8.3359659371143, \
-3.1347978775387766`}, {-8.3359659371143, -3.22298121087211}, \
{-8.224344770447633, -3.22298121087211}, {-8.224344770447633, \
-3.1347978775387766`}, {-8.195927270447633, -3.1347978775387766`}, \
{-8.195927270447633, -3.34954371087211}, {-8.224344770447633, \
-3.34954371087211}, {-8.224344770447633, -3.2483228775387767`}, \
{-8.3359659371143, -3.2483228775387767`}, {-8.3359659371143, \
-3.34954371087211}}}]}}, 95]}}, ImageSizeRaw -> 498.1531416326483], 
       Graphics[{{
          AbsoluteThickness[1.3], {
           Style[{
             
             Line[{{-5.017125885574906, -1.768081491258409}, \
{-4.517725861160843, -0.9016815736558699}}], 
             
             Line[{{-4.517725861160843, -0.9016815736558699}, \
{-4.097523405861805, -0.901345403997494}}], 
             
             Line[{{-3.222602238259249, -0.3886716342385031}, \
{-3.0185260320592806`, -0.034481561448838516`}}], 
             
             Line[{{{-3.0185260320592806`, -0.034481561448838516`}, \
{-2.018526032059281, -0.03368139055040149}}, {{-2.9184300435614867`, \
-0.15440154893295305`}, {-2.1184299795341714`, -0.15376141216297062`}}}], 
             
             Line[{{-2.018526032059281, -0.03368139055040149}, \
{-1.5177258611608437`, -0.8992815187242292}}], 
             
             Line[{{{-1.5177258611608437`, -0.8992815187242292}, \
{-0.5177258611608436, -0.8984815004136826}}, {{-1.4178218953632094`, \
-0.7792015123557844}, {-0.6178218313603102, -0.7785614976561435}}}], 
             
             Line[{{-0.5177258611608436, -0.8984815004136826}, \
{-0.01852587947139048, -0.03208135392930763}}], 
             
             Line[{{{-0.01852587947139048, -0.03208135392930763}, {
              0.9814740442346643, -0.03128148820665125}}, {{
              0.08157007243706452, -0.15200137195416014`}, {
              0.8815700601216159, -0.15136147933706579`}}}], 
             
             Line[{{0.9814740442346643, -0.03128148820665125}, {
              1.4808740686487267`, 0.835118353101942}}], 
             
             Line[{{{1.4808740686487267`, 0.835118353101942}, {
              1.9010765239575058`, 0.8354545868781321}}, {{
              1.5807780161236167`, 0.9551983747145112}, {1.950980487439225, 
              0.9554945999585875}}}], 
             
             Line[{{2.776825123893393, 0.3241821302968641}, {
              2.9814740442346643`, -0.029681451585557836`}}], 
             
             Line[{{2.9814740442346643`, -0.029681451585557836`}, {
              3.9814741205286097`, -0.02888158586290145}}], 
             
             Line[{{2.798759646718812, 1.3876333166614614`}, {
              2.98007405033818, 1.7023183653089737`}}], 
             
             Line[{{{2.98007405033818, 1.7023183653089737`}, {
              3.9800741266321253`, 1.7031185362074113`}}, {{3.079977997820401,
               1.822398386915444}, {3.8799781381416523`, 
              1.8230385236976365`}}}], 
             
             Line[{{3.9800741266321253`, 1.7031185362074113`}, {
              4.479273955733688, 2.569318792555067}}], 
             
             Line[{{{4.479273955733688, 2.569318792555067}, {
              3.978674132735641, 3.4351183531019416`}}, {{4.3253340796044775`,
               2.5958239778753787`}, {3.9248437572152763`, 
              3.2884817240392237`}}}], 
             
             Line[{{3.978674132735641, 3.4351183531019416`}, {
              2.9786740564416956`, 3.4343187925550667`}}], 
             
             Line[{{{2.9786740564416956`, 3.4343187925550667`}, {
              2.4794740747522424`, 2.567918646070692}}, {{3.0327261715810576`,
               3.2877637545642084`}, {2.633373683283073, 
              2.594656649092567}}}], 
             
             Line[{{2.4794740747522424`, 2.567918646070692}, {
              1.4794740747522426`, 2.5671184751722547`}}], 
             
             Line[{{{1.4794740747522426`, 2.5671184751722547`}, {
              0.9800740503381801, 1.700718633863661}}, {{1.5335007649800227`, 
              2.4205540625252135`}, {1.133978295012782, 
              1.7274299382623797`}}}], 
             
             Line[{{-1.5177258611608437`, -0.8992815187242292}, \
{-2.017125885574906, -1.7656815126207137`}}], 
             
             Line[{{{-2.017125885574906, -1.7656815126207137`}, \
{-1.51632601985225, -2.6312814882066515`}}, {{-2.0709162167539557`, \
-1.912332835775975}, {-1.670273128061707, -2.6048183405199836`}}}], 
             
             Line[{{-1.51632601985225, -2.6312814882066515`}, \
{-2.0157260442663123`, -3.497681482103136}}], 
             
             Line[{{{-2.0157260442663123`, -3.497681482103136}, \
{-3.015726044266312, -3.498481500413683}}, {{-2.115822014465779, \
-3.377761479345597}, {-2.9158220784686772`, -3.3784014940452383`}}}], 
             
             Line[{{-3.015726044266312, -3.498481500413683}, \
{-3.516325714676469, -2.632881486680773}}], 
             
             Line[{{{-3.516325714676469, -2.632881486680773}, \
{-3.0171258855749055`, -1.7664815309312605`}}, {{-3.3624261071347545`, \
-2.6061434779657064`}, {-2.963073765014048, -1.9130365669225742`}}}], 
             
             Line[{{-3.0171258855749055`, -1.7664815309312605`}, \
{-3.2217748059161764`, -1.4126179490488386`}}], 
             
             Line[{{0.9800740503381801, 1.700718633863661}, {
              1.4808740686487267`, 0.835118353101942}}], 
             
             Line[{{-3.0171258855749055`, -1.7664815309312605`}, \
{-2.017125885574906, -1.7656815126207137`}}], 
             
             Line[{{2.4794740747522424`, 2.567918646070692}, {
              2.98007405033818, 1.7023183653089737`}}]}, 
            RGBColor[0.4, 0.4, 0.4]], 
           Style[{
             
             Line[{{-4.097523405861805, -0.901345403997494}, \
{-3.677320950562769, -0.901009234339118}}], 
             
             Line[{{-3.4266784444592178`, -0.7428617070281677}, \
{-3.222602238259249, -0.3886716342385031}}], 
             
             Line[{{{1.9010765239575058`, 0.8354545868781321}, {
              2.321278979266285, 0.8357908206543222}}, {{1.950980487439225, 
              0.9554945999585875}, {2.321182958754833, 0.955790825202664}}}], 
             
             Line[{{2.5721762035521216`, 0.678045712179286}, {
              2.776825123893393, 0.3241821302968641}}], 
             
             Line[{{2.6174452430994437`, 1.072948268013949}, {
              2.798759646718812, 1.3876333166614614`}}], 
             
             Line[{{-3.2217748059161764`, -1.4126179490488386`}, \
{-3.4264237262574477`, -1.0587543671664168`}}]}, 
            RGBColor[0.291989, 0.437977, 0.888609]]}}, {
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-5.017125885574906, -1.768081491258409}, 0.2]}, 1], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-4.517725861160843, -0.9016815736558699}, 0.2]}, 2], 
          Tooltip[{{
             RGBColor[0.292, 0.438, 0.889], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{-3.602320974782561, -1.0082545104557397`}, \
{-3.602320974782561, -0.7935086002349064}, {-3.5731704643455298`, \
-0.7935086002349064}, {-3.4603774239611753`, -0.9621118272681738}, \
{-3.4603774239611753`, -0.7935086002349064}, {-3.4331307475391246`, \
-0.7935086002349064}, {-3.4331307475391246`, -1.0082545104557397`}, \
{-3.4622817579763354`, -1.0082545104557397`}, {-3.5750747983606894`, \
-0.8395036167029352}, {-3.5750747983606894`, -1.0082545104557397`}}}]}}, 3], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-3.0185260320592806`, -0.034481561448838516`}, 0.2]}, 4], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-2.018526032059281, -0.03368139055040149}, 0.2]}, 5], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-1.5177258611608437`, -0.8992815187242292}, 0.2]}, 6], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-0.5177258611608436, -0.8984815004136826}, 0.2]}, 7], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-0.01852587947139048, -0.03208135392930763}, 0.2]}, 8], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{0.9814740442346643, -0.03128148820665125}, 0.2]}, 9], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{1.4808740686487267`, 0.835118353101942}, 0.2]}, 10], 
          Tooltip[{{
             RGBColor[0.291989, 0.437977, 0.888609], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
              2.3962789550270087`, 0.7285455688899629}, {2.3962789550270087`, 
              0.9432914791107962}, {2.42542946546404, 0.9432914791107962}, {
              2.5382225058483945`, 0.7746882520775289}, {2.5382225058483945`, 
              0.9432914791107962}, {2.565469182270445, 0.9432914791107962}, {
              2.565469182270445, 0.7285455688899629}, {2.5363181718332344`, 
              0.7285455688899629}, {2.4235251314488804`, 
              0.8972964626427675}, {2.4235251314488804`, 
              0.7285455688899629}}}]}, {
             RGBColor[0.292, 0.438, 0.889], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{2.7020092311571644`, 0.9147548022268746}, {
              2.6605642163182157`, 0.9147548022268746}, {2.6605642163182157`, 
              0.8733097873879256}, {2.6432008767681223`, 
              0.8733097873879256}, {2.6432008767681223`, 
              0.9147548022268746}, {2.601757528596437, 0.9147548022268746}, {
              2.601757528596437, 0.9321181417769677}, {2.6432008767681223`, 
              0.9321181417769677}, {2.6432008767681223`, 
              0.9735614899486532}, {2.6605642163182157`, 
              0.9735614899486532}, {2.6605642163182157`, 
              0.9321181417769677}, {2.7020092311571644`, 
              0.9321181417769677}}}]}}, 11], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{2.9814740442346643`, -0.029681451585557836`}, 0.2]}, 12], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{3.9814741205286097`, -0.02888158586290145}, 0.2]}, 13], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{2.98007405033818, 1.7023183653089737`}, 0.2]}, 14], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{3.9800741266321253`, 1.7031185362074113`}, 0.2]}, 15], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{4.479273955733688, 2.569318792555067}, 0.2]}, 16], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{3.978674132735641, 3.4351183531019416`}, 0.2]}, 17], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{2.9786740564416956`, 3.4343187925550667`}, 0.2]}, 18], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{2.4794740747522424`, 2.567918646070692}, 0.2]}, 19], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{1.4794740747522426`, 2.5671184751722547`}, 0.2]}, 20], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{0.9800740503381801, 1.700718633863661}, 0.2]}, 21], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-2.017125885574906, -1.7656815126207137`}, 0.2]}, 22], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-1.51632601985225, -2.6312814882066515`}, 0.2]}, 23], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-2.0157260442663123`, -3.497681482103136}, 0.2]}, 24], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-3.015726044266312, -3.498481500413683}, 0.2]}, 25], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-3.516325714676469, -2.632881486680773}, 0.2]}, 26], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-3.0171258855749055`, -1.7664815309312605`}, 0.2]}, 27]}}, 
        ImageSizeRaw -> 421.00677042764113`], 
       Graphics[{{
          AbsoluteThickness[1.3], {
           Style[{
             
             Line[{{-2.331481509473589, -2.066985213668258}, \
{-2.120681491163042, -1.0895851587366174`}}], 
             
             Line[{{-2.120681491163042, -1.0895851587366174`}, \
{-2.4323643404001025`, -0.8070700208320118}}], 
             
             Line[{{-3.4298406828462618`, -0.5375059521146761}, \
{-3.841281543042925, -0.6245851587366174}}], 
             
             Line[{{{-3.841281543042925, -0.6245851587366174}, \
{-4.343481555249956, -1.4873852228235316`}}, {{-3.9952853725036555`, \
-0.6506521164727133}, {-4.396875651476509, -1.3406005633310125`}}}], 
             
             Line[{{-4.343481555249956, -1.4873852228235316`}, \
{-5.344281420972612, -1.4861851953577112`}}], 
             
             Line[{{{-5.344281420972612, -1.4861851953577112`}, \
{-5.83988139655855, -0.6179852747034142}}, {{-5.289652838020249, \
-1.3398554864848988`}, {-5.686102594780882, -0.6453484963341034}}}], 
             
             Line[{{-5.83988139655855, -0.6179852747034142}, \
{-5.338281359937456, 0.24701487788447626`}}], 
             
             Line[{{{-5.338281359937456, 
              0.24701487788447626`}, {-4.337081408765581, 
              0.2436149145055699}}, {{-5.238689393622943, 
              0.12668987624394426`}, {-4.437488289255185, 
              0.12396908664462267`}}}], 
             
             Line[{{-4.337081408765581, 
              0.2436149145055699}, {-4.064786879446689, 0.5456129040384063}}], 
             
             Line[{{-3.129232202426144, 
              0.7441523663967601}, {-2.7526815369394093`, 
              0.5752146459508825}}], 
             
             Line[{{{-2.7526815369394093`, 
              0.5752146459508825}, {-1.8860815003183151`, 
              1.0726148534704136`}}, {{-2.725681073568343, 
              0.7290575552835291}, {-2.0325396419055966`, 
              1.1268981707694241`}}}], 
             
             Line[{{-1.8860815003183151`, 
              1.0726148534704136`}, {-1.02168148305681, 0.5700147558141637}}], 
             
             Line[{{{-1.02168148305681, 
              0.5700147558141637}, {-0.15428149726655732`, 
              1.0674146581579138`}}, {{-0.994619712398493, 
              0.7238468927135185}, {-0.3007179942519785, 
              1.121756337602185}}}], 
             
             Line[{{-0.15428149726655732`, 1.0674146581579138`}, {
              0.7103184935781692, 0.5650147558141638}}], 
             
             Line[{{{0.7103184935781692, 0.5650147558141638}, {
              1.5775185057852004`, 1.0626148534704138`}}, {{
              0.7373382372158795, 0.7188542800851964}, {1.431067168445792, 
              1.1169165253202196`}}}], 
             
             Line[{{1.5775185057852004`, 1.0626148534704138`}, {
              2.442918591234419, 0.5598148656774451}}], 
             
             Line[{{{2.442918591234419, 0.5598148656774451}, {
              2.8268116537494032`, 0.7304993755848683}}, {{2.5830405332661, 
              0.49080394527019855`}, {2.9212459061983393`, 
              0.6411750354608252}}}], 
             
             Line[{{3.4809209647897554`, 1.5434456927310753`}, {
              3.5669185301992625`, 1.9426148534704142`}}], 
             
             Line[{{3.5669185301992625`, 1.9426148534704142`}, {
              4.518718762132856, 2.2492148900915074`}}], 
             Line[{{3.749899937849384, 0.5248648119699642}, {
              4.021918530199263, 0.2198148656774452}}], 
             
             Line[{{{4.021918530199263, 0.2198148656774452}, {
              5.024118542406294, 0.21821482905635123`}}, {{4.122109963239511, 
              0.33964116712886494`}, {4.924310230335023, 
              0.33836043495048707`}}}], 
             
             Line[{{5.024118542406294, 0.21821482905635123`}, {
              5.520518688890669, -0.6495851587366173}}], 
             
             Line[{{{5.520518688890669, -0.6495851587366173}, {
              5.0195183226797315`, -1.5147852014612269`}}, {{
              5.36657375700392, -0.6759977262106301}, {
              4.965794889629163, -1.3681207595693818`}}}], 
             
             Line[{{5.0195183226797315`, -1.5147852014612269`}, {
              4.017718395921919, -1.5117852472375939`}}], 
             
             Line[{{{4.017718395921919, -1.5117852472375939`}, {
              3.522118420335981, -0.6445851587366174}}, {{
              4.072274356030195, -1.3654284469485423`}, {
              3.675910782177197, -0.6718720642681301}}}], 
             
             Line[{{3.522118420335981, -0.6445851587366174}, {
              3.1191703227562373`, -0.5580393644607411}}], 
             
             Line[{{-2.7526815369394093`, 
              0.5752146459508825}, {-2.7974749373920895`, 
              0.16953987716970265`}}], 
             
             Line[{{2.48344196295483, 0.1553944865858833}, {2.442918591234419,
               0.5598148656774451}}], 
             
             Line[{{-4.337081408765581, 
              0.2436149145055699}, {-3.841281543042925, \
-0.6245851587366174}}], 
             
             Line[{{3.522118420335981, -0.6445851587366174}, {
              4.021918530199263, 0.2198148656774452}}]}, 
            RGBColor[0.4, 0.4, 0.4]], 
           Style[{
             
             Line[{{-2.4323643404001025`, -0.8070700208320118}, \
{-2.744047189637163, -0.5245548829274063}}], 
             
             Line[{{-3.018399822649599, -0.45042674549273487`}, \
{-3.4298406828462618`, -0.5375059521146761}}], 
             
             Line[{{{2.8268116537494032`, 0.7304993755848683}, {
              3.2107047162643876`, 0.9011838854922917}}, {{
              2.9212459061983393`, 0.6411750354608252}, {3.259451279130579, 
              0.791546125651452}}}], 
             
             Line[{{3.3949233993802483`, 1.1442765319917363`}, {
              3.4809209647897554`, 1.5434456927310753`}}], 
             
             Line[{{3.4778813454995054`, 0.8299147582624832}, {
              3.749899937849384, 0.5248648119699642}}], 
             
             Line[{{-2.7974749373920895`, 
              0.16953987716970265`}, {-2.84226833784477, \
-0.23613489161147722`}}]}, 
            RGBColor[0.291989, 0.437977, 0.888609]], 
           Style[{
             
             Line[{{-4.064786879446689, 
              0.5456129040384063}, {-3.7924923501277967`, 
              0.8476108935712429}}], 
             
             Line[{{-3.5057828679128784`, 
              0.9130900868426377}, {-3.129232202426144, 0.7441523663967601}}], 
             
             Line[{{3.1191703227562373`, -0.5580393644607411}, {
              2.7162222251764936`, -0.4714935701848647}}], 
             
             Line[{{2.5239653346752413`, -0.2490258925056785}, {
              2.48344196295483, 0.1553944865858833}}]}, 
            RGBColor[0.800498, 0.201504, 0.192061]]}}, {
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-2.331481509473589, -2.066985213668258}, 0.2]}, 1], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-2.120681491163042, -1.0895851587366174`}, 0.2]}, 2], 
          Tooltip[{{
             RGBColor[0.292, 0.438, 0.889], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{-2.9468667405374203`, -0.5247456317283216}, \
{-2.9468667405374203`, -0.31002466133085077`}, {-2.917719615536602, \
-0.31002466133085077`}, {-2.804939674533283, -0.47860830738724996`}, \
{-2.804939674533283, -0.31002466133085077`}, {-2.7776961624429606`, \
-0.31002466133085077`}, {-2.7776961624429606`, -0.5247456317283216}, \
{-2.806843787385889, -0.5247456317283216}, {-2.919623728389208, \
-0.3560143361018707}, {-2.919623728389208, -0.5247456317283216}}}]}}, 3], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-3.841281543042925, -0.6245851587366174}, 0.2]}, 4], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-4.343481555249956, -1.4873852228235316`}, 0.2]}, 5], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-5.344281420972612, -1.4861851953577112`}, 0.2]}, 6], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-5.83988139655855, -0.6179852747034142}, 0.2]}, 7], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-5.338281359937456, 0.24701487788447626`}, 0.2]}, 8], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-4.337081408765581, 0.2436149145055699}, 0.2]}, 9], 
          Tooltip[{{
             RGBColor[0.801, 0.202, 0.192], 
             
             FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
               3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQ7Wa674OEFt8BD8snPKkl7+1h/Al5ZRv0fD7Y/3gS
9ahejO9AN/+sC+X7PtjPOBv70vc97wEGY5Nl/IIf7YsPMN2SPsF7oCTsXPXy
5I/2iyy6jjRP5T1wxMRl+ceej/ZxDtMmtYYj+NWCnCZv9RD8z8ujl4Vw8R7Q
WdBl0Vv50X7BheTIPS95DqgLZN45EPTRfp2ZRZvySZ4DSg3uDV+0P9o/0wx9
5rWB58BCfpWXd79+sJ8swD/LcD7PgUvhATMqN3ywd/h+wleij+cA04Iad9Hs
D/bTXy1d3t3Kc8BaK8kyWQbBX7Ir7ubZjvdwvsO24Jjsa+/s51i4LOoG6l8a
dDz4mtk7+w9WV7d3LeA5MJkraDPvqrf2v64Jru3axHOg4dAdIVfZt/ZKPwL8
OM/wHPh3tXrjuk1v7K9cfBnF8ZbnAK+rfr9X1hv7OU2/DrDz8R5gu5sl/Ezx
jf2r/w7+Cwx5D0g0MOhv+fva/pqCafylcATfb5lIl3kjgq9g/brWbBnvgUuP
13JtVn1jf+jzH97zx3gP6F+ZkLGh9I291qKcLenPeQ8smv1aft3RN/Yqqq9V
pRj4DgjwirjdM3prX1J0reKZAN+BtMBJjQ5739of3X/w9CZFvgO7pwrsXeT+
Dh7fx1L8ZrHcQvBh6QEAvgkK8w==
               "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvcv70Tapd7wHnKbueH624L09jH9nB5f35Tnv7BvK
+VRu3+c9wFq+I+3G17f23OfT/kUf5j2QVvzoyu3qt/bT1PbfuLOM98Bdt5Y5
9xnf2r8zjngv28x7gNd1ZvDDI2/s/RivaMtHIPj3cqM3Besg+D+XfH/qzsF7
wFGGjbOS6a39lloFhT+veQ7sXxh+dkXtW/snWb26G87zHFAPMLS48eOt/SKR
vCOdB3kOzCp6tX3+8ndw/uE1i5/97XwP54vkaq+fzvPBftr8p7enHec5cEVi
fpSo9wf7U9Ka2hsu8xzg5WXZWtnwwf7f9Jyqk/d5DmwwOXDu/tYP9gvW77lZ
/ZHngIVYkIHL/Q/2YtKrnx4Huq9SIiNi1Z8P9oE139lFFHgPBDxXO8gn9dE+
1HHOAksr3gOqTXe3HNL4aP88/vtRi3AEf6f/ob1ZDQj++vAXH+4s5j2w4Oq8
R6U8H+1te9Ya9R/kPcC4oeLv3csf7Cdsu9DlCAzvxK4gCbfZH+DxURzO2HDC
BsGHxRcAMmrqKQ==
               "]}]}}, 10], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-2.7526815369394093`, 0.5752146459508825}, 0.2]}, 11], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-1.8860815003183151`, 1.0726148534704136`}, 0.2]}, 12], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-1.02168148305681, 0.5700147558141637}, 0.2]}, 13], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-0.15428149726655732`, 1.0674146581579138`}, 0.2]}, 14], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{0.7103184935781692, 0.5650147558141638}, 0.2]}, 15], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{1.5775185057852004`, 1.0626148534704138`}, 0.2]}, 16], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{2.442918591234419, 0.5598148656774451}, 0.2]}, 17], 
          Tooltip[{{
             RGBColor[0.291989, 0.437977, 0.888609], 
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
              3.2719331557028144`, 0.8586543316505848}, {3.2719331557028144`, 
              1.0733753020480554`}, {3.3010802807036326`, 
              1.0733753020480554`}, {3.4138602217069516`, 
              0.9047916559916563}, {3.4138602217069516`, 
              1.0733753020480554`}, {3.441103733797274, 
              1.0733753020480554`}, {3.441103733797274, 0.8586543316505848}, {
              3.4119561088543455`, 0.8586543316505848}, {3.2991761678510265`, 
              1.0273856272770354`}, {3.2991761678510265`, 
              0.8586543316505848}}}]}, {
             RGBColor[0.292, 0.438, 0.889], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{3.5776279254101686`, 1.0448419393119102`}, {
              3.536187723847283, 1.0448419393119102`}, {3.536187723847283, 
              1.0034017377490245`}, {3.5188264008134573`, 
              1.0034017377490245`}, {3.5188264008134573`, 
              1.0448419393119102`}, {3.4773878657242743`, 
              1.0448419393119102`}, {3.4773878657242743`, 
              1.0622032623457358`}, {3.5188264008134573`, 
              1.0622032623457358`}, {3.5188264008134573`, 
              1.1036417974349189`}, {3.536187723847283, 
              1.1036417974349189`}, {3.536187723847283, 
              1.0622032623457358`}, {3.5776279254101686`, 
              1.0622032623457358`}}}]}}, 18], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{3.5669185301992625`, 1.9426148534704142`}, 0.2]}, 19], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{4.518718762132856, 2.2492148900915074`}, 0.2]}, 20], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{4.021918530199263, 0.2198148656774452}, 0.2]}, 21], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{5.024118542406294, 0.21821482905635123`}, 0.2]}, 22], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{5.520518688890669, -0.6495851587366173}, 0.2]}, 23], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{5.0195183226797315`, -1.5147852014612269`}, 0.2]}, 24], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{4.017718395921919, -1.5117852472375939`}, 0.2]}, 25], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{3.522118420335981, -0.6445851587366174}, 0.2]}, 26], 
          Tooltip[{{
             RGBColor[0.801, 0.202, 0.192], 
             
             FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
               3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
               3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQPTFvk8/ZFmaHfiFli7oft/fD+A9OCU7o3XBz//19
otFpM5gdvrg182c+v77f/ppQyIz9zA6KO6V2cs69tj/lcW7yqWfMDn7am5JW
BV3db5r9rCJJksWBb9OtLY1rr+yvTL61KiEcwY+ZlM75sx7Bf/JbZPrEJSwO
BSwH84V/X9lvfpnnieZRFocWF/cHLtOu7tfMtdh+6CmLw8yWswFlhtf2f6yU
Dp/9j8Vhjlv02guc1/e7TE5cvIWf1eGW6qoPifI39k9fs/z9WQVWBynWn8af
TW7ud9h5amqUJquDyZ2knN35t+D8G/x689ecvw3nL5BwmVlocne/TbbO7Cig
/mv3Y1bNLr63/3nG7NZoPlaHX/nur3V67++/eyZuQvQfFgcBBkmx+OAH+7es
ln9/5xGLw6Q3leVf9z7Yz3yp7dHdgywOzbXHZkayPdxvrVhWc28Bi0PX0y7R
fX4P979drP/OtZbFocLp68/3RQ/3MzZb3xMOR/A7/0ZvXqeL4G/PaN2/noPF
Yd89d7mPXg/3i24o1hd/weyQ+C7lwOdfD/avZWTprDvO7PBOjYvz26oH+zfX
tYqfWcfs0LD14aOjtg/2JxvOOvJ/LrND6KNjfsfT7u8XerKu0LiX2WFV5Knr
TEH34PE9ebefrL3u3f3o6QEAvtYT9w==
               "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQLRvR13b6ALPDnKiqpjX/b++H8dOFr+1euPzu/nCd
JEnu88wOYtOrWqZ/vbf/zBVO+67XzA4h89RWTHh5f79j7cYUTg4Wh83VhT1H
8h7sf5kv4XdCm8WhuTbm6qHVD/Z3LpojeDwMwf9pKto9qQnBv/evInzeMhYH
/2Xv5bWB+pXVAmRfHWJxWOxos/3b0/v7P1s85je7z+Jw6UnHw+nv7+037Weq
jHnL4vBmvtgjjkl34fxZ2ktafM7ehvMvXbCd+nLdrf0OLN2J/s9ZHC4o5j//
tOXmft4OdyGz20D9AbdrE+/f2H+Tm+WwzHkWh4RNr8ROct7Yb/5lc3LWXhYH
B53FE8xTru8/2HE0XA7oPltl7w/z3l3b36ZeaXqpj8Xh0XN/X97Ka/ubkq7M
WVPC4tBTU1pna3dt/wfnyvK14Qi+XMi6+mo9BF/Dp8OHk5vFYb5ewfGC9df2
zxI/zBX+ltlB9ihHzIWJ1/e7v52/aQkwvGdHL/ygX3IDHh8h6s8C1d7d3I8e
XwC4096v
               "]}]}}, 27]}}, ImageSizeRaw -> 441.7142719504179], 
       Graphics[{{
          AbsoluteThickness[1.3], {
           Style[{
             
             Line[{{-1.731520038986206, 
              0.6014000205993655}, {-0.865920001411438, 
              0.10060000228881867`}}], 
             
             Line[{{-0.865920001411438, 
              0.10060000228881867`}, {-0.866247052901292, \
-0.30821350035447487`}}], 
             
             Line[{{-1.3690618090117763`, -1.1888379385852894`}, \
{-1.7331199993133546`, -1.3986000556945797`}}], 
             
             Line[{{{-1.7331199993133546`, -1.3986000556945797`}, \
{-2.5987200511932373`, -0.8979999275207518}}, {{-1.8797620162146822`, \
-1.4524157445961334`}, {-2.572230279001474, -1.0519424540105642`}}}], 
             
             Line[{{-2.5987200511932373`, -0.8979999275207518}, \
{-3.465119892501831, -1.3972000617980953`}}], 
             
             Line[{{{-3.465119892501831, -1.3972000617980953`}, \
{-3.4659200634002687`, -2.3972000617980953`}}, {{-3.345199908428975, \
-1.4972960502931596`}, {-3.345840045198958, -2.2972961143204755`}}}], 
             
             Line[{{-3.4659200634002687`, -2.3972000617980953`}, \
{-2.6003199352264406`, -2.8979999275207513`}}], 
             
             Line[{{{-2.6003199352264406`, -2.8979999275207513`}, \
{-1.7339200176239014`, -2.398599903106689}}, {{-2.5736086232605326`, \
-2.744095686819275}, {-1.8804844265090206`, -2.3445732102503456`}}}], 
             
             Line[{{-1.7339200176239014`, -2.398599903106689}, \
{-0.8683200015068053, -2.8994000740051264`}}], 
             
             Line[{{{-0.8683200015068053, -2.8994000740051264`}, \
{-0.0019199718475340932`, -2.400000049591064}}, {{-0.8416086809286663, \
-2.745495834798372}, {-0.1484843777094072, -2.3459733485332146`}}}], 
             
             Line[{{-0.0019199718475340932`, -2.400000049591064}, \
{-0.0011200298309325973`, -1.400000049591064}}], 
             
             Line[{{{-0.0011200298309325973`, -1.400000049591064}, {
              0.865280040359497, -0.9006000251770017}}, {{
              0.14544437493742596`, -1.4540267536154152`}, {
              0.838568716666296, -1.0545042638431124`}}}], 
             
             Line[{{0.865280040359497, -0.9006000251770017}, {
              0.866080058670044, 0.0993999748229983}}], 
             
             Line[{{{0.866080058670044, 0.0993999748229983}, {
              1.230138171275835, 0.30916204461260804`}}, {{0.892818032314932, 
              0.2532995857978262}, {1.2135528897085892`, 
              0.4380997734904399}}}], 
             
             Line[{{2.2343573680825815`, 0.308350609754407}, {
              2.5980798755645753`, 0.09799998092651392}}], 
             
             Line[{{2.5980798755645753`, 0.09799998092651392}, {
              3.4644800220489502`, 0.597200019836426}}], 
             
             Line[{{1.7329529501774459`, 1.189786482467043}, {
              1.733280070877075, 1.5986000328063967`}}], 
             
             Line[{{{1.733280070877075, 1.5986000328063967`}, {
              2.599679912185669, 2.097999980926514}}, {{1.7599913871520698`, 
              1.7525042727599967`}, {2.4531155048132156`, 
              2.15202667788644}}}], 
             
             Line[{{2.599679912185669, 2.097999980926514}, {
              2.6004800830841064`, 3.097799938201905}}], 
             
             Line[{{{2.6004800830841064`, 3.097799938201905}, {
              1.734880107498169, 3.5986001091003423`}}, {{2.453828747428802, 
              3.044009648712506}, {1.7613432162290514`, 3.44465299685352}}}], 
             
             Line[{{1.734880107498169, 3.5986001091003423`}, {
              0.868479961013794, 3.0993999748229983`}}], 
             
             Line[{{{0.868479961013794, 3.0993999748229983`}, {
              0.867679942703247, 2.0993999748229983`}}, {{0.9883999603600746, 
              2.9993040046262607`}, {0.9877599456604336, 
              2.199303940623362}}}], 
             Line[{{0.867679942703247, 2.0993999748229983`}, {
              0.001280025100708041, 1.600000026702881}}], 
             
             Line[{{{0.001280025100708041, 1.600000026702881}, {
              0.0004800067901611616, 0.6000000076293948}}, {{
              0.12120002444851599`, 1.4999040565079735`}, {
              0.12056000974582318`, 0.6999039734315905}}}], 
             
             Line[{{-0.0011200298309325973`, -1.400000049591064}, \
{-0.36484253946679385`, -1.1896493788650382`}}], 
             
             Line[{{0.0004800067901611616, 0.6000000076293948}, {
              0.866080058670044, 0.0993999748229983}}], 
             
             Line[{{-1.7339200176239014`, -2.398599903106689}, \
{-1.7331199993133546`, -1.3986000556945797`}}], 
             
             Line[{{0.867679942703247, 2.0993999748229983`}, {
              1.733280070877075, 1.5986000328063967`}}]}, 
            RGBColor[0.4, 0.4, 0.4]], 
           Style[{
             
             Line[{{-0.866247052901292, -0.30821350035447487`}, \
{-0.8665741043911461, -0.7170270029977683}}], 
             
             Line[{{-1.005003618710198, -0.9790758214759993}, \
{-1.3690618090117763`, -1.1888379385852894`}}], 
             
             Line[{{{1.230138171275835, 0.30916204461260804`}, {
              1.594196283881626, 0.5189241144022178}}, {{1.2135528897085892`, 
              0.4380997734904399}, {1.5342877471022465`, 
              0.6228999611830536}}}], 
             
             Line[{{1.8706348606005876`, 0.5187012385823001}, {
              2.2343573680825815`, 0.308350609754407}}], 
             
             Line[{{1.7326258294778167`, 0.7809729321276893}, {
              1.7329529501774459`, 1.189786482467043}}], 
             
             Line[{{-0.36484253946679385`, -1.1896493788650382`}, \
{-0.7285650491026551, -0.9792987081390123}}]}, 
            RGBColor[0.291989, 0.437977, 0.888609]]}}, {
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-1.731520038986206, 0.6014000205993655}, 0.2]}, 1], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-0.865920001411438, 0.10060000228881867`}, 0.2]}, 2], 
          Tooltip[{{
             RGBColor[0.292, 0.438, 0.889], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{-0.9513151142496044, -1.0067728734753452`}, \
{-0.9513151142496044, -0.7920269693591268}, {-0.9221646046412386, \
-0.7920269693591268}, {-0.8093715674632695, -0.9606301915994844}, \
{-0.8093715674632695, -0.7920269693591268}, {-0.7821248918157642, \
-0.7920269693591268}, {-0.7821248918157642, -1.0067728734753452`}, \
{-0.8112759014242947, -1.0067728734753452`}, {-0.9240689386022638, \
-0.8380219845196482}, {-0.9240689386022638, -1.0067728734753452`}}}]}}, 3], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-1.7331199993133546`, -1.3986000556945797`}, 0.2]}, 4], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-2.5987200511932373`, -0.8979999275207518}, 0.2]}, 5], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-3.465119892501831, -1.3972000617980953`}, 0.2]}, 6], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-3.4659200634002687`, -2.3972000617980953`}, 0.2]}, 7], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-2.6003199352264406`, -2.8979999275207513`}, 0.2]}, 8], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-1.7339200176239014`, -2.398599903106689}, 0.2]}, 9], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-0.8683200015068053, -2.8994000740051264`}, 0.2]}, 10], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-0.0019199718475340932`, -2.400000049591064}, 0.2]}, 11], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-0.0011200298309325973`, -1.400000049591064}, 0.2]}, 12], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{0.865280040359497, -0.9006000251770017}, 0.2]}, 13], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{0.866080058670044, 0.0993999748229983}, 0.2]}, 14], 
          Tooltip[{{
             RGBColor[0.291989, 0.437977, 0.888609], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
              1.6478847887617174`, 0.4912270616748012}, {1.6478847887617174`, 
              0.7059729657910196}, {1.6770352983700831`, 
              0.7059729657910196}, {1.7898283355480522`, 0.537369743550662}, {
              1.7898283355480522`, 0.7059729657910196}, {1.8170750111955576`, 
              0.7059729657910196}, {1.8170750111955576`, 
              0.4912270616748012}, {1.787924001587027, 0.4912270616748012}, {
              1.675130964409058, 0.6599779506304984}, {1.675130964409058, 
              0.4912270616748012}}}]}, {
             RGBColor[0.292, 0.438, 0.889], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{1.9536150562008319`, 0.6774362897183144}, {
              1.9121700425400467`, 0.6774362897183144}, {1.9121700425400467`, 
              0.6359912760575294}, {1.8948067034835439`, 
              0.6359912760575294}, {1.8948067034835439`, 
              0.6774362897183144}, {1.8533633564899747`, 
              0.6774362897183144}, {1.8533633564899747`, 
              0.6947996287748174}, {1.8948067034835439`, 
              0.6947996287748174}, {1.8948067034835439`, 
              0.7362429757683864}, {1.9121700425400467`, 
              0.7362429757683864}, {1.9121700425400467`, 
              0.6947996287748174}, {1.9536150562008319`, 
              0.6947996287748174}}}]}}, 15], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{2.5980798755645753`, 0.09799998092651392}, 0.2]}, 16], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{3.4644800220489502`, 0.597200019836426}, 0.2]}, 17], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{1.733280070877075, 1.5986000328063967`}, 0.2]}, 18], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{2.599679912185669, 2.097999980926514}, 0.2]}, 19], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{2.6004800830841064`, 3.097799938201905}, 0.2]}, 20], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{1.734880107498169, 3.5986001091003423`}, 0.2]}, 21], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{0.868479961013794, 3.0993999748229983`}, 0.2]}, 22], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{0.867679942703247, 2.0993999748229983`}, 0.2]}, 23], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{0.001280025100708041, 1.600000026702881}, 0.2]}, 24], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{0.0004800067901611616, 0.6000000076293948}, 0.2]}, 25]}}, 
        ImageSizeRaw -> 360.9973338175722], 
       Graphics[{{
          AbsoluteThickness[1.3], {
           Style[{
             
             Line[{{-1.661546173829299, -2.152376920251319}, \
{-1.4507461555187522`, -1.1745769416225644`}}], 
             
             Line[{{-1.4507461555187522`, -1.1745769416225644`}, \
{-1.7622821112171694`, -0.8926230682350368}}], 
             
             Line[{{-2.759547963333618, -0.6224379558843054}, \
{-3.170746079224807, -0.7085769568813536}}], 
             
             Line[{{{-3.170746079224807, -0.7085769568813536}, \
{-3.673146286744338, -1.5731769095791075`}}, {{-3.3247421969537925`, \
-0.7347500681737328}, {-3.726659300535397, -1.4264247600707587`}}}], 
             
             Line[{{-3.673146286744338, -1.5731769095791075`}, \
{-4.673146286744338, -1.5703769217861387`}}], 
             
             Line[{{{-4.673146286744338, -1.5703769217861387`}, \
{-5.170746079224807, -0.7029769812954161}}, {{-4.618818545492424, \
-1.4239244292816138`}, {-5.016897792813395, -0.7300054995417977}}}], 
             
             Line[{{-5.170746079224807, -0.7029769812954161}, \
{-4.668346176881056, 0.1616230858432557}}], 
             
             Line[{{{-4.668346176881056, 
              0.1616230858432557}, {-3.668346176881057, 
              0.15882309805028694`}}, {{-4.568682564180426, 
              0.041344241760925285`}, {-3.768681780191872, 
              0.03910424933139191}}}], 
             
             Line[{{-3.668346176881057, 
              0.15882309805028694`}, {-3.395182632143982, 
              0.46047515769213704`}}], 
             
             Line[{{-2.467741663278932, 
              0.6624758237576709}, {-2.0847461707775414`, 
              0.49062317739599015`}}], 
             
             Line[{{{-2.0847461707775414`, 
              0.49062317739599015`}, {-1.2173461539928732`, 
              0.9882229698764591}}, {{-2.057717646690418, 
              0.6444714627812834}, {-1.3637986444348837`, 
              1.0425507166883385`}}}], 
             
             Line[{{-1.2173461539928732`, 
              0.9882229698764591}, {-0.35274614407466043`, 
              0.48582306753270865`}}], 
             
             Line[{{{-0.35274614407466043`, 0.48582306753270865`}, {
              0.5146538536365212, 0.9834231651889587}}, {{-0.3257176621732916,
               0.6396713603293148}, {0.36820134829765233`, 
              1.0377508718430362`}}}], 
             
             Line[{{0.5146538536365212, 0.9834231651889587}, {
              1.3792539207751928`, 0.4810229576694276}}], 
             
             Line[{{{1.3792539207751928`, 0.4810229576694276}, {
              1.743833482924728, 0.6901226224012693}}, {{1.5257010251186178`, 
              0.4266806936408757}, {1.8469078675409696`, 
              0.6109045230406689}}}], 
             
             Line[{{2.2485090256678792`, 1.569808637053657}, {
              2.2496537010486306`, 1.9786230553256776`}}], 
             
             Line[{{2.2496537010486306`, 1.9786230553256776`}, {
              3.117053908568162, 2.476223152981927}}], 
             
             Line[{{2.74814849977951, 0.6873318365070402}, {
              3.1114539329822244`, 0.47622315298192763`}}], 
             
             Line[{{{3.1114539329822244`, 0.47622315298192763`}, {
              3.978853835325974, 0.9738229454623966}}, {{3.1384824483082348`, 
              0.6300714399063991}, {3.8324013417901917`, 
              1.028150683934327}}}], 
             
             Line[{{3.978853835325974, 0.9738229454623966}, {
              4.843053969603319, 0.4714230431186466}}], 
             
             Line[{{{4.843053969603319, 0.4714230431186466}, {
              4.840654067259568, -0.5285769568813536}}, {{4.722815008837405, 
              0.37171131690625053`}, {
              4.720895085580179, -0.42828925904438786`}}}], 
             
             Line[{{4.840654067259568, -0.5285769568813536}, {
              3.9732538597400366`, -1.0261769019497131`}}], 
             
             Line[{{{3.9732538597400366`, -1.0261769019497131`}, {
              3.1086539451892556`, -0.5237768470180724}}, {{
              3.94708073108162, -0.8721807871722524}, {
              3.255406088662977, -0.47026381667787326`}}}], 
             
             Line[{{3.1086539451892556`, -0.5237768470180724}, {
              2.2410538475330055`, -1.0213769446743224`}}], 
             
             Line[{{{2.2410538475330055`, -1.0213769446743224`}, {
              1.3764537803943337`, -0.5189768897426819}}, {{
              2.2148807070685006`, -0.867380831903421}, {
              1.5232059197654868`, -0.4654638481517526}}}], 
             
             Line[{{-2.0847461707775414`, 
              0.49062317739599015`}, {-2.1286526699935866`, 
              0.08418160300364269}}], 
             
             Line[{{1.3764537803943337`, -0.5189768897426819}, {
              1.3792539207751928`, 0.4810229576694276}}], 
             
             Line[{{-3.668346176881057, 
              0.15882309805028694`}, {-3.170746079224807, \
-0.7085769568813536}}], 
             
             Line[{{3.1086539451892556`, -0.5237768470180724}, {
              3.1114539329822244`, 0.47622315298192763`}}]}, 
            RGBColor[0.4, 0.4, 0.4]], 
           Style[{
             
             Line[{{-1.7622821112171694`, -0.8926230682350368}, \
{-2.0738180669155866`, -0.6106691948475091}}], 
             
             Line[{{-2.3483498474424294`, -0.5362989548872572}, \
{-2.759547963333618, -0.6224379558843054}}], 
             
             Line[{{{1.743833482924728, 0.6901226224012693}, {
              2.108413045074263, 0.899222287133111}}, {{1.8469078675409696`, 
              0.6109045230406689}, {2.168114709963321, 0.795128352440462}}}], 
             
             Line[{{2.247364350287128, 1.1609942187816364`}, {
              2.2485090256678792`, 1.569808637053657}}], 
             
             Line[{{2.3848430665767952`, 0.8984405200321527}, {
              2.74814849977951, 0.6873318365070402}}], 
             
             Line[{{-2.1286526699935866`, 
              0.08418160300364269}, {-2.172559169209632, \
-0.32225997138870477`}}]}, 
            RGBColor[0.291989, 0.437977, 0.888609]], 
           Style[{
             
             Line[{{-3.395182632143982, 
              0.46047515769213704`}, {-3.1220190874069074`, 
              0.7621272173339871}}], 
             
             Line[{{-2.8507371557803225`, 
              0.8343284701193515}, {-2.467741663278932, 
              0.6624758237576709}}]}, 
            RGBColor[0.602953, 0.646767, 0.0900267]]}}, {
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-1.661546173829299, -2.152376920251319}, 0.2]}, 1], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-1.4507461555187522`, -1.1745769416225644`}, 0.2]}, 2], 
          Tooltip[{{
             RGBColor[0.292, 0.438, 0.889], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{-2.27674082740821, -0.610949262230222}, \
{-2.27674082740821, -0.3962046515324855}, {-2.2475904933738935`, \
-0.3962046515324855}, {-2.1347981355504366`, -0.5648068582725724}, \
{-2.1347981355504366`, -0.3962046515324855}, {-2.1075516240101537`, \
-0.3962046515324855}, {-2.1075516240101537`, -0.610949262230222}, \
{-2.1367024580416234`, -0.610949262230222}, {-2.2494948158650807`, \
-0.4421993896641949}, {-2.2494948158650807`, -0.610949262230222}}}]}}, 3], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-3.170746079224807, -0.7085769568813536}, 0.2]}, 4], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-3.673146286744338, -1.5731769095791075`}, 0.2]}, 5], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-4.673146286744338, -1.5703769217861387`}, 0.2]}, 6], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-5.170746079224807, -0.7029769812954161}, 0.2]}, 7], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-4.668346176881056, 0.1616230858432557}, 0.2]}, 8], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-3.668346176881057, 0.15882309805028694`}, 0.2]}, 9], 
          Tooltip[{{
             RGBColor[0.603, 0.647, 0.09], 
             
             FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
              1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
              1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxd1WlQU1cUB3AiyL0UUWRGWpIqZVEctQViKmoZjyBYhILbGJeqSEwMiFaW
2qGtS6O4INaKSHjEIi5gwJXGaGm1erC21TzAXVFKi4LQvCwvUtxZ+vqhZKYf
zoffzPvf++aec98LUKyZo3J1cXERCbVCqAFCRfq3T5BVUQyZmR3O7LGAqWQN
l5hF0fv7STvYCgvM83WRG9dQrPpxylk20QJBH9Rs0qdRHHRnRQEz0AJLyp5t
DVlGcbK7QSKt50Dr+n6+Xk4xLaKngt3LwbW903Z1fEgx+N7OGKmaA/e5gbs7
xlOs395eqorhQFWZXNnhT/FO8y+lTAAH49qGVqs9hP3OZsVLvTlY4j5Jr3aQ
fkfEGtfLHji9lZT9pfuVYMjD3C9VwznIbpvfqztDMGhCVTMbITw/xtCjKyfo
n18P0jkc2K9DZVcxQYlv0ybVZxzEHZ12Q/8NwZwv5ieqyjlgxUe8P95GcO0H
SZmqmxy0nXtRIttMcOO3nksZN0u/G+W5v/ZOdjrFb5hImmWBk4k++2VCvlOl
bVEeskBUZuwRmbB+/dPuNxnWAid6/BiZsH/lluUz2S4LjB097qpaeL8Ylyi7
8k0rFC4cHtRwluABVVGXcrwVHg9qe6W7RLAm9WoAG2uFhqWwy/g7QXNFJ6NU
WGHWzNBm8UCK0uFDF4XnWeEW+I/TvEuxZAMO7jllBb+hf3D1MygWBM34rfi2
FUb+nO4nWkSxK/LDy33PrDBmyNgRIqG/PilVqT2BNnBxvJWp3yDMA881ahfa
4Hlh55Su7RTDOzyH1elsYI+oGxRVKOSnqm72NNnA7PFDtpqheDjm8p3eYHu/
X8xNOcCudTr8jL2MabDD+ecvqsR7KPrN8h3FBPCguJXjq9lC0RDcKDV9woPH
qRebOnIoxr8sge5zPOS0V/poVlCcVT3XVPSMB1Hl9M7EJIqPyjelJQxxQH5a
2w3xBIqlmU22hCAHZAzJXCWTULxLyzPi33VAU1hCo66H9LvGVDVd1Oz0SrQu
jkKCwQWifaZAB1z94ozbx3qCFw6e501eDnDZ76/9dBdBo5Lfrn3Cw4YwdXTS
lwQz+i5I2NM8dLle+71jNUH12nf8whQ8iKs+j9csI6jPm1HEePMwn2tcnbSQ
oMHWci/MaAdJy2R10gKC1+FkcvdHdpjVGtUt3k3w24uFkeGRdhg44G1vSSFB
cQC/UnHMDn82pqRHlRJ8us6kVfbZwa0vM3jXSYKlWu2lsIk8zDnf8veDiwSn
Vyvs3Rk8hN5+Vau+L+R/inNb/jUPWadScmSvnX6jJGu/egTt92VxpsNrIsUF
V2ZvYbJ5MLHnckPiKEYfup3XDTxcW+fuF7WA4lqxv5dyEA+z74xtTRTu++nR
Oy6HCv38z9Hpze8t3+L0bfnii6HT7TDjas9ZnTBvN1s82sN97DDxu4NLZTMp
Hq2TVyjMNvB0Wx0siqFokqe3atEGZV3LImpHUZx6ofAVq7UBaxmh+fQ5wUtK
uqo33QbXEzYYQ64QjPVc3xwWZQOTIaPIKPTrUd6P6azEBnvyir0kWoJzol8W
m15b4bfI/PWadQSP31iwp7jOClemhjbr0gj2rnw6kt1thXtJOX+qlxAcOO9B
mTLOCu2Lax/KZhM8sW9Sdm+fBWytjxWSBIKeB/LHMMedrr0Q7y9Ncto9T7+T
cXCwqMD7eIOQj16cNl/FcHDYzbhUlkzQt+iN+0wsB+uTPZ7oVhGMywwX1XWa
YV53rWfTRoLjT7hXqwxmcI3ZyHQxwnzG7XisyjVDdX7kyMEGgve3Fdaq5Gag
oz0CkxoIvt7s47ECzPBIszXHaHM61XXaVM0w2u/yimPsA+F+TKi5G1gi5LWp
KK6dLZz/O8nyvn/XvzT+K/0qivg4pVV12gx7c+7RWg1F1vCkQPrSDAU1qQ+9
CijWbRusUMmF73XKvsOLDlBc80NFPnOag/ChuenqSooDmv829L5tgf//T/4B
89EkPw==
              "]]}}, 10], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-2.0847461707775414`, 0.49062317739599015`}, 0.2]}, 11], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-1.2173461539928732`, 0.9882229698764591}, 0.2]}, 12], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{-0.35274614407466043`, 0.48582306753270865`}, 0.2]}, 13], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{0.5146538536365212, 0.9834231651889587}, 0.2]}, 14], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{1.3792539207751928`, 0.4810229576694276}, 0.2]}, 15], 
          Tooltip[{{
             RGBColor[0.291989, 0.437977, 0.888609], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
              2.1622591115566334`, 0.8712507499768094}, {2.1622591115566334`, 
              1.0859953606745458`}, {2.19140944559095, 1.0859953606745458`}, {
              2.304201803414407, 0.9173931539344589}, {2.304201803414407, 
              1.0859953606745458`}, {2.33144831495469, 1.0859953606745458`}, {
              2.33144831495469, 0.8712507499768094}, {2.30229748092322, 
              0.8712507499768094}, {2.189505123099763, 1.0400006225428364`}, {
              2.189505123099763, 0.8712507499768094}}}]}, {
             RGBColor[0.292, 0.438, 0.889], 
             
             FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{2.467987537576793, 1.057458856478759}, {
              2.4265427735400777`, 1.057458856478759}, {2.4265427735400777`, 
              1.0160140924420442`}, {2.4091795390632815`, 
              1.0160140924420442`}, {2.4091795390632815`, 
              1.057458856478759}, {2.367736441683744, 1.057458856478759}, {
              2.367736441683744, 1.0748220909555553`}, {2.4091795390632815`, 
              1.0748220909555553`}, {2.4091795390632815`, 
              1.1162651883350925`}, {2.4265427735400777`, 
              1.1162651883350925`}, {2.4265427735400777`, 
              1.0748220909555553`}, {2.467987537576793, 
              1.0748220909555553`}}}]}}, 16], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{2.2496537010486306`, 1.9786230553256776`}, 0.2]}, 17], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{3.117053908568162, 2.476223152981927}, 0.2]}, 18], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{3.1114539329822244`, 0.47622315298192763`}, 0.2]}, 19], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{3.978853835325974, 0.9738229454623966}, 0.2]}, 20], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{4.843053969603319, 0.4714230431186466}, 0.2]}, 21], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{4.840654067259568, -0.5285769568813536}, 0.2]}, 22], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{3.9732538597400366`, -1.0261769019497131`}, 0.2]}, 23], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{3.1086539451892556`, -0.5237768470180724}, 0.2]}, 24], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{2.2410538475330055`, -1.0213769446743224`}, 0.2]}, 25], 
          Tooltip[{
            Opacity[0], 
            EdgeForm[None], 
            Disk[{1.3764537803943337`, -0.5189768897426819}, 0.2]}, 26]}}, 
        ImageSizeRaw -> 427.69296059034684`]}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[60]], 5, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Graphics], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[60]], 5, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Graphics], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 5, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   AbsoluteThickness[1.3], {
                    StyleBox[{
                    
                    LineBox[{{-2.4360554727704007`, -3.3761877885803937`}, \
{-3.302080876554839, -2.8761877885803933`}}], 
                    
                    LineBox[{{-3.302080876554839, -2.8761877885803933`}, \
{-3.7088175196306397`, -3.789733246222994}}], 
                    
                    LineBox[{{-3.302080876554839, -2.8761877885803933`}, \
{-2.7142956242623653`, -2.0671707942054462`}}], 
                    
                    LineBox[{{{-2.7142956242623653`, -2.0671707942054462`}, \
{-1.7142956242623657`, -2.0671707942054476`}}, {{-2.614295624262365, \
-2.1871707942054464`}, {-1.8142956242623658`, -2.1871707942054477`}}}], 
                    
                    LineBox[{{-1.7142956242623657`, -2.0671707942054476`}, \
{-1.2142956242623646`, -1.2011453904210097`}}], 
                    
                    LineBox[{{{-1.2142956242623646`, -1.2011453904210097`}, \
{-0.21429562426236465`, -1.2011453904210108`}}, {{-1.1142956242623647`, \
-1.3211453904210095`}, {-0.3142956242623648, -1.3211453904210106`}}}], 
                    
                    LineBox[{{-0.21429562426236465`, -1.2011453904210108`}, {
                    0.28570437573763635`, -0.3351199866365728}}], 
                    
                    LineBox[{{{0.28570437573763635`, -0.3351199866365728}, {
                    1.2857043757376363`, -0.33511998663657416`}}, {{
                    0.38570437573763616`, -0.45511998663657294`}, {
                    1.185704375737636, -0.45511998663657405`}}}], 
                    
                    LineBox[{{1.2857043757376363`, -0.33511998663657416`}, {
                    1.7857043757376372`, 0.5309054171478637}}], 
                    
                    LineBox[{{{1.7857043757376372`, 0.5309054171478637}, {
                    2.2036049210377113`, 0.574828534378736}}, {{
                    1.8726131496823466`, 0.6607008909188216}, {
                    2.240787600214007, 0.6993975849863114}}}], 
                    
                    LineBox[{{3.1758072244416375`, 0.19609672301279035`}, {
                    3.4493568774647656`, -0.10771094506188023`}}], 
                    
                    LineBox[{{3.4493568774647656`, -0.10771094506188023`}, {
                    4.427504478198571, 0.10020074575587666`}}], 
                    
                    LineBox[{{4.427504478198571, 0.10020074575587666`}, {
                    5.096635084557427, -0.6429440797215192}}], 
                    
                    LineBox[{{5.096635084557427, -0.6429440797215192}, {
                    6.0747826852912326`, -0.4350323889037627}}], 
                    
                    LineBox[{{6.0747826852912326`, -0.4350323889037627}, {
                    6.743913291650088, -1.178177214381159}}], 
                    
                    LineBox[{{6.743913291650088, -1.178177214381159}, {
                    7.722060892383894, -0.9702655235634028}}], 
                    
                    LineBox[{{{7.664997501406185, -0.9517245039009059}, {
                    7.790750718323384, -0.5646958984480135}}, {{
                    7.779124283361603, -0.9888065432258997}, {
                    7.904877500278802, -0.6017779377730073}}}], 
                    
                    LineBox[{{7.722060892383894, -0.9702655235634028}, {
                    7.994360888238762, -1.2726853067477597`}}], 
                    
                    LineBox[{{2.903140847246556, 1.2137014962205803`}, {
                    2.9881379619236696`, 1.6135814811493199`}}], 
                    
                    LineBox[{{{2.9881379619236696`, 1.6135814811493199`}, {
                    3.8541633657081107`, 2.113581481149318}}, {{
                    3.014740502302114, 1.7675045296034524`}, {
                    3.7075608253296672`, 2.167504529603451}}}], 
                    
                    LineBox[{{3.8541633657081107`, 2.113581481149318}, {
                    3.8541633657081125`, 3.113581481149318}}], 
                    
                    LineBox[{{{3.8541633657081125`, 3.113581481149318}, {
                    2.988137961923675, 3.6135814811493203`}}, {{
                    3.7075608253296686`, 3.0596584326951857`}, {
                    3.0147405023021188`, 3.4596584326951874`}}}], 
                    
                    LineBox[{{2.988137961923675, 3.6135814811493203`}, {
                    2.988137961923676, 4.020564106149321}}], 
                    
                    LineBox[{{2.988137961923675, 3.6135814811493203`}, {
                    2.1221125581392357`, 3.113581481149322}}], 
                    
                    LineBox[{{{2.1221125581392357`, 3.113581481149322}, {
                    2.122112558139233, 2.113581481149322}}, {{
                    2.2421125581392354`, 3.0135814811493216`}, {
                    2.2421125581392336`, 2.2135814811493217`}}}], 
                    
                    LineBox[{{2.122112558139233, 2.113581481149322}, {
                    1.378967732661838, 1.4444508747904645`}}], 
                    
                    LineBox[{{1.378967732661838, 1.4444508747904645`}, {
                    0.7911824803693664, 2.253467869165412}}], 
                    
                    LineBox[{{1.378967732661838, 1.4444508747904645`}, {
                    0.5129423288774005, 0.9444508747904672}}], 
                    
                    LineBox[{{-2.7142956242623653`, -2.0671707942054462`}, \
{-2.954590194991486, -1.7364336914665022`}}], 
                    
                    LineBox[{{-3.1193942140855, -0.6959020662871286}, \
{-2.9930638821798894`, -0.30709728353534516`}}], 
                    
                    LineBox[{{-2.9930638821798894`, -0.30709728353534516`}, \
{-2.0149162814460837`, -0.0991855927175867}}], 
                    
                    LineBox[{{-2.0149162814460837`, -0.0991855927175867}, \
{-1.705899287071136, 0.8518709235775667}}], 
                    
                    LineBox[{{-1.705899287071136, 
                    0.8518709235775667}, {-0.7277516863373298, 
                    1.0597826143953253`}}], 
                    
                    LineBox[{{-0.7277516863373298, 
                    1.0597826143953253`}, {-0.4187346919623814, 
                    2.0108391306904787`}}], 
                    
                    LineBox[{{-0.4187346919623814, 
                    2.0108391306904787`}, {-1.0878652983212387`, 
                    2.7539839561678736`}}], 
                    
                    LineBox[{{{-1.075390596872173, 
                    2.6952951001238454`}, {-1.4775629807448376`, 
                    2.609810721009236}}, {{-1.1003399997703043`, 
                    2.812672812211902}, {-1.5025123836429688`, 
                    2.727188433097292}}}], 
                    
                    LineBox[{{-1.0878652983212387`, 
                    2.7539839561678736`}, {-0.9621120814040394, 
                    3.141012561620766}}], 
                    
                    LineBox[{{-3.8535011066888316`, -1.4373210935023146`}, \
{-4.253137392849991, -1.567170794205445}}], 
                    
                    LineBox[{{{-4.253137392849991, -1.567170794205445}, \
{-5.119162796634431, -1.0671707942054443`}}, {{-4.399739933228434, \
-1.6210938426595776`}, {-5.092560256255987, -1.221093842659577}}}], 
                    
                    LineBox[{{-5.119162796634431, -1.0671707942054443`}, \
{-5.985188200418869, -1.567170794205444}}], 
                    
                    LineBox[{{{-5.985188200418869, -1.567170794205444}, \
{-5.98518820041887, -2.567170794205444}}, {{-5.865188200418869, \
-1.6671707942054441`}, {-5.86518820041887, -2.467170794205444}}}], 
                    
                    LineBox[{{-5.98518820041887, -2.567170794205444}, \
{-6.348713889012137, -2.7770524483721104`}}], 
                    
                    LineBox[{{-5.98518820041887, -2.567170794205444}, \
{-5.119162796634431, -3.0671707942054445`}}], 
                    
                    LineBox[{{{-5.119162796634431, -3.0671707942054445`}, \
{-4.253137392849992, -2.5671707942054445`}}, {{-5.092560256255986, \
-2.913247745751312}, {-4.399739933228435, -2.5132477457513116`}}}], 
                    
                    LineBox[{{-4.253137392849992, -2.5671707942054445`}, \
{-3.302080876554839, -2.8761877885803933`}}], 
                    
                    LineBox[{{1.378967732661838, 1.4444508747904645`}, {
                    1.7857043757376372`, 0.5309054171478637}}], 
                    
                    LineBox[{{-4.253137392849992, -2.5671707942054445`}, \
{-4.253137392849991, -1.567170794205445}}], 
                    
                    LineBox[{{2.122112558139233, 2.113581481149322}, {
                    2.9881379619236696`, 1.6135814811493199`}}]}, {
                    RGBColor[0.4, 0.4, 0.4]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    LineBox[{{{2.2036049210377113`, 0.574828534378736}, {
                    2.6215054663377857`, 0.6187516516096085}}, {{
                    2.240787600214007, 0.6993975849863114}, {
                    2.6089620507456677`, 0.7380942790538013}}}], 
                    
                    LineBox[{{2.90225757141851, 0.499904391087461}, {
                    3.1758072244416375`, 0.19609672301279035`}}], 
                    
                    LineBox[{{2.818143732569443, 0.8138215112918408}, {
                    2.903140847246556, 1.2137014962205803`}}], 
                    
                    LineBox[{{-2.954590194991486, -1.7364336914665022`}, \
{-3.194884765720607, -1.4056965887275579`}}], 
                    
                    LineBox[{{-3.2457245459911115`, -1.084706849038912}, \
{-3.1193942140855, -0.6959020662871286}}], 
                    
                    LineBox[{{-3.4538648205276723`, -1.3074713927991841`}, \
{-3.8535011066888316`, -1.4373210935023146`}}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    LineBox[{{{7.790750718323384, -0.5646958984480135}, {
                    7.916503935240584, -0.17766729299512093`}}, {{
                    7.904877500278802, -0.6017779377730073}, {
                    8.030630717196003, -0.21474933232011476`}}}], 
                    LineBox[{{7.994360888238762, -1.2726853067477597`}, {
                    8.26666088409363, -1.5751050899321164`}}], 
                    
                    LineBox[{{{3.4795318077570103`, 4.673581481149319}, {
                    3.8104522702570107`, 4.673581481149318}}, {{
                    3.4795318077570103`, 4.55358148114932}, {
                    3.8104522702570107`, 4.553581481149319}}}], 
                    
                    LineBox[{{{2.496744116090343, 4.553581481149321}, {
                    2.1658236535903423`, 4.553581481149321}}, {{
                    2.496744116090343, 4.67358148114932}, {
                    2.1658236535903423`, 4.67358148114932}}}], 
                    
                    LineBox[{{2.988137961923677, 5.113544814482654}, {
                    2.988137961923677, 5.427473397815987}}], 
                    
                    LineBox[{{{-1.4775629807448376`, 
                    2.609810721009236}, {-1.8797353646175021`, 
                    2.524326341894626}}, {{-1.5025123836429688`, 
                    2.727188433097292}, {-1.9046847675156333`, 
                    2.641704053982682}}}], 
                    
                    LineBox[{{-0.9621120814040394, 
                    3.141012561620766}, {-0.8363588644868402, 
                    3.5280411670736584`}}], 
                    
                    LineBox[{{{-7.153156795097042, -2.66418984657803}, \
{-7.310121086763708, -2.392319718437303}}, {{-7.0492337466429085`, \
-2.60418984657803}, {-7.206198038309575, -2.3323197184373035`}}}], 
                    
                    LineBox[{{{-6.549270413309575, -3.4701517418328582`}, \
{-6.392306121642909, -3.742021869973585}}, {{-6.653193461763708, \
-3.530151741832858}, {-6.496229170097042, -3.8020218699735846`}}}], 
                    
                    LineBox[{{-7.27677315795831, -3.3128677171221104`}, \
{-7.563358685115405, -3.4783279483721103`}}], 
                    
                    LineBox[{{8.564994331731224, -1.6764674164522602`}, {
                    8.718116520122202, -1.6439202905724852`}}], 
                    
                    LineBox[{{-7.87111933086009, -3.4783279483721103`}, \
{-8.006689570903792, -3.4000564337887766`}}]}, {
                    RGBColor[0.800498, 0.201504, 0.192061]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    LineBox[{{2.988137961923676, 4.020564106149321}, {
                    2.9881379619236768`, 4.42754673114932}}], 
                    
                    LineBox[{{{3.1486113452570104`, 4.67358148114932}, {
                    3.4795318077570103`, 4.673581481149319}}, {{
                    3.1486113452570104`, 4.553581481149321}, {
                    3.4795318077570103`, 4.55358148114932}}}], 
                    
                    LineBox[{{{2.827664578590344, 4.553581481149321}, {
                    2.496744116090343, 4.553581481149321}}, {{
                    2.827664578590344, 4.67358148114932}, {2.496744116090343, 
                    4.67358148114932}}}], 
                    
                    LineBox[{{2.988137961923677, 4.7996162311493205`}, {
                    2.988137961923677, 5.113544814482654}}], 
                    
                    LineBox[{{-6.348713889012137, -2.7770524483721104`}, \
{-6.712239577605403, -2.9869341025387772`}}], 
                    
                    LineBox[{{{-6.9961925034303745`, -2.9360599747187566`}, \
{-7.153156795097042, -2.66418984657803}}, {{-6.892269454976241, \
-2.876059974718757}, {-7.0492337466429085`, -2.60418984657803}}}], 
                    
                    LineBox[{{{-6.706234704976242, -3.1982816136921315`}, \
{-6.549270413309575, -3.4701517418328582`}}, {{-6.810157753430375, \
-3.258281613692131}, {-6.653193461763708, -3.530151741832858}}}], 
                    
                    LineBox[{{-6.990187630801214, -3.1474074858721104`}, \
{-7.27677315795831, -3.3128677171221104`}}]}, {
                    RGBColor[0.602953, 0.646767, 0.0900267]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    LineBox[{{8.718116520122202, -1.6439202905724852`}, {
                    8.871238708513179, -1.61137316469271}}], 
                    
                    LineBox[{{-8.006689570903792, -3.4000564337887766`}, \
{-8.142259810947495, -3.3217849192054434`}}]}, {
                    RGBColor[0.433333, 0.466667, 0.466667]}, StripOnInput -> 
                    False]}}, {
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-2.4360554727704007`, -3.3761877885803937`}, 
                    0.2]}, "1"], Annotation[#, 1, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-3.302080876554839, -2.8761877885803933`}, 0.2]},
                     "2"], Annotation[#, 2, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-3.7088175196306397`, -3.789733246222994}, 0.2]},
                     "3"], Annotation[#, 3, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-2.7142956242623653`, -2.0671707942054462`}, 
                    0.2]}, "4"], Annotation[#, 4, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-1.7142956242623657`, -2.0671707942054476`}, 
                    0.2]}, "5"], Annotation[#, 5, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-1.2142956242623646`, -1.2011453904210097`}, 
                    0.2]}, "6"], Annotation[#, 6, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-0.21429562426236465`, -1.2011453904210108`}, 
                    0.2]}, "7"], Annotation[#, 7, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{0.28570437573763635`, -0.3351199866365728}, 
                    0.2]}, "8"], Annotation[#, 8, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{1.2857043757376363`, -0.33511998663657416`}, 
                    0.2]}, "9"], Annotation[#, 9, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{1.7857043757376372`, 0.5309054171478637}, 0.2]}, 
                    "10"], Annotation[#, 10, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{2.6956311877725767`, 0.528060963748848}, {
                    2.6956311877725767`, 0.7428067970821812}, {
                    2.724781687772577, 0.7428067970821812}, {
                    2.8375746877725767`, 0.5742036304155147}, {
                    2.8375746877725767`, 0.7428067970821812}, {
                    2.8648213544392434`, 0.7428067970821812}, {
                    2.8648213544392434`, 0.528060963748848}, {
                    2.835670354439243, 0.528060963748848}, {
                    2.7228773544392433`, 0.6968117970821813}, {
                    2.7228773544392433`, 0.528060963748848}}}]}, {
                    RGBColor[0.292, 0.438, 0.889], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{3.001361354439243, 
                    0.7142701304155147}, {2.959916354439243, 
                    0.7142701304155147}, {2.959916354439243, 
                    0.6728251304155146}, {2.94255302110591, 
                    0.6728251304155146}, {2.94255302110591, 
                    0.7142701304155147}, {2.9011096877725766`, 
                    0.7142701304155147}, {2.9011096877725766`, 
                    0.731633463748848}, {2.94255302110591, 
                    0.731633463748848}, {2.94255302110591, 
                    0.7730767970821812}, {2.959916354439243, 
                    0.7730767970821812}, {2.959916354439243, 
                    0.731633463748848}, {3.001361354439243, 
                    0.731633463748848}}}]}}, "11"], 
                    Annotation[#, 11, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{3.4493568774647656`, -0.10771094506188023`}, 
                    0.2]}, "12"], Annotation[#, 12, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{4.427504478198571, 0.10020074575587666`}, 0.2]}, 
                    "13"], Annotation[#, 13, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{5.096635084557427, -0.6429440797215192}, 0.2]}, 
                    "14"], Annotation[#, 14, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{6.0747826852912326`, -0.4350323889037627}, 0.2]},
                     "15"], Annotation[#, 15, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{6.743913291650088, -1.178177214381159}, 0.2]}, 
                    "16"], Annotation[#, 16, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{7.722060892383894, -0.9702655235634028}, 0.2]}, 
                    "17"], Annotation[#, 17, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.801, 0.202, 0.192], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQHaLYX7hmm7zDC7sFYsUzpu2H8S/IPNgTcb7bPuea
jHPlAaC8CdOcNNul9qZfgq4IXZF3YNGZu3z9hPX2+xN3FKx5Lu8wTXBO5J+P
W+zPqG+bW8Og4KCXZ71sU9t2+wNs5+f/4UfwN3CUsShLIfidJ/xyPZUVHKxe
inYkBWyzf/EvaV++toLDJxmb+K7Hm+07VVgNpxkrOKwKSDLbVLbR/tlthY4z
lgoOHX5vLOO01tgf2rzot5CdgsOJPRd9JtUutp/XrZIf6aTgwBGWt79n4VT7
nvKnK2pcFBwYJny/YOceD+dziNhpu3FP2Q/jRxRrNcrrLN2f9l5rpg1QP8++
Wzt3q67ffzt30cY9tgoOuUeDnV1+bt7fG6s7yQZo/xXtXStXxe/Y/25j/c47
RgoO0d11v8u27N5f4Xtg+xwtBQfmJwssVn7fu7/Rc9H8GCUFh7RppxXyZQ/s
l3vXYVEmCXS/gfxfq3UH9l+YLZrzkh/B31Jz9VI/K4LfE5Mwf/4PeYe2j4kX
rPgO7O9mWHU76IW8g/L1RTvL5+zdfyrkCA/bDXkH6dtr2cpldu+fzxlQtua0
vMPHlac/3N60fb/HeVlet8PyDkeMLzivjN+8/9OU14vv75J3MKheqftWYh08
vt80TXzT+WnJfvT0AABf7wDY
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvd1brmjNFXmHF3M+K0dzT98P4wv8nf5s99EV+38J
zyg8c1veYefX9+vuzNq4v2FJdwHPK3kHr14L7XtZW/ezmdbn+/yQd9hjsvb2
Haud+3OvvzQVY1VwaG64OPOu0u799w1iLK7xI/hz/p/PPCmF4If7ey88o6zg
sKfAJljQbOf+/ob8E/e1FBwEEu1+lcZs3d/OePjXJ0OgekeR3LtNG/encD5e
X2Oq4OCTXfvzvcQKOP/Gd9Mk56eT4XyGhao1J1/E77cJ7Ir7aazgEKC+f+lK
p2779flHP38yAMqHnd124dcse8U+hs43ugoOPX5vLOO0ltgvOz/zfL2mgoNL
dsd6wfCV9jJzsxesAbrvSWvE1E/Ma+03HVqafVNWwUHqvc9x34gN9npvHl72
F1dwiFr25Pdk5432Gwo7LvMLIPj3Z+axH2ZF8LkczuSd+SnvUJJ/8HrR33X2
h5bb3P0EDE+PcocWh1fL7Xfvr3WQvCPvoFC/34Dv+gJ7WHwEzJkjwibTYo8e
XwBiqtlg
                    "]}]}}, "18"], Annotation[#, 18, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.801, 0.202, 0.192], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQLWVUw7F9soLD4y6xVVdKf++H8dd5Oulcefxr/zIe
58K5MxQcHH7cXtFe+Gt/l/Q9y6xFCg4dCvUJb+V+7fe/JMBhvkbB4ZyHkkTw
mZ/7bU5m5d7doeDAGhyxmX3xz/0GK5rzY08g+AqrtK40X0Lwf2Yy2666reAQ
stpqa862n/sjFoj3XXis4CDhccLc6i5Q/uhOhu+vFRzuPgndxc7ya39Y7dVw
3U8KDsXL37yWt/q13yg0/HTxNwUHxppQ77b6X/v5dG/a7fql4DAhYN+qN0d+
7f8jMavi7h8FB5Yz7HwLhX/D+RZMmd/mZyP4TbFHb14+8nv/tQn3M+YC9d+4
37V7gcif/d784Y2yQPPt3D4qskf/2f/338PEuR8VHJauCe/IXfhnf1ywSact
0H1zPxX77rr2Z/+LdyXtfx8pOGhIuBW+/fVn/8dXYfl7byk4bKm5elBB/u/+
vn5bjusXFRx+vo+3tTL8u9/B9pS11wkEX0Wua9GHvQj+tvMp8zdsgYaHLJC/
sNO2CxjeUeZhkVZf/+y/elrsWvISBYeZz9X8rM7+2W+/7A6X+TwFh/YjJ+Ys
mPZnv0in8zXmWQoOKrw/C3MD/+x/mb1q4YWpCg4HQzXdrXj+wOP7/1QFXfbD
iPiHpQcAoogWUA==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQ7X38MMf2RQoO0Te8vRaU/94P4184+WHPgoe/9+eu
buBwX6bg4My5eoWC6Z/9G4p/saevVXDYMyn/gELRn/2frUvY27coOBjfLVut
sP7P/rsV81jL9yo4fFCM3L7g7J/9/pcEOMxPIPg8C1sstS4j+Mc//C/QvaPg
8PnC+0+X1/3Z/19RZYbDYwWHn+/jba0K/+z/vqj8VPArBQcGv94tC4z/7L+y
anr93bcKDk5f22Ot7vyG848/dHnNno3gBwhLC+Qq/96/5pOdXtQbBYeZ3QVd
b5/82i8vWHU4+KWCw4QrD2a1r/+1f6L+1gjfZwoOxcvfvJav+rVfrNBv/oOH
Cg59x+wDdgX82t9jp1DAC3TfDldBz2DjX/uVUqKsra4pOHyzcmd8J/pr/7ze
aYs3nFdwaNr/d64l+6/9CsK2iwtOIPj+1srXlfch+KUHpdjdtyo45Pz769au
/Gt/4Ncgu1vA8NRlm3VTIebXft/Gz/m5wPB+z2uWs2vKL3h8rL8w6aLVZwQf
Fl8AaLbsgQ==
                    "]}]}}, "19"], Annotation[#, 19, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{2.9881379619236696`, 1.6135814811493199`}, 0.2]},
                     "20"], Annotation[#, 20, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{3.8541633657081107`, 2.113581481149318}, 0.2]}, 
                    "21"], Annotation[#, 21, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{3.8541633657081125`, 3.113581481149318}, 0.2]}, 
                    "22"], Annotation[#, 22, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{2.988137961923675, 3.6135814811493203`}, 0.2]}, 
                    "23"], Annotation[#, 23, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.603, 0.647, 0.09], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxdlXtMk1cYxlsuOwd0qAczNVy0iFoEIQxawKq8RRIRY0VEo9Qb9wrITT5U
2NAWUAijOEAmtOAQdQWn0QFORTEF5S6KCsJQ54V4YWOCoziE6k5GQ5P9cf74
5cv7nsv7PM/HCY71DzNksVhsusLpMqCrN/qFq8odQdp1Uy17PYF/NA+Py2MR
tLTiPZINBCo6V9hzExCoq2MiJd4Ebhc0sngHENj+xBgECwi0nDRn1UgRDJdZ
OW92JXCncvdn12wEdcrbu3yWEfA0esDWFCGItdzvfHwJgfk/RyLNeQTenQYK
wUICqdXloyNqBFv5u8aeWxNIrtjyIbEHQf3MRY41lgTMs9NMmGE9ix76CVQI
T3GP8PIjoQWGs8P9BWJa7+S6uVnogCG2KjRYxSGAG/3vCldicGf6nTS2BFz2
fmv3Zi2G1qDRohQ7AjWSPEOeP4YQu6jjAifKt3yapIEY6mCGcpzeh58n81Tt
xGCy/tO4UKDnxsHCNjMvPc+1+oan8SGwZWDAQ0XrB2+dyx8XESgsrnVU0f6N
6ekTnADdd18Mpd47wny20fO8/MOQoecznt1drNhB4LytVbmZPYax938pLYII
uPm+axTOx/DWJj5EEkLg0utuO66xrn84AQvtgzb1YwTGvaXLuqIIZJDOveJq
BH1aw7MX4gicMUs7bXYCwdiC1k9ChsDB4bexfUcRKKuMWLkHCah/DQjpo/Nd
6V562ewQgZyPuaa8EAQ3A75+/TyDwOPkp+5vtiKwMVF/j+UE7McdIhQiBOwf
k9odCwlsEgR8SlyLgLH3HRKd1PN4TnCOpELP22QHnGXVBBaax7SqN1BmLBe/
qKN6qi8LFm9HMBEuispsJhCe0PVxRILg5NbDFx3vE4i5Z5AgTkFgtiq/X9pL
510SrZDnI1gz5yiSPSWwOqr7lvocAulQ8lLZSwJJXptcVY0Iim5atLNfERhK
S38g7NdzfN+G+D4jPMUus5rCFBwMNpIrXUEvdfNfjoF3dfgNh/a/MsfOU7IJ
g4+p/cTzHgLPqr4olodjyLArz+Z2Ur31lBpp9mGQjB1eomkkcEgwohBLMdx9
5eZSf51A7gnvFHkmBrlU4Ma7RCBiqZdMnoVh6evQctFpAg/5e3rUGzGEm3us
4p0isE4a16AWYbC2cd1jcZGAYElQqMIbQ2pJ8S+Ka/T9sh6fFrlgSPa9trxG
TSBr3VgH2wbD/g+99R3NOv9gDKN33h4Rt+ve4xWa4tUzFrCZBj3PT80901GB
4LC2m2fTQvu985pWQ/36Hedz1YV6An/vHo1TZCGwDGGdEtD7VMy7Vy6nfm+b
jr5iqvVsteLPQ+Jzen6fbDKDKad5UmR9X0j1djA0YaNGqfNDHgLVjcSIvh/o
flbWe/tKEGx39RtU51G9W84Os6hFwAcveWYOgQX8CQfJAIJLDfG/OWbqzjcP
w7I1ZYu7ZAQiOdF8Lp3XxL7KJG6qTg/rMCgcqgO5yQSeGMXtFIdh4OS2fxAm
Ergf2WvsdQBD3sKkiOZo6p8yK8yk07zw9c+vpf4KfRRkqjqG4Uv1jtYLgXS/
92nZ6kIMbLdQrdBPz9MnCtwYbz0Pfn7Bqnen+oBeTzNav8vaurCW5l/RXH6m
SoYn85Lm3dqaZ0NCBgP3WUkInqebXzCGJyf2F47P1PnNB0/m4zSqr8qGUx1O
1P9XdxakGOv0b45BqxUoFQYEAjVuHtwRNMX/+aldz2U5Ta1s6o/YjCyWjNYP
ba6ItziGIKDAtkVE+99IdTDgMWgyb2bpvu9G0BVgwO+i5zuiDM7v8EOT+y8i
UCJLbpMKab7HDGg5zgR+7z/GYjwQiCvrmkSrCPz/f/IvhjiY8w==
                    "]]}}, "24"], Annotation[#, 24, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.801, 0.202, 0.192], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQ/Sbx+/90UX6HApe9xxMLhRxg/L0hRs8fThVykDkj
tJhRk99B8iU3R+kmIYf17PVHTQL4HdjllWdJHxdyOPTI8196Ob/D1xArnUO3
hRxK9m2czLiK3yHjUg6r6DMhBxcr0TmMLxB85oUR0305BOD8LQpcmbOkBBxC
bL4csX4o5FDca8T9XEvAQflqQErHdSGHrTfKPhhbCzh8yl3LfPWskEO++7p5
C9wFHHz2un/3OyDkoP59Y6tugICDRkdu/Nd1Qg73l23N2RUh4MAaPPn47LlC
DrvrzB8wxALlvxxY964TwZ+9bMWXd8UI/on+i78Xxgo55OUdOtAA1G+sn3B4
naeQQ0T2xo8N/gIOM6ce0xS1EHLY63V8U4ObgAPDH50J1WpCDnWfsxkPWgo4
NL56GqchKeQwSevtXwdNAQf5xI9TpQWEHJYobTx7QELA4U/72YN87ED3Zdf9
/8wm4KD9+lVSB5OQQ3Of/tktz/nhfFEh/Qy/fQh+zI2Z0X4z+SHhAdQfo6B7
ZUsFv0NQ5NvoDkEhh1snEs2kI/gdnHR3xnVIA80zquTMsAfGzzaB03qaQg7X
9oqYz9bjd3iw+MjUaishB03PDSnnZPkddkysSDjhjYjvlQd/qYnGIfiw9AAA
G9fdig==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvWmbKGNGIL+D0Mf1998VCDnA+Fu3sB3OCxNysHDn
ZFgRz+9wQ0XiRJ+jkINLxoe/6jX8DlVM6of8jIQcAjqv/14+g9/hjn7qcT5l
IYdfNQ1f0vfwO6ydl3MkT1rI4dAjz3/pzxH82308SbM4BeD8QD3miwukBRze
fGr7qgjUf3CCt/xxTQEH7devkjqA5m+c9Kn5rbmAw8rJ8kffAe3PXmT0jsFe
wOHGywdRJ8IR/O3rCr+LlCD4oUo26363CjlIGzV6/7IWcHA6sqx/9lQhB4b8
76VvTQUcWDd1cX9dJOTwdHXuggf6Ag4+e92/+20Qcnivt0CXXV3AofWrUdyK
XUD3nnQ+nwB03+6p/+SZDgk5sIvuSN3FL+CQLfGxMPqkkMP/dAOz5UwCDh7l
h7s4zgo5sD77leX3gh/OP9Q22Up6P4IfMb/w1/LZ/A596c0KX48KOZzKC7r+
pZbfYW7qnd3ntgs57Jp3Za5jAjC8kk3DV6xExMdfo3u2HJMQfFh8AQCqnbv2

                    "]}]}}, "25"], Annotation[#, 25, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.801, 0.202, 0.192], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQfenwu//ntf7ZF7nsPZ5YKOQA4+8PMXr+cKqQg/EM
VTfmoH/20i+5OUo3CTlE8P/rylzwz55TXnmW9HEhh/qjk/+cf/fP/nuIlc6h
20IOj2qS1ZlD/ttnXcphFX0m5NBUomXBfAHBZ3LaqDdbgMEBxk9xFLlkYsrg
EGbz5Yj1Q6B+qVSxc6EMDqpXA1I6rgs5pG18+yC9jMHhS+5a5qtnhRxu98XY
OvYzOPjtdf/ud0DIwftdMnf0AgYHrY7c+K/rhBx2+2bfLNnI4MAePPn47LlC
DsV/8w4w7gLKfzmw7l0ngj932Yov74oR/FP9F38vjBVyuHGnpZERqN9UP+Hw
Ok8hhzXXkh4zzmdwmD31mKaohZBD+dS+VMZeBgemPzoTqtWEHH4+u87UVMzg
0PzqaZyGpJCDYuit341BDA6KiR+nSgsIObi6Js1uNGRw+Nd+9iAfO9B91//8
e87L4KD7+lVSB5OQA4Ns/KzM8//tYXwVlbgLc2oQ/M0bjLfPMfpvDw4PoP6N
DlErMj/+sw+JfBvdISjksG7i4RyzDf/sXXR3xnVIA81L/SR0oQ4YP9sETutp
Cjksq9bMM4v9Z/9o8ZGp1VZCDj6TEk7Osf5nv2tiRcIJb0R8rz74S000DsGH
pQcAYHDz1g==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQHZ+rzXRh0T97kY/r778rEHKA8bdvYTucFybkkN0n
xBCw/5/9LRWJE32OQg7NFx789v/xz76GSf2Qn5GQw2yh9d/9Df/b39NPPc6n
LOTw7ifDy/MV/+3Xz8s5kict5FB/dPKf8+cQ/C2ykkdMhBkcYPz5MWyLHM0Z
HN59avuqCNRfpzjdri+YwUH39aukDqD58apP2W/nMzisnix/9B3Q/isuqXcY
6xgcbr18EHUiHMHfua7wu0gJgh+uZLPud6uQg0kK0/Qv5QwOLkeW9c+eKuTw
7+6717eyGRzYN3Vxf10k5HA8/LbDwXgGB7+97t/9Ngg53I51iObzY3Bo/2oU
t2KXkMPmye3zDpoxOOyd+k+e6ZCQA5dWwekSeQaHXImPhdEnhRx+nU/I8WNl
cPAqP9zFcVbIgeXM16tzLvy3h/HreNVLzeoQ/FV2j7/4m/+3n5DerPD1qJBD
790l617+/mc/P/XO7nPbhRzybFdaNx/4Z78+2TR8xUpEfPw3umfLMQnBh8UX
AJDwy2A=
                    "]}]}}, "26"], Annotation[#, 26, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.800498, 0.201504, 0.192061], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQ/Sbx+/90UXaHIpe9xxMLxRxg/P0hRs8fThVzkDkj
tJhRk91B6iU3R+kmMYf17PVHTQLYHTjllWdJHxdzOPTI8196ObvD9xArnUO3
xRxK9m2czLiK3SHzUg6r6DMxBxcr0TmMLxB8VqeNerMFOOD8dEeRSyamHA6h
Nl+OWD8Uc3gqlSp2LpTDQeVqQErHdTGHzI1vH6SXcTh8zl3LfPWsmMO9vhhb
x34OB7+97t/9Dog5+L1L5o5ewOGg1ZEb/3WdmMM+3+ybJRs5HNiDJx+fPVfM
oexv3gHGXUD5LwfWvetE8OcuW/HlXTGCf6r/4u+FsWIOt++0NDIC9ZvoJxxe
5wn077Wkx4zzORxmTz2mKWoh5lA1tS+VsZfDgfGPzoRqNTGHP8+uMzUVczg0
v3oapyEp5qASeut3YxCHg0Lix6nSAmIOHq5JsxsNORz+tp89yMcOdN/1P/+e
83I46Lx+ldTBJObQ3Kd/dstzdjhfVEg/w28fgh9zY2a030x2SHgA9cco6F7Z
UsHuEBL5NrpDUMzh1olEM+kIdgcX3Z1xHdJA84wqOTPsgfGzTeC0nqaYw7W9
Iuaz9dgdHi0+MrXaSsxB03NDyjlZdoddEysSTngj4nv1wV9qonEIPiw9AADE
Od/d
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvWmbKGNGILuDyMf1998ViDnA+Nu2sB3OCxNzsHDn
ZFgRz+5wS0XiRJ+jmINLxoe/6jXsDtVM6of8jMQcAjqv/14+g93hnn7qcT5l
MYdfNQ1f0vewO6ybl3MkT1rM4dAjz3/pzxH87bKSR0yEOeD8RTFsixzNORze
fWr7qgjU36g43a4vmMNB5/WrpA6g+UmqT9lv53M4rJosf/Qd0P7rLql3GOs4
HG69fBB1IhzB37mu8LtICYIfpmSz7nermIN5CtP0L+UcDi5HlvXPnirmwHjv
3etb2RwO7Ju6uL8uEnM4FX7b4WA8h4PfXvfvfhvEHO7FOkTz+XE4tH81ilux
S8xh2+T2eQfNOBz2TP0nz3RIzIFXq+B0iTyHQ67Ex8Lok2IOf88n5Pixcjh4
lR/u4jgr5sD67FeW3wt2OP9Q22Qr6f0IfsT8wl/LZ7M79Kc3K3w9CrQ/L+j6
l1p2h/mpd3af2y7msGvelbmOCewO65NNw1esRMTHf6N7thyTEHxYfAEAvhK8
5Q==
                    "]}]}, {
                    RGBColor[0.801, 0.202, 0.192], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    3.2162303202570106`, 5.69255123114932}, {
                    3.1159786535903438`, 5.69255123114932}, {
                    3.1159786535903438`, 5.709914564482654}, {
                    3.2162303202570106`, 5.709914564482654}}}]}}, "27"], 
                    Annotation[#, 27, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{2.1221125581392357`, 3.113581481149322}, 0.2]}, 
                    "28"], Annotation[#, 28, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{2.122112558139233, 2.113581481149322}, 0.2]}, 
                    "29"], Annotation[#, 29, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{1.378967732661838, 1.4444508747904645`}, 0.2]}, 
                    "30"], Annotation[#, 30, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{0.7911824803693664, 2.253467869165412}, 0.2]}, 
                    "31"], Annotation[#, 31, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{0.5129423288774005, 0.9444508747904672}, 0.2]}, 
                    "32"], Annotation[#, 32, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.292, 0.438, 0.889], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-3.386675959888171, -1.365526716497165}, \
{-3.386675959888171, -1.1507808831638315`}, {-3.357525459888171, \
-1.1507808831638315`}, {-3.244732459888171, -1.3193840498304983`}, \
{-3.244732459888171, -1.1507808831638315`}, {-3.2174857932215044`, \
-1.1507808831638315`}, {-3.2174857932215044`, -1.365526716497165}, \
{-3.2466367932215046`, -1.365526716497165}, {-3.3594297932215045`, \
-1.1967758831638315`}, {-3.3594297932215045`, -1.365526716497165}}}]}}, "33"],
                     Annotation[#, 33, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-2.9930638821798894`, -0.30709728353534516`}, 
                    0.2]}, "34"], Annotation[#, 34, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-2.0149162814460837`, -0.0991855927175867}, 
                    0.2]}, "35"], Annotation[#, 35, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-1.705899287071136, 0.8518709235775667}, 0.2]}, 
                    "36"], Annotation[#, 36, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-0.7277516863373298, 1.0597826143953253`}, 0.2]},
                     "37"], Annotation[#, 37, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-0.4187346919623814, 2.0108391306904787`}, 0.2]},
                     "38"], Annotation[#, 38, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-1.0878652983212387`, 2.7539839561678736`}, 
                    0.2]}, "39"], Annotation[#, 39, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.801, 0.202, 0.192], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQPdF+wtK6SMYDh+xeeTZGsDjA+DHxVzoaF7I4JF4t
YXrqynhAuKP91PJbLA7nZnI82CjHeODD563vvjCzOuzeZ7u87jvDgTPxT4Sc
dFkdOB9fFXx6hOHAxijPo88dWR0s04s4n7Yh+BXx18q84xB8sYTiyxstGQ50
6UW4mFqwOsxoU+qXkGQ4oJ4g2HxOhdVB44Fx598P//cfnXjqYLogq4OdatgF
r/3/91cZ/F8R/Y3FIS7N3UR87v/9xse8KldcZnGoW24x43HV//1voqd5ft3A
4sDvYXjqZOb//UbzPorP7kTwJZgPLp4di+AXXRXaxGjI4uDSyepxqvr/fg8R
A0dpThaHOVM9W07O/79f5OEf3hdPmR3YJD7Vnzr8f//DtSdvbTnE7MBYGu96
8tv//U+7rCv4VjA7RPqsXZkiw3BAoSLo2ZepzA6mMapcqbYMB24e5bK73czs
sP9k17J/CQwHzHtcG85VMTv8Eoq4YdiO4Gf0R9jO2IDgK5586znjKjQ8WoD8
xqiLht8YDrRneBWdm8HssPiGav5pMcYD6QKPys+tAZqXxzenTh8YP4oTA6RP
MDssf1yU5+3AeGDR3x9Pt7xidgiJuO4gEch4IPhmQrUfLyK+TSxTOV4YIviw
9AAAsP73Jw==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQfepV4ZI6WcYDbDPOV84OZ3GA8b3lax1mK7E4uEbV
LbXjZzww6f98r9s/mB0sLacv3/eJ4cDVXXvtom8xO+hKbFhpd43hwCxRK8/b
u5kdmlXYN9ZtYjhg89nDefYaZofd+2yX17Uj+Mea8x5ujEbwb7s0Mi81Zziw
a3btUsY9zA5/6j+kRUgzHDDvcW04BzTf7IeLtfi///tN7q5zmf2T2cFnp8uk
kw//75/UaVjgp8oC5wcIB698Hovg9/x6Lra1kcWhp4pL9snb//vT7fbe/LKA
xaHm8Iyd3MwMB95Itl5cvpvFYbPnmhRVfoYDVQb/V0RfY3GY7+zudUOB4cDb
BVfL+F6zOBznZWBXtWA4EP4w59fBnywOBeXitwr9GQ7seBY4r4SD1aHhoprl
jEyGA0VLvp0/x8/qULG7x2pGG4K/W+pL1un1CL4qk9hqu8sMB/61lP1ezsjq
sNnI9NzHDwwHZBs1jKKfsjgcZtrMvpSP8YBN7a0MvpOI+LgjrWN2biaCD4sv
AOxjz8o=
                    "]}]}}, "40"], Annotation[#, 40, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.800498, 0.201504, 0.192061], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQLc2pf6LN9M3+/sr6TKF5vA4wvtaszBVCz3kdIhMO
Wis8f73/4SGZVxYKfA78RQKbgr1e79+r583X5snncJD16bm2ta/2z5pVaXS5
iM/hzzTXSoXHL/fXTb33pKKdz2HX8u3hCq9fwPlbO9x5d3kg+Lrdu+uDtz3f
H575NvlYLZ+DmWpF3jvj5/u/zlq2KD6Lz0H9dKhL+8Zn+yediX/4I4zPITh0
1iVFv2f73bOnnHhjzecw+XrNrF2cz/YzMD6YYSnJ53AlMj4p+OjT/TunaWe2
feN1+DIr4Jj84qf7/99oM9c5j+A/tQ07rLMYwXcQWHFxUhmvQ7zsz4MKx5/u
F/U/mrDGj9eBz6zRSp7/2f5H0pN0K7V5HZ5YXTJUDH+2f92LuF+uHLwON7+s
2SO399n+TUcvTJ//lsfBymbxDTnH5/vfbnrO2nabx2F1dXOUwtHn+5czLIjN
OcnjcMlQ8kxb8Iv9rMdvzY8/wOOwL8xvcvAbBL/cI0D97cSXcH6U/tLIt6qv
IOFxischlj+iPHjFq/0hi+9PjL/H45CS2/pup9br/Sbe5dPjP/E4HDimvqit
9/X+fTFqBWt4eR1KZu58vfPC6/35Fn2sbga8Dho53qZvhd/sVxD5Nut+ECK+
GUt+qVeWI/iw9AAAN6YM5g==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQzbht6+E219f7L19Kmakzl9cBxpeMEkrQyeB1eFn8
/Hgbz+v98VamWTl2vA673ntdaJv1av/ir0Fxb+R5Hbqy191o03i1Pz3gfEYO
I6/D4zlc39pmvtzPqXcvSecTj8Mh1qfn2t6+gPM/SK7YHmyH4DvJfbZXWPd8
f/s1oaOTgPqPcW04+9bm+X7W47fmxyvwOrj8Ll+x6/Sz/YwSLik69rwOBbXl
YfKTn+1POHKs/34Wgi/r9+JExWIEP9K01sztOK/Dh/9MOSGrn+03qQz62fqM
1+GERKDE7tvP9u8MkfpowcjnsMhw/hFFnuf73bOnnHgjzecQJMkd/Tbo+f5d
t7OmzTfgc/jk+M5XYcPz/aoyTFLB9nwO0154zwrmfbG/TfH5XlY/PofrAZ1i
b0tf7He43/0+PpTPYfsPBZm3LxH8w6X77u7sewnnZwm73WuTebX/9H5uaUt3
PoclVw9lBU9+tf/V7r2Bb7T4HB6J7gpQ4Hq9n2tHfsd8Pj54fKwMOxgafx8R
P7D4AgCymds3
                    "]}]}, {
                    RGBColor[0.801, 0.202, 0.192], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-0.5507559456129578, 
                    3.784010222463026}, {-0.6510076122796246, 
                    3.784010222463026}, {-0.6510076122796246, 
                    3.8013735557963595`}, {-0.5507559456129578, 
                    3.8013735557963595`}}}]}}, "41"], 
                    Annotation[#, 41, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-4.253137392849991, -1.567170794205445}, 0.2]}, 
                    "42"], Annotation[#, 42, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-5.119162796634431, -1.0671707942054443`}, 0.2]},
                     "43"], Annotation[#, 43, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-5.985188200418869, -1.567170794205444}, 0.2]}, 
                    "44"], Annotation[#, 44, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-5.98518820041887, -2.567170794205444}, 0.2]}, 
                    "45"], Annotation[#, 45, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.603, 0.647, 0.09], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxdlX001GkUx6dsfs/PVt6HPE1ySAxhQqM9UgxNrDacil5UXmNOFodpjIqK
cqizjWpXW9he5GWQ5GWKlntit02RoSJrhmq00R4hrV7tPifTmXP2j+ePz/md
e597n/v93p9FeHxQlBaDwZhFTjQ5s8nRcS8dYDdjcLe87MPuRbBvyqFKdglD
lXZZXGg3gov0PpXgIobm5QpB6DACY5t6ceQvGN6vv/+N4AOCUxd1U4vOYtgV
kq7IoGnQZ8Wmqn7E8Hu448ECExpCxhzFmT9giIy4169lSUPMwsi9mZkYGt/V
0jI7GtzO3E7LTMVwyvGjv8CFhgbW92ne8RiaUhOetbjRMFoRLGwN13AASuyX
Bmv4WKDHfOV6DG+ujxmLXGnY2TtqvMOH3Oc6nqpwoCFJN8FA6Y6hq3p8gGdD
g6Jx61DOCtJfb/vXXHMaWB4BKZHLMezzVRnJDGlYqCdkejhguG2WT3ERDdtt
Q/rY9hg4s5v4UtLvF5bB8VK9UQ0bhN96wBtE4P/JUsEm8TEGEabcBwjsLzc+
ZZP8spPVa0fuqL+T+7UNGcKCZgTKg5YpraS+lcnzdabqEVgM5pROkfoD6/vn
TFUh2NZ+gan8FkPC5t6U0HIEhdPLhkZC1PmLEAwnORotisPgNrJflXEWgcuw
Ey/wEIbj56+97pQgWPKyp0R0AkPAVmsvaRaCBrGVV24eBh3X6tV66QjymPHr
9Ml879ildeklI3ASypNVZRhaJzYlCqIR0K5ShU4Vhulst4WszQieTB5ey6nF
4Lm9vbjTB0HHxleprfUYQnysd0qcNex/8I1VqLmGJXl3+m1pBEMxT40KazCc
qD70OnaSAuPcP9YFVmLw7WDFsp5Q4H3jyv6vSjBovbyh7GynYI2Oqae8AMPS
xaf3spspOGYZUSHLxVAbV+HErqPgofsVk8IjpJ7G1hHbcgrc5a8G2CmY6DCj
hF1MQbpTsN6OWA03ZSZ66m/RsHLYlV/tR/q763taQOI/z98DQ69tT9wIyX/u
eWZfGwdDTVYkXwAUZJkyK7k25L19k20U9ynYpd0myrTAkFR2fYynokC20dxe
boahqMPvcdlbCpysRTe5Jhisf+bJW3QR8ELfXpcxMYy2j72V2CKY16OaV0j0
IRSua2lZhqCLE2a6yAXDnJCguCl9BH3KF3zOSgz8sCN9/3yk4Pmy8pIeTwzr
qbVtLaMUXLuXb5BG6t9Yqd0gGaRm/EP8Ecz4iyN6rH6PGA0/EmSLW8UajqkJ
LMk7isHrwtwHwwMk33tRchHxq92Wmz2df1PwybPQs/onopdHNz7Uv6PgUhSn
VEb8XnG4wtCbzPMLU1ZPV4uwhkOLSyy87cg+WaKjryR629D9MJ/npvbDSQzj
i+UJIi8E1yJyeLnHMeQ4m0VJ/YmfIk/wxw9geIRXWLKCEewOPvfMLxrDoFFP
TmcYmqnvOwzD81ImMvYguBX2TCkg8/KrjQpSCNGMHlwxzOUF5SgOEP0mPPGT
k3nNSrMIkGYjmP+r/VSoOQbWpo6EgjMIRi7o7PVeQPYFxVwgkyL47eiLSbYh
Bluzf6WdNxE4i4NdFulhWOMw4S2Va9i2SNLJG9ZwTP7kKimDBqrLvk9E4jN2
phnKmDSwo6fr2GbqfUn2XbdJ2SzlYgwTf6alsNbQM/NjY8gS3DXgBtAzfuOq
9+M2GnYVyErzeBjibT4xubvpGf0HEr+c96Km9tDQJjqgEIRp+LOfhBouLq8z
mib+iMwt8WCT+PTb3p6JpzCcS0qslJD8C5y1xKrz6n2zQf29HMOZibruDA8a
XKxirprUqO9fSoMNZ7tRUwPZ701DvBFd0i9DLm5twnCMv+qq5A2C//9P/gPD
5O9r
                    "]]}}, "46"], Annotation[#, 46, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.801, 0.202, 0.192], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQ3XhQ9tepC7IHTBi0vp1eyHgAxp9133776QjGA5k8
EzT+HZM98HhbT+lSecYDC95FTk/ZLHuAzTsuMOIbwwGxxi+/Ts2XPaB1X1+X
+yzDAbvJDgZ1bbIHXJ+cqkrdwXAg9CqfTl06gl968UCSYTCCfySQf+ITB9kD
OQJ7fosfYjjA+vTZu+kGsgfO32PaW3eV4cDhmYs4vRVkDxiu9ax7+oLhAId2
dvQ9YdkDNXyi0z8yMx4IrE4vCeSWPXC44uSxJWqMB2aeTu49wiR7gOtx7bdw
T8YDez8/lKz7J3PgyAIljU0FCP496+A5G+cg+C2ZjH3eJxkPcLGEW/4D6l+n
9eSf4UfGAwrsGRz/gOY/ihU3ShVhOrBbPcj9n4jsAdGJXqkzzJkO/Kxb+2Ov
ouwBwS03jtsFMR146q7zx9ZI9sC1YwcjI1KYDlz2z9DZ5yR7QLaSk6mojOnA
DLbZv7pCZA/s33Ruf1090wGz1Y2Tl6Qj+LkvGY+F1yD4nm0+Z673QcOjlOmA
1yOmCSrA8M6/dvJsXSLTAe6+F3GF62UP9OsZnajzBZp3M+brqd3A+JFtfm9o
xHSgV7g/zvCI7IEQR+moGfxMBx77Hjw+/YzsgcWpm4/8e4OI70Os681TTyD4
sPQAAAbUCh4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQLTe97+epTbIHPixzObZxEeMBGH+1/PT/G68zHrh9
TuTXqtWyB1LsS74WMjIdCLVT/J01V/aAYksY4yd5pgPn1+r+0eqXPRCjeetb
oR3Tgd/GN/971coe2OV9+s9GX6YDYo1ffp1KR/DnPOaZ8SQQwVdzEdO8Zy97
wGbxtFneQP3bH569td1Q9sD+Tef21wHNP35frWyisuyBQ4mpvzcyMB3gufCM
u04G6J6tj87/u8II5y/TPjgtdQ6Cn+WiozmjgvFAjMOMdS3ysgf6GcLTIiIZ
D5QzK7VMVJU9wKXan7fUjvHApGOrI+dpyx6o4ROd/lGZ8UCHc+WZchPZA5zz
7E7a8TMemLPiqpacg+yB+bHLXbsZGA8UxiZOOeIte8Au4tDCGx8ZDlRyvTx8
PUL2QMss2YK6VwwHSv/PPhKejuCLrz8f87EawT+96MGfVb2yB37snOuy9AfD
AWHrgr6WObIHbu59zftJhPGAlLK+dhwwvHcdtLxuZ4iIDynlF5z1CQg+LL4A
frbcEg==
                    "]}]}}, "47"], Annotation[#, 47, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.801, 0.202, 0.192], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQ3XhQ9tepC5IHutTCsjhr+Q/A+B9Yc7Q5TfgPZPJM
0Ph3TPKA5d0dLx/94juw4F3k9JTNkgdiCruOTr3Id0Cs8cuvU/MlDzSwxiz0
WMF3wG6yg0Fdm+SB2Vzf3y2azHcg9CqfTl06gl968UCSYTCCfySQf+ITB8kD
h8xe5IfO5TvA+vTZu+kGkgdUWfUN92zgO3B45iJObwXJA+2XSz8pHeE7wKGd
HX1PWPLAJRNHbv37fAcCq9NLArklD0jO/2r1iJH/wMzTyb1HmCQPJHCuypqq
wn9g7+eHknX/JA5IHfeb894bwTdJqhd4X47g3+rXZepcwn+AiyXc8h9QP0ug
QHH+Gf4DCuwZHP+A5lu0OC9b9J7/wG71IPd/IpIHtkbvfpPFKXDgZ93aH3sV
JQ+Y5DLJ7RMTOPDUXeePrZHkgWnfvj07JS9w4LJ/hs4+J8kDO89L7b6uIXBg
BtvsX10hwPDO+SsZpytwwGx14+Ql6Qh+7kvGY+E1CL5nm8+Z632SByY1TZeI
A+r3esQ0QQUY3sn/finEyQkc4O57EVe4XvJAsZa+XJwI0LybMV9P7ZY8sG7h
9Y3b2QQO9Ar3xxkekTywKt393NVX/Ace+x48Pv2M5IGf3fctbE4g4ltC5/bq
RYsRfFh6AAAuhQYG
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQLTe97+epTZIH3M4WWL2v5T8A4zO6HS5+v4n/wO1z
Ir9WrZY8sCt1Qeb6O/wHQu0Uf2fNlTxQvqqpVP83/4Hza3X/aPVLHrip3rz1
Oo/Agd/GN/971Uoe4NhZvaNcROCAWOOXX6fSEfw5j3lmPAlE8NVcxDTv2Use
OJmS2H4EqH/7w7O3thtKHhC9+ct4zy/+A8fvq5VNVJY8INExMf/9bf4DPBee
cdfJAN1zm8/FZgOC/yfwLdficgT/QFbE3KvB/AdiHGasa5GXPPBUrfnWVBP+
A+XMSi0TVSUPJHjvfvRIkv/ApGOrI+dpSx64ZOLIrf+f70CHc+WZchPJA/FH
smxrXvEdmLPiqpacg+SBr82Xd564zXegMDZxyhFvyQNT6t6Jip3lO1DJ9fLw
9QjJA7cOeD7ZfZTvQOn/2UfC0xF88fXnYz5WI/inFz34s6pX8oDfg5M7Hl3m
OyBsXdDXMkfygP4T8Sb9D3wHpJT1teOA4S3wItW7hgcRHwWeInV7rBF8WHwB
AKbl4W0=
                    "]}]}}, "48"], Annotation[#, 48, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.801, 0.202, 0.192], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQLX5aI3yWu/yBOGGHDVn9PAdg/COfQguz3HgO/Bed
3XrWVv4A76lF+i68PAfMfqR8MdaSP2AQV8L9/TH3gTVd/8NnickfCPnk+nzl
Lu4DV+Z49/r+lTuQ//2BCcsy7gOv70l2+t5D8Llvn97PcArBj4qWerd5u9yB
acqXtm5bz31g9ruP3unL5Q78/ChRLnuY+0Dk4rVpUtPlDkQfiLdoucZ9YJ5J
2Y61XXIHlilqB074yH3geUvRRYUmuQNvu+83OIvwHNC/mvdqcqXcAZNvkzd8
M+M5EPz3TZlvqdyBd5stHgXEIfgc/plhAV0I/roacY9X23gOLOBNmnYWqP+G
7a8dF+7xHNgmUJx6Fmg+T6HuG2Ym3gOBhrFLznbLHbBfkiBvrsp7oL9jR2jv
DLkD1sffNd615z1QHWgeybtS7gDDrevC3wN5D2RGFnf27pQ74N4jv0cghfeA
nsCy8KjTcgdeHn1SKZvLe+DMlp4PxfcQfObPPMrqnxH8+/3hmstZ5SHhkcx7
4MFr3refReUPzHx5v13Wn/fAwumfdzuoyR/Y6ejRJGsNNO9RetAsI2D8GMxc
eUGe94Cy7KzdDNbyB+pCDEXM//IcqAw/o5LuLH/gbMXJurm3EPH9RuLoR+Zt
CD4sPQAACPIGiA==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvWXBzLBZmvIHpHZFNQRM4DkA4181Wrsz4CjPgcIb
8uFVSvIH+oK61gu85znw2l0nwkpE/oD39JzdE3h5D6Rut4j8xSp/oM3mwwYB
Hd4DE22fxEh9kTvwJO7htgBr3gNruv6Hz7qH4Bu9Ff+6+QSCv8dXsW3tNrkD
advWhLzS5j3g+/qGefsKuQMvjz6plAWaH/vS8HLCLLkDb0qqtwa84zmw6ObH
DN/Jcgf6TvzonHsIwb9gdz2ApQvBnxLu9NgsjefAJ8/F3CHT5A7sFM5V+O7G
c4CXV/dhwhy5AyYWSzVcdHgOaFzYti13kdyBZYragRMEeQ7I+bZouq+WO2C8
MaT57h/uA0abHrS/BbrvZMHe/5rvuA+wp+d8nHxI7kBG9o3o8vvcB/hFvigs
Py93YN1aYy3ZG9wHuDmXK6rfQ/DX7ri188AnBD9xzevIKhb5A0pnN/9zfsZ9
YKVL9etgYfkDzBcZT0xg4jmwQceqQxcY3k+u+E+8K4eIDxezf4dl/RB8WHwB
AKpg2cM=
                    "]}]}}, "49"], Annotation[#, 49, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-5.119162796634431, -3.0671707942054445`}, 0.2]},
                     "50"], Annotation[#, 50, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-4.253137392849992, -2.5671707942054445`}, 0.2]},
                     "51"], Annotation[#, 51, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.433, 0.467, 0.467], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    8.942759189219721, -1.6856406666759243`}, {
                    8.942759189219721, -1.4708948333425909`}, {
                    8.971177022553055, -1.4708948333425909`}, {
                    8.971177022553055, -1.5590781666759244`}, {
                    9.082798189219723, -1.5590781666759244`}, {
                    9.082798189219723, -1.4708948333425909`}, {
                    9.111215689219723, -1.4708948333425909`}, {
                    9.111215689219723, -1.6856406666759243`}, {
                    9.082798189219723, -1.6856406666759243`}, {
                    9.082798189219723, -1.584419833342591}, {
                    8.971177022553055, -1.584419833342591}, {
                    8.971177022553055, -1.6856406666759243`}}}]}}, "73"], 
                    Annotation[#, 73, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.433, 0.467, 0.467], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-8.364383770447635, -3.34954371087211}, \
{-8.364383770447635, -3.1347978775387766`}, {-8.3359659371143, \
-3.1347978775387766`}, {-8.3359659371143, -3.22298121087211}, \
{-8.224344770447633, -3.22298121087211}, {-8.224344770447633, \
-3.1347978775387766`}, {-8.195927270447633, -3.1347978775387766`}, \
{-8.195927270447633, -3.34954371087211}, {-8.224344770447633, \
-3.34954371087211}, {-8.224344770447633, -3.2483228775387767`}, \
{-8.3359659371143, -3.2483228775387767`}, {-8.3359659371143, \
-3.34954371087211}}}]}}, "95"], Annotation[#, 95, "Tooltip"]& ]}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, ImageSizeRaw -> 
                  498.1531416326483}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   AbsoluteThickness[1.3], {
                    StyleBox[{
                    
                    LineBox[{{-5.017125885574906, -1.768081491258409}, \
{-4.517725861160843, -0.9016815736558699}}], 
                    
                    LineBox[{{-4.517725861160843, -0.9016815736558699}, \
{-4.097523405861805, -0.901345403997494}}], 
                    
                    LineBox[{{-3.222602238259249, -0.3886716342385031}, \
{-3.0185260320592806`, -0.034481561448838516`}}], 
                    
                    LineBox[{{{-3.0185260320592806`, -0.034481561448838516`}, \
{-2.018526032059281, -0.03368139055040149}}, {{-2.9184300435614867`, \
-0.15440154893295305`}, {-2.1184299795341714`, -0.15376141216297062`}}}], 
                    
                    LineBox[{{-2.018526032059281, -0.03368139055040149}, \
{-1.5177258611608437`, -0.8992815187242292}}], 
                    
                    LineBox[{{{-1.5177258611608437`, -0.8992815187242292}, \
{-0.5177258611608436, -0.8984815004136826}}, {{-1.4178218953632094`, \
-0.7792015123557844}, {-0.6178218313603102, -0.7785614976561435}}}], 
                    
                    LineBox[{{-0.5177258611608436, -0.8984815004136826}, \
{-0.01852587947139048, -0.03208135392930763}}], 
                    
                    LineBox[{{{-0.01852587947139048, -0.03208135392930763}, {
                    0.9814740442346643, -0.03128148820665125}}, {{
                    0.08157007243706452, -0.15200137195416014`}, {
                    0.8815700601216159, -0.15136147933706579`}}}], 
                    
                    LineBox[{{0.9814740442346643, -0.03128148820665125}, {
                    1.4808740686487267`, 0.835118353101942}}], 
                    
                    LineBox[{{{1.4808740686487267`, 0.835118353101942}, {
                    1.9010765239575058`, 0.8354545868781321}}, {{
                    1.5807780161236167`, 0.9551983747145112}, {
                    1.950980487439225, 0.9554945999585875}}}], 
                    
                    LineBox[{{2.776825123893393, 0.3241821302968641}, {
                    2.9814740442346643`, -0.029681451585557836`}}], 
                    
                    LineBox[{{2.9814740442346643`, -0.029681451585557836`}, {
                    3.9814741205286097`, -0.02888158586290145}}], 
                    
                    LineBox[{{2.798759646718812, 1.3876333166614614`}, {
                    2.98007405033818, 1.7023183653089737`}}], 
                    
                    LineBox[{{{2.98007405033818, 1.7023183653089737`}, {
                    3.9800741266321253`, 1.7031185362074113`}}, {{
                    3.079977997820401, 1.822398386915444}, {
                    3.8799781381416523`, 1.8230385236976365`}}}], 
                    
                    LineBox[{{3.9800741266321253`, 1.7031185362074113`}, {
                    4.479273955733688, 2.569318792555067}}], 
                    
                    LineBox[{{{4.479273955733688, 2.569318792555067}, {
                    3.978674132735641, 3.4351183531019416`}}, {{
                    4.3253340796044775`, 2.5958239778753787`}, {
                    3.9248437572152763`, 3.2884817240392237`}}}], 
                    
                    LineBox[{{3.978674132735641, 3.4351183531019416`}, {
                    2.9786740564416956`, 3.4343187925550667`}}], 
                    
                    LineBox[{{{2.9786740564416956`, 3.4343187925550667`}, {
                    2.4794740747522424`, 2.567918646070692}}, {{
                    3.0327261715810576`, 3.2877637545642084`}, {
                    2.633373683283073, 2.594656649092567}}}], 
                    
                    LineBox[{{2.4794740747522424`, 2.567918646070692}, {
                    1.4794740747522426`, 2.5671184751722547`}}], 
                    
                    LineBox[{{{1.4794740747522426`, 2.5671184751722547`}, {
                    0.9800740503381801, 1.700718633863661}}, {{
                    1.5335007649800227`, 2.4205540625252135`}, {
                    1.133978295012782, 1.7274299382623797`}}}], 
                    
                    LineBox[{{-1.5177258611608437`, -0.8992815187242292}, \
{-2.017125885574906, -1.7656815126207137`}}], 
                    
                    LineBox[{{{-2.017125885574906, -1.7656815126207137`}, \
{-1.51632601985225, -2.6312814882066515`}}, {{-2.0709162167539557`, \
-1.912332835775975}, {-1.670273128061707, -2.6048183405199836`}}}], 
                    
                    LineBox[{{-1.51632601985225, -2.6312814882066515`}, \
{-2.0157260442663123`, -3.497681482103136}}], 
                    
                    LineBox[{{{-2.0157260442663123`, -3.497681482103136}, \
{-3.015726044266312, -3.498481500413683}}, {{-2.115822014465779, \
-3.377761479345597}, {-2.9158220784686772`, -3.3784014940452383`}}}], 
                    
                    LineBox[{{-3.015726044266312, -3.498481500413683}, \
{-3.516325714676469, -2.632881486680773}}], 
                    
                    LineBox[{{{-3.516325714676469, -2.632881486680773}, \
{-3.0171258855749055`, -1.7664815309312605`}}, {{-3.3624261071347545`, \
-2.6061434779657064`}, {-2.963073765014048, -1.9130365669225742`}}}], 
                    
                    LineBox[{{-3.0171258855749055`, -1.7664815309312605`}, \
{-3.2217748059161764`, -1.4126179490488386`}}], 
                    
                    LineBox[{{0.9800740503381801, 1.700718633863661}, {
                    1.4808740686487267`, 0.835118353101942}}], 
                    
                    LineBox[{{-3.0171258855749055`, -1.7664815309312605`}, \
{-2.017125885574906, -1.7656815126207137`}}], 
                    
                    LineBox[{{2.4794740747522424`, 2.567918646070692}, {
                    2.98007405033818, 1.7023183653089737`}}]}, {
                    RGBColor[0.4, 0.4, 0.4]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    LineBox[{{-4.097523405861805, -0.901345403997494}, \
{-3.677320950562769, -0.901009234339118}}], 
                    
                    LineBox[{{-3.4266784444592178`, -0.7428617070281677}, \
{-3.222602238259249, -0.3886716342385031}}], 
                    
                    LineBox[{{{1.9010765239575058`, 0.8354545868781321}, {
                    2.321278979266285, 0.8357908206543222}}, {{
                    1.950980487439225, 0.9554945999585875}, {
                    2.321182958754833, 0.955790825202664}}}], 
                    
                    LineBox[{{2.5721762035521216`, 0.678045712179286}, {
                    2.776825123893393, 0.3241821302968641}}], 
                    
                    LineBox[{{2.6174452430994437`, 1.072948268013949}, {
                    2.798759646718812, 1.3876333166614614`}}], 
                    
                    LineBox[{{-3.2217748059161764`, -1.4126179490488386`}, \
{-3.4264237262574477`, -1.0587543671664168`}}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609]}, StripOnInput -> 
                    False]}}, {
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-5.017125885574906, -1.768081491258409}, 0.2]}, 
                    "1"], Annotation[#, 1, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-4.517725861160843, -0.9016815736558699}, 0.2]}, 
                    "2"], Annotation[#, 2, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.292, 0.438, 0.889], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-3.602320974782561, -1.0082545104557397`}, \
{-3.602320974782561, -0.7935086002349064}, {-3.5731704643455298`, \
-0.7935086002349064}, {-3.4603774239611753`, -0.9621118272681738}, \
{-3.4603774239611753`, -0.7935086002349064}, {-3.4331307475391246`, \
-0.7935086002349064}, {-3.4331307475391246`, -1.0082545104557397`}, \
{-3.4622817579763354`, -1.0082545104557397`}, {-3.5750747983606894`, \
-0.8395036167029352}, {-3.5750747983606894`, -1.0082545104557397`}}}]}}, "3"],
                     Annotation[#, 3, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-3.0185260320592806`, -0.034481561448838516`}, 
                    0.2]}, "4"], Annotation[#, 4, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-2.018526032059281, -0.03368139055040149}, 0.2]},
                     "5"], Annotation[#, 5, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-1.5177258611608437`, -0.8992815187242292}, 
                    0.2]}, "6"], Annotation[#, 6, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-0.5177258611608436, -0.8984815004136826}, 0.2]},
                     "7"], Annotation[#, 7, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-0.01852587947139048, -0.03208135392930763}, 
                    0.2]}, "8"], Annotation[#, 8, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{0.9814740442346643, -0.03128148820665125}, 0.2]},
                     "9"], Annotation[#, 9, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{1.4808740686487267`, 0.835118353101942}, 0.2]}, 
                    "10"], Annotation[#, 10, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{2.3962789550270087`, 0.7285455688899629}, {
                    2.3962789550270087`, 0.9432914791107962}, {
                    2.42542946546404, 0.9432914791107962}, {
                    2.5382225058483945`, 0.7746882520775289}, {
                    2.5382225058483945`, 0.9432914791107962}, {
                    2.565469182270445, 0.9432914791107962}, {
                    2.565469182270445, 0.7285455688899629}, {
                    2.5363181718332344`, 0.7285455688899629}, {
                    2.4235251314488804`, 0.8972964626427675}, {
                    2.4235251314488804`, 0.7285455688899629}}}]}, {
                    RGBColor[0.292, 0.438, 0.889], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{2.7020092311571644`, 
                    0.9147548022268746}, {2.6605642163182157`, 
                    0.9147548022268746}, {2.6605642163182157`, 
                    0.8733097873879256}, {2.6432008767681223`, 
                    0.8733097873879256}, {2.6432008767681223`, 
                    0.9147548022268746}, {2.601757528596437, 
                    0.9147548022268746}, {2.601757528596437, 
                    0.9321181417769677}, {2.6432008767681223`, 
                    0.9321181417769677}, {2.6432008767681223`, 
                    0.9735614899486532}, {2.6605642163182157`, 
                    0.9735614899486532}, {2.6605642163182157`, 
                    0.9321181417769677}, {2.7020092311571644`, 
                    0.9321181417769677}}}]}}, "11"], 
                    Annotation[#, 11, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{2.9814740442346643`, -0.029681451585557836`}, 
                    0.2]}, "12"], Annotation[#, 12, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{3.9814741205286097`, -0.02888158586290145}, 
                    0.2]}, "13"], Annotation[#, 13, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{2.98007405033818, 1.7023183653089737`}, 0.2]}, 
                    "14"], Annotation[#, 14, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{3.9800741266321253`, 1.7031185362074113`}, 0.2]},
                     "15"], Annotation[#, 15, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{4.479273955733688, 2.569318792555067}, 0.2]}, 
                    "16"], Annotation[#, 16, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{3.978674132735641, 3.4351183531019416`}, 0.2]}, 
                    "17"], Annotation[#, 17, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{2.9786740564416956`, 3.4343187925550667`}, 0.2]},
                     "18"], Annotation[#, 18, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{2.4794740747522424`, 2.567918646070692}, 0.2]}, 
                    "19"], Annotation[#, 19, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{1.4794740747522426`, 2.5671184751722547`}, 0.2]},
                     "20"], Annotation[#, 20, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{0.9800740503381801, 1.700718633863661}, 0.2]}, 
                    "21"], Annotation[#, 21, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-2.017125885574906, -1.7656815126207137`}, 0.2]},
                     "22"], Annotation[#, 22, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-1.51632601985225, -2.6312814882066515`}, 0.2]}, 
                    "23"], Annotation[#, 23, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-2.0157260442663123`, -3.497681482103136}, 0.2]},
                     "24"], Annotation[#, 24, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-3.015726044266312, -3.498481500413683}, 0.2]}, 
                    "25"], Annotation[#, 25, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-3.516325714676469, -2.632881486680773}, 0.2]}, 
                    "26"], Annotation[#, 26, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-3.0171258855749055`, -1.7664815309312605`}, 
                    0.2]}, "27"], Annotation[#, 27, "Tooltip"]& ]}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, ImageSizeRaw -> 
                  421.00677042764113`}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   AbsoluteThickness[1.3], {
                    StyleBox[{
                    
                    LineBox[{{-2.331481509473589, -2.066985213668258}, \
{-2.120681491163042, -1.0895851587366174`}}], 
                    
                    LineBox[{{-2.120681491163042, -1.0895851587366174`}, \
{-2.4323643404001025`, -0.8070700208320118}}], 
                    
                    LineBox[{{-3.4298406828462618`, -0.5375059521146761}, \
{-3.841281543042925, -0.6245851587366174}}], 
                    
                    LineBox[{{{-3.841281543042925, -0.6245851587366174}, \
{-4.343481555249956, -1.4873852228235316`}}, {{-3.9952853725036555`, \
-0.6506521164727133}, {-4.396875651476509, -1.3406005633310125`}}}], 
                    
                    LineBox[{{-4.343481555249956, -1.4873852228235316`}, \
{-5.344281420972612, -1.4861851953577112`}}], 
                    
                    LineBox[{{{-5.344281420972612, -1.4861851953577112`}, \
{-5.83988139655855, -0.6179852747034142}}, {{-5.289652838020249, \
-1.3398554864848988`}, {-5.686102594780882, -0.6453484963341034}}}], 
                    
                    LineBox[{{-5.83988139655855, -0.6179852747034142}, \
{-5.338281359937456, 0.24701487788447626`}}], 
                    
                    LineBox[{{{-5.338281359937456, 
                    0.24701487788447626`}, {-4.337081408765581, 
                    0.2436149145055699}}, {{-5.238689393622943, 
                    0.12668987624394426`}, {-4.437488289255185, 
                    0.12396908664462267`}}}], 
                    
                    LineBox[{{-4.337081408765581, 
                    0.2436149145055699}, {-4.064786879446689, 
                    0.5456129040384063}}], 
                    
                    LineBox[{{-3.129232202426144, 
                    0.7441523663967601}, {-2.7526815369394093`, 
                    0.5752146459508825}}], 
                    
                    LineBox[{{{-2.7526815369394093`, 
                    0.5752146459508825}, {-1.8860815003183151`, 
                    1.0726148534704136`}}, {{-2.725681073568343, 
                    0.7290575552835291}, {-2.0325396419055966`, 
                    1.1268981707694241`}}}], 
                    
                    LineBox[{{-1.8860815003183151`, 
                    1.0726148534704136`}, {-1.02168148305681, 
                    0.5700147558141637}}], 
                    
                    LineBox[{{{-1.02168148305681, 
                    0.5700147558141637}, {-0.15428149726655732`, 
                    1.0674146581579138`}}, {{-0.994619712398493, 
                    0.7238468927135185}, {-0.3007179942519785, 
                    1.121756337602185}}}], 
                    
                    LineBox[{{-0.15428149726655732`, 1.0674146581579138`}, {
                    0.7103184935781692, 0.5650147558141638}}], 
                    
                    LineBox[{{{0.7103184935781692, 0.5650147558141638}, {
                    1.5775185057852004`, 1.0626148534704138`}}, {{
                    0.7373382372158795, 0.7188542800851964}, {
                    1.431067168445792, 1.1169165253202196`}}}], 
                    
                    LineBox[{{1.5775185057852004`, 1.0626148534704138`}, {
                    2.442918591234419, 0.5598148656774451}}], 
                    
                    LineBox[{{{2.442918591234419, 0.5598148656774451}, {
                    2.8268116537494032`, 0.7304993755848683}}, {{
                    2.5830405332661, 0.49080394527019855`}, {
                    2.9212459061983393`, 0.6411750354608252}}}], 
                    
                    LineBox[{{3.4809209647897554`, 1.5434456927310753`}, {
                    3.5669185301992625`, 1.9426148534704142`}}], 
                    
                    LineBox[{{3.5669185301992625`, 1.9426148534704142`}, {
                    4.518718762132856, 2.2492148900915074`}}], 
                    
                    LineBox[{{3.749899937849384, 0.5248648119699642}, {
                    4.021918530199263, 0.2198148656774452}}], 
                    
                    LineBox[{{{4.021918530199263, 0.2198148656774452}, {
                    5.024118542406294, 0.21821482905635123`}}, {{
                    4.122109963239511, 0.33964116712886494`}, {
                    4.924310230335023, 0.33836043495048707`}}}], 
                    
                    LineBox[{{5.024118542406294, 0.21821482905635123`}, {
                    5.520518688890669, -0.6495851587366173}}], 
                    
                    LineBox[{{{5.520518688890669, -0.6495851587366173}, {
                    5.0195183226797315`, -1.5147852014612269`}}, {{
                    5.36657375700392, -0.6759977262106301}, {
                    4.965794889629163, -1.3681207595693818`}}}], 
                    
                    LineBox[{{5.0195183226797315`, -1.5147852014612269`}, {
                    4.017718395921919, -1.5117852472375939`}}], 
                    
                    LineBox[{{{4.017718395921919, -1.5117852472375939`}, {
                    3.522118420335981, -0.6445851587366174}}, {{
                    4.072274356030195, -1.3654284469485423`}, {
                    3.675910782177197, -0.6718720642681301}}}], 
                    
                    LineBox[{{3.522118420335981, -0.6445851587366174}, {
                    3.1191703227562373`, -0.5580393644607411}}], 
                    
                    LineBox[{{-2.7526815369394093`, 
                    0.5752146459508825}, {-2.7974749373920895`, 
                    0.16953987716970265`}}], 
                    
                    LineBox[{{2.48344196295483, 0.1553944865858833}, {
                    2.442918591234419, 0.5598148656774451}}], 
                    
                    LineBox[{{-4.337081408765581, 
                    
                    0.2436149145055699}, {-3.841281543042925, \
-0.6245851587366174}}], 
                    
                    LineBox[{{3.522118420335981, -0.6445851587366174}, {
                    4.021918530199263, 0.2198148656774452}}]}, {
                    RGBColor[0.4, 0.4, 0.4]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    LineBox[{{-2.4323643404001025`, -0.8070700208320118}, \
{-2.744047189637163, -0.5245548829274063}}], 
                    
                    LineBox[{{-3.018399822649599, -0.45042674549273487`}, \
{-3.4298406828462618`, -0.5375059521146761}}], 
                    
                    LineBox[{{{2.8268116537494032`, 0.7304993755848683}, {
                    3.2107047162643876`, 0.9011838854922917}}, {{
                    2.9212459061983393`, 0.6411750354608252}, {
                    3.259451279130579, 0.791546125651452}}}], 
                    
                    LineBox[{{3.3949233993802483`, 1.1442765319917363`}, {
                    3.4809209647897554`, 1.5434456927310753`}}], 
                    
                    LineBox[{{3.4778813454995054`, 0.8299147582624832}, {
                    3.749899937849384, 0.5248648119699642}}], 
                    
                    LineBox[{{-2.7974749373920895`, 
                    0.16953987716970265`}, {-2.84226833784477, \
-0.23613489161147722`}}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    LineBox[{{-4.064786879446689, 
                    0.5456129040384063}, {-3.7924923501277967`, 
                    0.8476108935712429}}], 
                    
                    LineBox[{{-3.5057828679128784`, 
                    0.9130900868426377}, {-3.129232202426144, 
                    0.7441523663967601}}], 
                    
                    LineBox[{{3.1191703227562373`, -0.5580393644607411}, {
                    2.7162222251764936`, -0.4714935701848647}}], 
                    
                    LineBox[{{2.5239653346752413`, -0.2490258925056785}, {
                    2.48344196295483, 0.1553944865858833}}]}, {
                    RGBColor[0.800498, 0.201504, 0.192061]}, StripOnInput -> 
                    False]}}, {
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-2.331481509473589, -2.066985213668258}, 0.2]}, 
                    "1"], Annotation[#, 1, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-2.120681491163042, -1.0895851587366174`}, 0.2]},
                     "2"], Annotation[#, 2, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.292, 0.438, 0.889], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-2.9468667405374203`, -0.5247456317283216}, \
{-2.9468667405374203`, -0.31002466133085077`}, {-2.917719615536602, \
-0.31002466133085077`}, {-2.804939674533283, -0.47860830738724996`}, \
{-2.804939674533283, -0.31002466133085077`}, {-2.7776961624429606`, \
-0.31002466133085077`}, {-2.7776961624429606`, -0.5247456317283216}, \
{-2.806843787385889, -0.5247456317283216}, {-2.919623728389208, \
-0.3560143361018707}, {-2.919623728389208, -0.5247456317283216}}}]}}, "3"], 
                    Annotation[#, 3, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-3.841281543042925, -0.6245851587366174}, 0.2]}, 
                    "4"], Annotation[#, 4, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-4.343481555249956, -1.4873852228235316`}, 0.2]},
                     "5"], Annotation[#, 5, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-5.344281420972612, -1.4861851953577112`}, 0.2]},
                     "6"], Annotation[#, 6, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-5.83988139655855, -0.6179852747034142}, 0.2]}, 
                    "7"], Annotation[#, 7, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-5.338281359937456, 0.24701487788447626`}, 0.2]},
                     "8"], Annotation[#, 8, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-4.337081408765581, 0.2436149145055699}, 0.2]}, 
                    "9"], Annotation[#, 9, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.801, 0.202, 0.192], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQ7Wa674OEFt8BD8snPKkl7+1h/Al5ZRv0fD7Y/3gS
9ahejO9AN/+sC+X7PtjPOBv70vc97wEGY5Nl/IIf7YsPMN2SPsF7oCTsXPXy
5I/2iyy6jjRP5T1wxMRl+ceej/ZxDtMmtYYj+NWCnCZv9RD8z8ujl4Vw8R7Q
WdBl0Vv50X7BheTIPS95DqgLZN45EPTRfp2ZRZvySZ4DSg3uDV+0P9o/0wx9
5rWB58BCfpWXd79+sJ8swD/LcD7PgUvhATMqN3ywd/h+wleij+cA04Iad9Hs
D/bTXy1d3t3Kc8BaK8kyWQbBX7Ir7ubZjvdwvsO24Jjsa+/s51i4LOoG6l8a
dDz4mtk7+w9WV7d3LeA5MJkraDPvqrf2v64Jru3axHOg4dAdIVfZt/ZKPwL8
OM/wHPh3tXrjuk1v7K9cfBnF8ZbnAK+rfr9X1hv7OU2/DrDz8R5gu5sl/Ezx
jf2r/w7+Cwx5D0g0MOhv+fva/pqCafylcATfb5lIl3kjgq9g/brWbBnvgUuP
13JtVn1jf+jzH97zx3gP6F+ZkLGh9I291qKcLenPeQ8smv1aft3RN/Yqqq9V
pRj4DgjwirjdM3prX1J0reKZAN+BtMBJjQ5739of3X/w9CZFvgO7pwrsXeT+
Dh7fx1L8ZrHcQvBh6QEAvgkK8w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvcv70Tapd7wHnKbueH624L09jH9nB5f35Tnv7BvK
+VRu3+c9wFq+I+3G17f23OfT/kUf5j2QVvzoyu3qt/bT1PbfuLOM98Bdt5Y5
9xnf2r8zjngv28x7gNd1ZvDDI2/s/RivaMtHIPj3cqM3Besg+D+XfH/qzsF7
wFGGjbOS6a39lloFhT+veQ7sXxh+dkXtW/snWb26G87zHFAPMLS48eOt/SKR
vCOdB3kOzCp6tX3+8ndw/uE1i5/97XwP54vkaq+fzvPBftr8p7enHec5cEVi
fpSo9wf7U9Ka2hsu8xzg5WXZWtnwwf7f9Jyqk/d5DmwwOXDu/tYP9gvW77lZ
/ZHngIVYkIHL/Q/2YtKrnx4Huq9SIiNi1Z8P9oE139lFFHgPBDxXO8gn9dE+
1HHOAksr3gOqTXe3HNL4aP88/vtRi3AEf6f/ob1ZDQj++vAXH+4s5j2w4Oq8
R6U8H+1te9Ya9R/kPcC4oeLv3csf7Cdsu9DlCAzvxK4gCbfZH+DxURzO2HDC
BsGHxRcAMmrqKQ==
                    "]}]}}, "10"], Annotation[#, 10, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-2.7526815369394093`, 0.5752146459508825}, 0.2]},
                     "11"], Annotation[#, 11, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-1.8860815003183151`, 1.0726148534704136`}, 
                    0.2]}, "12"], Annotation[#, 12, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-1.02168148305681, 0.5700147558141637}, 0.2]}, 
                    "13"], Annotation[#, 13, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-0.15428149726655732`, 1.0674146581579138`}, 
                    0.2]}, "14"], Annotation[#, 14, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{0.7103184935781692, 0.5650147558141638}, 0.2]}, 
                    "15"], Annotation[#, 15, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{1.5775185057852004`, 1.0626148534704138`}, 0.2]},
                     "16"], Annotation[#, 16, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{2.442918591234419, 0.5598148656774451}, 0.2]}, 
                    "17"], Annotation[#, 17, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3.2719331557028144`, 0.8586543316505848}, {
                    3.2719331557028144`, 1.0733753020480554`}, {
                    3.3010802807036326`, 1.0733753020480554`}, {
                    3.4138602217069516`, 0.9047916559916563}, {
                    3.4138602217069516`, 1.0733753020480554`}, {
                    3.441103733797274, 1.0733753020480554`}, {
                    3.441103733797274, 0.8586543316505848}, {
                    3.4119561088543455`, 0.8586543316505848}, {
                    3.2991761678510265`, 1.0273856272770354`}, {
                    3.2991761678510265`, 0.8586543316505848}}}]}, {
                    RGBColor[0.292, 0.438, 0.889], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{3.5776279254101686`, 
                    1.0448419393119102`}, {3.536187723847283, 
                    1.0448419393119102`}, {3.536187723847283, 
                    1.0034017377490245`}, {3.5188264008134573`, 
                    1.0034017377490245`}, {3.5188264008134573`, 
                    1.0448419393119102`}, {3.4773878657242743`, 
                    1.0448419393119102`}, {3.4773878657242743`, 
                    1.0622032623457358`}, {3.5188264008134573`, 
                    1.0622032623457358`}, {3.5188264008134573`, 
                    1.1036417974349189`}, {3.536187723847283, 
                    1.1036417974349189`}, {3.536187723847283, 
                    1.0622032623457358`}, {3.5776279254101686`, 
                    1.0622032623457358`}}}]}}, "18"], 
                    Annotation[#, 18, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{3.5669185301992625`, 1.9426148534704142`}, 0.2]},
                     "19"], Annotation[#, 19, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{4.518718762132856, 2.2492148900915074`}, 0.2]}, 
                    "20"], Annotation[#, 20, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{4.021918530199263, 0.2198148656774452}, 0.2]}, 
                    "21"], Annotation[#, 21, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{5.024118542406294, 0.21821482905635123`}, 0.2]}, 
                    "22"], Annotation[#, 22, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{5.520518688890669, -0.6495851587366173}, 0.2]}, 
                    "23"], Annotation[#, 23, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{5.0195183226797315`, -1.5147852014612269`}, 
                    0.2]}, "24"], Annotation[#, 24, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{4.017718395921919, -1.5117852472375939`}, 0.2]}, 
                    "25"], Annotation[#, 25, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{3.522118420335981, -0.6445851587366174}, 0.2]}, 
                    "26"], Annotation[#, 26, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.801, 0.202, 0.192], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQPTFvk8/ZFmaHfiFli7oft/fD+A9OCU7o3XBz//19
otFpM5gdvrg182c+v77f/ppQyIz9zA6KO6V2cs69tj/lcW7yqWfMDn7am5JW
BV3db5r9rCJJksWBb9OtLY1rr+yvTL61KiEcwY+ZlM75sx7Bf/JbZPrEJSwO
BSwH84V/X9lvfpnnieZRFocWF/cHLtOu7tfMtdh+6CmLw8yWswFlhtf2f6yU
Dp/9j8Vhjlv02guc1/e7TE5cvIWf1eGW6qoPifI39k9fs/z9WQVWBynWn8af
TW7ud9h5amqUJquDyZ2knN35t+D8G/x689ecvw3nL5BwmVlocne/TbbO7Cig
/mv3Y1bNLr63/3nG7NZoPlaHX/nur3V67++/eyZuQvQfFgcBBkmx+OAH+7es
ln9/5xGLw6Q3leVf9z7Yz3yp7dHdgywOzbXHZkayPdxvrVhWc28Bi0PX0y7R
fX4P979drP/OtZbFocLp68/3RQ/3MzZb3xMOR/A7/0ZvXqeL4G/PaN2/noPF
Yd89d7mPXg/3i24o1hd/weyQ+C7lwOdfD/avZWTprDvO7PBOjYvz26oH+zfX
tYqfWcfs0LD14aOjtg/2JxvOOvJ/LrND6KNjfsfT7u8XerKu0LiX2WFV5Knr
TEH34PE9ebefrL3u3f3o6QEAvtYT9w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQLRvR13b6ALPDnKiqpjX/b++H8dOFr+1euPzu/nCd
JEnu88wOYtOrWqZ/vbf/zBVO+67XzA4h89RWTHh5f79j7cYUTg4Wh83VhT1H
8h7sf5kv4XdCm8WhuTbm6qHVD/Z3LpojeDwMwf9pKto9qQnBv/evInzeMhYH
/2Xv5bWB+pXVAmRfHWJxWOxos/3b0/v7P1s85je7z+Jw6UnHw+nv7+037Weq
jHnL4vBmvtgjjkl34fxZ2ktafM7ehvMvXbCd+nLdrf0OLN2J/s9ZHC4o5j//
tOXmft4OdyGz20D9AbdrE+/f2H+Tm+WwzHkWh4RNr8ROct7Yb/5lc3LWXhYH
B53FE8xTru8/2HE0XA7oPltl7w/z3l3b36ZeaXqpj8Xh0XN/X97Ka/ubkq7M
WVPC4tBTU1pna3dt/wfnyvK14Qi+XMi6+mo9BF/Dp8OHk5vFYb5ewfGC9df2
zxI/zBX+ltlB9ihHzIWJ1/e7v52/aQkwvGdHL/ygX3IDHh8h6s8C1d7d3I8e
XwC4096v
                    "]}]}}, "27"], Annotation[#, 27, "Tooltip"]& ]}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, ImageSizeRaw -> 
                  441.7142719504179}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   AbsoluteThickness[1.3], {
                    StyleBox[{
                    
                    LineBox[{{-1.731520038986206, 
                    0.6014000205993655}, {-0.865920001411438, 
                    0.10060000228881867`}}], 
                    
                    LineBox[{{-0.865920001411438, 
                    0.10060000228881867`}, {-0.866247052901292, \
-0.30821350035447487`}}], 
                    
                    LineBox[{{-1.3690618090117763`, -1.1888379385852894`}, \
{-1.7331199993133546`, -1.3986000556945797`}}], 
                    
                    LineBox[{{{-1.7331199993133546`, -1.3986000556945797`}, \
{-2.5987200511932373`, -0.8979999275207518}}, {{-1.8797620162146822`, \
-1.4524157445961334`}, {-2.572230279001474, -1.0519424540105642`}}}], 
                    
                    LineBox[{{-2.5987200511932373`, -0.8979999275207518}, \
{-3.465119892501831, -1.3972000617980953`}}], 
                    
                    LineBox[{{{-3.465119892501831, -1.3972000617980953`}, \
{-3.4659200634002687`, -2.3972000617980953`}}, {{-3.345199908428975, \
-1.4972960502931596`}, {-3.345840045198958, -2.2972961143204755`}}}], 
                    
                    LineBox[{{-3.4659200634002687`, -2.3972000617980953`}, \
{-2.6003199352264406`, -2.8979999275207513`}}], 
                    
                    LineBox[{{{-2.6003199352264406`, -2.8979999275207513`}, \
{-1.7339200176239014`, -2.398599903106689}}, {{-2.5736086232605326`, \
-2.744095686819275}, {-1.8804844265090206`, -2.3445732102503456`}}}], 
                    
                    LineBox[{{-1.7339200176239014`, -2.398599903106689}, \
{-0.8683200015068053, -2.8994000740051264`}}], 
                    
                    LineBox[{{{-0.8683200015068053, -2.8994000740051264`}, \
{-0.0019199718475340932`, -2.400000049591064}}, {{-0.8416086809286663, \
-2.745495834798372}, {-0.1484843777094072, -2.3459733485332146`}}}], 
                    
                    LineBox[{{-0.0019199718475340932`, -2.400000049591064}, \
{-0.0011200298309325973`, -1.400000049591064}}], 
                    
                    LineBox[{{{-0.0011200298309325973`, -1.400000049591064}, {
                    0.865280040359497, -0.9006000251770017}}, {{
                    0.14544437493742596`, -1.4540267536154152`}, {
                    0.838568716666296, -1.0545042638431124`}}}], 
                    
                    LineBox[{{0.865280040359497, -0.9006000251770017}, {
                    0.866080058670044, 0.0993999748229983}}], 
                    
                    LineBox[{{{0.866080058670044, 0.0993999748229983}, {
                    1.230138171275835, 0.30916204461260804`}}, {{
                    0.892818032314932, 0.2532995857978262}, {
                    1.2135528897085892`, 0.4380997734904399}}}], 
                    
                    LineBox[{{2.2343573680825815`, 0.308350609754407}, {
                    2.5980798755645753`, 0.09799998092651392}}], 
                    
                    LineBox[{{2.5980798755645753`, 0.09799998092651392}, {
                    3.4644800220489502`, 0.597200019836426}}], 
                    
                    LineBox[{{1.7329529501774459`, 1.189786482467043}, {
                    1.733280070877075, 1.5986000328063967`}}], 
                    
                    LineBox[{{{1.733280070877075, 1.5986000328063967`}, {
                    2.599679912185669, 2.097999980926514}}, {{
                    1.7599913871520698`, 1.7525042727599967`}, {
                    2.4531155048132156`, 2.15202667788644}}}], 
                    
                    LineBox[{{2.599679912185669, 2.097999980926514}, {
                    2.6004800830841064`, 3.097799938201905}}], 
                    
                    LineBox[{{{2.6004800830841064`, 3.097799938201905}, {
                    1.734880107498169, 3.5986001091003423`}}, {{
                    2.453828747428802, 3.044009648712506}, {
                    1.7613432162290514`, 3.44465299685352}}}], 
                    
                    LineBox[{{1.734880107498169, 3.5986001091003423`}, {
                    0.868479961013794, 3.0993999748229983`}}], 
                    
                    LineBox[{{{0.868479961013794, 3.0993999748229983`}, {
                    0.867679942703247, 2.0993999748229983`}}, {{
                    0.9883999603600746, 2.9993040046262607`}, {
                    0.9877599456604336, 2.199303940623362}}}], 
                    
                    LineBox[{{0.867679942703247, 2.0993999748229983`}, {
                    0.001280025100708041, 1.600000026702881}}], 
                    
                    LineBox[{{{0.001280025100708041, 1.600000026702881}, {
                    0.0004800067901611616, 0.6000000076293948}}, {{
                    0.12120002444851599`, 1.4999040565079735`}, {
                    0.12056000974582318`, 0.6999039734315905}}}], 
                    
                    LineBox[{{-0.0011200298309325973`, -1.400000049591064}, \
{-0.36484253946679385`, -1.1896493788650382`}}], 
                    
                    LineBox[{{0.0004800067901611616, 0.6000000076293948}, {
                    0.866080058670044, 0.0993999748229983}}], 
                    
                    LineBox[{{-1.7339200176239014`, -2.398599903106689}, \
{-1.7331199993133546`, -1.3986000556945797`}}], 
                    
                    LineBox[{{0.867679942703247, 2.0993999748229983`}, {
                    1.733280070877075, 1.5986000328063967`}}]}, {
                    RGBColor[0.4, 0.4, 0.4]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    LineBox[{{-0.866247052901292, -0.30821350035447487`}, \
{-0.8665741043911461, -0.7170270029977683}}], 
                    
                    LineBox[{{-1.005003618710198, -0.9790758214759993}, \
{-1.3690618090117763`, -1.1888379385852894`}}], 
                    
                    LineBox[{{{1.230138171275835, 0.30916204461260804`}, {
                    1.594196283881626, 0.5189241144022178}}, {{
                    1.2135528897085892`, 0.4380997734904399}, {
                    1.5342877471022465`, 0.6228999611830536}}}], 
                    
                    LineBox[{{1.8706348606005876`, 0.5187012385823001}, {
                    2.2343573680825815`, 0.308350609754407}}], 
                    
                    LineBox[{{1.7326258294778167`, 0.7809729321276893}, {
                    1.7329529501774459`, 1.189786482467043}}], 
                    
                    LineBox[{{-0.36484253946679385`, -1.1896493788650382`}, \
{-0.7285650491026551, -0.9792987081390123}}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609]}, StripOnInput -> 
                    False]}}, {
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-1.731520038986206, 0.6014000205993655}, 0.2]}, 
                    "1"], Annotation[#, 1, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-0.865920001411438, 0.10060000228881867`}, 0.2]},
                     "2"], Annotation[#, 2, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.292, 0.438, 0.889], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-0.9513151142496044, -1.0067728734753452`}, \
{-0.9513151142496044, -0.7920269693591268}, {-0.9221646046412386, \
-0.7920269693591268}, {-0.8093715674632695, -0.9606301915994844}, \
{-0.8093715674632695, -0.7920269693591268}, {-0.7821248918157642, \
-0.7920269693591268}, {-0.7821248918157642, -1.0067728734753452`}, \
{-0.8112759014242947, -1.0067728734753452`}, {-0.9240689386022638, \
-0.8380219845196482}, {-0.9240689386022638, -1.0067728734753452`}}}]}}, "3"], 
                    Annotation[#, 3, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-1.7331199993133546`, -1.3986000556945797`}, 
                    0.2]}, "4"], Annotation[#, 4, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-2.5987200511932373`, -0.8979999275207518}, 
                    0.2]}, "5"], Annotation[#, 5, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-3.465119892501831, -1.3972000617980953`}, 0.2]},
                     "6"], Annotation[#, 6, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-3.4659200634002687`, -2.3972000617980953`}, 
                    0.2]}, "7"], Annotation[#, 7, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-2.6003199352264406`, -2.8979999275207513`}, 
                    0.2]}, "8"], Annotation[#, 8, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-1.7339200176239014`, -2.398599903106689}, 0.2]},
                     "9"], Annotation[#, 9, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-0.8683200015068053, -2.8994000740051264`}, 
                    0.2]}, "10"], Annotation[#, 10, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-0.0019199718475340932`, -2.400000049591064}, 
                    0.2]}, "11"], Annotation[#, 11, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-0.0011200298309325973`, -1.400000049591064}, 
                    0.2]}, "12"], Annotation[#, 12, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{0.865280040359497, -0.9006000251770017}, 0.2]}, 
                    "13"], Annotation[#, 13, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{0.866080058670044, 0.0993999748229983}, 0.2]}, 
                    "14"], Annotation[#, 14, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{1.6478847887617174`, 0.4912270616748012}, {
                    1.6478847887617174`, 0.7059729657910196}, {
                    1.6770352983700831`, 0.7059729657910196}, {
                    1.7898283355480522`, 0.537369743550662}, {
                    1.7898283355480522`, 0.7059729657910196}, {
                    1.8170750111955576`, 0.7059729657910196}, {
                    1.8170750111955576`, 0.4912270616748012}, {
                    1.787924001587027, 0.4912270616748012}, {
                    1.675130964409058, 0.6599779506304984}, {
                    1.675130964409058, 0.4912270616748012}}}]}, {
                    RGBColor[0.292, 0.438, 0.889], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{1.9536150562008319`, 
                    0.6774362897183144}, {1.9121700425400467`, 
                    0.6774362897183144}, {1.9121700425400467`, 
                    0.6359912760575294}, {1.8948067034835439`, 
                    0.6359912760575294}, {1.8948067034835439`, 
                    0.6774362897183144}, {1.8533633564899747`, 
                    0.6774362897183144}, {1.8533633564899747`, 
                    0.6947996287748174}, {1.8948067034835439`, 
                    0.6947996287748174}, {1.8948067034835439`, 
                    0.7362429757683864}, {1.9121700425400467`, 
                    0.7362429757683864}, {1.9121700425400467`, 
                    0.6947996287748174}, {1.9536150562008319`, 
                    0.6947996287748174}}}]}}, "15"], 
                    Annotation[#, 15, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{2.5980798755645753`, 0.09799998092651392}, 0.2]},
                     "16"], Annotation[#, 16, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{3.4644800220489502`, 0.597200019836426}, 0.2]}, 
                    "17"], Annotation[#, 17, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{1.733280070877075, 1.5986000328063967`}, 0.2]}, 
                    "18"], Annotation[#, 18, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{2.599679912185669, 2.097999980926514}, 0.2]}, 
                    "19"], Annotation[#, 19, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{2.6004800830841064`, 3.097799938201905}, 0.2]}, 
                    "20"], Annotation[#, 20, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{1.734880107498169, 3.5986001091003423`}, 0.2]}, 
                    "21"], Annotation[#, 21, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{0.868479961013794, 3.0993999748229983`}, 0.2]}, 
                    "22"], Annotation[#, 22, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{0.867679942703247, 2.0993999748229983`}, 0.2]}, 
                    "23"], Annotation[#, 23, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{0.001280025100708041, 1.600000026702881}, 0.2]}, 
                    "24"], Annotation[#, 24, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{0.0004800067901611616, 0.6000000076293948}, 
                    0.2]}, "25"], Annotation[#, 25, "Tooltip"]& ]}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, ImageSizeRaw -> 
                  360.9973338175722}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   AbsoluteThickness[1.3], {
                    StyleBox[{
                    
                    LineBox[{{-1.661546173829299, -2.152376920251319}, \
{-1.4507461555187522`, -1.1745769416225644`}}], 
                    
                    LineBox[{{-1.4507461555187522`, -1.1745769416225644`}, \
{-1.7622821112171694`, -0.8926230682350368}}], 
                    
                    LineBox[{{-2.759547963333618, -0.6224379558843054}, \
{-3.170746079224807, -0.7085769568813536}}], 
                    
                    LineBox[{{{-3.170746079224807, -0.7085769568813536}, \
{-3.673146286744338, -1.5731769095791075`}}, {{-3.3247421969537925`, \
-0.7347500681737328}, {-3.726659300535397, -1.4264247600707587`}}}], 
                    
                    LineBox[{{-3.673146286744338, -1.5731769095791075`}, \
{-4.673146286744338, -1.5703769217861387`}}], 
                    
                    LineBox[{{{-4.673146286744338, -1.5703769217861387`}, \
{-5.170746079224807, -0.7029769812954161}}, {{-4.618818545492424, \
-1.4239244292816138`}, {-5.016897792813395, -0.7300054995417977}}}], 
                    
                    LineBox[{{-5.170746079224807, -0.7029769812954161}, \
{-4.668346176881056, 0.1616230858432557}}], 
                    
                    LineBox[{{{-4.668346176881056, 
                    0.1616230858432557}, {-3.668346176881057, 
                    0.15882309805028694`}}, {{-4.568682564180426, 
                    0.041344241760925285`}, {-3.768681780191872, 
                    0.03910424933139191}}}], 
                    
                    LineBox[{{-3.668346176881057, 
                    0.15882309805028694`}, {-3.395182632143982, 
                    0.46047515769213704`}}], 
                    
                    LineBox[{{-2.467741663278932, 
                    0.6624758237576709}, {-2.0847461707775414`, 
                    0.49062317739599015`}}], 
                    
                    LineBox[{{{-2.0847461707775414`, 
                    0.49062317739599015`}, {-1.2173461539928732`, 
                    0.9882229698764591}}, {{-2.057717646690418, 
                    0.6444714627812834}, {-1.3637986444348837`, 
                    1.0425507166883385`}}}], 
                    
                    LineBox[{{-1.2173461539928732`, 
                    0.9882229698764591}, {-0.35274614407466043`, 
                    0.48582306753270865`}}], 
                    
                    LineBox[{{{-0.35274614407466043`, 0.48582306753270865`}, {
                    0.5146538536365212, 
                    0.9834231651889587}}, {{-0.3257176621732916, 
                    0.6396713603293148}, {0.36820134829765233`, 
                    1.0377508718430362`}}}], 
                    
                    LineBox[{{0.5146538536365212, 0.9834231651889587}, {
                    1.3792539207751928`, 0.4810229576694276}}], 
                    
                    LineBox[{{{1.3792539207751928`, 0.4810229576694276}, {
                    1.743833482924728, 0.6901226224012693}}, {{
                    1.5257010251186178`, 0.4266806936408757}, {
                    1.8469078675409696`, 0.6109045230406689}}}], 
                    
                    LineBox[{{2.2485090256678792`, 1.569808637053657}, {
                    2.2496537010486306`, 1.9786230553256776`}}], 
                    
                    LineBox[{{2.2496537010486306`, 1.9786230553256776`}, {
                    3.117053908568162, 2.476223152981927}}], 
                    
                    LineBox[{{2.74814849977951, 0.6873318365070402}, {
                    3.1114539329822244`, 0.47622315298192763`}}], 
                    
                    LineBox[{{{3.1114539329822244`, 0.47622315298192763`}, {
                    3.978853835325974, 0.9738229454623966}}, {{
                    3.1384824483082348`, 0.6300714399063991}, {
                    3.8324013417901917`, 1.028150683934327}}}], 
                    
                    LineBox[{{3.978853835325974, 0.9738229454623966}, {
                    4.843053969603319, 0.4714230431186466}}], 
                    
                    LineBox[{{{4.843053969603319, 0.4714230431186466}, {
                    4.840654067259568, -0.5285769568813536}}, {{
                    4.722815008837405, 0.37171131690625053`}, {
                    4.720895085580179, -0.42828925904438786`}}}], 
                    
                    LineBox[{{4.840654067259568, -0.5285769568813536}, {
                    3.9732538597400366`, -1.0261769019497131`}}], 
                    
                    LineBox[{{{3.9732538597400366`, -1.0261769019497131`}, {
                    3.1086539451892556`, -0.5237768470180724}}, {{
                    3.94708073108162, -0.8721807871722524}, {
                    3.255406088662977, -0.47026381667787326`}}}], 
                    
                    LineBox[{{3.1086539451892556`, -0.5237768470180724}, {
                    2.2410538475330055`, -1.0213769446743224`}}], 
                    LineBox[{{{2.2410538475330055`, -1.0213769446743224`}, {
                    1.3764537803943337`, -0.5189768897426819}}, {{
                    2.2148807070685006`, -0.867380831903421}, {
                    1.5232059197654868`, -0.4654638481517526}}}], 
                    
                    LineBox[{{-2.0847461707775414`, 
                    0.49062317739599015`}, {-2.1286526699935866`, 
                    0.08418160300364269}}], 
                    
                    LineBox[{{1.3764537803943337`, -0.5189768897426819}, {
                    1.3792539207751928`, 0.4810229576694276}}], 
                    
                    LineBox[{{-3.668346176881057, 
                    0.15882309805028694`}, {-3.170746079224807, \
-0.7085769568813536}}], 
                    
                    LineBox[{{3.1086539451892556`, -0.5237768470180724}, {
                    3.1114539329822244`, 0.47622315298192763`}}]}, {
                    RGBColor[0.4, 0.4, 0.4]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    LineBox[{{-1.7622821112171694`, -0.8926230682350368}, \
{-2.0738180669155866`, -0.6106691948475091}}], 
                    
                    LineBox[{{-2.3483498474424294`, -0.5362989548872572}, \
{-2.759547963333618, -0.6224379558843054}}], 
                    
                    LineBox[{{{1.743833482924728, 0.6901226224012693}, {
                    2.108413045074263, 0.899222287133111}}, {{
                    1.8469078675409696`, 0.6109045230406689}, {
                    2.168114709963321, 0.795128352440462}}}], 
                    
                    LineBox[{{2.247364350287128, 1.1609942187816364`}, {
                    2.2485090256678792`, 1.569808637053657}}], 
                    
                    LineBox[{{2.3848430665767952`, 0.8984405200321527}, {
                    2.74814849977951, 0.6873318365070402}}], 
                    
                    LineBox[{{-2.1286526699935866`, 
                    0.08418160300364269}, {-2.172559169209632, \
-0.32225997138870477`}}]}, {
                    RGBColor[0.291989, 0.437977, 0.888609]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    LineBox[{{-3.395182632143982, 
                    0.46047515769213704`}, {-3.1220190874069074`, 
                    0.7621272173339871}}], 
                    LineBox[{{-2.8507371557803225`, 
                    0.8343284701193515}, {-2.467741663278932, 
                    0.6624758237576709}}]}, {
                    RGBColor[0.602953, 0.646767, 0.0900267]}, StripOnInput -> 
                    False]}}, {
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-1.661546173829299, -2.152376920251319}, 0.2]}, 
                    "1"], Annotation[#, 1, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-1.4507461555187522`, -1.1745769416225644`}, 
                    0.2]}, "2"], Annotation[#, 2, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.292, 0.438, 0.889], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-2.27674082740821, -0.610949262230222}, \
{-2.27674082740821, -0.3962046515324855}, {-2.2475904933738935`, \
-0.3962046515324855}, {-2.1347981355504366`, -0.5648068582725724}, \
{-2.1347981355504366`, -0.3962046515324855}, {-2.1075516240101537`, \
-0.3962046515324855}, {-2.1075516240101537`, -0.610949262230222}, \
{-2.1367024580416234`, -0.610949262230222}, {-2.2494948158650807`, \
-0.4421993896641949}, {-2.2494948158650807`, -0.610949262230222}}}]}}, "3"], 
                    Annotation[#, 3, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-3.170746079224807, -0.7085769568813536}, 0.2]}, 
                    "4"], Annotation[#, 4, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-3.673146286744338, -1.5731769095791075`}, 0.2]},
                     "5"], Annotation[#, 5, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-4.673146286744338, -1.5703769217861387`}, 0.2]},
                     "6"], Annotation[#, 6, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-5.170746079224807, -0.7029769812954161}, 0.2]}, 
                    "7"], Annotation[#, 7, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-4.668346176881056, 0.1616230858432557}, 0.2]}, 
                    "8"], Annotation[#, 8, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-3.668346176881057, 0.15882309805028694`}, 0.2]},
                     "9"], Annotation[#, 9, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.603, 0.647, 0.09], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxd1WlQU1cUB3AiyL0UUWRGWpIqZVEctQViKmoZjyBYhILbGJeqSEwMiFaW
2qGtS6O4INaKSHjEIi5gwJXGaGm1erC21TzAXVFKi4LQvCwvUtxZ+vqhZKYf
zoffzPvf++aec98LUKyZo3J1cXERCbVCqAFCRfq3T5BVUQyZmR3O7LGAqWQN
l5hF0fv7STvYCgvM83WRG9dQrPpxylk20QJBH9Rs0qdRHHRnRQEz0AJLyp5t
DVlGcbK7QSKt50Dr+n6+Xk4xLaKngt3LwbW903Z1fEgx+N7OGKmaA/e5gbs7
xlOs395eqorhQFWZXNnhT/FO8y+lTAAH49qGVqs9hP3OZsVLvTlY4j5Jr3aQ
fkfEGtfLHji9lZT9pfuVYMjD3C9VwznIbpvfqztDMGhCVTMbITw/xtCjKyfo
n18P0jkc2K9DZVcxQYlv0ybVZxzEHZ12Q/8NwZwv5ieqyjlgxUe8P95GcO0H
SZmqmxy0nXtRIttMcOO3nksZN0u/G+W5v/ZOdjrFb5hImmWBk4k++2VCvlOl
bVEeskBUZuwRmbB+/dPuNxnWAid6/BiZsH/lluUz2S4LjB097qpaeL8Ylyi7
8k0rFC4cHtRwluABVVGXcrwVHg9qe6W7RLAm9WoAG2uFhqWwy/g7QXNFJ6NU
WGHWzNBm8UCK0uFDF4XnWeEW+I/TvEuxZAMO7jllBb+hf3D1MygWBM34rfi2
FUb+nO4nWkSxK/LDy33PrDBmyNgRIqG/PilVqT2BNnBxvJWp3yDMA881ahfa
4Hlh55Su7RTDOzyH1elsYI+oGxRVKOSnqm72NNnA7PFDtpqheDjm8p3eYHu/
X8xNOcCudTr8jL2MabDD+ecvqsR7KPrN8h3FBPCguJXjq9lC0RDcKDV9woPH
qRebOnIoxr8sge5zPOS0V/poVlCcVT3XVPSMB1Hl9M7EJIqPyjelJQxxQH5a
2w3xBIqlmU22hCAHZAzJXCWTULxLyzPi33VAU1hCo66H9LvGVDVd1Oz0SrQu
jkKCwQWifaZAB1z94ozbx3qCFw6e501eDnDZ76/9dBdBo5Lfrn3Cw4YwdXTS
lwQz+i5I2NM8dLle+71jNUH12nf8whQ8iKs+j9csI6jPm1HEePMwn2tcnbSQ
oMHWci/MaAdJy2R10gKC1+FkcvdHdpjVGtUt3k3w24uFkeGRdhg44G1vSSFB
cQC/UnHMDn82pqRHlRJ8us6kVfbZwa0vM3jXSYKlWu2lsIk8zDnf8veDiwSn
Vyvs3Rk8hN5+Vau+L+R/inNb/jUPWadScmSvnX6jJGu/egTt92VxpsNrIsUF
V2ZvYbJ5MLHnckPiKEYfup3XDTxcW+fuF7WA4lqxv5dyEA+z74xtTRTu++nR
Oy6HCv38z9Hpze8t3+L0bfnii6HT7TDjas9ZnTBvN1s82sN97DDxu4NLZTMp
Hq2TVyjMNvB0Wx0siqFokqe3atEGZV3LImpHUZx6ofAVq7UBaxmh+fQ5wUtK
uqo33QbXEzYYQ64QjPVc3xwWZQOTIaPIKPTrUd6P6azEBnvyir0kWoJzol8W
m15b4bfI/PWadQSP31iwp7jOClemhjbr0gj2rnw6kt1thXtJOX+qlxAcOO9B
mTLOCu2Lax/KZhM8sW9Sdm+fBWytjxWSBIKeB/LHMMedrr0Q7y9Ncto9T7+T
cXCwqMD7eIOQj16cNl/FcHDYzbhUlkzQt+iN+0wsB+uTPZ7oVhGMywwX1XWa
YV53rWfTRoLjT7hXqwxmcI3ZyHQxwnzG7XisyjVDdX7kyMEGgve3Fdaq5Gag
oz0CkxoIvt7s47ECzPBIszXHaHM61XXaVM0w2u/yimPsA+F+TKi5G1gi5LWp
KK6dLZz/O8nyvn/XvzT+K/0qivg4pVV12gx7c+7RWg1F1vCkQPrSDAU1qQ+9
CijWbRusUMmF73XKvsOLDlBc80NFPnOag/ChuenqSooDmv829L5tgf//T/4B
89EkPw==
                    "]]}}, "10"], Annotation[#, 10, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-2.0847461707775414`, 0.49062317739599015`}, 
                    0.2]}, "11"], Annotation[#, 11, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{-1.2173461539928732`, 0.9882229698764591}, 0.2]},
                     "12"], Annotation[#, 12, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{-0.35274614407466043`, 0.48582306753270865`}, 
                    0.2]}, "13"], Annotation[#, 13, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{0.5146538536365212, 0.9834231651889587}, 0.2]}, 
                    "14"], Annotation[#, 14, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{1.3792539207751928`, 0.4810229576694276}, 0.2]}, 
                    "15"], Annotation[#, 15, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{{
                    RGBColor[0.291989, 0.437977, 0.888609], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{2.1622591115566334`, 0.8712507499768094}, {
                    2.1622591115566334`, 1.0859953606745458`}, {
                    2.19140944559095, 1.0859953606745458`}, {
                    2.304201803414407, 0.9173931539344589}, {
                    2.304201803414407, 1.0859953606745458`}, {
                    2.33144831495469, 1.0859953606745458`}, {2.33144831495469,
                     0.8712507499768094}, {2.30229748092322, 
                    0.8712507499768094}, {2.189505123099763, 
                    1.0400006225428364`}, {2.189505123099763, 
                    0.8712507499768094}}}]}, {
                    RGBColor[0.292, 0.438, 0.889], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{2.467987537576793, 
                    1.057458856478759}, {2.4265427735400777`, 
                    1.057458856478759}, {2.4265427735400777`, 
                    1.0160140924420442`}, {2.4091795390632815`, 
                    1.0160140924420442`}, {2.4091795390632815`, 
                    1.057458856478759}, {2.367736441683744, 
                    1.057458856478759}, {2.367736441683744, 
                    1.0748220909555553`}, {2.4091795390632815`, 
                    1.0748220909555553`}, {2.4091795390632815`, 
                    1.1162651883350925`}, {2.4265427735400777`, 
                    1.1162651883350925`}, {2.4265427735400777`, 
                    1.0748220909555553`}, {2.467987537576793, 
                    1.0748220909555553`}}}]}}, "16"], 
                    Annotation[#, 16, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{2.2496537010486306`, 1.9786230553256776`}, 0.2]},
                     "17"], Annotation[#, 17, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{3.117053908568162, 2.476223152981927}, 0.2]}, 
                    "18"], Annotation[#, 18, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{3.1114539329822244`, 0.47622315298192763`}, 
                    0.2]}, "19"], Annotation[#, 19, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{3.978853835325974, 0.9738229454623966}, 0.2]}, 
                    "20"], Annotation[#, 20, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{4.843053969603319, 0.4714230431186466}, 0.2]}, 
                    "21"], Annotation[#, 21, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{4.840654067259568, -0.5285769568813536}, 0.2]}, 
                    "22"], Annotation[#, 22, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{3.9732538597400366`, -1.0261769019497131`}, 
                    0.2]}, "23"], Annotation[#, 23, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{3.1086539451892556`, -0.5237768470180724}, 0.2]},
                     "24"], Annotation[#, 24, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    
                    DiskBox[{2.2410538475330055`, -1.0213769446743224`}, 
                    0.2]}, "25"], Annotation[#, 25, "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[{
                    Opacity[0], 
                    EdgeForm[None], 
                    DiskBox[{1.3764537803943337`, -0.5189768897426819}, 0.2]},
                     "26"], Annotation[#, 26, "Tooltip"]& ]}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, ImageSizeRaw -> 
                  427.69296059034684`}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{121., {208.634033203125, 214.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{121., {208.634033203125, 214.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.880114884078825*^9, 3.8801301347941017`*^9, {3.880132064844469*^9, 
   3.880132078661066*^9}, 3.88021292277827*^9, 3.8802132441789017`*^9, 
   3.880213448359321*^9, 3.880213766982586*^9, 3.880214101634626*^9, 
   3.888757606870596*^9, 3.8887577457739077`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"15a6bd5f-c8b5-4f72-80ee-5df7999c5852"]
}, Open  ]],

Cell["\<\
Run the code block above to visualize a few different sets of molecular \
structures; each time you run the code, it will select a different \
RandomSample.  How similar are the molecular structures in the dataset? Are \
there any common structural features? Do you notice any closely-related \
molecules in the dataset?\
\>", "Text",
 CellChangeTimes->{{3.8735596612656584`*^9, 3.873559733880747*^9}, {
  3.8738002945848913`*^9, 3.8738003172392163`*^9}, {3.883646099877529*^9, 
  3.883646116528674*^9}},ExpressionUUID->"2f56c57c-c217-4f6b-a739-\
9b37b03c16cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Identifying dependent (y) and independent variables (X)", "Subsection",
 CellChangeTimes->{{3.87225235543381*^9, 3.872252364291102*^9}, {
   3.8726107089494877`*^9, 3.872610712540204*^9}, {3.872766103126659*^9, 
   3.8727661036225023`*^9}, {3.8801310014081554`*^9, 3.8801310015928392`*^9}, 
   3.8801321101564674`*^9},ExpressionUUID->"69fd5042-9ba6-41ee-a806-\
699169ceb939"],

Cell["\<\
Next we need to split our dataset into dependent and independent variables. \
An independent variable does not depend on other variables, whereas a \
dependent variable is affected by independent variables and changes \
accordingly. Independent and dependent variables are commonly indicated as X \
and y:\
\>", "Text",
 CellChangeTimes->{{3.872766098830611*^9, 3.872766112478738*^9}, 
   3.872858895714513*^9, {3.880132445354288*^9, 3.8801324513583155`*^9}, {
   3.88013251380087*^9, 3.880132599419283*^9}, {3.8801329593553658`*^9, 
   3.8801330498355036`*^9}},ExpressionUUID->"22e2c23d-2937-44b1-83d2-\
ab25b8c03c45"],

Cell[TextData[StyleBox["X is an array of independent variables", "Item"]], \
"Item",
 CellChangeTimes->{{3.872766098830611*^9, 3.872766112478738*^9}, 
   3.872858895714513*^9, {3.8728589265543504`*^9, 3.872858932450983*^9}, {
   3.8801310035183525`*^9, 3.880131003655984*^9}, 
   3.8801321124155183`*^9},ExpressionUUID->"7c8df0f1-df71-4f7f-80b5-\
d184da2b5181"],

Cell[TextData[StyleBox["y is the dependent variable", "Item"]], "Item",
 CellChangeTimes->{{3.872766098830611*^9, 3.872766112478738*^9}, 
   3.872858895714513*^9, {3.8728589265543504`*^9, 3.8728589479140463`*^9}, {
   3.880133017091695*^9, 3.88013301758319*^9}, {3.880133059024516*^9, 
   3.880133059232217*^9}},ExpressionUUID->"b0fdf1d9-4ad0-4f62-afdb-\
4b62c5eef0a5"],

Cell[TextData[{
 "In regression analysis, the dependent variables that we want to predict is \
referred to as a target value. In our dataset, MaxAbsorbanceWavelength is the \
target value (",
 StyleBox["i.e.",
  FontSlant->"Italic"],
 ", the dependent variable, y), and the 13 features are the independent \
variables (",
 StyleBox["i.e.",
  FontSlant->"Italic"],
 ", X)",
 ". We will omit the non-numerical variables in our dataset (the SMILES and \
InChIKey molecular identifiers)."
}], "Text",
 CellChangeTimes->{{3.872766098830611*^9, 3.872766112478738*^9}, 
   3.872858895714513*^9, {3.8728589804795504`*^9, 3.872858984117346*^9}, {
   3.8728590767713747`*^9, 3.8728590814289236`*^9}, {3.8801298637445207`*^9, 
   3.880129866449108*^9}, {3.8801321054422193`*^9, 3.880132147385645*^9}, {
   3.880132179985832*^9, 3.880132181767729*^9}, {3.880133051977749*^9, 
   3.8801330707974625`*^9}},ExpressionUUID->"213f01a9-5ac6-4d86-a36e-\
f554a5b537e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xyPairs", " ", "=", 
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"noIdentifiers", "=", 
       RowBox[{
        RowBox[{"KeyDrop", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<SMILES\>\"", ",", "\"\<InChIKey\>\""}], "}"}], "]"}], 
        "@", "dataset"}]}], "}"}], ",", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"ResourceFunction", "[", "\"\<TableToTrainingSet\>\"", "]"}], 
      "[", " ", 
      RowBox[{"noIdentifiers", ",", "\"\<MaxAbsorbanceWavelength\>\""}], 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.872252370817403*^9, 3.8722523720602818`*^9}, {
   3.8722525077090673`*^9, 3.872252521176014*^9}, {3.872252565411621*^9, 
   3.8722526028946257`*^9}, {3.8722526380967093`*^9, 3.872252681825602*^9}, {
   3.8722527188004513`*^9, 3.872252744992679*^9}, {3.872252777552635*^9, 
   3.872252831933113*^9}, {3.872252863235839*^9, 3.872252866259233*^9}, {
   3.872252897677009*^9, 3.8722529077621107`*^9}, 3.872252973104417*^9, 
   3.872609583713146*^9, 3.872610078199749*^9, {3.872610700386497*^9, 
   3.872610729987986*^9}, {3.872610885300468*^9, 3.8726108857396708`*^9}, 
   3.8801298806765823`*^9},
 CellLabel->"In[70]:=",ExpressionUUID->"0da29227-5ff1-4f11-a4eb-a8cf62090d58"],

Cell["\<\
The output is in the form of a list of Association --> value rule pairs.  Let \
us display the first two below:\
\>", "Text",
 CellChangeTimes->{{3.8726100838476963`*^9, 3.872610105423666*^9}, {
  3.872755405208975*^9, 
  3.872755414330222*^9}},ExpressionUUID->"0e6d87f7-d65e-4a5c-98d8-\
4d66c1812ef2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xyPairs", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.872252370817403*^9, 3.8722523720602818`*^9}, {
   3.8722525077090673`*^9, 3.872252521176014*^9}, {3.872252565411621*^9, 
   3.8722526028946257`*^9}, {3.8722526380967093`*^9, 3.872252681825602*^9}, {
   3.8722527188004513`*^9, 3.872252744992679*^9}, {3.872252777552635*^9, 
   3.872252831933113*^9}, {3.872252863235839*^9, 3.872252866259233*^9}, {
   3.872252897677009*^9, 3.8722529077621107`*^9}, 3.872252973104417*^9, 
   3.872609583713146*^9, {3.872610078199749*^9, 3.87261008243816*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"f78608e5-6411-4fca-ac2e-dfa8f89e4578"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"AromaticRingCount\"\>", "\[Rule]", "3"}], ",", 
      RowBox[{"\<\"HBondDonorCount\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"HBondAcceptorCount\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"FractionCarbonSP3\"\>", "\[Rule]", "0.173913043`"}], ",", 
      RowBox[{"\<\"HeteroatomCount\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"HeterocycleCount\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"RotatableBondCount\"\>", "\[Rule]", "3"}], ",", 
      RowBox[{"\<\"MolecularMass\"\>", "\[Rule]", "327.451`"}], ",", 
      RowBox[{"\<\"DegreeOfUnsaturation\"\>", "\[Rule]", "13"}], ",", 
      RowBox[{"\<\"MinEllipsoidLength\"\>", "\[Rule]", "121.7298744`"}], ",", 
      RowBox[{"\<\"MaxDistance\"\>", "\[Rule]", "13.50310487`"}], ",", 
      RowBox[{"\<\"LongestPiChain\"\>", "\[Rule]", "12"}], ",", 
      RowBox[{"\<\"LinkerLength\"\>", "\[Rule]", "2"}]}], 
     "\[RightAssociation]"}], "\[Rule]", "529"}], ",", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"AromaticRingCount\"\>", "\[Rule]", "3"}], ",", 
      RowBox[{"\<\"HBondDonorCount\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"HBondAcceptorCount\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"FractionCarbonSP3\"\>", "\[Rule]", "0.16`"}], ",", 
      RowBox[{"\<\"HeteroatomCount\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"HeterocycleCount\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"RotatableBondCount\"\>", "\[Rule]", "4"}], ",", 
      RowBox[{"\<\"MolecularMass\"\>", "\[Rule]", "353.489`"}], ",", 
      RowBox[{"\<\"DegreeOfUnsaturation\"\>", "\[Rule]", "14"}], ",", 
      RowBox[{"\<\"MinEllipsoidLength\"\>", "\[Rule]", "324.7678311`"}], ",", 
      RowBox[{"\<\"MaxDistance\"\>", "\[Rule]", "16.75756006`"}], ",", 
      RowBox[{"\<\"LongestPiChain\"\>", "\[Rule]", "14"}], ",", 
      RowBox[{"\<\"LinkerLength\"\>", "\[Rule]", "4"}]}], 
     "\[RightAssociation]"}], "\[Rule]", "626"}]}], "}"}]], "Output",
 CellChangeTimes->{3.88011488656771*^9, 3.880130136367298*^9, 
  3.8801321727977424`*^9, 3.8802129243633957`*^9, 3.8802132453141108`*^9, 
  3.8802134493403387`*^9, 3.8802137680501394`*^9, 3.8802141025895576`*^9, 
  3.888757609202687*^9, 3.888757751237612*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"a54d60b5-3f20-404c-a831-af5d61255e82"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Split Train & Test Data", "Subsection",
 CellChangeTimes->{{3.872252915242056*^9, 3.87225291790611*^9}, {
  3.883646538951481*^9, 3.883646564479995*^9}},
 CellTags->"splithref",ExpressionUUID->"5e105410-b066-4c5f-b81b-c04a8a06d8b6"],

Cell["\<\
We will use most of our dataset to train our regression models; this portion \
is the \[OpenCurlyDoubleQuote]training\[CloseCurlyDoubleQuote] dataset. To \
evaluate model performance, however, we will need a test dataset.  We will \
randomly split our data into a training and test set; by default this \
function does an 80/20% split with a random shuffle of the items.  (Note that \
because this train/test split is random, you will find that the regression \
results vary each time you run the notebook.)\
\>", "Text",
 CellChangeTimes->{{3.872253133450953*^9, 3.872253155846546*^9}, 
   3.8726093707251673`*^9, {3.8726094119083147`*^9, 3.872609418984922*^9}, {
   3.872755421598379*^9, 3.872755423488357*^9}, {3.872760871879418*^9, 
   3.8727608734791937`*^9}, {3.8727661290067863`*^9, 3.872766180590971*^9}, {
   3.8728593847295647`*^9, 3.872859391689659*^9}, {3.8728594273267508`*^9, 
   3.8728594517202587`*^9}, {3.872859485300005*^9, 3.872859497299257*^9}, 
   3.8801321917514744`*^9, {3.880132232719516*^9, 3.8801322415584536`*^9}, {
   3.880213534369033*^9, 
   3.8802135912846613`*^9}},ExpressionUUID->"8d1dcba8-5145-45b4-9094-\
daafe36098f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"train", ",", "test"}], "}"}], "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<TrainTestSplit\>\"", "]"}], "@", 
    "xyPairs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8722529232191887`*^9, 3.872252927011814*^9}, {
   3.872252963762579*^9, 3.872252992665698*^9}, 3.87260938756213*^9, {
   3.872609420298476*^9, 3.8726094209913588`*^9}, {3.8726100449506474`*^9, 
   3.872610046123721*^9}, {3.872610702951227*^9, 3.872610703854697*^9}, {
   3.872610928680358*^9, 3.872610930582663*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"30657f04-13e4-4e73-aac3-289a8efcbdff"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Scaling", "Subsection",
 CellChangeTimes->{{3.872253173477819*^9, 
  3.87225317840628*^9}},ExpressionUUID->"c016aab2-4218-40fd-904b-\
ff2d8691f804"],

Cell["\<\
Notice that our features span a wide range of different values, from less \
than 1 to greater than 100. Many machine learning models perform better when \
the variables are on the same scale, so it\[CloseCurlyQuote]s usually a good \
practice to rescale features before performing the analysis.\
\>", "Text",
 CellChangeTimes->{{3.8727614306671267`*^9, 3.8727614440711603`*^9}, {
  3.872761536909959*^9, 3.872761570009626*^9}, {3.872761682416349*^9, 
  3.8727616875361423`*^9}, {3.872761909406543*^9, 3.872761911342017*^9}, {
  3.872766188590856*^9, 3.872766190414858*^9}, {3.8728595265094185`*^9, 
  3.872859527953724*^9}, {3.8728595640453925`*^9, 3.872859592798806*^9}, {
  3.872859650104808*^9, 
  3.8728596509057426`*^9}},ExpressionUUID->"28e5c5af-bf9a-4df2-9a85-\
fcafbb75af96"],

Cell["https://en.wikipedia.org/wiki/Feature_scaling", "Item",
 CellChangeTimes->{3.8728596482121058`*^9, 
  3.872969977661688*^9},ExpressionUUID->"53e4cb0e-b7d3-405b-ac99-\
8ded7c52b29f"],

Cell["\<\
There are many methods that can be used to scale data. Two approaches are:\
\>", "Text",
 CellChangeTimes->{
  3.8728596623872423`*^9, {3.880132256331007*^9, 
   3.880132265024012*^9}},ExpressionUUID->"6c2e66e3-6796-4e90-b258-\
ee615b625342"],

Cell[TextData[{
 "Scaling: Scale our features in a specified range (",
 StyleBox["e.g.",
  FontSlant->"Italic"],
 ", between 0 and 1) without altering the distribution shape"
}], "Item",
 CellChangeTimes->{{3.8728596863804064`*^9, 3.872859709239026*^9}, {
  3.8801948617146482`*^9, 
  3.880194869554172*^9}},ExpressionUUID->"760b96bd-16d6-4c5f-b77c-\
c6937cb27d04"],

Cell["\<\
Normalizing: Scale our features, usually altering the distribution shape\
\>", "Item",
 CellChangeTimes->{{3.8728596863804064`*^9, 
  3.872859707439884*^9}},ExpressionUUID->"0667ec56-45bf-450d-a2fd-\
17b9efc204ef"],

Cell[TextData[{
 "For this analysis, let\[CloseCurlyQuote]s scale all of our features to \
range between 0 and 1, based on the minimum and maximum of the training set.  \
The functions ",
 StyleBox["minMaxFit",
  FontSlant->"Italic"],
 " and ",
 StyleBox["minMaxTransform",
  FontSlant->"Italic"],
 ", defined below, accomplish this task.  You do not need to modify these \
functions."
}], "Text",
 CellChangeTimes->{{3.872859756456582*^9, 3.8728597615847225`*^9}, {
  3.872967799717119*^9, 3.872967871834569*^9}, {3.872970002666725*^9, 
  3.872970014142337*^9}, {3.8836463040136766`*^9, 
  3.8836463117873983`*^9}},ExpressionUUID->"d7f43391-ed43-4a3b-8191-\
83fac739149d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"minMaxFit", "[", "d_List", "]"}], ":=", 
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"featureNames", " ", "=", " ", 
        RowBox[{"Keys", "@", 
         RowBox[{"First", "@", 
          RowBox[{"Keys", "[", "d", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"minMaxPairs", "=", 
        RowBox[{"MinMax", "/@", 
         RowBox[{"Transpose", "@", 
          RowBox[{"Values", "@", 
           RowBox[{"Keys", "[", "d", "]"}]}]}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AssociationThread", "[", 
      RowBox[{"featureNames", "->", "minMaxPairs"}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rescale", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "minMax_List"}], "}"}], "]"}], ":=", 
  RowBox[{"N", "@", 
   RowBox[{"Rescale", "[", 
    RowBox[{"x", ",", "minMax"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minMaxTransform", "[", "scale_Association", "]"}], "[", 
   RowBox[{"x_Association", "->", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Merge", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "scale"}], "}"}], ",", "rescale"}], "]"}], "->", 
   "y"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minMaxTransform", "[", "scale_Association", "]"}], "[", "l_List", 
   "]"}], ":=", 
  RowBox[{
   RowBox[{"minMaxTransform", "[", "scale", "]"}], "/@", "l"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.872761271239393*^9, 3.872761272783258*^9}, 
   3.872761467911261*^9, {3.8727617300884733`*^9, 3.872761774968581*^9}, {
   3.872761816920045*^9, 3.8727618255116377`*^9}, 3.872761938032195*^9, {
   3.872762033629884*^9, 3.872762056389908*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"f5d6a6f2-d5ff-4355-954d-cbd5d9e20b0c"],

Cell["\<\
We begin by determining the maximum and minimum of each feature:\
\>", "Text",
 CellChangeTimes->{{3.8727615116628237`*^9, 
  3.872761521837631*^9}},ExpressionUUID->"2524932a-7ce3-4057-a040-\
44a728d63127"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scale", "=", 
  RowBox[{"minMaxFit", "[", "train", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.872761323391097*^9, 3.8727613355190268`*^9}, {
   3.8727613754551687`*^9, 3.872761419303821*^9}, {3.87276148493495*^9, 
   3.872761524332254*^9}, 3.872766207903804*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"1f90197b-a8bd-4ed2-83d4-c753d4c5a2dc"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"AromaticRingCount\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"HBondDonorCount\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"HBondAcceptorCount\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "15"}], "}"}]}], ",", 
   RowBox[{"\<\"FractionCarbonSP3\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.465116279`"}], "}"}]}], ",", 
   RowBox[{"\<\"HeteroatomCount\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "20"}], "}"}]}], ",", 
   RowBox[{"\<\"HeterocycleCount\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"RotatableBondCount\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "22"}], "}"}]}], ",", 
   RowBox[{"\<\"MolecularMass\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"305.357`", ",", "936.051`"}], "}"}]}], ",", 
   RowBox[{"\<\"DegreeOfUnsaturation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"11", ",", "23"}], "}"}]}], ",", 
   RowBox[{"\<\"MinEllipsoidLength\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"97.29578328`", ",", "4405.333836`"}], "}"}]}], ",", 
   RowBox[{"\<\"MaxDistance\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10.89445232`", ",", "26.26523601`"}], "}"}]}], ",", 
   RowBox[{"\<\"LongestPiChain\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"7", ",", "19"}], "}"}]}], ",", 
   RowBox[{"\<\"LinkerLength\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "10"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8801148868357773`*^9, 3.8801301378279552`*^9, 
  3.8801322830620193`*^9, 3.880212924576957*^9, 3.880213245387163*^9, 
  3.8802134496485395`*^9, 3.8802137683498955`*^9, 3.88021410288982*^9, 
  3.888757609568076*^9, 3.888757763238732*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"5f4a38fd-f3a1-49d2-bf94-e909993aaea6"]
}, Open  ]],

Cell[TextData[{
 "Then we can apply this to transform the training and test sets to have \
input features between 0 and 1.  (",
 StyleBox["Be careful",
  FontWeight->"Bold"],
 ",  as this will replace the values in these datasets with the rescaled \
versions. ",
 StyleBox["You should only run this code once.",
  FontWeight->"Bold"],
 " If you accidentally run it twice, go back and regenerate the training and \
test sets in the section ",
 StyleBox[ButtonBox["Split Train & Test Data",
  BaseStyle->"Hyperlink",
  ButtonData->"splithref"],
  FontWeight->"Bold"],
 StyleBox[".",
  FontSlant->"Italic"],
 ")"
}], "Text",
 CellChangeTimes->{{3.872761507558578*^9, 3.87276153022434*^9}, {
  3.872761947086174*^9, 3.872761964117762*^9}, {3.872967881162163*^9, 
  3.8729678832912483`*^9}, {3.872970828205208*^9, 3.87297084666195*^9}, {
  3.883646325473769*^9, 3.883646367766527*^9}, {3.8836464149024563`*^9, 
  3.883646459602907*^9}, {3.883646584665721*^9, 
  3.883646584666812*^9}},ExpressionUUID->"e30785e0-b54e-49af-b923-\
2a495af03335"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"train", "=", 
   RowBox[{
    RowBox[{"minMaxTransform", "[", "scale", "]"}], "[", "train", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{
    RowBox[{"minMaxTransform", "[", "scale", "]"}], "[", "test", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.87276622787311*^9, {3.872774045641385*^9, 3.8727740502533712`*^9}, {
   3.8729707927135963`*^9, 3.8729708220686083`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"9f8c50b1-41f1-4752-a926-889cb86dbe4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"train", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "2"}], "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "visualize", " ", "the", " ", "first", " ", "few", " ", "as", " ", "an", 
    " ", "example"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.872610915109139*^9, 3.872610920194516*^9}, {
  3.872761972214754*^9, 3.872761982117681*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"273090b1-a844-447a-8be9-c3062e6c8feb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"AromaticRingCount\"\>", "\[Rule]", "0.`"}], ",", 
      RowBox[{"\<\"HBondDonorCount\"\>", "\[Rule]", "0.25`"}], ",", 
      RowBox[{"\<\"HBondAcceptorCount\"\>", "\[Rule]", "0.5`"}], ",", 
      RowBox[{"\<\"FractionCarbonSP3\"\>", "\[Rule]", 
       "0.18695652232804344`"}], ",", 
      RowBox[{"\<\"HeteroatomCount\"\>", "\[Rule]", "0.4444444444444444`"}], 
      ",", 
      RowBox[{"\<\"HeterocycleCount\"\>", "\[Rule]", "0.`"}], ",", 
      RowBox[{"\<\"RotatableBondCount\"\>", "\[Rule]", "0.15`"}], ",", 
      RowBox[{"\<\"MolecularMass\"\>", "\[Rule]", "0.25697723460188293`"}], 
      ",", 
      RowBox[{"\<\"DegreeOfUnsaturation\"\>", "\[Rule]", 
       "0.5833333333333334`"}], ",", 
      RowBox[{"\<\"MinEllipsoidLength\"\>", "\[Rule]", 
       "0.004001875101617293`"}], ",", 
      RowBox[{"\<\"MaxDistance\"\>", "\[Rule]", "0.020560374563439177`"}], 
      ",", 
      RowBox[{"\<\"LongestPiChain\"\>", "\[Rule]", "0.25`"}], ",", 
      RowBox[{"\<\"LinkerLength\"\>", "\[Rule]", "0.1111111111111111`"}]}], 
     "\[RightAssociation]"}], "\[Rule]", "429"}], ",", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"AromaticRingCount\"\>", "\[Rule]", "0.5`"}], ",", 
      RowBox[{"\<\"HBondDonorCount\"\>", "\[Rule]", "0.`"}], ",", 
      RowBox[{"\<\"HBondAcceptorCount\"\>", "\[Rule]", 
       "0.07142857142857142`"}], ",", 
      RowBox[{"\<\"FractionCarbonSP3\"\>", "\[Rule]", 
       "0.35833333410374996`"}], ",", 
      RowBox[{"\<\"HeteroatomCount\"\>", "\[Rule]", "0.05555555555555555`"}], 
      ",", 
      RowBox[{"\<\"HeterocycleCount\"\>", "\[Rule]", "0.5`"}], ",", 
      RowBox[{"\<\"RotatableBondCount\"\>", "\[Rule]", "0.05`"}], ",", 
      RowBox[{"\<\"MolecularMass\"\>", "\[Rule]", "0.07788245963969842`"}], 
      ",", 
      RowBox[{"\<\"DegreeOfUnsaturation\"\>", "\[Rule]", "0.25`"}], ",", 
      RowBox[{"\<\"MinEllipsoidLength\"\>", "\[Rule]", 
       "0.031450573059459044`"}], ",", 
      RowBox[{"\<\"MaxDistance\"\>", "\[Rule]", "0.17801706439862086`"}], ",", 
      RowBox[{"\<\"LongestPiChain\"\>", "\[Rule]", "0.5`"}], ",", 
      RowBox[{"\<\"LinkerLength\"\>", "\[Rule]", "0.1111111111111111`"}]}], 
     "\[RightAssociation]"}], "\[Rule]", "593"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8801148868806553`*^9, 3.880130137899706*^9, 
  3.880132291486722*^9, 3.880212924624942*^9, 3.8802132454639435`*^9, 
  3.8802134496877947`*^9, 3.880213768389784*^9, 3.8802141029366665`*^9, 
  3.8887576096947756`*^9, 3.8887577632611227`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"6307d585-a7d6-41e3-9f06-fe3e4a3721bd"]
}, Open  ]],

Cell["\<\
Note that none of the feature values in the training dataset are smaller than \
0 or greater than 1 now.\
\>", "Text",
 CellChangeTimes->{{3.8738003672055097`*^9, 3.8738003890253515`*^9}, {
  3.880211138532842*^9, 3.88021119855655*^9}, {3.8802120937862267`*^9, 
  3.8802120957479286`*^9}},ExpressionUUID->"f5c97b6d-3113-4e72-89a5-\
d4e73b705fad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Building Regression Models", "Section",
 CellChangeTimes->{{3.872253398577107*^9, 
  3.872253401203747*^9}},ExpressionUUID->"1a98574f-933a-4714-8e01-\
a56708a1fe66"],

Cell[TextData[{
 "Regression analysis is a process of explaining and defining the \
relationship between dependent and independent variables. In this activity, \
we will train several regression models to predict our target value, \
MaxAbsorbanceWavelength (in this section and later in the ",
 StyleBox[ButtonBox["Penalized Regression",
  BaseStyle->"Hyperlink",
  ButtonData->"penalizedRegressionHref"],
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["Tree Models ",
  BaseStyle->"Hyperlink",
  ButtonData->"treeModelsHref"],
  FontWeight->"Bold"],
 "sections). We will use different metrics to evaluate how well the models \
perform (in the ",
 StyleBox[ButtonBox["Model Evaluation",
  BaseStyle->"Hyperlink",
  ButtonData->"modeEvalHref"],
  FontWeight->"Bold"],
 " section). By choosing better independent variables (in the ",
 StyleBox[ButtonBox["Feature Selection",
  BaseStyle->"Hyperlink",
  ButtonData->"featureSelectionHref"],
  FontWeight->"Bold"],
 " section) we can try to improve our model performance. Finally, we can \
interpret our models and gain insight into what features are important (in \
the ",
 StyleBox[ButtonBox["Feature Importance",
  BaseStyle->"Hyperlink",
  ButtonData->"featureImportanceHref"],
  FontWeight->"Bold"],
 " section)."
}], "Text",
 CellChangeTimes->{{3.872253411092428*^9, 3.872253420723687*^9}, {
   3.872859808708824*^9, 3.872859932677449*^9}, {3.880119657269515*^9, 
   3.880119712833778*^9}, 3.8801324266447353`*^9, {3.880133099320368*^9, 
   3.880133132726817*^9}, {3.8801854614292116`*^9, 3.8801854733080235`*^9}, {
   3.88364754149571*^9, 3.883647555744199*^9}, {3.883647595009644*^9, 
   3.8836475950114098`*^9}, {3.8836476318161497`*^9, 3.883647631817844*^9}, {
   3.883647683286824*^9, 
   3.883647683288229*^9}},ExpressionUUID->"712ec36e-fc92-4fb0-8e25-\
a3c6bad15568"],

Cell[CellGroupData[{

Cell["Simple Linear regression", "Subsection",
 CellChangeTimes->{
  3.8722534341795397`*^9},ExpressionUUID->"b983b0b1-aca7-48cb-beba-\
cb3ac6654b10"],

Cell["\<\
Let\[CloseCurlyQuote]s start with the most basic type of regression model. \
Simple linear regression is a method that tries to define the relationship \
between two variables, the dependent variable and a single independent \
variable.\
\>", "Text",
 CellChangeTimes->{{3.872766257367133*^9, 3.8727662623830442`*^9}, {
   3.8727667643282843`*^9, 3.8727667825286617`*^9}, {3.872859954689926*^9, 
   3.8728599724247484`*^9}, 
   3.8728600355244956`*^9},ExpressionUUID->"a48ec159-1aa1-4aa2-991b-\
e2461b338972"],

Cell["https://en.wikipedia.org/wiki/Simple_linear_regression", "Item",
 CellChangeTimes->{{3.872860026538509*^9, 
  3.8728600384950075`*^9}},ExpressionUUID->"ef22add8-94f4-4643-ae26-\
0125f0a09c4f"],

Cell["\<\
https://jakevdp.github.io/PythonDataScienceHandbook/05.06-linear-regression.\
html\
\>", "Item",
 CellChangeTimes->{{3.872860026538509*^9, 
  3.872860046586528*^9}},ExpressionUUID->"ce52fdcd-e0b9-45cb-958f-\
13470a8c9b37"],

Cell["\<\
This relationship can be represented by a well-fitted line that follows:\
\>", "Text",
 CellChangeTimes->{
  3.872860288237076*^9, {3.8801855331032257`*^9, 
   3.8801855332264223`*^9}},ExpressionUUID->"4b665aed-0810-4c07-9cb0-\
34771acc9800"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"y", "=", 
   RowBox[{
    SubscriptBox["\[Beta]", "0"], "+", 
    RowBox[{
     SubscriptBox["\[Beta]", "1"], "x"}]}]}], 
  TraditionalForm]],ExpressionUUID->"5f5262bf-b1f4-4348-9ccd-c576148eedff"]], \
"Text",
 CellChangeTimes->{{3.8728599790841565`*^9, 3.8728600560344706`*^9}, 
   3.872860110580801*^9, {3.872860192181012*^9, 3.872860195386731*^9}, {
   3.8728602337006836`*^9, 3.8728602842940035`*^9}, {3.8801272223480034`*^9, 
   3.8801272229842296`*^9}},
 TextAlignment->Center,ExpressionUUID->"e961629e-b917-4561-a3ca-5566660b9fca"],

Cell["where:", "Text",
 CellChangeTimes->{{3.872860686663622*^9, 3.8728606873765926`*^9}, {
  3.8801859692674313`*^9, 
  3.8801859693525243`*^9}},ExpressionUUID->"290086bd-98ea-4830-950c-\
b1920f944301"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "0"], TraditionalForm]],ExpressionUUID->
  "d753d926-f67f-45eb-9960-fced49973f92"],
 ": y-intercept\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],ExpressionUUID->
  "eaf548f9-63b1-4a19-b9f5-c320e0e00d17"],
 ": slope (called the coefficient or weight in this context)\n\nThe optimal \
slope is generally determined by minimizing the residual sum of squares \
(RSS), which is given by:"
}], "Text",
 CellChangeTimes->{{3.872860694118816*^9, 3.8728607365519714`*^9}, 
   3.872860769902091*^9, {3.8801924080645995`*^9, 
   3.8801924338071356`*^9}},ExpressionUUID->"370a9d34-c8f7-47e8-b091-\
5eac0a42cdca"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{
        StyleBox["R", "TI"], 
        StyleBox["S", "TI"], 
        StyleBox["S", "TI"], "\[LongEqual]", 
        UnderoverscriptBox["\[Sum]", 
         RowBox[{
           StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
         StyleBox["n", "TI"], LimitsPositioning -> True], 
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{
             SubscriptBox[
              StyleBox["y", "TI"], 
              StyleBox["i", "TI"]], "-", 
             SubscriptBox[
              OverscriptBox[
               StyleBox["y", "TI"], "^"], 
              StyleBox["i", "TI"]]}], ")"}], "2"]}], TraditionalForm], 
    "errors" -> {}, "input" -> "RSS = \\sum_{i=1}^{n}(y_i - \\hat{y}_i)^2", 
    "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"583b5b2c-1add-4358-b83c-c00bd3fdcd2b"]], \
"Text",
 CellChangeTimes->{3.8737993617478657`*^9},
 TextAlignment->Center,ExpressionUUID->"2d16106c-2ae5-4181-81e1-50c844556b8e"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]],ExpressionUUID->
  "344b8a15-f32a-433b-9f94-5c85f3ea5c69"],
 " are the actual values and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\:0177", "i"], TraditionalForm]],ExpressionUUID->
  "28fa5fc9-eec9-463c-92de-6b4cfb9bc1b6"],
 " are the model predictions. This approached is referred to as the ordinary \
least squares (OLS) method.  You can read more about these methods at the \
following links:"
}], "Text",
 CellChangeTimes->{
  3.8728601012894125`*^9, {3.8728603045499983`*^9, 3.872860306034654*^9}, 
   3.872967902187042*^9, {3.8801176072338715`*^9, 3.8801176112075815`*^9}, {
   3.8801855511829762`*^9, 3.8801855514484234`*^9}, {3.8801924904884295`*^9, 
   3.880192533423216*^9}, {3.8801925773809385`*^9, 3.880192586930681*^9}, {
   3.8801926355659976`*^9, 3.8801926664657574`*^9}, {3.8836467584482594`*^9, 
   3.883646768892742*^9}},ExpressionUUID->"4be60eb4-9b7f-4e61-8668-\
216a564cfab1"],

Cell["https://en.wikipedia.org/wiki/Residual_sum_of_squares", "Item",
 CellChangeTimes->{3.8728596482121058`*^9, 3.872969977661688*^9, 
  3.8801926938019133`*^9},ExpressionUUID->"e3558a00-d462-4cf4-97a0-\
7b7f0a0abf45"],

Cell["https://en.wikipedia.org/wiki/Ordinary_least_squares", "Item",
 CellChangeTimes->{3.8728596482121058`*^9, 3.872969977661688*^9, 
  3.88019269985138*^9},ExpressionUUID->"5fb79673-958d-474f-a169-0d8a69d0e44f"],

Cell["\<\
Now that we know how a simple linear regression model works, let\
\[CloseCurlyQuote]s train our first machine learning model by selecting one \
feature from our set of independent variables and plotting the line that best \
describes the relationship between our selected feature and the dependent \
variable (Max Absorbance Wavelength).

First let\[CloseCurlyQuote]s define some convenience functions for extracting \
a single feature.  Again,  you do not need to modify these functions, but we \
will use them in the subsequent code:\
\>", "Text",
 CellChangeTimes->{{3.872254260135722*^9, 3.872254267717552*^9}, {
  3.8728599405243545`*^9, 3.8728599439498386`*^9}, {3.87296790707353*^9, 
  3.8729679273573227`*^9}, {3.8801926683892384`*^9, 3.880192672714034*^9}, {
  3.8836467959389057`*^9, 
  3.883646798092979*^9}},ExpressionUUID->"a0d6aa08-b235-4f36-9a5e-\
e4d8085d25b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "extract", " ", "a", " ", "name", " ", "from", " ", "a", " ", "single", 
    " ", "row"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"extractSingleFeature", "[", "name_String", "]"}], "[", 
     RowBox[{"x_Association", "->", "y_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Lookup", "[", 
      RowBox[{"x", ",", "name"}], "]"}], "->", "y"}]}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"apply", " ", "to", " ", "the", " ", "entire", " ", "dataset"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"extractSingleFeature", "[", "name_String", "]"}], "[", 
     "data_List", "]"}], ":=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"extractSingleFeature", "[", "name", "]"}], ",", "data"}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"convenience", " ", "functions", " ", "for", " ", "plotting"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"toXY", "[", 
     RowBox[{"x_", "->", "y_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"toXY", "[", "data_List", "]"}], ":=", 
    RowBox[{"Map", "[", 
     RowBox[{"toXY", ",", "data"}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.872253810131764*^9, 3.872253929488802*^9}, {
  3.872254055441637*^9, 3.872254071195503*^9}, {3.8722542703637*^9, 
  3.872254275537252*^9}, {3.8722554198121653`*^9, 3.872255491293496*^9}, {
  3.872774179179747*^9, 3.8727742232291803`*^9}, {3.8729707362864847`*^9, 
  3.872970736876638*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"4358bf76-31ec-4525-a0f6-1a2bedd670ce"],

Cell[TextData[{
 "Because we\[CloseCurlyQuote]ll be working with a few different simple \
linear regression models, we can use associations (see the ",
 StyleBox[ButtonBox["Basics of Mathematica",
  BaseStyle->"Hyperlink",
  ButtonData->"assocHref"],
  FontWeight->"Bold"],
 ButtonBox[" section",
  BaseStyle->"Hyperlink",
  ButtonData->"assocHref"],
 ") to store the training and test data for each model, as well as the \
trained models. First initialize the empty variables (only run this code \
block once):"
}], "Text",
 CellChangeTimes->{{3.8733711194584866`*^9, 3.8733711519043603`*^9}, {
   3.880118856066812*^9, 3.880118865400213*^9}, {3.8801189395784197`*^9, 
   3.880118946169177*^9}, {3.8802122479095573`*^9, 3.8802123524153547`*^9}, 
   3.8802123993997235`*^9, {3.883646874824101*^9, 
   3.883646874825186*^9}},ExpressionUUID->"375d9bcc-fa37-4499-ab96-\
a9152054ff1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"create", " ", "empty", " ", "associations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"singleFeatureTrain", "=", 
     RowBox[{"Association", "[", "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"single", "-", 
     RowBox[{"variable", " ", "training", " ", "data"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"singleFeatureTest", "=", 
     RowBox[{"Association", "[", "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"single", "-", 
      RowBox[{"variable", " ", "test", " ", "data"}]}], "*)"}], 
    RowBox[{"singleFeatureModels", " ", "=", " ", 
     RowBox[{"Association", "[", "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"simple", " ", "linear", " ", "regression", " ", "models"}], 
    "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.872257047056616*^9, 3.8722571487573023`*^9}, {
   3.8722582867384443`*^9, 3.872258345224741*^9}, {3.872258381134124*^9, 
   3.872258403899211*^9}, {3.872767191674727*^9, 3.872767194526393*^9}, {
   3.872771273718987*^9, 3.8727712881584797`*^9}, {3.872952062984873*^9, 
   3.872952069820922*^9}, {3.880118872137652*^9, 3.8801188729803295`*^9}, {
   3.880212159111223*^9, 3.880212188897707*^9}, {3.880212228785429*^9, 
   3.8802122437188888`*^9}, {3.88021236494871*^9, 3.8802123964501143`*^9}, 
   3.883646886635405*^9},
 CellLabel->"In[85]:=",ExpressionUUID->"684719a9-71f3-4808-b585-8913d1c65389"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s start by choosing the FractionCarbonSP3 feature and \
seeing how well it predicts the MaxAbsorbanceWavelength. Run the code block \
below to select the feature, extract the training and testing data for that \
feature, and train the regression model. (Note that to run a simple linear \
regression with another feature, you can simply copy this code block and \
change the ",
 StyleBox["featureName",
  FontSlant->"Italic"],
 " variable.)"
}], "Text",
 CellChangeTimes->{{3.8728603100143642`*^9, 3.8728603187628098`*^9}, 
   3.87296793112964*^9, {3.8801176192557445`*^9, 3.880117626714525*^9}, {
   3.8801178780428867`*^9, 3.8801178813895607`*^9}, {3.8801855677487*^9, 
   3.880185605385022*^9}, {3.8802124322978477`*^9, 3.8802125039294443`*^9}, {
   3.8802125696751757`*^9, 
   3.8802125957990875`*^9}},ExpressionUUID->"3596caae-21de-449f-8eb5-\
fcea71f23e94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"select", " ", "a", " ", "single", " ", "feature"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"featureName", "=", "\"\<FractionCarbonSP3\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "save", " ", "the", " ", "training", " ", "and", " ", "test", " ", "data",
      " ", "for", " ", "that", " ", "feature", " ", "in", " ", "the", " ", 
     "corresponding", " ", "association", " ", "variables"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"singleFeatureTrain", "[", "featureName", "]"}], "=", 
     RowBox[{
      RowBox[{"extractSingleFeature", "[", "featureName", "]"}], "@", 
      "train"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"singleFeatureTest", "[", "featureName", "]"}], "=", 
     RowBox[{
      RowBox[{"extractSingleFeature", "[", "featureName", "]"}], "@", 
      "test"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "train", " ", "a", " ", "simple", " ", "linear", " ", "regression", " ", 
     "for", " ", "that", " ", "feature", " ", "and", " ", "save", " ", "it", 
     " ", "to", " ", "the", " ", "association", " ", "variable"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"singleFeatureModels", "[", "featureName", "]"}], "=", 
    RowBox[{"Predict", "[", 
     RowBox[{
      RowBox[{"singleFeatureTrain", "[", "featureName", "]"}], ",", 
      RowBox[{"Method", "->", "\"\<LinearRegression\>\""}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.872254289767713*^9, 3.8722544274133244`*^9}, {
   3.8722545576976767`*^9, 3.872254571760755*^9}, {3.87225676322421*^9, 
   3.872256766773451*^9}, {3.8727620942218857`*^9, 3.872762095573022*^9}, {
   3.872766346469019*^9, 3.872766386007913*^9}, {3.8727664261125174`*^9, 
   3.872766426335843*^9}, 3.8727742295015097`*^9, {3.8738005127748966`*^9, 
   3.873800515026887*^9}, {3.8801180744664855`*^9, 3.880118106803405*^9}, {
   3.880212453750064*^9, 3.880212480926388*^9}, {3.880212531902147*^9, 
   3.880212552869835*^9}, {3.8802126184279876`*^9, 3.880212646714055*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"d35daaad-a3ee-4a8a-8927-6ee0c03585df"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Numerical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Numerical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["90", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[<|
   "ExampleNumber" -> 90, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 90, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "ToVector", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Version" -> {13., 1}, "ID" -> 2729918768343498454|>], 
                "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                Automatic, 
                "Model" -> <|
                 "RotationMatrix" -> {{1.}}, 
                  "Precisions" -> {26.392585995552615`}, "NoisePrecision" -> 
                  None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.41456458012107383`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13., 1}, "ID" -> 3830660249440368535|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 1, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.41456458012107367`}, 
                    "StandardDeviation" -> {0.19465207037089122`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    108595544619375065|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Mean" -> {0.41456458012107367`}, 
                   "StandardDeviation" -> {0.19465207037089122`}, "Method" -> 
                   "NaiveSampler", "VectorLength" -> 1, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Type" -> "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                   108595544619375065|>], "InputDimension" -> 0, 
                "OutputDimension" -> 1, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.37391304250608687`}, "ID" -> 
                    1638824798713428667|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.053641, "MaxTrainingMemory" -> 184480, 
                  "DataMemory" -> 2656, "FunctionMemory" -> 31608, 
                  "LanguageVersion" -> {13., 1}, "Date" -> 
                  DateObject[{
                    2023, 3, 25, 14, 29, 34.9221523`9.295675898445118}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows",
                   "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-0.8514609945427946, -0.8514609945427946, 
                    0.1952966277545584, 0.45102488610810676`, 
                    0.533787889563694, 0.5399063040459527, 0.6267270553744007,
                     0.6272389542820744, 0.695079405994136, 
                    0.7051493865129609, 0.7102826067212753}, "LeftBoundary" -> 
                   0.1952966277545584, "LeftScale" -> 0.5233788111486765, 
                   "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[-0.42330321218143646`, 0.14989663871206624`], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "EvaluationStrategy" -> "ModeFinding", "Version" -> {13., 1}, 
             "ID" -> 895810465636885430|>], 
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 1461626083009172000|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {0.41456458012107367`}, 
             "StandardDeviation" -> {0.19465207037089122`}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 2668889833738055006|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 8597333931233327344|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {597.7777777777778}, 
             "StandardDeviation" -> {98.41948517305082}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 6918378962678288739|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "Version" -> {13., 1}, "ID" -> 5508345038584722383|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> "f1",
              "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
             "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (597.7777777777778 + 
       98.41948517305082 #& ), 
      "ProcessorFunction" -> (-6.073774687265496 + 0.010160589625537075` #& ),
       "Name" -> "value", 
      "Quantiles" -> {-2.1924294503103336`, 2.8675441832071296`}, "Mean" -> 
      597.7777777777778|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
    0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "MeanFunction" -> 
      LinearLayer[<|
        "Type" -> "Linear", 
         "Arrays" -> <|
          "Weights" -> RawArray["Real32",{{-0.3713153302669525}}], "Biases" -> 
           RawArray["Real32",{-5.110200592762029*^-16}]|>, 
         "Parameters" -> <|
          "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 1, 
           "$InputDimensions" -> {1}|>, 
         "Inputs" -> <|
          "Input" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
         "Outputs" -> <|
          "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, <|
        "Version" -> "13.0.3", "Unstable" -> False|>], 
      "DistributionData" -> {NormalDistribution, 0.9221623617886199}, 
      "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>,
          "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {0.00023399230740033005`}, 
             "StandardDeviation" -> {0.9989052311728539}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 5124392175471138302|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
             "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
             False, "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "Calibrator" -> None, "Method" -> "LinearRegression", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
        "L2Regularization" -> <|"Value" -> 10., "Options" -> <||>|>, 
        "OptimizationMethod" -> <|
         "Value" -> "NormalEquation", "Options" -> <||>|>, 
        MaxIterations -> <|"Value" -> 30, "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "PanelCell" -> CellObject[75073], "TrainingFunction" -> Predict, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 4.589238804506155, "PreprocessingTime" -> 
      0.1718194`6.686617191624974, "LossName" -> "StandardDeviation", 
      "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[5.954524171641844, 0.10186091372711405`], "StandardDeviation" -> 
         Around[91.812002763184, 9.765259014758442], "EvaluationTime" -> 
         0.00005555555555555555, "TestSize" -> 54, "ModelMemory" -> 16136., 
         "ModelUtility" -> -5.233946883251155, "TrainingSize" -> 72, 
         "TrainingTime" -> 0.006718000670412151, "TrainingMemory" -> 65428., 
         "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
           Around[5.892498476216262, 0.14020950835440046`], 
           Around[5.978436856293192, 0.2118335643915229], 
           Around[5.992637182416081, 0.1733868045977845]}, 
         "StandardDeviationHistory" -> {
           Around[86.05486732276653, 14.722631049738743`], 
           Around[94.1137077943545, 19.294812523540983`], 
           Around[95.26743317243096, 15.431159983098912`]}, 
         "Configuration" -> {
          "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
           10., "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
         "FinalTrainingSize" -> 90|>, 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
          "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
          "TrainingTime", "TrainingMemory", "ExperimentCount", 
          "MeanCrossEntropyHistory", "StandardDeviationHistory", 
          "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 3], 
          TypeSystem`Vector[TypeSystem`AnyType, 3], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], <||>], "Configurations" -> 
      Dataset[<|<|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.01|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[5.989765101979819, 0.05087922799028991], 
              "StandardDeviation" -> 
              Around[93.10175328376691, 5.550079291405741], "EvaluationTime" -> 
              0.000026177909478388857`, "TestSize" -> 160, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.238699731468036, "TrainingSize" -> 
              10, "TrainingTime" -> 0.015404939914726502`, "TrainingMemory" -> 
              203613.3333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[5.998460205119473, 0.059683807010523726`], 
                Around[5.981069998840164, 0.09237602340299779]}, 
              "StandardDeviationHistory" -> {
                Around[92.92037630746455, 7.984930888811917], 
                Around[93.28313026006927, 7.711806381793692]}|>, <|
             "MeanCrossEntropy" -> 
              Around[5.95874450000574, 0.10312386322711381`], 
              "StandardDeviation" -> 
              Around[92.21436095842562, 9.767740646603349], "EvaluationTime" -> 
              0.00006634411438031247, "TestSize" -> 54, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.238234115725849, "TrainingSize" -> 
              72, "TrainingTime" -> 0.007126427896022372, "TrainingMemory" -> 
              65424., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                Around[5.90416042130804, 0.14534832051924015`], 
                Around[5.971639511462265, 0.20879727029879677`], 
                Around[6.000433567246915, 0.17802030408695324`]}, 
              "StandardDeviationHistory" -> {
                Around[87.22231738398075, 14.98521656236566], 
                Around[93.50841974358997, 19.091588181401487`], 
                Around[95.91234574770615, 15.66032184648208]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00006634411438031247, "ModelMemory" -> 
             16136., "StandardDeviation" -> 
             Around[92.21436095842562, 9.767740646603349], "TrainingMemory" -> 
             65424., "TrainingTime" -> 0.021818725021146637`|>, "Index" -> 
           1|>, <|"Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 1.*^-6|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[6.415415652802828, 0.42852342529980464`], 
              "StandardDeviation" -> 
              Around[104.80128246691986`, 12.709871390103967`], 
              "EvaluationTime" -> 0.000015946075050154516`, "TestSize" -> 240,
               "ModelMemory" -> 16136., "ModelUtility" -> -5.369186316392376, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 62824., "ExperimentCount" -> 3, 
              "MeanCrossEntropyHistory" -> {
                Around[5.9984246279471085`, 0.05967847784083203], 
                Around[5.981203749591848, 0.092394610816412], 
                Around[7.266618580869528, 0.3842168812602471]}, 
              "StandardDeviationHistory" -> {
                Around[92.91568249179507, 7.984622222094264], 
                Around[93.29414384278732, 7.712421268205741], 
                Around[128.1940210661772, 11.215737820029206`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[5.95875082733355, 0.10312506683562662`], 
              "StandardDeviation" -> 
              Around[92.21496406804931, 9.767738986716568], "EvaluationTime" -> 
              0.00005915174183047452, "TestSize" -> 54, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.23824050960708, "TrainingSize" -> 
              72, "TrainingTime" -> 0.006718000670412151, "TrainingMemory" -> 
              65428., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                Around[5.90417700910804, 0.14535419547763614`], 
                Around[5.971632156277958, 0.20879308597159424`], 
                Around[6.000443316614652, 0.17802515257986]}, 
              "StandardDeviationHistory" -> {
                Around[87.22394133133119, 14.985508306546182`], 
                Around[93.50777470427764, 19.091346551401465`], 
                Around[95.9131761685391, 15.6605918749042]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00005915174183047452, "ModelMemory" -> 
             16136., "StandardDeviation" -> 
             Around[92.21496406804931, 9.767738986716568], "TrainingMemory" -> 
             65428., "TrainingTime" -> 0.012355774048172867`|>, "Index" -> 
           2|>, <|"Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 1.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[5.986072436766663, 0.0524910404916587], 
              "StandardDeviation" -> 
              Around[92.88991901483993, 5.558577381540373], "EvaluationTime" -> 
              0.00001845296581965163, "TestSize" -> 160, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.236466782473713, "TrainingSize" -> 
              10, "TrainingTime" -> 0.007943282347242814, "TrainingMemory" -> 
              62794.666666666664`, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[6.001781234137531, 0.06015810473512746], 
                Around[5.970363639395795, 0.09041792334559856]}, 
              "StandardDeviationHistory" -> {
                Around[93.35294307330027, 8.012886801600743], 
                Around[92.4268949563796, 7.6660117942741905`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[5.958143046332144, 0.10300403501583463`], 
              "StandardDeviation" -> 
              Around[92.15703305126313, 9.767897590731188], "EvaluationTime" -> 
              0.00005555555555555555, "TestSize" -> 54, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.237625469182119, "TrainingSize" -> 
              72, "TrainingTime" -> 0.006718000670412151, "TrainingMemory" -> 
              65440., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                Around[5.9025761371389445`, 0.14477461767701558`], 
                Around[5.972362400725759, 0.20919809052249902`], 
                Around[5.999490601131729, 0.17754209083239642`]}, 
              "StandardDeviationHistory" -> {
                Around[87.06689249148877, 14.956646628845613`], 
                Around[93.57191501506935, 19.115075799087712`], 
                Around[95.83229164723124, 15.634066251419405`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00005555555555555555, "ModelMemory" -> 
             16136., "StandardDeviation" -> 
             Around[92.15703305126313, 9.767897590731188], "TrainingMemory" -> 
             65440., "TrainingTime" -> 0.01398948295061375|>, "Index" -> 
           3|>, <|"Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 100000.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[6.052443662343582, 0.039992222156931795`], 
              "StandardDeviation" -> 
              Around[99.41010984383335, 4.761968364175343], "EvaluationTime" -> 
              0.0000125, "TestSize" -> 240, "ModelMemory" -> 16136., 
              "ModelUtility" -> -5.301943272748681, "TrainingSize" -> 10, 
              "TrainingTime" -> 0.006718000670412151, "TrainingMemory" -> 
              64092., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                Around[6.047195763201922, 0.06441626364164842], 
                Around[6.0553812583378415`, 0.06201743098661256], 
                Around[6.054753965490986, 0.0887481196927964]}, 
              "StandardDeviationHistory" -> {
                Around[98.78756978978507, 8.335234842508477], 
                Around[99.08279541844327, 8.421911410965981], 
                Around[100.35996432327177`, 7.88988927369861]}|>, <|
             "MeanCrossEntropy" -> 
              Around[6.003012072778475, 0.08242229925615603], 
              "StandardDeviation" -> 
              Around[96.50231710146863, 9.123793885540412], "EvaluationTime" -> 
              0.00005555555555555555, "TestSize" -> 54, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.281454079767561, "TrainingSize" -> 
              72, "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
              65408., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                Around[5.97158057456978, 0.12042573048828005`], 
                Around[6.0427992756458915`, 0.20053195002546992`], 
                Around[5.994656368119754, 0.12541561380457802`]}, 
              "StandardDeviationHistory" -> {
                Around[93.15457725128707, 13.892276094453557`], 
                Around[100.65286341045622`, 20.43518350470083], 
                Around[95.6995106426626, 13.894999562911083`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00005555555555555555, "ModelMemory" -> 
             16136., "StandardDeviation" -> 
             Around[96.50231710146863, 9.123793885540412], "TrainingMemory" -> 
             65408., "TrainingTime" -> 0.012396616770733889`|>, "Index" -> 
           4|>, <|"Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 100.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[6.037063790225789, 0.04561701930309257], 
              "StandardDeviation" -> 
              Around[97.69764169440603, 5.869947931312144], "EvaluationTime" -> 
              0.000017094766733539353`, "TestSize" -> 160, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.2869769658141, "TrainingSize" -> 
              10, "TrainingTime" -> 0.006854143078948891, "TrainingMemory" -> 
              62872., "ExperimentCount" -> 2, "MeanCrossEntropyHistory" -> {
                Around[6.041781226387247, 0.06402971258552603], 
                Around[6.03234635406433, 0.06430380347856525]}, 
              "StandardDeviationHistory" -> {
                Around[98.16251466070517, 8.298180560227717], 
                Around[97.23276872810688, 8.252580532741481]}|>, <|
             "MeanCrossEntropy" -> 
              Around[5.963168774197787, 0.0927348615884384], 
              "StandardDeviation" -> 
              Around[92.63550778981858, 9.501851282685053], "EvaluationTime" -> 
              0.0000627479281053935, "TestSize" -> 54, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.2421340807587065`, "TrainingSize" -> 
              72, "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
              65428., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                Around[5.9008853060990525`, 0.1234397433410577], 
                Around[6.009081800046104, 0.21212860616779305`], 
                Around[5.979539216448206, 0.1499521938104691]}, 
              "StandardDeviationHistory" -> {
                Around[86.45199791005443, 13.76141558849538], 
                Around[97.08014129139586, 19.932531113460424`], 
                Around[94.37438416800546, 14.610700590459738`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0000627479281053935, "ModelMemory" -> 
             16136., "StandardDeviation" -> 
             Around[92.63550778981858, 9.501851282685053], "TrainingMemory" -> 
             65428., "TrainingTime" -> 0.012532759179270629`|>, "Index" -> 
           5|>, <|"Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.00001|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[5.9587508212278975`, 0.10312506574783085`], 
              "StandardDeviation" -> 
              Around[92.21496348294393, 9.76773899837266], "EvaluationTime" -> 
              0.00005555555555555555, "TestSize" -> 54, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.238240499822263, "TrainingSize" -> 
              72, "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
              65394., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                Around[5.904176992263879, 0.14535418951320594`], 
                Around[5.971632163883658, 0.20879309029955823`], 
                Around[6.000443307536155, 0.17802514806589254`]}, 
              "StandardDeviationHistory" -> {
                Around[87.22393968232005, 14.985508010367193`], 
                Around[93.5077753712766, 19.09134680128943], 
                Around[95.91317539523513, 15.66059162346993]}|>, <|
             "MeanCrossEntropy" -> 
              Around[5.989814148157597, 0.05086465472052778], 
              "StandardDeviation" -> 
              Around[93.10491065463339, 5.55046641672864], "EvaluationTime" -> 
              0.000013578855882475692`, "TestSize" -> 160, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.238734053649317, "TrainingSize" -> 
              10, "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
              62786.666666666664`, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[5.998424661540229, 0.059678482875419055`], 
                Around[5.981203634774965, 0.09239459490903479]}, 
              "StandardDeviationHistory" -> {
                Around[92.91568692445743, 7.984622513645939], 
                Around[93.29413438480933, 7.712420739982015]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.000013578855882475692`, "ModelMemory" -> 
             16136., "StandardDeviation" -> 
             Around[93.10491065463339, 5.55046641672864], "TrainingMemory" -> 
             62786.666666666664`, "TrainingTime" -> 0.011988189545123668`|>, 
           "Index" -> 6|>, <|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.1|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[5.958687779748547, 0.10311302441739523`], 
              "StandardDeviation" -> 
              Around[92.20895445984944, 9.767755696722299], "EvaluationTime" -> 
              0.00007180258867947534, "TestSize" -> 54, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.238176738115711, "TrainingSize" -> 
              72, "TrainingTime" -> 0.006069150116147545, "TrainingMemory" -> 
              65376., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                Around[5.904011640455199, 0.14529550903639302`], 
                Around[5.971705678142758, 0.2088348149861373], 
                Around[6.000346020647686, 0.17797667987663482`]}, 
              "StandardDeviationHistory" -> {
                Around[87.20774871273959, 14.982593266268943`], 
                Around[93.51422337218561, 19.09375942881149], 
                Around[95.9048912946231, 15.657895807689126`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[6.405153599805448, 0.4188130777092024], 
              "StandardDeviation" -> 
              Around[104.49584675687049`, 12.451728254806605`], 
              "EvaluationTime" -> 0.000015736567647427076`, "TestSize" -> 240,
               "ModelMemory" -> 16136., "ModelUtility" -> -5.365854392652475, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.005660722890537324, 
              "TrainingMemory" -> 62824., "ExperimentCount" -> 3, 
              "MeanCrossEntropyHistory" -> {
                Around[5.998778504680849, 0.059731241339586294`], 
                Around[5.979891275815532, 0.09220718909304339], 
                Around[7.236791018919966, 0.3767448375876561]}, 
              "StandardDeviationHistory" -> {
                Around[92.9623136722672, 7.987683249703367], 
                Around[93.1864235072809, 7.706426749964726], 
                Around[127.33880309106338`, 11.074516992897685`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.000015736567647427076`, "ModelMemory" -> 
             16136., "StandardDeviation" -> 
             Around[104.49584675687049`, 12.451728254806605`], 
             "TrainingMemory" -> 62824., "TrainingTime" -> 
             0.011163800717631137`|>, "Index" -> 7|>, <|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 10.|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[5.954524171641844, 0.10186091372711405`], 
              "StandardDeviation" -> 
              Around[91.812002763184, 9.765259014758442], "EvaluationTime" -> 
              0.00005555555555555555, "TestSize" -> 54, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.233946883251155, "TrainingSize" -> 
              72, "TrainingTime" -> 0.006718000670412151, "TrainingMemory" -> 
              65428., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                Around[5.892498476216262, 0.14020950835440046`], 
                Around[5.978436856293192, 0.2118335643915229], 
                Around[5.992637182416081, 0.1733868045977845]}, 
              "StandardDeviationHistory" -> {
                Around[86.05486732276653, 14.722631049738743`], 
                Around[94.1137077943545, 19.294812523540983`], 
                Around[95.26743317243096, 15.431159983098912`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[5.9917566273602425`, 0.05590139281199077], 
              "StandardDeviation" -> 
              Around[93.7921595501249, 5.8810141056987595`], "EvaluationTime" -> 
              0.0000125, "TestSize" -> 160, "ModelMemory" -> 16136., 
              "ModelUtility" -> -5.246698414661827, "TrainingSize" -> 10, 
              "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
              62810.666666666664`, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[6.019686173468619, 0.06218912882796883], 
                Around[5.963827081251866, 0.0771768277342524]}, 
              "StandardDeviationHistory" -> {
                Around[95.56677609899603, 8.146629452815674], 
                Around[92.01754300125376, 7.728522797032787]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0000125, "ModelMemory" -> 16136., 
             "StandardDeviation" -> 
             Around[93.7921595501249, 5.8810141056987595`], "TrainingMemory" -> 
             62810.666666666664`, "TrainingTime" -> 0.012396616770733889`|>, 
           "Index" -> 8|>, <|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.0001|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[5.989813699966323, 0.050864786409610535`], 
              "StandardDeviation" -> 
              Around[93.10488168403216, 5.550462837526915], "EvaluationTime" -> 
              0.000013578855882475692`, "TestSize" -> 160, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.238733738556762, "TrainingSize" -> 
              10, "TrainingTime" -> 0.006854143078948891, "TrainingMemory" -> 
              62829.33333333333, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[5.998424982203115, 0.059678530932784545`], 
                Around[5.9812024177295315`, 0.09239442628767158]}, 
              "StandardDeviationHistory" -> {
                Around[92.91572923634584, 7.984625296641016], 
                Around[93.29403413171849, 7.71241514091268]}|>, <|
             "MeanCrossEntropy" -> 
              Around[5.958750764790757, 0.10312505446153893`], 
              "StandardDeviation" -> 
              Around[92.21495812291043, 9.767738945161126], "EvaluationTime" -> 
              0.00005915174183047452, "TestSize" -> 54, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.23824044638584, "TrainingSize" -> 
              72, "TrainingTime" -> 0.006718000670412151, "TrainingMemory" -> 
              65440., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                Around[5.90417684908882, 0.14535413881554535`], 
                Around[5.971632228532166, 0.20879312708717873`], 
                Around[6.000443216751288, 0.17802510292617704`]}, 
              "StandardDeviationHistory" -> {
                Around[87.22392566575286, 14.985505492845045`], 
                Around[93.50778104077237, 19.09134892533617], 
                Around[95.91316766220608, 15.660589109128434`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00005915174183047452, "ModelMemory" -> 
             16136., "StandardDeviation" -> 
             Around[92.21495812291043, 9.767738945161126], "TrainingMemory" -> 
             65440., "TrainingTime" -> 0.012900343682319827`|>, "Index" -> 
           9|>, <|"Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0.001|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[6.41531217662774, 0.42842557547267746`], 
              "StandardDeviation" -> 
              Around[104.79818634808983`, 12.707257248033681`], 
              "EvaluationTime" -> 0.000014327791226440976`, "TestSize" -> 240,
               "ModelMemory" -> 16136., "ModelUtility" -> -5.36915260042296, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.005660722890537324, 
              "TrainingMemory" -> 62858., "ExperimentCount" -> 3, 
              "MeanCrossEntropyHistory" -> {
                Around[5.998428185905604, 0.05967901104314429], 
                Around[5.981190363417607, 0.09239275565706384], 
                Around[7.26631798056001, 0.3841413198162515]}, 
              "StandardDeviationHistory" -> {
                Around[92.91615196332309, 7.9846531002610694`], 
                Around[93.2930412043335, 7.712359688506789], 
                Around[128.1853658766129, 11.214304857356664`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[5.958750193637769, 0.1031249462392653], 
              "StandardDeviation" -> 
              Around[92.21490367220383, 9.76773913383248], "EvaluationTime" -> 
              0.00005555555555555555, "TestSize" -> 54, "ModelMemory" -> 
              16136., "ModelUtility" -> -5.238239864963898, "TrainingSize" -> 
              72, "TrainingTime" -> 0.006718000670412151, "TrainingMemory" -> 
              65378., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                Around[5.904175349994821, 0.1453536079813086], 
                Around[5.971632890232835, 0.20879350361205207`], 
                Around[6.0004423406856535`, 0.1780246673235015]}, 
              "StandardDeviationHistory" -> {
                Around[87.22377890699119, 14.985479132836895`], 
                Around[93.50783907018526, 19.09137066547555], 
                Around[95.91309303943507, 15.66056484583985]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00005555555555555555, "ModelMemory" -> 
             16136., "StandardDeviation" -> 
             Around[92.21490367220383, 9.76773913383248], "TrainingMemory" -> 
             65378., "TrainingTime" -> 0.01170692349390826|>, "Index" -> 
           10|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["LinearRegression"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
              "TrainingTime", "TrainingMemory", "ExperimentCount", 
              "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 10], <||>], "MaxTrainingSize" -> 90, 
      "PreprocessorEvaluationTime" -> 4.4671875*^-6, "PreprocessorMemory" -> 
      47504, "InputDimension" -> 1, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.8887433756457286`17.342384273470103*^9, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.2800000000000002, 
          "ElapsedTimes" -> 0.2838171, "ExperimentCounts" -> 24|>, <|
         "TrainingSizes" -> 72, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
          0.40369269999999996`, "ExperimentCounts" -> 30|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.37391304250608687`}, "ID" -> 
           5705976216214737401|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 1.2440234, 
      "MaxTrainingMemory" -> 1268888, "DataMemory" -> 8688, "FunctionMemory" -> 
      210216, "LanguageVersion" -> {13., 1}, "Date" -> 
      DateObject[{2023, 3, 25, 14, 29, 36.1075699`9.310173151632377}, 
        "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8801148891160316`*^9, {3.880118089752535*^9, 3.880118111693136*^9}, 
   3.880130140518721*^9, 3.8801857659661207`*^9, 3.8802129269713583`*^9, {
   3.880213249973834*^9, 3.88021327086917*^9}, 3.880213451852968*^9, 
   3.880213770326085*^9, 3.880214104912624*^9, 3.888757776130508*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"75af3f3d-3766-4b8b-a2a6-1245a6a209bd"]
}, Open  ]],

Cell[TextData[{
 "It is useful to summarize the quality of our fit by using the ",
 ButtonBox["PredictorMeasurements",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/PredictorMeasurements.\
html"], None},
  ButtonNote->
   "http://reference.wolfram.com/language/ref/PredictorMeasurements.html"],
 " function.  To get a summary of the model performance, we provide this \
function with two inputs: the trained regression model and the data \
(comprised of x-y pairs) on which it is to be evaluated. \
Let\[CloseCurlyQuote]s start by looking at the performance of the model on \
the training dataset:"
}], "Text",
 CellChangeTimes->{{3.87276664683313*^9, 3.8727667500006647`*^9}, {
  3.8728603251783185`*^9, 3.8728603501927404`*^9}, {3.872970868008697*^9, 
  3.8729708680096607`*^9}, {3.873800564647032*^9, 3.873800574582988*^9}, {
  3.873810949360392*^9, 3.873810949663212*^9}, {3.8801172817620277`*^9, 
  3.8801173052772055`*^9}, {3.8801178933584523`*^9, 3.8801178934262056`*^9}, {
  3.880185615251877*^9, 
  3.8801856154077854`*^9}},ExpressionUUID->"53a4b30e-cf69-48fe-b33e-\
75e55d646b0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{
   RowBox[{"singleFeatureModels", "[", "featureName", "]"}], ",", 
   RowBox[{"singleFeatureTrain", "[", "featureName", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872256642672916*^9, 3.872256714299913*^9}, {
   3.872256749105832*^9, 3.872256749855322*^9}, 3.872766719194222*^9, 
   3.8738005385229273`*^9, {3.873810786632205*^9, 3.8738107932439284`*^9}, {
   3.880118115217906*^9, 3.880118119066779*^9}, {3.8802126606359067`*^9, 
   3.880212668717367*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"78558bb8-c70b-434e-ad5a-2cc5880eca56"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Predictor method"], 
                   TextCell["Predictor method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               InterpretationBox[Cell[
                "LinearRegression",ExpressionUUID->
                 "5988ffb4-1f2a-4273-917a-a49a9abab26f"],
                TextCell["LinearRegression"]]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "90"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Standard deviation"], 
                   TextCell["Standard deviation"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"89.7367643040722953174`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "7.2336875081091562834`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "75.2693892878539827507`3.", "\", \"", 
                   "104.2041393202906078841`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 75.2693892878539827507`3.,
                    ", ", 104.2041393202906078841`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Standard deviation baseline"], 
                    TextCell["Standard deviation baseline"]], 
                    "\"Standard deviation of testset values\"", LabelStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Standard deviation of testset values", 
                    "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"98.4194851730509441268`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "7.6330466827654248618`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "83.1533918075200944031`3.", "\", \"", 
                   "113.6855785385817938504`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 83.1533918075200944031`3.,
                    ", ", 113.6855785385817938504`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["R-squared"], 
                   TextCell["R-squared"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.1686600828845669087`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.1865314494262854117`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 TemplateBox[{"\"95% confidence interval: [\"", 
                   RowBox[{"-", "0.2044028159680039147`3."}], "\", \"", 
                   "0.5417229817371377321`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", -0.2044028159680039147`3.,
                    ", ", 0.5417229817371377321`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Mean cross entropy"], 
                   TextCell["Mean cross entropy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"5.9159463535577971882`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0785484397504507825`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "5.7588494740568956232`3.", "\", \"", 
                   "6.0730432330586987533`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 5.7588494740568956232`3., 
                   ", ", 6.0730432330586987533`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"3.32`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"877.`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                 FractionBox["\"Examples\"", "\"Seconds\""]},
                "Quantity"]},
              {
               ItemBox[
                GraphicsBox[{{{}, {
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.011000000000000001`], AbsoluteThickness[1.6], 
                    GeometricTransformationBox[InsetBox[
                    FormBox[
                    StyleBox[
                    GraphicsBox[
                    {RGBColor[0.34398, 0.49112, 0.89936], AbsoluteThickness[
                    1.], CircleBox[{0, 0}, Offset[{1.8, 1.8}, {0., 0.}]]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                    TraditionalForm], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGCIAmJGIGYC4rWb9cNbWVocGEDgQpWDzNukr9eYmiH8jiaH
Np6PzFmvmyD8Dw0O+6RXqaZIQOUjWh0OB0ptv7cVKj+h3uH/w9TqLXZQ+YQ2
VP0bGlH5Fs2o/BeNqOZfaHXoj4//p6DSAOE3oNk/owXVPo9WVPkNTQ5dDbOk
BGvqIHyGaocXO7ZphZ+EqW9Ac2+jw8+znn8S/esh/IAKVP+9aEI136HV4d6L
mo+746H8hm5UeQM0/wHDA8W8CrTwdWhClWdowG//BDTzGxodyg//fLvdAiq/
oBpVf0Mtqv4DLWjh2ezw467O46OiCPNQwudCB6p5C+pQ7X9Q7VBRf64i8wA0
vAsaMdJP260Tq3hLoXyFKgfP6UtWLZBthdrfgaqeA9N9KPyCJodEpWtvyqOg
6ic0oOqPQAvPjmZU/6Db14GWvi6g2cfR6bCXc+HmV3ZQ9SfQ0mtFC1p4NDjo
bP1yMk0QKh/Q6HBcrfv2k0PQ9HwCLf4Emh1Q8mNCDZp5aOFp0IqWnxpQw/NC
G5r7Gh2Yjtz8KP8Pmr4b6hz2mFTEzlsPja8DaPmhAS3/dqClvwA09/9oQM0P
GZ2o5lmghecLtPz6AK08edCEap4Fmns+NDlsuneu6P1iqH8W1KOadwMtfATQ
wq+gDiP/oOevG+8uWO5ghJr/oRE1vGY0YOSnR2cjrT+shpqngBaeDh2o/IAm
B3uzu1JFXxuh/i3HCF8AMhzGhA==
                    "]]}, {
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{640.5651077009876, 429.}}]},
                    RowBox[{"{", 
                    RowBox[{"640.5651077009876`", ",", "429"}], "}"}]],
                    Annotation[#, {640.5651077009876, 429}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{608.3549602249727, 593.}}]},
                    RowBox[{"{", 
                    RowBox[{"608.3549602249727`", ",", "593"}], "}"}]],
                    Annotation[#, {608.3549602249727, 593}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 542.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "542"}], "}"}]],
                    Annotation[#, {605.4267653305003, 542}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 683.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "683"}], "}"}]],
                    Annotation[#, {611.0488999643055, 683}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{598.7337476783945, 505.}}]},
                    RowBox[{"{", 
                    RowBox[{"598.7337476783945`", ",", "505"}], "}"}]],
                    Annotation[#, {598.7337476783945, 505}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{615.8381259879678, 716.}}]},
                    RowBox[{"{", 
                    RowBox[{"615.8381259879678`", ",", "716"}], "}"}]],
                    Annotation[#, {615.8381259879678, 716}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 566.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "566"}], "}"}]],
                    Annotation[#, {605.4267653305003, 566}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 615.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "615"}], "}"}]],
                    Annotation[#, {605.4267653305003, 615}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 573.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "573"}], "}"}]],
                    Annotation[#, {605.4267653305003, 573}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 698.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "698"}], "}"}]],
                    Annotation[#, {611.0488999643055, 698}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{516.516110177139, 528.}}]},
                    RowBox[{"{", 
                    RowBox[{"516.516110177139`", ",", "528"}], "}"}]],
                    Annotation[#, {516.516110177139, 528}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 659.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "659"}], "}"}]],
                    Annotation[#, {611.0488999643055, 659}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{615.8381259879678, 681.}}]},
                    RowBox[{"{", 
                    RowBox[{"615.8381259879678`", ",", "681"}], "}"}]],
                    Annotation[#, {615.8381259879678, 681}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 598.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "598"}], "}"}]],
                    Annotation[#, {611.0488999643055, 598}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{487.7541757617224, 432.}}]},
                    RowBox[{"{", 
                    RowBox[{"487.7541757617224`", ",", "432"}], "}"}]],
                    Annotation[#, {487.7541757617224, 432}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{633.1675619387797, 521.}}]},
                    RowBox[{"{", 
                    RowBox[{"633.1675619387797`", ",", "521"}], "}"}]],
                    Annotation[#, {633.1675619387797, 521}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{615.8381259879678, 556.}}]},
                    RowBox[{"{", 
                    RowBox[{"615.8381259879678`", ",", "556"}], "}"}]],
                    Annotation[#, {615.8381259879678, 556}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{500.9614222414962, 389.}}]},
                    RowBox[{"{", 
                    RowBox[{"500.9614222414962`", ",", "389"}], "}"}]],
                    Annotation[#, {500.9614222414962, 389}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{598.7337476783945, 605.}}]},
                    RowBox[{"{", 
                    RowBox[{"598.7337476783945`", ",", "605"}], "}"}]],
                    Annotation[#, {598.7337476783945, 605}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 680.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "680"}], "}"}]],
                    Annotation[#, {611.0488999643055, 680}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{619.9667691954198, 880.}}]},
                    RowBox[{"{", 
                    RowBox[{"619.9667691954198`", ",", "880"}], "}"}]],
                    Annotation[#, {619.9667691954198, 880}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 614.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "614"}], "}"}]],
                    Annotation[#, {611.0488999643055, 614}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 716.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "716"}], "}"}]],
                    Annotation[#, {605.4267653305003, 716}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{598.7337476783945, 591.}}]},
                    RowBox[{"{", 
                    RowBox[{"598.7337476783945`", ",", "591"}], "}"}]],
                    Annotation[#, {598.7337476783945, 591}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 584.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "584"}], "}"}]],
                    Annotation[#, {605.4267653305003, 584}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{598.7337476783945, 512.}}]},
                    RowBox[{"{", 
                    RowBox[{"598.7337476783945`", ",", "512"}], "}"}]],
                    Annotation[#, {598.7337476783945, 512}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{598.7337476783945, 605.}}]},
                    RowBox[{"{", 
                    RowBox[{"598.7337476783945`", ",", "605"}], "}"}]],
                    Annotation[#, {598.7337476783945, 605}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 626.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "626"}], "}"}]],
                    Annotation[#, {611.0488999643055, 626}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 560.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "560"}], "}"}]],
                    Annotation[#, {605.4267653305003, 560}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{615.0898093712593, 442.}}]},
                    RowBox[{"{", 
                    RowBox[{"615.0898093712593`", ",", "442"}], "}"}]],
                    Annotation[#, {615.0898093712593, 442}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{598.7337476783945, 472.}}]},
                    RowBox[{"{", 
                    RowBox[{"598.7337476783945`", ",", "472"}], "}"}]],
                    Annotation[#, {598.7337476783945, 472}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 664.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "664"}], "}"}]],
                    Annotation[#, {611.0488999643055, 664}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 627.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "627"}], "}"}]],
                    Annotation[#, {611.0488999643055, 627}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{578.7216247086753, 560.}}]},
                    RowBox[{"{", 
                    RowBox[{"578.7216247086753`", ",", "560"}], "}"}]],
                    Annotation[#, {578.7216247086753, 560}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{615.8381259879678, 794.}}]},
                    RowBox[{"{", 
                    RowBox[{"615.8381259879678`", ",", "794"}], "}"}]],
                    Annotation[#, {615.8381259879678, 794}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{598.7337476783945, 490.}}]},
                    RowBox[{"{", 
                    RowBox[{"598.7337476783945`", ",", "490"}], "}"}]],
                    Annotation[#, {598.7337476783945, 490}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 446.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "446"}], "}"}]],
                    Annotation[#, {605.4267653305003, 446}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{492.0257499758077, 558.}}]},
                    RowBox[{"{", 
                    RowBox[{"492.0257499758077`", ",", "558"}], "}"}]],
                    Annotation[#, {492.0257499758077, 558}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 542.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "542"}], "}"}]],
                    Annotation[#, {605.4267653305003, 542}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{590.6316734019936, 418.}}]},
                    RowBox[{"{", 
                    RowBox[{"590.6316734019936`", ",", "418"}], "}"}]],
                    Annotation[#, {590.6316734019936, 418}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{675.7034504755658, 787.}}]},
                    RowBox[{"{", 
                    RowBox[{"675.7034504755658`", ",", "787"}], "}"}]],
                    Annotation[#, {675.7034504755658, 787}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 641.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "641"}], "}"}]],
                    Annotation[#, {605.4267653305003, 641}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 627.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "627"}], "}"}]],
                    Annotation[#, {611.0488999643055, 627}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 590.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "590"}], "}"}]],
                    Annotation[#, {611.0488999643055, 590}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{587.3085571984521, 530.}}]},
                    RowBox[{"{", 
                    RowBox[{"587.3085571984521`", ",", "530"}], "}"}]],
                    Annotation[#, {587.3085571984521, 530}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 587.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "587"}], "}"}]],
                    Annotation[#, {605.4267653305003, 587}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{598.7337476783945, 625.}}]},
                    RowBox[{"{", 
                    RowBox[{"598.7337476783945`", ",", "625"}], "}"}]],
                    Annotation[#, {598.7337476783945, 625}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{615.8381259879678, 787.}}]},
                    RowBox[{"{", 
                    RowBox[{"615.8381259879678`", ",", "787"}], "}"}]],
                    Annotation[#, {615.8381259879678, 787}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 529.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "529"}], "}"}]],
                    Annotation[#, {605.4267653305003, 529}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 634.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "634"}], "}"}]],
                    Annotation[#, {611.0488999643055, 634}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 801.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "801"}], "}"}]],
                    Annotation[#, {611.0488999643055, 801}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{583.8646004277322, 569.}}]},
                    RowBox[{"{", 
                    RowBox[{"583.8646004277322`", ",", "569"}], "}"}]],
                    Annotation[#, {583.8646004277322, 569}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 655.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "655"}], "}"}]],
                    Annotation[#, {611.0488999643055, 655}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 540.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "540"}], "}"}]],
                    Annotation[#, {605.4267653305003, 540}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{610.1751898877897, 554.}}]},
                    RowBox[{"{", 
                    RowBox[{"610.1751898877897`", ",", "554"}], "}"}]],
                    Annotation[#, {610.1751898877897, 554}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{536.3617468711099, 633.}}]},
                    RowBox[{"{", 
                    RowBox[{"536.3617468711099`", ",", "633"}], "}"}]],
                    Annotation[#, {536.3617468711099, 633}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 610.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "610"}], "}"}]],
                    Annotation[#, {605.4267653305003, 610}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{640.5651077009876, 454.}}]},
                    RowBox[{"{", 
                    RowBox[{"640.5651077009876`", ",", "454"}], "}"}]],
                    Annotation[#, {640.5651077009876, 454}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 572.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "572"}], "}"}]],
                    Annotation[#, {605.4267653305003, 572}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 678.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "678"}], "}"}]],
                    Annotation[#, {605.4267653305003, 678}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 519.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "519"}], "}"}]],
                    Annotation[#, {605.4267653305003, 519}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{675.7034504755658, 730.}}]},
                    RowBox[{"{", 
                    RowBox[{"675.7034504755658`", ",", "730"}], "}"}]],
                    Annotation[#, {675.7034504755658, 730}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 559.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "559"}], "}"}]],
                    Annotation[#, {611.0488999643055, 559}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{511.88279900612554`, 488.}}]},
                    RowBox[{"{", 
                    RowBox[{"511.88279900612554`", ",", "488"}], "}"}]],
                    Annotation[#, {511.88279900612554`, 488}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{490.97616335826365`, 536.}}]},
                    RowBox[{"{", 
                    RowBox[{"490.97616335826365`", ",", "536"}], "}"}]],
                    Annotation[#, {490.97616335826365`, 536}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{615.8381259879678, 720.}}]},
                    RowBox[{"{", 
                    RowBox[{"615.8381259879678`", ",", "720"}], "}"}]],
                    Annotation[#, {615.8381259879678, 720}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 593.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "593"}], "}"}]],
                    Annotation[#, {605.4267653305003, 593}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 618.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "618"}], "}"}]],
                    Annotation[#, {611.0488999643055, 618}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 543.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "543"}], "}"}]],
                    Annotation[#, {605.4267653305003, 543}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{619.9667691954198, 813.}}]},
                    RowBox[{"{", 
                    RowBox[{"619.9667691954198`", ",", "813"}], "}"}]],
                    Annotation[#, {619.9667691954198, 813}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{615.8381259879678, 615.}}]},
                    RowBox[{"{", 
                    RowBox[{"615.8381259879678`", ",", "615"}], "}"}]],
                    Annotation[#, {615.8381259879678, 615}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 701.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "701"}], "}"}]],
                    Annotation[#, {611.0488999643055, 701}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 700.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "700"}], "}"}]],
                    Annotation[#, {611.0488999643055, 700}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{598.7337476783945, 604.}}]},
                    RowBox[{"{", 
                    RowBox[{"598.7337476783945`", ",", "604"}], "}"}]],
                    Annotation[#, {598.7337476783945, 604}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{619.9667691954198, 711.}}]},
                    RowBox[{"{", 
                    RowBox[{"619.9667691954198`", ",", "711"}], "}"}]],
                    Annotation[#, {619.9667691954198, 711}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 606.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "606"}], "}"}]],
                    Annotation[#, {605.4267653305003, 606}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{506.2459590988975, 506.}}]},
                    RowBox[{"{", 
                    RowBox[{"506.2459590988975`", ",", "506"}], "}"}]],
                    Annotation[#, {506.2459590988975, 506}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 699.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "699"}], "}"}]],
                    Annotation[#, {611.0488999643055, 699}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 546.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "546"}], "}"}]],
                    Annotation[#, {605.4267653305003, 546}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 487.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "487"}], "}"}]],
                    Annotation[#, {605.4267653305003, 487}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{605.4267653305003, 560.}}]},
                    RowBox[{"{", 
                    RowBox[{"605.4267653305003`", ",", "560"}], "}"}]],
                    Annotation[#, {605.4267653305003, 560}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 626.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "626"}], "}"}]],
                    Annotation[#, {611.0488999643055, 626}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{496.10747701277205`, 574.}}]},
                    RowBox[{"{", 
                    RowBox[{"496.10747701277205`", ",", "574"}], "}"}]],
                    Annotation[#, {496.10747701277205`, 574}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{490.97616335826365`, 531.}}]},
                    RowBox[{"{", 
                    RowBox[{"490.97616335826365`", ",", "531"}], "}"}]],
                    Annotation[#, {490.97616335826365`, 531}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 664.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "664"}], "}"}]],
                    Annotation[#, {611.0488999643055, 664}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{597.492300702663, 516.}}]},
                    RowBox[{"{", 
                    RowBox[{"597.492300702663`", ",", "516"}], "}"}]],
                    Annotation[#, {597.492300702663, 516}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{615.8381259879678, 776.}}]},
                    RowBox[{"{", 
                    RowBox[{"615.8381259879678`", ",", "776"}], "}"}]],
                    Annotation[#, {615.8381259879678, 776}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{615.8381259879678, 586.}}]},
                    RowBox[{"{", 
                    RowBox[{"615.8381259879678`", ",", "586"}], "}"}]],
                    Annotation[#, {615.8381259879678, 586}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{574.6807153017215, 382.}}]},
                    RowBox[{"{", 
                    RowBox[{"574.6807153017215`", ",", "382"}], "}"}]],
                    Annotation[#, {574.6807153017215, 382}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{611.0488999643055, 618.}}]},
                    RowBox[{"{", 
                    RowBox[{"611.0488999643055`", ",", "618"}], "}"}]],
                    
                    Annotation[#, {611.0488999643055, 618}, 
                    "Tooltip"]& ]}}, {{}, {}}}, {{{}, {}, 
                    TagBox[
                    {GrayLevel[0.2], AbsoluteThickness[1.], Opacity[0.5], 
                    AbsoluteDashing[{2, 4}], LineBox[CompressedData["
1:eJxFxW0w03EcAPCF3Ei3UYkhj7Xm4XArFzG07X+5maetdpVOR5vuJF7UUGti
aGMdmxdDlyPa2jWF46gUReSMnCu7U+ScK52H0WLlWA8v+n1ffO7jnZ6TwrfC
4XDsv/7NyzrzoDZZGPN/Ae9DGosLX6Unk7ZPw0q3uMoLqfDYyLECciaMBbqw
O0Vw2PLkj3ENvDeHy8BbYCMlYNncnYeeNfYxSzLz0bTNYedmpwL0s+eP1xh6
OF6aIiouuI7e2jVBjD16A016P+BRvQwnaIRTRbUidEOoTeMa5yYaP5S037JD
jJ5pINrW6+CJUJ3lJb8QvSKQcGh2t9DFVfW6aQHMTjW9GnwNN7WQg8UuRWjp
VJy38Br8U87KitTDZtLxCLp/MTqIdfFNdRm8gst+2P4JpikziE4RErSrNnw8
WgEHpMfFd32B9RsYO4degjYT/dTrtXCbrVHSY4bv15s8Rjml6AM9BoJOC1M6
tWUjtmXoXuq5U0/Pw3IuNrvaDi8kea5eItxGv5sw8J7wYWaImBHWD2N7bGQV
JClaXNMv88+Fmb9yCfajsOrz9lKXrwyd35ifqC6Cq3YGXZmZhqnGvvl5ajma
33FiNkAB+/xuosYuwPuWaPSGqAq0qmPIEF0HN1uFDLSswkdGZ1qDv8P9qjv3
2kzwXOCisHMD9uSpKS+24LpH7pV6vByt4NqdXfSCvTy7sWwfuPWbgGr0hcfE
Aw6mQ7CDtrB3MxCWbq/72YfDLm+bHeURsEbJseyOhAfJbQbHaNg65XK5KxNW
urvl3cVgn6/DGR4n4RgROcqbBY9jk5SmeDjNsdT5YAK88pFqrUmExeo54+Fk
+A+Nlznx
                    "]]},
                    Annotation[#, "Charting`Private`Tag$80405#1"]& ]}, {}}},
                 Axes->{False, False},
                 AxesLabel->{None, None},
                 AxesOrigin->{357.1000000000008, 357.1000000000008},
                 DisplayFunction->Identity,
                 Frame->{{True, False}, {True, False}},
                 FrameLabel->{{
                    FormBox["\"actual value\"", TraditionalForm], None}, {
                    FormBox["\"predicted value\"", TraditionalForm], None}},
                 FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                 GridLines->{Automatic, Automatic},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]],
                 ImageSize->250,
                 
                 Method->{
                  "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                   True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}},
                 PlotRange->{{357.1, 906.145}, {357.1, 906.145}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{{0, 0}, {0, 0}},
                 Ticks->{Automatic, Automatic}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
           NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  PredictorMeasurementsObject[<|
   "Model" -> PredictorFunction[<|
      "ExampleNumber" -> 90, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 90, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13., 1}, "ID" -> 2729918768343498454|>], 
                   "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                   Automatic, 
                   "Model" -> <|
                    "RotationMatrix" -> {{1.}}, 
                    "Precisions" -> {26.392585995552615`}, "NoisePrecision" -> 
                    None, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.41456458012107383`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13., 1}, "ID" -> 3830660249440368535|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 1, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.41456458012107367`}, 
                    "StandardDeviation" -> {0.19465207037089122`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    108595544619375065|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.41456458012107367`}, 
                    "StandardDeviation" -> {0.19465207037089122`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    108595544619375065|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 1, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.37391304250608687`}, "ID" -> 
                    1638824798713428667|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.053641, "MaxTrainingMemory" -> 184480,
                     "DataMemory" -> 2656, "FunctionMemory" -> 31608, 
                    "LanguageVersion" -> {13., 1}, "Date" -> 
                    DateObject[{
                    2023, 3, 25, 14, 29, 34.9221523`9.295675898445118}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "Windows", "SystemWordLength" -> 64, 
                    "Evaluations" -> {}|>, "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {-0.8514609945427946, -0.8514609945427946, 
                    0.1952966277545584, 0.45102488610810676`, 
                    0.533787889563694, 0.5399063040459527, 0.6267270553744007,
                     0.6272389542820744, 0.695079405994136, 
                    0.7051493865129609, 0.7102826067212753}, "LeftBoundary" -> 
                    0.1952966277545584, "LeftScale" -> 0.5233788111486765, 
                    "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                   Around[-0.42330321218143646`, 0.14989663871206624`], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {13., 1}, 
                "ID" -> 895810465636885430|>], 
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13., 1}, "ID" -> 1461626083009172000|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {0.41456458012107367`}, 
                "StandardDeviation" -> {0.19465207037089122`}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13., 1}, "ID" -> 2668889833738055006|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13., 1}, "ID" -> 8597333931233327344|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {597.7777777777778}, 
                "StandardDeviation" -> {98.41948517305082}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13., 1}, "ID" -> 6918378962678288739|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Version" -> {13., 1}, "ID" -> 5508345038584722383|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (597.7777777777778 + 
          98.41948517305082 #& ), 
         "ProcessorFunction" -> (-6.073774687265496 + 
          0.010160589625537075` #& ), "Name" -> "value", 
         "Quantiles" -> {-2.1924294503103336`, 2.8675441832071296`}, "Mean" -> 
         597.7777777777778|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
       0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
       "Model" -> <|
        "MeanFunction" -> 
         LinearLayer[<|
           "Type" -> "Linear", 
            "Arrays" -> <|
             "Weights" -> RawArray["Real32",{{-0.3713153302669525}}], 
              "Biases" -> RawArray["Real32",{-5.110200592762029*^-16}]|>, 
            "Parameters" -> <|
             "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 1,
               "$InputDimensions" -> {1}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, <|
           "Version" -> "13.0.3", "Unstable" -> False|>], 
         "DistributionData" -> {NormalDistribution, 0.9221623617886199}, 
         "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {0.00023399230740033005`}, 
                "StandardDeviation" -> {0.9989052311728539}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13., 1}, "ID" -> 5124392175471138302|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                "Key" -> "f1", "Invertibility" -> "Perfect", 
                "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
         "LinearRegression", "PostProcessor" -> 
         MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
           "L2Regularization" -> <|"Value" -> 10., "Options" -> <||>|>, 
           "OptimizationMethod" -> <|
            "Value" -> "NormalEquation", "Options" -> <||>|>, 
           MaxIterations -> <|"Value" -> 30, "Options" -> <||>|>|>|>, 
       "TrainingInformation" -> <|
        "PanelCell" -> CellObject[75073], "TrainingFunction" -> Predict, 
         "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
         "ProcessorEntropyShift" -> 4.589238804506155, "PreprocessingTime" -> 
         0.1718194`6.686617191624974, "LossName" -> "StandardDeviation", 
         "BestModelInformation" -> 
         Dataset[<|
           "MeanCrossEntropy" -> 
            Around[5.954524171641844, 0.10186091372711405`], 
            "StandardDeviation" -> Around[91.812002763184, 9.765259014758442],
             "EvaluationTime" -> 0.00005555555555555555, "TestSize" -> 54, 
            "ModelMemory" -> 16136., "ModelUtility" -> -5.233946883251155, 
            "TrainingSize" -> 72, "TrainingTime" -> 0.006718000670412151, 
            "TrainingMemory" -> 65428., "ExperimentCount" -> 3, 
            "MeanCrossEntropyHistory" -> {
              Around[5.892498476216262, 0.14020950835440046`], 
              Around[5.978436856293192, 0.2118335643915229], 
              Around[5.992637182416081, 0.1733868045977845]}, 
            "StandardDeviationHistory" -> {
              Around[86.05486732276653, 14.722631049738743`], 
              Around[94.1137077943545, 19.294812523540983`], 
              Around[95.26743317243096, 15.431159983098912`]}, 
            "Configuration" -> {
             "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
              10., "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
            "FinalTrainingSize" -> 90|>, 
           
           TypeSystem`Struct[{
            "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
             "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
             "TrainingTime", "TrainingMemory", "ExperimentCount", 
             "MeanCrossEntropyHistory", "StandardDeviationHistory", 
             "Configuration", "FinalTrainingSize"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[TypeSystem`AnyType, 3], 
             TypeSystem`Vector[TypeSystem`AnyType, 3], 
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`Atom[Integer]}], <||>], "Configurations" -> 
         Dataset[<|<|
             "Value" -> "LinearRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.01|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[5.989765101979819, 0.05087922799028991], 
                 "StandardDeviation" -> 
                 Around[93.10175328376691, 5.550079291405741], 
                 "EvaluationTime" -> 0.000026177909478388857`, "TestSize" -> 
                 160, "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.238699731468036, "TrainingSize" -> 10, 
                 "TrainingTime" -> 0.015404939914726502`, "TrainingMemory" -> 
                 203613.3333333333, "ExperimentCount" -> 2, 
                 "MeanCrossEntropyHistory" -> {
                   Around[5.998460205119473, 0.059683807010523726`], 
                   Around[5.981069998840164, 0.09237602340299779]}, 
                 "StandardDeviationHistory" -> {
                   Around[92.92037630746455, 7.984930888811917], 
                   Around[93.28313026006927, 7.711806381793692]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[5.95874450000574, 0.10312386322711381`], 
                 "StandardDeviation" -> 
                 Around[92.21436095842562, 9.767740646603349], 
                 "EvaluationTime" -> 0.00006634411438031247, "TestSize" -> 54,
                  "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.238234115725849, "TrainingSize" -> 72, 
                 "TrainingTime" -> 0.007126427896022372, "TrainingMemory" -> 
                 65424., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                   Around[5.90416042130804, 0.14534832051924015`], 
                   Around[5.971639511462265, 0.20879727029879677`], 
                   Around[6.000433567246915, 0.17802030408695324`]}, 
                 "StandardDeviationHistory" -> {
                   Around[87.22231738398075, 14.98521656236566], 
                   Around[93.50841974358997, 19.091588181401487`], 
                   Around[95.91234574770615, 15.66032184648208]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00006634411438031247, "ModelMemory" -> 
                16136., "StandardDeviation" -> 
                Around[92.21436095842562, 9.767740646603349], 
                "TrainingMemory" -> 65424., "TrainingTime" -> 
                0.021818725021146637`|>, "Index" -> 1|>, <|
             "Value" -> "LinearRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 1.*^-6|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[6.415415652802828, 0.42852342529980464`], 
                 "StandardDeviation" -> 
                 Around[104.80128246691986`, 12.709871390103967`], 
                 "EvaluationTime" -> 0.000015946075050154516`, "TestSize" -> 
                 240, "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.369186316392376, "TrainingSize" -> 10, 
                 "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
                 62824., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                   Around[5.9984246279471085`, 0.05967847784083203], 
                   Around[5.981203749591848, 0.092394610816412], 
                   Around[7.266618580869528, 0.3842168812602471]}, 
                 "StandardDeviationHistory" -> {
                   Around[92.91568249179507, 7.984622222094264], 
                   Around[93.29414384278732, 7.712421268205741], 
                   Around[128.1940210661772, 11.215737820029206`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[5.95875082733355, 0.10312506683562662`], 
                 "StandardDeviation" -> 
                 Around[92.21496406804931, 9.767738986716568], 
                 "EvaluationTime" -> 0.00005915174183047452, "TestSize" -> 54,
                  "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.23824050960708, "TrainingSize" -> 72, 
                 "TrainingTime" -> 0.006718000670412151, "TrainingMemory" -> 
                 65428., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                   Around[5.90417700910804, 0.14535419547763614`], 
                   Around[5.971632156277958, 0.20879308597159424`], 
                   Around[6.000443316614652, 0.17802515257986]}, 
                 "StandardDeviationHistory" -> {
                   Around[87.22394133133119, 14.985508306546182`], 
                   Around[93.50777470427764, 19.091346551401465`], 
                   Around[95.9131761685391, 15.6605918749042]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00005915174183047452, "ModelMemory" -> 
                16136., "StandardDeviation" -> 
                Around[92.21496406804931, 9.767738986716568], 
                "TrainingMemory" -> 65428., "TrainingTime" -> 
                0.012355774048172867`|>, "Index" -> 2|>, <|
             "Value" -> "LinearRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 1.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[5.986072436766663, 0.0524910404916587], 
                 "StandardDeviation" -> 
                 Around[92.88991901483993, 5.558577381540373], 
                 "EvaluationTime" -> 0.00001845296581965163, "TestSize" -> 
                 160, "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.236466782473713, "TrainingSize" -> 10, 
                 "TrainingTime" -> 0.007943282347242814, "TrainingMemory" -> 
                 62794.666666666664`, "ExperimentCount" -> 2, 
                 "MeanCrossEntropyHistory" -> {
                   Around[6.001781234137531, 0.06015810473512746], 
                   Around[5.970363639395795, 0.09041792334559856]}, 
                 "StandardDeviationHistory" -> {
                   Around[93.35294307330027, 8.012886801600743], 
                   Around[92.4268949563796, 7.6660117942741905`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[5.958143046332144, 0.10300403501583463`], 
                 "StandardDeviation" -> 
                 Around[92.15703305126313, 9.767897590731188], 
                 "EvaluationTime" -> 0.00005555555555555555, "TestSize" -> 54,
                  "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.237625469182119, "TrainingSize" -> 72, 
                 "TrainingTime" -> 0.006718000670412151, "TrainingMemory" -> 
                 65440., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                   Around[5.9025761371389445`, 0.14477461767701558`], 
                   Around[5.972362400725759, 0.20919809052249902`], 
                   Around[5.999490601131729, 0.17754209083239642`]}, 
                 "StandardDeviationHistory" -> {
                   Around[87.06689249148877, 14.956646628845613`], 
                   Around[93.57191501506935, 19.115075799087712`], 
                   Around[95.83229164723124, 15.634066251419405`]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00005555555555555555, "ModelMemory" -> 
                16136., "StandardDeviation" -> 
                Around[92.15703305126313, 9.767897590731188], 
                "TrainingMemory" -> 65440., "TrainingTime" -> 
                0.01398948295061375|>, "Index" -> 3|>, <|
             "Value" -> "LinearRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 100000.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[6.052443662343582, 0.039992222156931795`], 
                 "StandardDeviation" -> 
                 Around[99.41010984383335, 4.761968364175343], 
                 "EvaluationTime" -> 0.0000125, "TestSize" -> 240, 
                 "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.301943272748681, "TrainingSize" -> 10, 
                 "TrainingTime" -> 0.006718000670412151, "TrainingMemory" -> 
                 64092., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                   Around[6.047195763201922, 0.06441626364164842], 
                   Around[6.0553812583378415`, 0.06201743098661256], 
                   Around[6.054753965490986, 0.0887481196927964]}, 
                 "StandardDeviationHistory" -> {
                   Around[98.78756978978507, 8.335234842508477], 
                   Around[99.08279541844327, 8.421911410965981], 
                   Around[100.35996432327177`, 7.88988927369861]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[6.003012072778475, 0.08242229925615603], 
                 "StandardDeviation" -> 
                 Around[96.50231710146863, 9.123793885540412], 
                 "EvaluationTime" -> 0.00005555555555555555, "TestSize" -> 54,
                  "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.281454079767561, "TrainingSize" -> 72, 
                 "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
                 65408., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                   Around[5.97158057456978, 0.12042573048828005`], 
                   Around[6.0427992756458915`, 0.20053195002546992`], 
                   Around[5.994656368119754, 0.12541561380457802`]}, 
                 "StandardDeviationHistory" -> {
                   Around[93.15457725128707, 13.892276094453557`], 
                   Around[100.65286341045622`, 20.43518350470083], 
                   Around[95.6995106426626, 13.894999562911083`]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00005555555555555555, "ModelMemory" -> 
                16136., "StandardDeviation" -> 
                Around[96.50231710146863, 9.123793885540412], 
                "TrainingMemory" -> 65408., "TrainingTime" -> 
                0.012396616770733889`|>, "Index" -> 4|>, <|
             "Value" -> "LinearRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 100.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[6.037063790225789, 0.04561701930309257], 
                 "StandardDeviation" -> 
                 Around[97.69764169440603, 5.869947931312144], 
                 "EvaluationTime" -> 0.000017094766733539353`, "TestSize" -> 
                 160, "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.2869769658141, "TrainingSize" -> 10, 
                 "TrainingTime" -> 0.006854143078948891, "TrainingMemory" -> 
                 62872., "ExperimentCount" -> 2, "MeanCrossEntropyHistory" -> {
                   Around[6.041781226387247, 0.06402971258552603], 
                   Around[6.03234635406433, 0.06430380347856525]}, 
                 "StandardDeviationHistory" -> {
                   Around[98.16251466070517, 8.298180560227717], 
                   Around[97.23276872810688, 8.252580532741481]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[5.963168774197787, 0.0927348615884384], 
                 "StandardDeviation" -> 
                 Around[92.63550778981858, 9.501851282685053], 
                 "EvaluationTime" -> 0.0000627479281053935, "TestSize" -> 54, 
                 "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.2421340807587065`, "TrainingSize" -> 72,
                  "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
                 65428., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                   Around[5.9008853060990525`, 0.1234397433410577], 
                   Around[6.009081800046104, 0.21212860616779305`], 
                   Around[5.979539216448206, 0.1499521938104691]}, 
                 "StandardDeviationHistory" -> {
                   Around[86.45199791005443, 13.76141558849538], 
                   Around[97.08014129139586, 19.932531113460424`], 
                   Around[94.37438416800546, 14.610700590459738`]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0000627479281053935, "ModelMemory" -> 
                16136., "StandardDeviation" -> 
                Around[92.63550778981858, 9.501851282685053], 
                "TrainingMemory" -> 65428., "TrainingTime" -> 
                0.012532759179270629`|>, "Index" -> 5|>, <|
             "Value" -> "LinearRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.00001|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[5.9587508212278975`, 0.10312506574783085`], 
                 "StandardDeviation" -> 
                 Around[92.21496348294393, 9.76773899837266], 
                 "EvaluationTime" -> 0.00005555555555555555, "TestSize" -> 54,
                  "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.238240499822263, "TrainingSize" -> 72, 
                 "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
                 65394., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                   Around[5.904176992263879, 0.14535418951320594`], 
                   Around[5.971632163883658, 0.20879309029955823`], 
                   Around[6.000443307536155, 0.17802514806589254`]}, 
                 "StandardDeviationHistory" -> {
                   Around[87.22393968232005, 14.985508010367193`], 
                   Around[93.5077753712766, 19.09134680128943], 
                   Around[95.91317539523513, 15.66059162346993]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[5.989814148157597, 0.05086465472052778], 
                 "StandardDeviation" -> 
                 Around[93.10491065463339, 5.55046641672864], 
                 "EvaluationTime" -> 0.000013578855882475692`, "TestSize" -> 
                 160, "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.238734053649317, "TrainingSize" -> 10, 
                 "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
                 62786.666666666664`, "ExperimentCount" -> 2, 
                 "MeanCrossEntropyHistory" -> {
                   Around[5.998424661540229, 0.059678482875419055`], 
                   Around[5.981203634774965, 0.09239459490903479]}, 
                 "StandardDeviationHistory" -> {
                   Around[92.91568692445743, 7.984622513645939], 
                   Around[93.29413438480933, 7.712420739982015]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.000013578855882475692`, "ModelMemory" -> 
                16136., "StandardDeviation" -> 
                Around[93.10491065463339, 5.55046641672864], "TrainingMemory" -> 
                62786.666666666664`, "TrainingTime" -> 
                0.011988189545123668`|>, "Index" -> 6|>, <|
             "Value" -> "LinearRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.1|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[5.958687779748547, 0.10311302441739523`], 
                 "StandardDeviation" -> 
                 Around[92.20895445984944, 9.767755696722299], 
                 "EvaluationTime" -> 0.00007180258867947534, "TestSize" -> 54,
                  "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.238176738115711, "TrainingSize" -> 72, 
                 "TrainingTime" -> 0.006069150116147545, "TrainingMemory" -> 
                 65376., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                   Around[5.904011640455199, 0.14529550903639302`], 
                   Around[5.971705678142758, 0.2088348149861373], 
                   Around[6.000346020647686, 0.17797667987663482`]}, 
                 "StandardDeviationHistory" -> {
                   Around[87.20774871273959, 14.982593266268943`], 
                   Around[93.51422337218561, 19.09375942881149], 
                   Around[95.9048912946231, 15.657895807689126`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[6.405153599805448, 0.4188130777092024], 
                 "StandardDeviation" -> 
                 Around[104.49584675687049`, 12.451728254806605`], 
                 "EvaluationTime" -> 0.000015736567647427076`, "TestSize" -> 
                 240, "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.365854392652475, "TrainingSize" -> 10, 
                 "TrainingTime" -> 0.005660722890537324, "TrainingMemory" -> 
                 62824., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                   Around[5.998778504680849, 0.059731241339586294`], 
                   Around[5.979891275815532, 0.09220718909304339], 
                   Around[7.236791018919966, 0.3767448375876561]}, 
                 "StandardDeviationHistory" -> {
                   Around[92.9623136722672, 7.987683249703367], 
                   Around[93.1864235072809, 7.706426749964726], 
                   Around[127.33880309106338`, 11.074516992897685`]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.000015736567647427076`, "ModelMemory" -> 
                16136., "StandardDeviation" -> 
                Around[104.49584675687049`, 12.451728254806605`], 
                "TrainingMemory" -> 62824., "TrainingTime" -> 
                0.011163800717631137`|>, "Index" -> 7|>, <|
             "Value" -> "LinearRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 10.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[5.954524171641844, 0.10186091372711405`], 
                 "StandardDeviation" -> 
                 Around[91.812002763184, 9.765259014758442], "EvaluationTime" -> 
                 0.00005555555555555555, "TestSize" -> 54, "ModelMemory" -> 
                 16136., "ModelUtility" -> -5.233946883251155, "TrainingSize" -> 
                 72, "TrainingTime" -> 0.006718000670412151, "TrainingMemory" -> 
                 65428., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                   Around[5.892498476216262, 0.14020950835440046`], 
                   Around[5.978436856293192, 0.2118335643915229], 
                   Around[5.992637182416081, 0.1733868045977845]}, 
                 "StandardDeviationHistory" -> {
                   Around[86.05486732276653, 14.722631049738743`], 
                   Around[94.1137077943545, 19.294812523540983`], 
                   Around[95.26743317243096, 15.431159983098912`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[5.9917566273602425`, 0.05590139281199077], 
                 "StandardDeviation" -> 
                 Around[93.7921595501249, 5.8810141056987595`], 
                 "EvaluationTime" -> 0.0000125, "TestSize" -> 160, 
                 "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.246698414661827, "TrainingSize" -> 10, 
                 "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
                 62810.666666666664`, "ExperimentCount" -> 2, 
                 "MeanCrossEntropyHistory" -> {
                   Around[6.019686173468619, 0.06218912882796883], 
                   Around[5.963827081251866, 0.0771768277342524]}, 
                 "StandardDeviationHistory" -> {
                   Around[95.56677609899603, 8.146629452815674], 
                   Around[92.01754300125376, 7.728522797032787]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0000125, "ModelMemory" -> 16136., 
                "StandardDeviation" -> 
                Around[93.7921595501249, 5.8810141056987595`], 
                "TrainingMemory" -> 62810.666666666664`, "TrainingTime" -> 
                0.012396616770733889`|>, "Index" -> 8|>, <|
             "Value" -> "LinearRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.0001|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[5.989813699966323, 0.050864786409610535`], 
                 "StandardDeviation" -> 
                 Around[93.10488168403216, 5.550462837526915], 
                 "EvaluationTime" -> 0.000013578855882475692`, "TestSize" -> 
                 160, "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.238733738556762, "TrainingSize" -> 10, 
                 "TrainingTime" -> 0.006854143078948891, "TrainingMemory" -> 
                 62829.33333333333, "ExperimentCount" -> 2, 
                 "MeanCrossEntropyHistory" -> {
                   Around[5.998424982203115, 0.059678530932784545`], 
                   Around[5.9812024177295315`, 0.09239442628767158]}, 
                 "StandardDeviationHistory" -> {
                   Around[92.91572923634584, 7.984625296641016], 
                   Around[93.29403413171849, 7.71241514091268]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[5.958750764790757, 0.10312505446153893`], 
                 "StandardDeviation" -> 
                 Around[92.21495812291043, 9.767738945161126], 
                 "EvaluationTime" -> 0.00005915174183047452, "TestSize" -> 54,
                  "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.23824044638584, "TrainingSize" -> 72, 
                 "TrainingTime" -> 0.006718000670412151, "TrainingMemory" -> 
                 65440., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                   Around[5.90417684908882, 0.14535413881554535`], 
                   Around[5.971632228532166, 0.20879312708717873`], 
                   Around[6.000443216751288, 0.17802510292617704`]}, 
                 "StandardDeviationHistory" -> {
                   Around[87.22392566575286, 14.985505492845045`], 
                   Around[93.50778104077237, 19.09134892533617], 
                   Around[95.91316766220608, 15.660589109128434`]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00005915174183047452, "ModelMemory" -> 
                16136., "StandardDeviation" -> 
                Around[92.21495812291043, 9.767738945161126], 
                "TrainingMemory" -> 65440., "TrainingTime" -> 
                0.012900343682319827`|>, "Index" -> 9|>, <|
             "Value" -> "LinearRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.001|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[6.41531217662774, 0.42842557547267746`], 
                 "StandardDeviation" -> 
                 Around[104.79818634808983`, 12.707257248033681`], 
                 "EvaluationTime" -> 0.000014327791226440976`, "TestSize" -> 
                 240, "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.36915260042296, "TrainingSize" -> 10, 
                 "TrainingTime" -> 0.005660722890537324, "TrainingMemory" -> 
                 62858., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                   Around[5.998428185905604, 0.05967901104314429], 
                   Around[5.981190363417607, 0.09239275565706384], 
                   Around[7.26631798056001, 0.3841413198162515]}, 
                 "StandardDeviationHistory" -> {
                   Around[92.91615196332309, 7.9846531002610694`], 
                   Around[93.2930412043335, 7.712359688506789], 
                   Around[128.1853658766129, 11.214304857356664`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[5.958750193637769, 0.1031249462392653], 
                 "StandardDeviation" -> 
                 Around[92.21490367220383, 9.76773913383248], 
                 "EvaluationTime" -> 0.00005555555555555555, "TestSize" -> 54,
                  "ModelMemory" -> 16136., 
                 "ModelUtility" -> -5.238239864963898, "TrainingSize" -> 72, 
                 "TrainingTime" -> 0.006718000670412151, "TrainingMemory" -> 
                 65378., "ExperimentCount" -> 3, "MeanCrossEntropyHistory" -> {
                   Around[5.904175349994821, 0.1453536079813086], 
                   Around[5.971632890232835, 0.20879350361205207`], 
                   Around[6.0004423406856535`, 0.1780246673235015]}, 
                 "StandardDeviationHistory" -> {
                   Around[87.22377890699119, 14.985479132836895`], 
                   Around[93.50783907018526, 19.09137066547555], 
                   Around[95.91309303943507, 15.66056484583985]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00005555555555555555, "ModelMemory" -> 
                16136., "StandardDeviation" -> 
                Around[92.21490367220383, 9.76773913383248], "TrainingMemory" -> 
                65378., "TrainingTime" -> 0.01170692349390826|>, "Index" -> 
              10|>|>, 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration["LinearRegression"]], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                 "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
                 "TrainingTime", "TrainingMemory", "ExperimentCount", 
                 "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                 TypeSystem`Vector[
                 TypeSystem`AnyType, TypeSystem`AnyLength]}], 2], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "ModelMemory", "StandardDeviation", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 10], <||>], "MaxTrainingSize" -> 90,
          "PreprocessorEvaluationTime" -> 4.4671875*^-6, "PreprocessorMemory" -> 
         47504, "InputDimension" -> 1, "OutputDimension" -> 1, 
         "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
         True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, 
         "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
         "LastReportingTime" -> 3.8887433756457286`17.342384273470103*^9, 
         "RoundPartitioning" -> 
         Dataset[{<|
            "TrainingSizes" -> 10, "TimeBudgets" -> 0.2800000000000002, 
             "ElapsedTimes" -> 0.2838171, "ExperimentCounts" -> 24|>, <|
            "TrainingSizes" -> 72, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
             0.40369269999999996`, "ExperimentCounts" -> 30|>}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 2], <||>]|>, "AnomalyDetector" -> 
       None, "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.37391304250608687`}, "ID" -> 
              5705976216214737401|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 1.2440234, 
         "MaxTrainingMemory" -> 1268888, "DataMemory" -> 8688, 
         "FunctionMemory" -> 210216, "LanguageVersion" -> {13., 1}, "Date" -> 
         DateObject[{2023, 3, 25, 14, 29, 36.1075699`9.310173151632377}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>], 
    "TestSet" -> <|"Input" -> CompressedData["
1:eJxTTMoPSmVkYGCIAuJF8tN+Gbw7bq+/5dD7d++u2V9Vcv9h8O66feHrpskS
LNfsz0vqRi42vWVfdetQ3eykK3B5dBqmfl/iScMEqddwPkwfjM8ABh/s3Z7s
KXz1/Qxc/pZdbX/Egbdw+2Dqe6bLiWz5dQnOh9kHU4fOR9cPk9+5x4vr+uIr
GPIweorBojyh5gdw96Cbv6X3e8lF1/dwPsT9d6D+YWBADwcY/eTvmpkzJe9h
uBM9PNH1+fFfKL7oeh/DHyrv52Y7BQD5u32lEnc+h4vD4hFX/MDcCTPvbVYr
W/CT1/aTL0y4NKH4PU73wPiweECPT/R0AlMH0yc9lcOP+dYbDPNwpZ9t7ip2
Lye/g7sLJn5o49eVtxciwg1Gf3C3MzY2fghXBwAOFGnf
       "], "Output" -> CompressedData["
1:eJwt0D9vQVEYx/FzDwk2ZRERwtj4N0kkmIWEMBhEDXeopENVO7VDE4PZYDEb
hEgTs9KxFoNRvAHiHTD53jx3+OT33Oec8+ScGzW79VdDKdXED0VNKxXGAle+
d2QGHeSxghcjzNHAkn0eMo4B9RM5w5tDqWctM6ooQmlZf0famsf+A8bUH3Yv
yLkLvT8k7ftMqP30+/a+Cnwoo6dl7YH8QpQ6Sw4RwiM+YeKfOTlyCheOSOFM
P0DutfyDF0SQcMjbN1ijhS3auHHml4zhZMjdrXcVrPtoeZMTbmaUyG9D5t4B
hAYn4w==
       "]|>, "Predictions" -> CompressedData["
1:eJxTTMoPSmVkYGCIAuK1m/XDW1laHGTeJn29xtTs0MbzkTnrdZPDPulVqikS
zQ6HA6W239va5PD/YWr1FjuEPDoNU98fH/9PQaUBzofpg/G7GmZJCdbUObzY
sU0r/CRC/udZzz+J/vVw+2Dq772o+bg7HqEfZh9MHTofXT9Mvvzwz7fbLZox
5GH0j7s6j4+KIvyJbn5F/bmKzAN1CH/fOrGKt7TJwXP6klULZFsxwgFGJypd
e1MehelO9PBE17eXc+HmV3aY/tDZ+uVkmmCzw3G17ttPDjXAxWHxiCt+YO6E
mcd05OZH+X/1DntMKmLnra/D6R4YHxYP6PGJnk5g6mD6Nt07V/R+cT2GebjS
z413Fyx3MCLcBRN/dDbS+sNqRLjBaHuzu1JFXxvh6gCTSFL3
     "], "Distributions" -> {
      NormalDistribution[640.5651077009876, 90.7587448932006], 
      NormalDistribution[608.3549602249727, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[598.7337476783945, 90.7587448932006], 
      NormalDistribution[615.8381259879678, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[516.516110177139, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[615.8381259879678, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[487.7541757617224, 90.7587448932006], 
      NormalDistribution[633.1675619387797, 90.7587448932006], 
      NormalDistribution[615.8381259879678, 90.7587448932006], 
      NormalDistribution[500.9614222414962, 90.7587448932006], 
      NormalDistribution[598.7337476783945, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[619.9667691954198, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[598.7337476783945, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[598.7337476783945, 90.7587448932006], 
      NormalDistribution[598.7337476783945, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[615.0898093712593, 90.7587448932006], 
      NormalDistribution[598.7337476783945, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[578.7216247086753, 90.7587448932006], 
      NormalDistribution[615.8381259879678, 90.7587448932006], 
      NormalDistribution[598.7337476783945, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[492.0257499758077, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[590.6316734019936, 90.7587448932006], 
      NormalDistribution[675.7034504755658, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[587.3085571984521, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[598.7337476783945, 90.7587448932006], 
      NormalDistribution[615.8381259879678, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[583.8646004277322, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[610.1751898877897, 90.7587448932006], 
      NormalDistribution[536.3617468711099, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[640.5651077009876, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[675.7034504755658, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[511.88279900612554`, 90.7587448932006], 
      NormalDistribution[490.97616335826365`, 90.7587448932006], 
      NormalDistribution[615.8381259879678, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[619.9667691954198, 90.7587448932006], 
      NormalDistribution[615.8381259879678, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[598.7337476783945, 90.7587448932006], 
      NormalDistribution[619.9667691954198, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[506.2459590988975, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[605.4267653305003, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[496.10747701277205`, 90.7587448932006], 
      NormalDistribution[490.97616335826365`, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006], 
      NormalDistribution[597.492300702663, 90.7587448932006], 
      NormalDistribution[615.8381259879678, 90.7587448932006], 
      NormalDistribution[615.8381259879678, 90.7587448932006], 
      NormalDistribution[574.6807153017215, 90.7587448932006], 
      NormalDistribution[611.0488999643055, 90.7587448932006]}, 
    "Modes" -> CompressedData["
1:eJxTTMoPSmVkYGCIAuK1m/XDW1laHGTeJn29xtTs0MbzkTnrdZPDPulVqikS
zQ6HA6W239va5PD/YWr1FjuEPDoNU98fH/9PQaUBzofpg/G7GmZJCdbUObzY
sU0r/CRC/udZzz+J/vVw+2Dq772o+bg7HqEfZh9MHTofXT9Mvvzwz7fbLZox
5GH0j7s6j4+KIvyJbn5F/bmKzAN1CH/fOrGKt7TJwXP6klULZFsxwgFGJypd
e1MehelO9PBE17eXc+HmV3aY/tDZ+uVkmmCzw3G17ttPDjXAxWHxiCt+YO6E
mcd05OZH+X/1DntMKmLnra/D6R4YHxYP6PGJnk5g6mD6Nt07V/R+cT2GebjS
z413Fyx3MCLcBRN/dDbS+sNqRLjBaHuzu1JFXxvh6gCTSFL3
     "], "Weights" -> SparseArray[Automatic, {90}, 1., {1, {{0, 0}, {}}, {}}],
     "BatchEvaluationTime" -> 0.0011493522222222221`, "SingleEvaluationTime" -> 
    0.0033254875, "Version" -> {13., 1}|>]]], "Output",
 CellChangeTimes->{
  3.8801148901036224`*^9, {3.8801181166522875`*^9, 3.8801181202982206`*^9}, 
   3.880130142125883*^9, 3.880185772856141*^9, 3.880212928230788*^9, {
   3.880213250675975*^9, 3.880213271653223*^9}, 3.8802134528949876`*^9, 
   3.880213771148466*^9, 3.8802141057478247`*^9, 3.888757776708827*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"5b0b89af-8426-4c9c-8392-fbcc785aac4e"]
}, Open  ]],

Cell["\<\
The graph above plots the actual wavelength vs. the predicted wavelength for \
the training data. If the model could perfectly explain the variation in the \
training data, all the blue dots would lie along the dashed line. Clearly the \
model is not perfect.

It can also be useful to examine the correlation between the feature used to \
the train the regression model and the target value. Let\[CloseCurlyQuote]s \
plot the actual MaxAbsorbanceWavelength as a function of the value of \
FractionCarbonSP3.\
\>", "Text",
 CellChangeTimes->{{3.8738110381841526`*^9, 3.873811045019599*^9}, {
  3.8801173180130486`*^9, 3.8801174834081106`*^9}, {3.8801175200815454`*^9, 
  3.8801175915018454`*^9}, {3.8801176699885187`*^9, 3.8801176811808815`*^9}, {
  3.880117907131158*^9, 
  3.8801179122085423`*^9}},ExpressionUUID->"40494868-0701-4efe-b0dc-\
1d47d7fb6db2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "a", " ", "graphical", " ", "representation"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"singleFeatureModels", "[", "featureName", "]"}], "[", "x", 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "evaluate", " ", "the", " ", "model", " ", "on", " ", "inputs", " ", 
        "ranging", " ", "from", " ", "the", " ", "lowest", " ", "to", " ", 
        "the", " ", "highest", " ", "value"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<FractionCarbonSP3\>\"", ",", 
         "\"\<MaxAbsorbanceWavelength (nm)\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "->", "True"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"toXY", "[", 
       RowBox[{"singleFeatureTrain", "[", "featureName", "]"}], "]"}], ",", 
      RowBox[{"PlotStyle", "->", "Red"}]}], "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"plot", " ", "the", " ", "training", " ", "data", " ", "points"}],
     "*)"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8722552336464033`*^9, 3.8722553366074944`*^9}, {
  3.8722555658785067`*^9, 3.872255737459875*^9}, {3.8727665874089327`*^9, 
  3.8727666208648853`*^9}, {3.872774188373934*^9, 3.872774193789448*^9}, {
  3.873800533857314*^9, 3.8738005612704644`*^9}, {3.8738109949361563`*^9, 
  3.873811021180373*^9}, {3.880117498259365*^9, 3.880117510550294*^9}, {
  3.8801176412659917`*^9, 3.8801176776759653`*^9}, {3.880117863231373*^9, 
  3.8801178644226074`*^9}, {3.880118127513631*^9, 3.880118130991352*^9}, {
  3.8802126925439425`*^9, 3.880212709035673*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"938e493b-03c3-4e4e-b00f-fc92255c3b12"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVx3s0VAkcwHFE9CIVNRV2ioooYalV/X6LTQ16SFo9rUiJNo89Sbkzd+be
vKakM8mGErNFDsOOSY/RQ6LaoTwKLWOaZjUe49ZZkrbY3T++53O+7LCfAyMM
9PT0Av7rfzkR2uYHfTvWFz++WlxgRaOh9/xjPSw3KGUpLjn8965XcvKkLB8o
i/korFpIo19j++/5rCCQWvjFPllA487w0ZrzrHC4FzG85j2Lxu6VKd5nWAnQ
ZuT7B1jSWGCx5XQ6iwL9DYM6pSmNpIl0aRpLBLvq3V2t9Gj8MeSq5P0HMbhw
zntYqyicNkHu8bWWwLqWsCnraym02zakfZRRBWzlPPXfYgqPN62BnOHb4BBz
wW0FTeHcKnOlvv59iNRLCUqJpPCm2lvxfG0tPLWEoXBfCmuj8heEDNaBUWXX
2Y6lFI4sWWdWFtMA8VuYL1FTKTQYK525wO4ZGMc+0ZD9AnSfCL25vVwBTdmW
l6oVAlRQbk31Ds/hKHKCBRIB2pwbGCsZegGuMT7C1kwBDoz2KF86t4DjZWmm
V5wAxf13n5mebQVOYN9090ABmlpdZzSaNvBKN8y67yJA4WHZwQLbVxBdL1JH
WgjwI5ZqDnHbQU4PlIlG+JjgUldl+agDYFP1BlU7H3vK6zKa2a/hXeamkIpq
Pv4T1ZZrn/QnHN71MM4yh4/LvzceP3i3C6zty0Nyk/joW8iOrJyrhE9JP90R
7+Ljcav9i97s6QGj5jStYi0fHQd3TGsPUMHgjYtWGTZ8nG323qTuswo+GUcr
GidINLyfK1mc9wY8Dss2rlSTeMTtbucUPzXkBjxeb1FLYummsIJ7H9XQKbvj
mVVI4sjA/Jm92W+Bs8husiNNomy77ySRjwZU5sEcvwgSuRvpK1W9Gigx+rI7
zZdEdjeno4j+C/yTUxL2OpD4nQclYrn0wpzEzsk3p5K4x/r5mH5rL5gdLzjo
pOPhyLMz6mPkO3Aec0L7Rh7mGO5LCLTVgoDr/M5bwsPZSlmhQZ0WKtLmXRjO
4qFRMhm0JrYPDOY2yO3jeKhXsk+intUPqcX9lclBPIy7JDkzq7YfXGvavgl2
42HN8lQT86MDUL1DnF03h4fmnDhHvukgdGmapUVDXOxyetF6Qj4IF2y1Tg3l
XKy4DLaafTqoitZ6LYvn4l6Ju7nVuA5Oy6URstVc5NFXya4bQyCeNf2U3xiB
ZVqrXFN/BpbEbnayuUdgaj4dqtzMwIfq2SOWNQSGB+rsyrcxIB/vkJvKCVwo
l1cE7GRgq/CA//htAtMzd9cLwxg4eT3xSLeMwEPuv36YeoKBF92FJbllBC6i
5mw0vsZAEmfUbl4+geOrT81oL2bAJ0uuM8sjsFP3tuVaKQNmHaTMOJfAczul
ezdUMiCOmP7DaA6BEw6B8bScgSYeO/yViMCu5szLk1oZWFztVygSEnjr9OiB
1pcMDH2dGSXMIFDkud++qIOBWz6vVlHpBPr9tqLKS8lAQEvow/hUAu8kNj4l
+xhI1P2iCqQIzHb6NnPbIANebp7FHAGBseq8IDbDwIyTese8+AQu84/ueTDM
QKFJxsQqHoGG+m3ic6MMxGzZ2mDPJVAl84wK/cyAR7ZFJpsgUB5VtNL5KwMG
3a+DWckEXrSZNjIxwYBicYG1+SkC/wWB1lf1
        "]]},
      Annotation[#, "Charting`Private`Tag$80606#1"]& ]}, {}}, {{}, 
    {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCIAmIQvUh+2i+Dd8ftGUDgQpWD/pZD79+9uwbhdzQ5XFVy
/2Hw7jqE/6HBofB102QJFqh8RKvDeUndyMWmtyD8CfUOVbcO1c1OugLhJ7Sh
6t/QiMq3aEblv2hENf9Cq8O+xJOGCVKvIfwGNPtntKDa59GKKr+hyYEB4nAI
n6Hawe3JnsJX389A1TegubfR4ZZdbX/EgbcQfkAFqv9eNKGa79Dq0DNdTmTL
r0tQ93Wjyhug+Q8YHijmVaCFr0MTqjxDA377J6CZ39DosHOPF9f1xVD/LKhG
1d9Qi6r/QAtaeDY7TDFYlCfU/ABuHkr4XOhANW9BHar9D6odtvR+L7no+h7C
L2jESD+Q8L8D4StUQeMHCmZ0oKrnwHQfCr+gyeHJ3zUzZ0reg4ZHA6r+CLTw
7GhG9Q+6fR1o6esCmn0cnQ5+/BeKL7reh/BPoKXXiha08GhwUHk/N9spACof
AAyP3b5SiTufQ/WjxZ9AswNKfkyoQTMPLTwNWtHyUwNqeF5oQ3Nfo8PbrFa2
4Cew/FTnMPnChEsTiqHxdQAtPzSg5d8OtPQXgOb+Hw2o+SGjE9U8C7TwfIGW
Xx+glScPmlDNs0Bzz4cmB+mpHH7Mt95A02M9qnk30MJHAC38Cuow8g96/trm
rmL3cvI7qH2NqOE1owEjPx3a+HXl7YVQ9yughadDByo/oMnhg7udsbHxQ6h/
yzHCFwCjON1q
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 487.75417959742293`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"MaxAbsorbanceWavelength (nm)\"", TraditionalForm], None}, {
     FormBox["\"FractionCarbonSP3\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {487.75417959742185`, 675.7034466398663}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8801148911923585`*^9, {3.880117507517597*^9, 3.8801175120623336`*^9}, 
   3.880117683746065*^9, 3.8801178682055635`*^9, 3.8801181324007206`*^9, 
   3.880130143671683*^9, 3.880185782591786*^9, 3.8802129298990407`*^9, {
   3.880213251903666*^9, 3.880213272776539*^9}, 3.8802134541391687`*^9, 
   3.880213772107814*^9, 3.880214106695318*^9, 3.888757777123719*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"e42bd2ea-7fc3-41cc-a532-b69d7daed7c5"]
}, Open  ]],

Cell["\<\
If FractionCarbonSP3 could explain all the variation in \
MaxAbsorbanceWavelength, the red dots would lie along the blue line. Again we \
can see that the regression model is not perfect. In particular, many data \
points have FractionCarbonSP3 \[TildeTilde] 0.4 but very different \
MaxAbsorbanceWavelength values.

Now that we\[CloseCurlyQuote]ve evaluated the model performance with the \
training dataset, let\[CloseCurlyQuote]s use this model to predict \
MaxAbsorbanceWavelength for the test dataset and compare our predicted \
wavelengths to the true values. This is the real test of the model\
\[CloseCurlyQuote]s performance.

Run the code block below to perform this analysis and generate a plot of \
actual vs. predicted wavelength.\
\>", "Text",
 CellChangeTimes->{{3.872766812360447*^9, 3.872766835560782*^9}, {
  3.872925974421455*^9, 3.8729259891505356`*^9}, {3.880117695348812*^9, 
  3.880117749022694*^9}, {3.880117784637441*^9, 3.880117858028098*^9}, {
  3.880117940192685*^9, 3.8801179699680815`*^9}, {3.8801858096945868`*^9, 
  3.8801858205482597`*^9}},ExpressionUUID->"96c65c73-58d1-47fc-9a23-\
d1d1835e4746"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PredictorMeasurements", "[", 
    RowBox[{
     RowBox[{"singleFeatureModels", "[", "featureName", "]"}], ",", 
     RowBox[{"singleFeatureTest", "[", "featureName", "]"}], ",", 
     "\"\<ComparisonPlot\>\""}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"\"\<Single feature selected: \>\"", "<>", "featureName"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.872254434033053*^9, 3.872254602460208*^9}, {
  3.8722548846203337`*^9, 3.872254885432176*^9}, {3.8801181369306216`*^9, 
  3.8801181383202753`*^9}, {3.880212716232433*^9, 3.880212726880625*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"f63d6a64-740f-4a33-8949-07d407f9e534"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                AbsoluteThickness[1.], 
                RGBColor[0.34398, 0.49112, 0.89936], 
                CircleBox[{0, 0}, 
                 Offset[{1.8, 1.8}, {0., 0.}]]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[1.6]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAQB2JGIGYC4jaej8xZr5scGECAo9lh7Wb98FaWFgjfoMpB
527LuhKTBgh/QYPDPulVqikSzRD+gQYHFP0HmlD5Kxod/j9Mrd5iB1Wf0Y6q
f0MzKv9Es8PhQKnt97ZC9TvUo+qvaEGV90B3Twuq/QqNaO5DM48B3T1o+l80
Oax9vkx3QzM0PH6gmSeAxl/Q5nDHnIPx83qYfZWo8hPaHACb7nLO
          "]]}}, {
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{605.4267653305003, 609.}}]}, 
          RowBox[{"{", 
            RowBox[{"605.4267653305003`", ",", "609"}], "}"}]], 
         Annotation[#, {605.4267653305003, 609}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{640.5651077009876, 419.}}]}, 
          RowBox[{"{", 
            RowBox[{"640.5651077009876`", ",", "419"}], "}"}]], 
         Annotation[#, {640.5651077009876, 419}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{518.5569734935757, 532.}}]}, 
          RowBox[{"{", 
            RowBox[{"518.5569734935757`", ",", "532"}], "}"}]], 
         Annotation[#, {518.5569734935757, 532}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{611.0488999643055, 536.}}]}, 
          RowBox[{"{", 
            RowBox[{"611.0488999643055`", ",", "536"}], "}"}]], 
         Annotation[#, {611.0488999643055, 536}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{605.4267653305003, 600.}}]}, 
          RowBox[{"{", 
            RowBox[{"605.4267653305003`", ",", "600"}], "}"}]], 
         Annotation[#, {605.4267653305003, 600}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{605.4267653305003, 565.}}]}, 
          RowBox[{"{", 
            RowBox[{"605.4267653305003`", ",", "565"}], "}"}]], 
         Annotation[#, {605.4267653305003, 565}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{615.8381259879678, 749.}}]}, 
          RowBox[{"{", 
            RowBox[{"615.8381259879678`", ",", "749"}], "}"}]], 
         Annotation[#, {615.8381259879678, 749}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{611.0488999643055, 630.}}]}, 
          RowBox[{"{", 
            RowBox[{"611.0488999643055`", ",", "630"}], "}"}]], 
         Annotation[#, {611.0488999643055, 630}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{611.0488999643055, 633.}}]}, 
          RowBox[{"{", 
            RowBox[{"611.0488999643055`", ",", "633"}], "}"}]], 
         Annotation[#, {611.0488999643055, 633}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{598.7337476783945, 500.}}]}, 
          RowBox[{"{", 
            RowBox[{"598.7337476783945`", ",", "500"}], "}"}]], 
         Annotation[#, {598.7337476783945, 500}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{615.8381259879678, 655.}}]}, 
          RowBox[{"{", 
            RowBox[{"615.8381259879678`", ",", "655"}], "}"}]], 
         Annotation[#, {615.8381259879678, 655}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{598.7337476783945, 521.}}]}, 
          RowBox[{"{", 
            RowBox[{"598.7337476783945`", ",", "521"}], "}"}]], 
         Annotation[#, {598.7337476783945, 521}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{611.0488999643055, 664.}}]}, 
          RowBox[{"{", 
            RowBox[{"611.0488999643055`", ",", "664"}], "}"}]], 
         Annotation[#, {611.0488999643055, 664}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{605.4267653305003, 548.}}]}, 
          RowBox[{"{", 
            RowBox[{"605.4267653305003`", ",", "548"}], "}"}]], 
         Annotation[#, {605.4267653305003, 548}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{605.4267653305003, 508.}}]}, 
          RowBox[{"{", 
            RowBox[{"605.4267653305003`", ",", "508"}], "}"}]], 
         Annotation[#, {605.4267653305003, 508}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{615.8381259879678, 736.}}]}, 
          RowBox[{"{", 
            RowBox[{"615.8381259879678`", ",", "736"}], "}"}]], 
         Annotation[#, {615.8381259879678, 736}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{611.0488999643055, 662.}}]}, 
          RowBox[{"{", 
            RowBox[{"611.0488999643055`", ",", "662"}], "}"}]], 
         Annotation[#, {611.0488999643055, 662}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{605.4267653305003, 605.}}]}, 
          RowBox[{"{", 
            RowBox[{"605.4267653305003`", ",", "605"}], "}"}]], 
         Annotation[#, {605.4267653305003, 605}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{656.4610245742275, 575.}}]}, 
          RowBox[{"{", 
            RowBox[{"656.4610245742275`", ",", "575"}], "}"}]], 
         Annotation[#, {656.4610245742275, 575}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{605.4267653305003, 546.}}]}, 
          RowBox[{"{", 
            RowBox[{"605.4267653305003`", ",", "546"}], "}"}]], 
         Annotation[#, {605.4267653305003, 546}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{605.4267653305003, 724.}}]}, 
          RowBox[{"{", 
            RowBox[{"605.4267653305003`", ",", "724"}], "}"}]], 
         Annotation[#, {605.4267653305003, 724}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{597.993654312329, 412.}}]}, 
          RowBox[{"{", 
            RowBox[{"597.993654312329`", ",", "412"}], "}"}]], 
         Annotation[#, {597.993654312329, 412}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{605.4267653305003, 722.}}]}, 
          RowBox[{"{", 
            RowBox[{"605.4267653305003`", ",", "722"}], "}"}]], 
         Annotation[#, {605.4267653305003, 722}, 
          "Tooltip"]& ]}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           GrayLevel[0.2], 
           Opacity[0.5], 
           AbsoluteThickness[1.], 
           AbsoluteDashing[{2, 4}]], 
          LineBox[CompressedData["
1:eJxFxXsw0wEAB3Acp05IHv9YNcmhc9fqumPIsTw2VqfOrq0idFSXUGbNmGXz
OvK4kcpJp6aHdKqNOC6PshRtcRNddC6PbdHmUUpHqj/6ff/43MclPuVIgpmJ
icnBv/49rOYkJz7lB/5/qOitF1WBVSFBs1YtuK/d48yTNtx+70fcaheuE11l
SdX4/O5B/+dz2KKMbuXknkEsqWuMqKrHClqCSOEsIHZRDBXnlOExfrPfdutM
4vCBuU/HxNgy7YbbadMs4nX9r+Ad2bjB+Pho5iKW0ces61OFxJGUE8+SZrCP
rpw6yckmTlnyPblrBLNLqHxbpoi4XPBoX+8bbEaanap0vUzs2OPpWRWN1Xau
naIaPHlfechnBNfqd1I+OOUQX5KOCw+z8ANxYO/1MiwhxcT0qXDLmtuCcqOY
2DKMPl9zAK9T3YKOi3Ekt7FY14EZbIN7zCqOlRVRHvpKiN95D+59xcVa7lB+
vxyzV4SaWgPWTktKGR65xFuzgqvHEnEjp+lWQB3+PKFZLpzAF5tkYbed84jJ
MyrzChZOV8rtkyqxq4FGclBjfucVnswmn3j2J2X/poO4NUO0RivAXrJC23gl
XnH0d440LSCeMjIqHP0wL21L9IsMHB+QRw5UYDcLPT2kGev6mRfCW3Ayx6En
qhULuHdOne3A0obuu9KXuNvpt9e0BueOx7G+DONQWa/Q+B4P7ClRrYziUSYp
1WYcz4t95d7TWM6o/eg/g3mbzcxpWrx683UUU483tLGXY7/iflHHtkQDLg0l
h50zYgeN9lr6Ah6pjugSLOLquCadaAlHe9jb5X3DZCOPWvQd/wFz8lZR
           "]]}, Annotation[#, "Charting`Private`Tag$86978#1"]& ]}}, {}}}, {
    PlotLabel -> 
     FormBox["\"Single feature selected: FractionCarbonSP3\"", 
       TraditionalForm], DisplayFunction -> Identity, DisplayFunction -> 
     Identity, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {395.15000000000083`, 395.15000000000083`}, 
     DisplayFunction :> Identity, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 300, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{395.15, 766.6925}, {395.15, 766.6925}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}], ",", "Automatic"}], 
                    "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect predictions\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0.2]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.880114891713705*^9, 3.8801181399914107`*^9, 3.8801186239421787`*^9, 
   3.8801301445376463`*^9, 3.880185832074462*^9, 3.8802129307001457`*^9, {
   3.8802132526276617`*^9, 3.8802132734432077`*^9}, 3.880213455029356*^9, 
   3.8802137728777657`*^9, 3.88021410738342*^9, 3.8887577774651747`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"872f2e29-4624-419d-abcd-147ade04de5a"]
}, Open  ]],

Cell["\<\
If the model predictions were perfect, all the blue dots would lie along the \
dashed line. As we saw before, this model is not perfect. There are \
quantitative ways that we can evaluate the performance of the model, which we\
\[CloseCurlyQuote]ll discuss soon.

For now, go back to the description of the different molecular features in \
our dataset. Use your chemical intuition and think about which ones might be \
correlated with MaxAbsorbanceWavelength. Then write new code to perform and \
visualize a linear regression for a different variable. (Hint: you can copy \
the code blocks above and modify them to choose a different feature and save \
a new model. Name the variables singleFeatureTrain2, singleFeatureTest2, and \
regressor2 to avoid overwriting the previous model.)\
\>", "Text",
 CellChangeTimes->{{3.872254917675205*^9, 3.8722549187985897`*^9}, {
  3.872255810095487*^9, 3.872255810732596*^9}, {3.872766887664832*^9, 
  3.8727668932968903`*^9}, {3.8728605904014006`*^9, 3.872860599752223*^9}, {
  3.880117982342304*^9, 3.880117994742263*^9}, {3.880118636999937*^9, 
  3.880118681062029*^9}, {3.880185841625106*^9, 3.880185843905937*^9}, {
  3.8801858759794254`*^9, 
  3.880185879306032*^9}},ExpressionUUID->"eb6e26e9-6c67-479d-b306-\
80d48cba988a"],

Cell[TextData[StyleBox["ADD A CODE BLOCK HERE TO PERFORM A SIMPLE LINEAR \
REGRESSION FOR A DIFFERENT VARIABLE",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{
  3.8728606280883684`*^9},ExpressionUUID->"61602891-1751-4552-b5af-\
0c633f6cee4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multiple Regression ", "Subsection",
 CellChangeTimes->{{3.872256874996738*^9, 
  3.872256883600239*^9}},ExpressionUUID->"874fe596-ee56-434e-a4e9-\
e097b492e93d"],

Cell["\<\
When we have more than one independent variable in our dataset, we can make \
use of a multiple regression model. A multiple regression model can perform \
better at predicting the value of a dependent variable since the model has \
more information to use.\
\>", "Text",
 CellChangeTimes->{{3.872766897336905*^9, 3.8727669002006493`*^9}, {
  3.872860782612253*^9, 
  3.872860833147835*^9}},ExpressionUUID->"ead7751f-2f61-48f4-8ce5-\
3a565a600708"],

Cell["\<\
https://en.wikipedia.org/wiki/Linear_regression#Simple_and_multiple_linear_\
regression\
\>", "Item",
 CellChangeTimes->{{3.87286084813509*^9, 
  3.87286084910946*^9}},ExpressionUUID->"f57cdc32-a1f7-4950-9679-\
750baf759a6f"],

Cell["\<\
The formula is an extension of the single-variable simple linear regression:\
\>", "Text",
 CellChangeTimes->{3.872860288237076*^9, 
  3.8728608568896875`*^9},ExpressionUUID->"64ae3b0a-633b-4fd8-bbc0-\
5299872215c5"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Beta]", "0"], "+", 
      RowBox[{
       SubscriptBox["\[Beta]", "1"], 
       SubscriptBox["x", "1"]}], "+", 
      RowBox[{
       SubscriptBox["\[Beta]", "2"], 
       SubscriptBox["x", "2"]}], "+"}], "..."}], "+", 
    RowBox[{
     SubscriptBox["\[Beta]", "k"], 
     SubscriptBox["x", "k"]}]}]}], 
  TraditionalForm]],ExpressionUUID->"3df6d8b7-aabd-4abd-bf18-fff65041a9d8"]], \
"Text",
 CellChangeTimes->{{3.8728599790841565`*^9, 3.8728600560344706`*^9}, 
   3.872860110580801*^9, {3.872860192181012*^9, 3.872860195386731*^9}, {
   3.8728602337006836`*^9, 3.8728602842940035`*^9}, {3.872926005760792*^9, 
   3.8729260435240197`*^9}, {3.8801272307627816`*^9, 
   3.8801272312933598`*^9}, {3.8801859554907956`*^9, 3.8801859554907956`*^9}},
 TextAlignment->Center,ExpressionUUID->"6021c4d6-f682-42ed-8d23-860bb125720e"],

Cell["where:", "Text",
 CellChangeTimes->{{3.872860686663622*^9, 3.8728606873765926`*^9}, {
  3.8728609832149963`*^9, 
  3.872860983321015*^9}},ExpressionUUID->"c43043e4-1852-4f20-9bda-\
73c3a5d520d2"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "0"], TraditionalForm]],ExpressionUUID->
  "b67c48a0-07ad-4643-b195-899942d61119"],
 ": y-intercept\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "k"], TraditionalForm]],ExpressionUUID->
  "d2bed371-f117-4ae4-be64-56deac22ddf6"],
 ": slope corresponding to the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]],ExpressionUUID->
  "3c3c196d-992a-48bb-b76d-8db030c35be7"],
 " feature\n",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "9a016e9c-515d-45e7-a43d-a45355c99d16"],
 ": number of independent features used in the model\n\nAs for the simple \
linear regression, the optimal slopes are determined by minimizing the RSS.\n\
\nNow let\[CloseCurlyQuote]s perform a multiple linear regression using all \
13 molecular features and plot the actual vs. predicted wavelength:"
}], "Text",
 CellChangeTimes->{{3.872860694118816*^9, 3.8728607365519714`*^9}, 
   3.872860769902091*^9, {3.872926065077037*^9, 3.8729260901495147`*^9}, {
   3.872926174023297*^9, 3.8729262028128953`*^9}, {3.872926257906521*^9, 
   3.872926297094808*^9}, {3.8801927185086155`*^9, 3.880192764681155*^9}, {
   3.883646963956499*^9, 
   3.883646968660301*^9}},ExpressionUUID->"82a14b9f-ceb4-4111-a7cb-\
c9052798ed68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "train", " ", "a", " ", "multiple", " ", "regression", " ", "model", " ", 
    "without", " ", "any", " ", "regularization", " ", 
    RowBox[{"(", 
     RowBox[{"more", " ", "on", " ", "that", " ", "later"}], ")"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"multipleRegression", "=", 
   RowBox[{"Predict", "[", 
    RowBox[{"train", ",", "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<LinearRegression\>\"", ",", 
        RowBox[{"\"\<L1Regularization\>\"", "->", "0"}], ",", 
        RowBox[{"\"\<L2Regularization\>\"", "->", "0"}]}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.872256879660989*^9, 3.872256956439415*^9}, {
  3.872766798353076*^9, 3.8727668033614187`*^9}, {3.880186000291168*^9, 
  3.8801860105366583`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"c83ae3c8-bd0e-47f2-9d22-38ff9c03c03a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["90", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[<|
   "ExampleNumber" -> 90, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|
          "AromaticRingCount" -> <|"Type" -> "Numerical"|>, 
           "HBondDonorCount" -> <|"Type" -> "Numerical"|>, 
           "HBondAcceptorCount" -> <|"Type" -> "Numerical"|>, 
           "FractionCarbonSP3" -> <|"Type" -> "Numerical"|>, 
           "HeteroatomCount" -> <|"Type" -> "Numerical"|>, 
           "HeterocycleCount" -> <|"Type" -> "Numerical"|>, 
           "RotatableBondCount" -> <|"Type" -> "Numerical"|>, 
           "MolecularMass" -> <|"Type" -> "Numerical"|>, 
           "DegreeOfUnsaturation" -> <|"Type" -> "Numerical"|>, 
           "MinEllipsoidLength" -> <|"Type" -> "Numerical"|>, 
           "MaxDistance" -> <|"Type" -> "Numerical"|>, 
           "LongestPiChain" -> <|"Type" -> "Numerical"|>, 
           "LinkerLength" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor[
              "FromNamedFeatures", <|
               "FeatureNames" -> {
                 "AromaticRingCount", "HBondDonorCount", "HBondAcceptorCount",
                   "FractionCarbonSP3", "HeteroatomCount", "HeterocycleCount",
                   "RotatableBondCount", "MolecularMass", 
                  "DegreeOfUnsaturation", "MinEllipsoidLength", "MaxDistance",
                   "LongestPiChain", "LinkerLength"}|>], 
              MachineLearning`MLProcessor[
              "Transpose", <|"FeatureNumber" -> 13|>], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {
                 "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical"}, 
                "FeatureKeys" -> {
                 "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", 
                  "f11", "f12", "f13"}, "FeatureWeights" -> Automatic, 
                "ExampleWeights" -> Automatic, "RawExample" -> 
                Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                False|>]}|>], "ScalarFeature" -> False, "Invertibility" -> 
         "Perfect", "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
       "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|
          "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|
          "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
            "Type" -> "NumericalVector", "Weight" -> 13|>|>, "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 90, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical"|>, 
                    "f2" -> <|"Type" -> "Numerical"|>, 
                    "f3" -> <|"Type" -> "Numerical"|>, 
                    "f4" -> <|"Type" -> "Numerical"|>, 
                    "f5" -> <|"Type" -> "Numerical"|>, 
                    "f6" -> <|"Type" -> "Numerical"|>, 
                    "f7" -> <|"Type" -> "Numerical"|>, 
                    "f8" -> <|"Type" -> "Numerical"|>, 
                    "f9" -> <|"Type" -> "Numerical"|>, 
                    "f10" -> <|"Type" -> "Numerical"|>, 
                    "f11" -> <|"Type" -> "Numerical"|>, 
                    "f12" -> <|"Type" -> "Numerical"|>, 
                    "f13" -> <|"Type" -> "Numerical"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "ToVector", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                   "Version" -> {13., 1}, "ID" -> 6010188386713515434|>], 
                "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                Automatic, "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBuQNG/CFib1JlAgAAAA0AAAAJAAAAofuQPNIi0T+gLFcr9+yxv7wsegMx
JNk/grLUwt+qx7+t+SILyYTmv7Kj+HY2oNk/cGd94Gh9t7+5xVS2pL7Ev6qB
lX+Zh6c/2/8/ks2Hwb/NtTnLML/MP6dFxVpNLds/JGj8eZfd4z/8eWv7Mja1
P1eCI3N5Mcg//wxSq2FXnz+Cj6jeIHTTv4K2onkZx9K/jBwL38L5178JMAg+
XMvFP7juGO1KmLg/szghMY5v1b/nr1yncXHAP32IsxZ4h8A/7Q43Smgc378q
w7n6bxS6P6yHJ0BAVag/OanOvf/z0r8Esb5FMQO8PyHf/9U91du/XYMuBX6B
1z+Ka6CUj6rLv5VgBtqr1rg/oRtNMaxgsz9JWdbLPZKiv6IsNkigYsE/Mhul
X42H2r9vMeXpKVfLP4JR+T93zcE/q89S5v97w7/VCtwwl+KhPy6QY8IOb8M/
aXHSaZHZ1b/b7O67dHyuP+EADNmwTKc/RSKzcxl8t78oOv99/UTGv7Di430l
h+K/hhoBEwHfxr8ZY5/AIgLNv6iNBCVi7cY/NlntA7RzwL/Cy11dW6rZv6xN
xt1Av9i/6p0PmuVh178aRb222x5iP2ZD8C0RvJ6/4Y8tEIYNvj+SRXn130/B
v7WiP41uGqo/QUVoeKnXwT9+Ary08u6yv5k1NyGCPcO/4WE0ZU882r8r+zM4
pb+2P8O2xd2Up7E/NZ07/RXlob/jueRPzYzFv/F1gVdGopo/uygGBS34xD8D
Z1Ljf7ubv2/V5Ny3V8A/YstBeUjd0r92XdeVMGOEP04OIRR5us4/yt1t+0vB
3L/3s0TRK1uWv8tSxPWA+NO/SRZA5sYf4j+51QDR5rTQv5TdwS9rbcS/E7TX
XMgatr9cPgfSoibRv5GctX65CcE/JnO8oNorxz8XE6itio/Ov0a3je0az+a/
9tfhN9qn3b/Dsch7FlzSv20EDyztFqg/lD874X700L+nYxtcqFTVvxHPoRIt
P58/jXjxU14hxT8+HuWOLVHYv48UQvzEr6m/Vz48zPznwj/8FlLYwSHjPxZU
UiirtLw/u1fpJ271wb+WqnNzp/3evxtTE6Gzfqg/nWg2cUswoj9x79v4HvDQ
P36Dm5vlSdE/znFGvQmvsj++XO+Lq9PZvxK6AhttbuQ/zr1d9fzov7+A1K17
u0zkv0hilCYgfsU/UTidMqeHgz8PWtJg6iPQP5an551gIMk/p2UrZMfWtL9q
G+29r4zFP5lVTHQSFuC/Otf1xQ==
                   "], 
                  "Precisions" -> {3.8567464290381497`, 7.838302281971681, 
                   20.078733198483576`, 47.54251319820534, 66.89102917076444, 
                   97.15773434595964, 141.58415891728552`, 218.1889001114418, 
                   583.54413909886}, "NoisePrecision" -> 1662.9938827023052`, 
                  "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Mean" -> {0.45555555555555555`, 0.061111111111111116`, 
                    0.1539682539682539, 0.41456458012107383`, 
                    0.14999999999999988`, 0.4777777777777778, 
                    0.1861111111111111, 0.17805678259892185`, 
                    0.26944444444444443`, 0.1368739640549452, 
                    0.3954854935427032, 0.5416666666666667, 
                    0.40864197530864216`}, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Version" -> {13., 1}, "ID" -> 5329164836532336994|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 13|>,
                     "Key" -> "(f1f2f3f4f5f6f7f8f9f10f11f12f13)", 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"|>], "Method" -> 
                  "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 9, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Mean" -> {0.45555555555555555`, 0.061111111111111116`, 
                    0.15396825396825395`, 0.41456458012107367`, 
                    0.14999999999999988`, 0.4777777777777778, 
                    0.186111111111111, 0.17805678259892185`, 
                    0.26944444444444443`, 0.13687396405494523`, 
                    0.3954854935427032, 0.5416666666666666, 
                    0.4086419753086422}, 
                    "StandardDeviation" -> {0.19212907184211764`, 
                    0.1720429174133558, 0.2124020678994716, 
                    0.19465207037089122`, 0.2301740857250638, 
                    0.16091942619955812`, 0.18944770280677845`, 
                    0.2137739597873353, 0.182595315883831, 
                    0.14371342318638797`, 0.19321368995232213`, 
                    0.19612370120115372`, 0.2427708012545513}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 13, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    6830220434842910334|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                   "Mean" -> {0.45555555555555555`, 0.061111111111111116`, 
                    0.15396825396825395`, 0.41456458012107367`, 
                    0.14999999999999988`, 0.4777777777777778, 
                    0.186111111111111, 0.17805678259892185`, 
                    0.26944444444444443`, 0.13687396405494523`, 
                    0.3954854935427032, 0.5416666666666666, 
                    0.4086419753086422}, 
                   "StandardDeviation" -> {0.19212907184211764`, 
                    0.1720429174133558, 0.2124020678994716, 
                    0.19465207037089122`, 0.2301740857250638, 
                    0.16091942619955812`, 0.18944770280677845`, 
                    0.2137739597873353, 0.182595315883831, 
                    0.14371342318638797`, 0.19321368995232213`, 
                    0.19612370120115372`, 0.2427708012545513}, "Method" -> 
                   "NaiveSampler", "VectorLength" -> 13, 
                   "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, "Type" -> 
                   "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                   6830220434842910334|>], "InputDimension" -> 0, 
                "OutputDimension" -> 13, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, 
                    "ID" -> 223830984131347470|>, 
                    "f2" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, 
                    "ID" -> 3181086525719607783|>, 
                    "f3" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.07142857142857142}, "ID" -> 
                    509165656554065290|>, 
                    "f4" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.4095238085614285}, "ID" -> 
                    1604161506447929441|>, 
                    "f5" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.05555555555555555}, "ID" -> 
                    4712557960321622165|>, 
                    "f6" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, 
                    "ID" -> 1736894384284373350|>, 
                    "f7" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.05}, 
                    "ID" -> 6385081267771642384|>, 
                    "f8" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.019113865043903888`}, "ID" -> 
                    9050612953462206946|>, 
                    "f9" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.08333333333333333}, "ID" -> 
                    7620751929912453154|>, 
                    "f10" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.03036325362479377}, "ID" -> 
                    7711695143384896275|>, 
                    "f11" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.19846481946035388`}, "ID" -> 
                    6947422922590196435|>, 
                    "f12" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.25}, 
                    "ID" -> 5937810478194738894|>, 
                    "f13" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.1111111111111111}, "ID" -> 
                    6353494181561493803|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.059909, "MaxTrainingMemory" -> 226552, 
                  "DataMemory" -> 23632, "FunctionMemory" -> 66808, 
                  "LanguageVersion" -> {13., 1}, "Date" -> 
                  DateObject[{
                    2023, 3, 25, 14, 29, 37.6405705`9.328231085438773}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows",
                   "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {0.7885888868246748, 0.7885888868246748, 
                    0.8828133594179084, 1.0382019006283236`, 
                    1.0718495389790443`, 1.106309038518766, 
                    1.1182908251500274`, 1.1243866957119324`, 
                    1.1519529675671858`, 1.2536386987311403`, 
                    1.4229494825604094`}, "LeftBoundary" -> 
                   0.8828133594179084, "LeftScale" -> 0.047112236296616816`, 
                   "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[-14.246675812316235`, 0.7253118747959029], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|
              "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {13., 1}, 
             "ID" -> 5199739729984741578|>], 
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
             "Version" -> {13., 1}, "ID" -> 6134815762277793920|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
             "Mean" -> {0.45555555555555555`, 0.061111111111111116`, 
              0.15396825396825395`, 0.41456458012107367`, 
              0.14999999999999988`, 0.4777777777777778, 0.186111111111111, 
              0.17805678259892185`, 0.26944444444444443`, 
              0.13687396405494523`, 0.3954854935427032, 0.5416666666666666, 
              0.4086419753086422}, 
             "StandardDeviation" -> {0.19212907184211764`, 0.1720429174133558,
               0.2124020678994716, 0.19465207037089122`, 0.2301740857250638, 
              0.16091942619955812`, 0.18944770280677845`, 0.2137739597873353, 
              0.182595315883831, 0.14371342318638797`, 0.19321368995232213`, 
              0.19612370120115372`, 0.2427708012545513}, 
             "Output" -> <|
              "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
             "Version" -> {13., 1}, "ID" -> 3778842250428737266|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 7708644319899565307|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {597.7777777777778}, 
             "StandardDeviation" -> {98.41948517305082}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 1637828263618835904|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "Version" -> {13., 1}, "ID" -> 7457467337844711562|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> "f1",
              "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
             "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (597.7777777777778 + 
       98.41948517305082 #& ), 
      "ProcessorFunction" -> (-6.073774687265496 + 0.010160589625537075` #& ),
       "Name" -> "value", 
      "Quantiles" -> {-2.1924294503103336`, 2.8675441832071296`}, "Mean" -> 
      597.7777777777778|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
    0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "MeanFunction" -> 
      LinearLayer[<|
        "Type" -> "Linear", 
         "Arrays" -> <|
          "Weights" -> 
           RawArray["Real32",{{0.3305113911628723, 0.4556983411312103, 
             0.2271471619606018, -0.06029430776834488, -0.9884734153747559, 
             0.3093341290950775, 0.07661405205726624, -0.1753443479537964, 
             0.6484296917915344, 0.06318136304616928, -0.052106235176324844`, 
             0.01287267915904522, 0.3273884952068329}}], "Biases" -> 
           RawArray["Real32",{-4.898164952658228*^-16}]|>, 
         "Parameters" -> <|
          "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 13, 
           "$InputDimensions" -> {13}|>, 
         "Inputs" -> <|
          "Input" -> NeuralNetworks`TensorT[{13}, NeuralNetworks`AtomT]|>, 
         "Outputs" -> <|
          "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, <|
        "Version" -> "13.0.3", "Unstable" -> False|>], 
      "DistributionData" -> {NormalDistribution, 0.715228500313085}, 
      "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|
          "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
            "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
         "Output" -> <|
          "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
            "Type" -> "NumericalVector", "Weight" -> 13|>|>, "Processors" -> {
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
             "Mean" -> {0.00032138332455806755`, 
              0.0003358410054450509, -0.000052539611533898424`, \
-0.0002799562107763116, -0.00036720407821136207`, 
              0.0004550851358696965, -0.0004076030992769912, \
-0.0009146188005153976, -0.0008783546330163798, -0.00033091819366946917`, 
              0.0008006703927789128, -0.00020721434127501443`, 
              0.00035400398541737637`}, 
             "StandardDeviation" -> {1.0012020579600356`, 0.9998456999068512, 
              1.0009211784514265`, 0.9998748047296516, 0.9997064294849233, 
              1.0007771070969311`, 0.9997544970821429, 1.0003563554099584`, 
              0.9996061358682744, 1.0004047905032725`, 1.00132984051136, 
              1.0007791097640655`, 0.9993376928242194}, 
             "Output" -> <|
              "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
             "Version" -> {13., 1}, "ID" -> 6375024460076144191|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 13|>, "Key" -> 
             "(f1f2f3f4f5f6f7f8f9f10f11f12f13)", "Invertibility" -> "Perfect",
              "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
      "LinearRegression", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
        "L2Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
        "OptimizationMethod" -> <|
         "Value" -> "NormalEquation", "Options" -> <||>|>, 
        MaxIterations -> <|"Value" -> 30, "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "PanelCell" -> CellObject[79169], "TrainingFunction" -> Predict, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 4.589238804506155, "PreprocessingTime" -> 
      0.1462939`6.616771211271518, "LossName" -> "StandardDeviation", 
      "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[5.997501172107573, 0.10875477625540911`], "StandardDeviation" -> 
         Around[88.58530065639643, 6.359477212288932], "EvaluationTime" -> 
         0.00007118182600472737, "TestSize" -> 144, "ModelMemory" -> 16648., 
         "ModelUtility" -> -5.191383941830457, "TrainingSize" -> 72, 
         "TrainingTime" -> 0.007492714657610585, "TrainingMemory" -> 93696., 
         "ExperimentCount" -> 8, "MeanCrossEntropyHistory" -> {
           Around[6.196664927245978, 0.5295253467662449], 
           Around[5.899859182825129, 0.1614471256111133], 
           Around[5.679755911539353, 0.1103432746417767], 
           Around[5.951310722399128, 0.2799198672266316], 
           Around[5.810064761370237, 0.17805864029641655`], 
           Around[5.959580862722599, 0.20133462023061136`], 
           Around[6.027198461403296, 0.24036816960632082`], 
           Around[6.455574547354869, 0.6004978049838207]}, 
         "StandardDeviationHistory" -> {
           Around[100.02882408354915`, 26.93631896294595], 
           Around[84.08324564539528, 10.307976074172474`], 
           Around[70.37515865040324, 10.141307345342321`], 
           Around[87.34534219834609, 16.491399318653], 
           Around[79.59866486181932, 13.10911240176492], 
           Around[87.0423265816193, 11.716370106369062`], 
           Around[90.78891051539811, 13.26348488070519], 
           Around[109.41993271464091`, 25.61203755904092]}, 
         "Configuration" -> {
          "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
           0, "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
         "FinalTrainingSize" -> 90|>, 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
          "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
          "TrainingTime", "TrainingMemory", "ExperimentCount", 
          "MeanCrossEntropyHistory", "StandardDeviationHistory", 
          "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 8], 
          TypeSystem`Vector[TypeSystem`AnyType, 8], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], <||>], "Configurations" -> 
      Dataset[<|<|
          "Value" -> "LinearRegression", 
           "Options" -> <|
            "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0|>, 
             "OptimizationMethod" -> <|"Value" -> Automatic|>, 
             MaxIterations -> <|"Value" -> 30|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[9.689876554392148*^26, 5.37949755426862*^26], 
              "StandardDeviation" -> 
              Around[164.82273812045727`, 46.204065873334244`], 
              "EvaluationTime" -> 0.00001573656764742708, "TestSize" -> 80, 
              "ModelMemory" -> 16648, "ModelUtility" -> -5.852582656085088, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 86504, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[9.689876554392148*^26, 3.8038791999997885`*^26]}, 
              "StandardDeviationHistory" -> {
                Around[164.82273812045727`, 32.671208297424585`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[5.997501172107573, 0.10875477625540911`], 
              "StandardDeviation" -> 
              Around[88.58530065639643, 6.359477212288932], "EvaluationTime" -> 
              0.00007118182600472737, "TestSize" -> 144, "ModelMemory" -> 
              16648., "ModelUtility" -> -5.191383941830457, "TrainingSize" -> 
              72, "TrainingTime" -> 0.007492714657610585, "TrainingMemory" -> 
              93696., "ExperimentCount" -> 8, "MeanCrossEntropyHistory" -> {
                Around[6.196664927245978, 0.5295253467662449], 
                Around[5.899859182825129, 0.1614471256111133], 
                Around[5.679755911539353, 0.1103432746417767], 
                Around[5.951310722399128, 0.2799198672266316], 
                Around[5.810064761370237, 0.17805864029641655`], 
                Around[5.959580862722599, 0.20133462023061136`], 
                Around[6.027198461403296, 0.24036816960632082`], 
                Around[6.455574547354869, 0.6004978049838207]}, 
              "StandardDeviationHistory" -> {
                Around[100.02882408354915`, 26.93631896294595], 
                Around[84.08324564539528, 10.307976074172474`], 
                Around[70.37515865040324, 10.141307345342321`], 
                Around[87.34534219834609, 16.491399318653], 
                Around[79.59866486181932, 13.10911240176492], 
                Around[87.0423265816193, 11.716370106369062`], 
                Around[90.78891051539811, 13.26348488070519], 
                Around[109.41993271464091`, 25.61203755904092]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00007118182600472737, "ModelMemory" -> 
             16648., "StandardDeviation" -> 
             Around[88.58530065639643, 6.359477212288932], "TrainingMemory" -> 
             93696., "TrainingTime" -> 0.06983917763986883|>, "Index" -> 
           1|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
              "TrainingTime", "TrainingMemory", "ExperimentCount", 
              "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], <||>], "MaxTrainingSize" -> 90, 
      "PreprocessorEvaluationTime" -> 4.9484375*^-6, "PreprocessorMemory" -> 
      112072, "InputDimension" -> 13, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.8887433777454838`17.342384273704603*^9, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.020450307996506396`, 
          "ElapsedTimes" -> 0.0647248, "ExperimentCounts" -> 1|>, <|
         "TrainingSizes" -> 72, "TimeBudgets" -> 0.10225153998253199`, 
          "ElapsedTimes" -> 0.0967405, "ExperimentCounts" -> 8|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, "ID" -> 
           160786463559880376|>, 
         "f2" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, "ID" -> 
           4287842684044921566|>, 
         "f3" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.07142857142857142}, "ID" -> 3584571402766016900|>, 
         "f4" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.4095238085614285}, "ID" -> 3999425147071556158|>, 
         "f5" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.05555555555555555}, "ID" -> 2282291538913019799|>, 
         "f6" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, "ID" -> 
           7158108382135739184|>, 
         "f7" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.05}, "ID" -> 
           8419490369520109814|>, 
         "f8" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.019113865043903888`}, "ID" -> 2281715898823819937|>,
          "f9" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.08333333333333333}, "ID" -> 3191500091120879101|>, 
         "f10" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.03036325362479377}, "ID" -> 3882821336254497341|>, 
         "f11" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.19846481946035388`}, "ID" -> 2647614518606905170|>, 
         "f12" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.25}, "ID" -> 
           5889873695267358448|>, 
         "f13" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.1111111111111111}, "ID" -> 
           7623899711093183740|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 0.5667236, 
      "MaxTrainingMemory" -> 477208, "DataMemory" -> 193728, "FunctionMemory" -> 
      214616, "LanguageVersion" -> {13., 1}, "Date" -> 
      DateObject[{2023, 3, 25, 14, 29, 38.1389345`9.333943441365022}, 
        "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8801148935767965`*^9, 3.8801301462502623`*^9, 3.880185994860314*^9, 
   3.880212933477713*^9, {3.8802132541658754`*^9, 3.8802132750495777`*^9}, 
   3.880213457156646*^9, 3.880213774465287*^9, 3.880214109014453*^9, 
   3.888757778166486*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"49d8c351-0e70-41ea-bb08-a2bef04f0cea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"multipleRegression", ",", "test", ",", "\"\<ComparisonPlot\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.872256971968004*^9, 3.872256984172842*^9}, {
  3.872257052959553*^9, 3.872257054990301*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"5394e4dd-d574-4704-adbb-14b4b0bff701"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                AbsoluteThickness[1.], 
                RGBColor[0.34398, 0.49112, 0.89936], 
                CircleBox[{0, 0}, 
                 Offset[{1.8, 1.8}, {0., 0.}]]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[1.6]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAQB2JGIGYC4k8CDxbaTWlyYAABjmYHtRtl/zrf1ED4BlUO
i65db5VRr4PwFzQ4uOi82B76rRnCP9DgIC5io/+0G6r/QJNDGovYrs4nUP6K
RoeJ7zzzvj1rhfAz2h0eTbsYs6WuBcLf0OxQ+mYTi5U5lH+i2WG63NSSkvoG
CN+h3uH45Wk3WHqg+itaHMT69GN/HIbKezQ4xOy0mmayFOaeFofjfvMygh42
QvgKjQ5HTnjYqQXC3FfvkODo7KhVDjWPod1B4+4+7VdvYe5pcajitVAKsYKq
f9HkcP7ujib9Hij/R6PDwvnPlz/lg9onADRftn554iqo/II2hxNTym3ywqHm
H6h0aJG8dcjnBFR+QpsDAByzdtY=
          "]]}}, {
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{594.5305821900531, 609.}}]}, 
          RowBox[{"{", 
            RowBox[{"594.5305821900531`", ",", "609"}], "}"}]], 
         Annotation[#, {594.5305821900531, 609}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{462.783689941631, 419.}}]}, 
          RowBox[{"{", 
            RowBox[{"462.783689941631`", ",", "419"}], "}"}]], 
         Annotation[#, {462.783689941631, 419}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{482.4444635802448, 532.}}]}, 
          RowBox[{"{", 
            RowBox[{"482.4444635802448`", ",", "532"}], "}"}]], 
         Annotation[#, {482.4444635802448, 532}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{638.7918546808728, 536.}}]}, 
          RowBox[{"{", 
            RowBox[{"638.7918546808728`", ",", "536"}], "}"}]], 
         Annotation[#, {638.7918546808728, 536}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{593.4869064992553, 600.}}]}, 
          RowBox[{"{", 
            RowBox[{"593.4869064992553`", ",", "600"}], "}"}]], 
         Annotation[#, {593.4869064992553, 600}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{604.5672494621365, 565.}}]}, 
          RowBox[{"{", 
            RowBox[{"604.5672494621365`", ",", "565"}], "}"}]], 
         Annotation[#, {604.5672494621365, 565}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{700.8703275466852, 749.}}]}, 
          RowBox[{"{", 
            RowBox[{"700.8703275466852`", ",", "749"}], "}"}]], 
         Annotation[#, {700.8703275466852, 749}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{655.8380676626368, 630.}}]}, 
          RowBox[{"{", 
            RowBox[{"655.8380676626368`", ",", "630"}], "}"}]], 
         Annotation[#, {655.8380676626368, 630}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{646.9033292749797, 633.}}]}, 
          RowBox[{"{", 
            RowBox[{"646.9033292749797`", ",", "633"}], "}"}]], 
         Annotation[#, {646.9033292749797, 633}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{527.9318629884682, 500.}}]}, 
          RowBox[{"{", 
            RowBox[{"527.9318629884682`", ",", "500"}], "}"}]], 
         Annotation[#, {527.9318629884682, 500}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{689.5023662360553, 655.}}]}, 
          RowBox[{"{", 
            RowBox[{"689.5023662360553`", ",", "655"}], "}"}]], 
         Annotation[#, {689.5023662360553, 655}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{536.4962714877354, 521.}}]}, 
          RowBox[{"{", 
            RowBox[{"536.4962714877354`", ",", "521"}], "}"}]], 
         Annotation[#, {536.4962714877354, 521}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{628.6506771648233, 664.}}]}, 
          RowBox[{"{", 
            RowBox[{"628.6506771648233`", ",", "664"}], "}"}]], 
         Annotation[#, {628.6506771648233, 664}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{572.1652386062423, 548.}}]}, 
          RowBox[{"{", 
            RowBox[{"572.1652386062423`", ",", "548"}], "}"}]], 
         Annotation[#, {572.1652386062423, 548}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{586.1436734854001, 508.}}]}, 
          RowBox[{"{", 
            RowBox[{"586.1436734854001`", ",", "508"}], "}"}]], 
         Annotation[#, {586.1436734854001, 508}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{686.8956322912527, 736.}}]}, 
          RowBox[{"{", 
            RowBox[{"686.8956322912527`", ",", "736"}], "}"}]], 
         Annotation[#, {686.8956322912527, 736}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{669.739341250538, 662.}}]}, 
          RowBox[{"{", 
            RowBox[{"669.739341250538`", ",", "662"}], "}"}]], 
         Annotation[#, {669.739341250538, 662}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{583.2910808924782, 605.}}]}, 
          RowBox[{"{", 
            RowBox[{"583.2910808924782`", ",", "605"}], "}"}]], 
         Annotation[#, {583.2910808924782, 605}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{593.5231985514346, 575.}}]}, 
          RowBox[{"{", 
            RowBox[{"593.5231985514346`", ",", "575"}], "}"}]], 
         Annotation[#, {593.5231985514346, 575}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{609.8621366592016, 546.}}]}, 
          RowBox[{"{", 
            RowBox[{"609.8621366592016`", ",", "546"}], "}"}]], 
         Annotation[#, {609.8621366592016, 546}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{597.2976827555617, 724.}}]}, 
          RowBox[{"{", 
            RowBox[{"597.2976827555617`", ",", "724"}], "}"}]], 
         Annotation[#, {597.2976827555617, 724}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{682.9288262693672, 412.}}]}, 
          RowBox[{"{", 
            RowBox[{"682.9288262693672`", ",", "412"}], "}"}]], 
         Annotation[#, {682.9288262693672, 412}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{601.0374810256039, 722.}}]}, 
          RowBox[{"{", 
            RowBox[{"601.0374810256039`", ",", "722"}], "}"}]], 
         Annotation[#, {601.0374810256039, 722}, 
          "Tooltip"]& ]}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           GrayLevel[0.2], 
           Opacity[0.5], 
           AbsoluteThickness[1.], 
           AbsoluteDashing[{2, 4}]], 
          LineBox[CompressedData["
1:eJxFxXsw0wEAB3Acp05IHv9YNcmhc9fqumPIsTw2VqfOrq0idFSXUGbNmGXz
OvK4kcpJp6aHdKqNOC6PshRtcRNddC6PbdHmUUpHqj/6ff/43MclPuVIgpmJ
icnBv/49rOYkJz7lB/5/qOitF1WBVSFBs1YtuK/d48yTNtx+70fcaheuE11l
SdX4/O5B/+dz2KKMbuXknkEsqWuMqKrHClqCSOEsIHZRDBXnlOExfrPfdutM
4vCBuU/HxNgy7YbbadMs4nX9r+Ad2bjB+Pho5iKW0ces61OFxJGUE8+SZrCP
rpw6yckmTlnyPblrBLNLqHxbpoi4XPBoX+8bbEaanap0vUzs2OPpWRWN1Xau
naIaPHlfechnBNfqd1I+OOUQX5KOCw+z8ANxYO/1MiwhxcT0qXDLmtuCcqOY
2DKMPl9zAK9T3YKOi3Ekt7FY14EZbIN7zCqOlRVRHvpKiN95D+59xcVa7lB+
vxyzV4SaWgPWTktKGR65xFuzgqvHEnEjp+lWQB3+PKFZLpzAF5tkYbed84jJ
MyrzChZOV8rtkyqxq4FGclBjfucVnswmn3j2J2X/poO4NUO0RivAXrJC23gl
XnH0d440LSCeMjIqHP0wL21L9IsMHB+QRw5UYDcLPT2kGev6mRfCW3Ayx6En
qhULuHdOne3A0obuu9KXuNvpt9e0BueOx7G+DONQWa/Q+B4P7ClRrYziUSYp
1WYcz4t95d7TWM6o/eg/g3mbzcxpWrx683UUU483tLGXY7/iflHHtkQDLg0l
h50zYgeN9lr6Ah6pjugSLOLquCadaAlHe9jb5X3DZCOPWvQd/wFz8lZR
           "]]}, Annotation[#, "Charting`Private`Tag$94897#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {395.15000000000083`, 395.15000000000083`}, 
     DisplayFunction :> Identity, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 300, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{395.15, 766.6925}, {395.15, 766.6925}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}], ",", "Automatic"}], 
                    "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect predictions\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0.2]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8801148941582236`*^9, 3.8801301468214035`*^9, 3.8801860202422347`*^9, 
   3.880212934328706*^9, {3.880213254722966*^9, 3.880213275614313*^9}, 
   3.8802134577404118`*^9, 3.8802137750466566`*^9, 3.8802141095854473`*^9, 
   3.888757778593276*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"6a451f21-af0e-441b-9375-70ea0bd61bae"]
}, Open  ]],

Cell["\<\
As for the single-variable case, perfect model performance would be indicated \
by all the blue dots lying along the dashed line. Although this model isn\
\[CloseCurlyQuote]t perfect, its performance looks qualitatively better than \
the FractionCarbonSP3 simple linear regression, and the predicted wavelengths \
span a wider range of values. Thus we can see that providing the model with \
more information improved the performance, as expected.\
\>", "Text",
 CellChangeTimes->{{3.8729264232207813`*^9, 3.8729264505495663`*^9}, {
  3.873559822782647*^9, 3.8735599018333473`*^9}, {3.880186029523355*^9, 
  3.8801860917217264`*^9}, {3.880186125282959*^9, 3.880186133610935*^9}, {
  3.8801950168196583`*^9, 
  3.8801950173765364`*^9}},ExpressionUUID->"2a7c865b-d5c4-4eb9-a34f-\
5745c943f4a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Model Evaluation", "Section"]], "Subsection",
 CellChangeTimes->{{3.872257037412108*^9, 3.8722570389221897`*^9}},
 CellTags->
  "modeEvalHref",ExpressionUUID->"c3fa0085-d290-411b-8963-da6560275fc2"],

Cell[TextData[{
 "By plotting predicted vs. actual wavelength, we could make a qualitative \
assessment of model performance. But how can we quantify the performance of a \
particular model, or quantitatively compare two different models? To do this, \
we can evaluate performance metrics using our test data.\n\nLet\
\[CloseCurlyQuote]s consider the following four metrics to quantify the \
agreement between our model predictions ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["\:0177", "i"]}], TraditionalForm]],ExpressionUUID->
  "90d499da-9ba0-47a6-a565-fe67d4fc4e40"],
 ") and the actual values ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["y", "i"]}], TraditionalForm]],ExpressionUUID->
  "d709af3a-c643-44ce-8d42-d9c8ec4e0f02"],
 "):"
}], "Text",
 CellChangeTimes->{{3.872257117050241*^9, 3.872257120338274*^9}, {
   3.872766922568865*^9, 3.872766927713377*^9}, {3.872766991088992*^9, 
   3.8727670123452187`*^9}, 3.8729264808967304`*^9, {3.872926562057176*^9, 
   3.8729266657302866`*^9}, {3.8729267804606915`*^9, 3.872926790453837*^9}, {
   3.8729614592467923`*^9, 3.8729614751038895`*^9}, {3.8729615254368105`*^9, 
   3.872961573024605*^9}, {3.872968008608967*^9, 3.8729680116794024`*^9}, 
   3.872970926586423*^9, {3.8730179874555335`*^9, 3.873018010507471*^9}, {
   3.8733690374507074`*^9, 3.8733690379752955`*^9}, 3.873369881031869*^9, {
   3.8733704456731596`*^9, 3.873370462247366*^9}, {3.873371277156395*^9, 
   3.8733712779527254`*^9}, 3.8735653288598995`*^9, 3.8735653618592706`*^9, {
   3.880123668341769*^9, 3.8801236688079596`*^9}, {3.880127342377316*^9, 
   3.880127373702694*^9}, {3.880127415969363*^9, 3.880127420883523*^9}, {
   3.880127614232685*^9, 3.880127634179121*^9}, {3.8801860986383753`*^9, 
   3.880186150539946*^9}, {3.880186182344858*^9, 3.8801862211640873`*^9}, {
   3.880214024512805*^9, 
   3.8802140431109743`*^9}},ExpressionUUID->"08f602d1-d5ad-4168-a8d5-\
dcdc93549912"],

Cell["\<\
Mean Absolute Error (MAE): MAE is the average of the absolute difference \
between the actual and predicted values. The lower the error, the better the \
model performance.\[LineSeparator]https://en.wikipedia.org/wiki/Mean_absolute_\
error\
\>", "ItemNumbered",
 CellChangeTimes->{{3.873369058610963*^9, 3.8733690629255505`*^9}, {
  3.8733698104784546`*^9, 3.873369810489947*^9}, {3.873369907200796*^9, 
  3.873369941694352*^9}, {3.8733700173635993`*^9, 3.8733700186477604`*^9}, {
  3.873370073871985*^9, 3.8733700986305532`*^9}, {3.873799195709483*^9, 
  3.87379921495421*^9}, {3.873799333827676*^9, 
  3.8737993345320034`*^9}},ExpressionUUID->"85524f0d-149c-4407-ae6a-\
03491821b104"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{
        StyleBox["M", "TI"], 
        StyleBox["A", "TI"], 
        StyleBox["E", "TI"], "\[LongEqual]", 
        FractionBox["1", 
         StyleBox["n", "TI"]], 
        UnderoverscriptBox["\[Sum]", 
         RowBox[{
           StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
         StyleBox["n", "TI"], LimitsPositioning -> True], "|", 
        SubscriptBox[
         StyleBox["y", "TI"], 
         StyleBox["i", "TI"]], "-", 
        SubscriptBox[
         OverscriptBox[
          StyleBox["y", "TI"], "^"], 
         StyleBox["i", "TI"]], "|"}], TraditionalForm], "errors" -> {}, 
    "input" -> "MAE = \\frac{1}{n}\\sum_{i=1}^{n}|y_i - \\hat{y}_i|", "state" -> 
    "Boxes"|>,
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"fc81457b-0b29-430d-aa3f-840bc37bd642"]], \
"Text",
 CellChangeTimes->{
  3.873799338728633*^9, {3.880191642879861*^9, 3.8801916498796997`*^9}},
 TextAlignment->Center,ExpressionUUID->"4789ebf4-0396-4577-b77a-9d53b30bf7f7"],

Cell["\<\
Mean Squared Error (MSE): MSE is the average of the squared difference \
between the actual and predicted values. As before, the lower the error, the \
better the model performance. MSE is one of the most used metrics for this \
kind of model.\[LineSeparator]https://en.wikipedia.org/wiki/Mean_squared_error\
\>", "ItemNumbered",
 CellChangeTimes->{{3.873369058610963*^9, 3.8733690629255505`*^9}, {
  3.8733698108086486`*^9, 3.8733698147089357`*^9}, {3.873370008528861*^9, 
  3.8733700314858694`*^9}, {3.873370093105838*^9, 3.873370095518402*^9}, {
  3.883675344264584*^9, 
  3.883675344545209*^9}},ExpressionUUID->"d9a4f453-9f92-4e2d-addd-\
b8a2a6d5b631"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{
        StyleBox["M", "TI"], 
        StyleBox["S", "TI"], 
        StyleBox["E", "TI"], "\[LongEqual]", 
        FractionBox["1", 
         StyleBox["n", "TI"]], 
        UnderoverscriptBox["\[Sum]", 
         RowBox[{
           StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
         StyleBox["n", "TI"], LimitsPositioning -> True], 
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{
             SubscriptBox[
              StyleBox["y", "TI"], 
              StyleBox["i", "TI"]], "-", 
             SubscriptBox[
              OverscriptBox[
               StyleBox["y", "TI"], "^"], 
              StyleBox["i", "TI"]]}], ")"}], "2"]}], TraditionalForm], 
    "errors" -> {}, "input" -> 
    "MSE = \\frac{1}{n}\\sum_{i=1}^{n}(y_i - \\hat{y}_i)^2", "state" -> 
    "Boxes"|>,
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"34a7b08a-abc6-4e2a-a153-319320053219"]], \
"Text",
 CellChangeTimes->{3.8737993617478657`*^9},
 TextAlignment->Center,ExpressionUUID->"983be94f-64aa-43aa-a100-46800e1e99a9"],

Cell["\<\
Root Mean Squared Error (RMSE): RMSE is the square root of the MSE. As \
before, the lower the error, the better the model performance. It is \
conceptually similar to the standard \
deviation.\[LineSeparator]https://en.wikipedia.org/wiki/Root-mean-square_\
deviation\
\>", "ItemNumbered",
 CellChangeTimes->{{3.873369058610963*^9, 3.8733690629255505`*^9}, {
  3.8733698108086486`*^9, 3.8733698206308384`*^9}, {3.873370181556913*^9, 
  3.873370184402119*^9}, {3.8733702501269455`*^9, 3.873370254690047*^9}, {
  3.880127150408841*^9, 
  3.8801271582773275`*^9}},ExpressionUUID->"efa9b1bd-734e-4512-9c77-\
2c3e28308807"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{
        StyleBox["R", "TI"], 
        StyleBox["M", "TI"], 
        StyleBox["S", "TI"], 
        StyleBox["E", "TI"], "\[LongEqual]", 
        SqrtBox[
         FractionBox[
          RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{
               StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
             StyleBox["n", "TI"], LimitsPositioning -> True], 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 SubscriptBox[
                  StyleBox["y", "TI"], 
                  StyleBox["i", "TI"]], "-", 
                 SubscriptBox[
                  OverscriptBox[
                   StyleBox["y", "TI"], "^"], 
                  StyleBox["i", "TI"]]}], ")"}], "2"]}], 
          StyleBox["n", "TI"]]]}], TraditionalForm], "errors" -> {}, "input" -> 
    "RMSE = \\sqrt{\\frac{\\sum_{i=1}^{n}(y_i - \\hat{y}_i)^2}{n}}", "state" -> 
    "Boxes"|>,
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"659dc0dd-3408-42aa-8f3c-7a56ea458fac"]], \
"Text",
 CellChangeTimes->{3.8737993751966825`*^9},
 TextAlignment->Center,ExpressionUUID->"eb7350f5-4ae4-4f6d-abe0-daced19476de"],

Cell[TextData[{
 "Coefficient of Determination ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["R", "2"], ")"}], TraditionalForm]],ExpressionUUID->
  "4c7cbdfe-35aa-401b-a267-a30d3ceab531"],
 ": ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "2"], TraditionalForm]],ExpressionUUID->
  "f88fdd85-7fa4-4b54-99d4-dd3dbf30e9be"],
 " reports how well the model is fitted to the data by comparing it to the \
average line of the dependent variable. In other words, it measures the \
degree to which the model explains the variability of the observed data. For \
example, a coefficient of determination of 80% indicates that the regression \
model explains 80% of the variability seen in the dependent variable.\
\[LineSeparator]https://en.wikipedia.org/wiki/Coefficient_of_determination"
}], "ItemNumbered",
 CellChangeTimes->{{3.873369058610963*^9, 3.8733690629255505`*^9}, {
  3.8733698108086486`*^9, 3.873369837433402*^9}, {3.8733703489723496`*^9, 
  3.8733703673241134`*^9}, {3.8737994731192036`*^9, 3.8737994761102276`*^9}, {
  3.8801862560679255`*^9, 
  3.8801862574665623`*^9}},ExpressionUUID->"2e9ebfa9-9479-451b-986c-\
d2f118139f78"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{
        SuperscriptBox[
         StyleBox["R", "TI"], "2"], "\[LongEqual]", "1", "-", 
        FractionBox[
         RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{
              StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
            StyleBox["n", "TI"], LimitsPositioning -> True], 
           SuperscriptBox[
            RowBox[{"(", 
              RowBox[{
                SubscriptBox[
                 StyleBox["y", "TI"], 
                 StyleBox["i", "TI"]], "-", 
                SubscriptBox[
                 OverscriptBox[
                  StyleBox["y", "TI"], "^"], 
                 StyleBox["i", "TI"]]}], ")"}], "2"]}], 
         RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{
              StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
            StyleBox["n", "TI"], LimitsPositioning -> True], 
           SuperscriptBox[
            RowBox[{"(", 
              RowBox[{
                SubscriptBox[
                 StyleBox["y", "TI"], 
                 StyleBox["i", "TI"]], "-", 
                OverscriptBox[
                 StyleBox["y", "TI"], "_"]}], ")"}], "2"]}]]}], 
      TraditionalForm], "errors" -> {}, "input" -> 
    "R^2 = 1- \
\\frac{\\sum_{i=1}^{n}(y_i-\\hat{y}_i)^2}{\\sum_{i=1}^{n}(y_i-\\bar{y})^2}", 
    "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"0274a69e-0ca8-43b8-bbab-19be4410cbce"]], \
"Text",
 CellChangeTimes->{{3.8737994932580533`*^9, 3.873799495535105*^9}},
 TextAlignment->Center,ExpressionUUID->"07d3cbb6-f760-46ed-9984-a207533bc4a9"],

Cell["\<\
Although these quantitative metrics are informative, it is a good practice to \
see how the data behave with our own eyes through data visualization. \
Sometimes a single number or metric cannot explain the whole picture, or can \
even be misleading. (Anscombe\[CloseCurlyQuote]s quartet is a famous \
illustration of that point: https://en.wikipedia.org/wiki/Anscombe%27s_quartet

Mathematica has built-in functions for calculating a number of different \
metrics.  Let\[CloseCurlyQuote]s see what properties are available:\
\>", "Text",
 CellChangeTimes->{{3.8733703893112793`*^9, 3.873370428680998*^9}, {
   3.873370479070176*^9, 3.873370502807695*^9}, {3.8733710892567406`*^9, 
   3.8733710900173435`*^9}, {3.8737994550663033`*^9, 
   3.8737994572026267`*^9}, {3.8801238179987335`*^9, 
   3.8801238327798014`*^9}, {3.880123951562607*^9, 3.8801239688757277`*^9}, {
   3.880123999173832*^9, 3.8801240468527365`*^9}, 
   3.883675367496492*^9},ExpressionUUID->"e706cddb-e98f-44e1-96b6-\
b055336db3b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"multipleRegression", ",", "test", ",", "\"\<Properties\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.872257102366701*^9, 3.8722571137089167`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"b5f3f1c4-496e-47af-8d8a-130c2a01eff7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"BatchEvaluationTime\"\>", ",", "\<\"BestPredictedExamples\"\>",
    ",", "\<\"ComparisonPlot\"\>", ",", "\<\"EvaluationTime\"\>", 
   ",", "\<\"Examples\"\>", ",", "\<\"FractionVarianceUnexplained\"\>", 
   ",", "\<\"GeometricMeanProbabilityDensity\"\>", ",", "\<\"ICEPlots\"\>", 
   ",", "\<\"LeastCertainExamples\"\>", ",", "\<\"Likelihood\"\>", 
   ",", "\<\"LogLikelihood\"\>", ",", "\<\"MeanCrossEntropy\"\>", 
   ",", "\<\"MeanDeviation\"\>", ",", "\<\"MeanSquare\"\>", 
   ",", "\<\"MostCertainExamples\"\>", ",", "\<\"Perplexity\"\>", 
   ",", "\<\"PredictorFunction\"\>", ",", "\<\"ProbabilityDensities\"\>", 
   ",", "\<\"ProbabilityDensityHistogram\"\>", ",", "\<\"Properties\"\>", 
   ",", "\<\"RejectionRate\"\>", ",", "\<\"Report\"\>", 
   ",", "\<\"ResidualHistogram\"\>", ",", "\<\"ResidualPlot\"\>", 
   ",", "\<\"Residuals\"\>", ",", "\<\"RSquared\"\>", 
   ",", "\<\"SHAPPlots\"\>", ",", "\<\"SHAPValues\"\>", 
   ",", "\<\"StandardDeviation\"\>", ",", "\<\"StandardDeviationBaseline\"\>",
    ",", "\<\"TotalSquare\"\>", ",", "\<\"WorstPredictedExamples\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8801148946136246`*^9, 3.8801301472313223`*^9, 3.880186280324752*^9, 
   3.8802129348251*^9, {3.8802132552163577`*^9, 3.880213276033194*^9}, 
   3.880213458164262*^9, 3.880213775497573*^9, 3.8802141100989385`*^9, 
   3.888757779028838*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"ff5cf85c-2504-4ade-a9d7-0b92da17d82e"]
}, Open  ]],

Cell["We can request a single property using the code below:", "Text",
 CellChangeTimes->{{3.8727670306571207`*^9, 3.87276703150518*^9}, {
  3.8733705072462597`*^9, 3.8733705192444673`*^9}, {3.873371092320306*^9, 
  3.8733710939374466`*^9}},ExpressionUUID->"8ecee30d-7fe5-4684-a840-\
a619f295c513"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"multipleRegression", ",", "test", ",", "\"\<MeanSquare\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8727670157693987`*^9, 3.872767029441279*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"294163f5-dc0a-4caf-b2ac-31bf279771e5"],

Cell[BoxData["6153.743007400616`"], "Output",
 CellChangeTimes->{
  3.880114895005286*^9, 3.880130147591488*^9, 3.8801862864231386`*^9, 
   3.8802129352516766`*^9, {3.880213255700718*^9, 3.8802132763997393`*^9}, 
   3.8802134585266128`*^9, 3.880213776012681*^9, 3.880214110497761*^9, 
   3.8887577793959293`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"3ea9e906-3885-44b1-b9e5-64f2db9f336a"]
}, Open  ]],

Cell["We can also request multiple properties at the same time:", "Text",
 CellChangeTimes->{{3.872767033753124*^9, 3.872767072977312*^9}, {
  3.872771241334708*^9, 
  3.872771255302373*^9}},ExpressionUUID->"13936d19-f491-470b-b093-\
fc6b6c870428"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"multipleRegression", ",", "test", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<MeanDeviation\>\"", ",", "\"\<MeanSquare\>\"", ",", 
     "\"\<StandardDeviation\>\"", ",", "\"\<RSquared\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.872767136030038*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"a212aa3a-4ae0-4c96-838f-4c5600b8f121"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "53.89879446133657`", ",", "6153.743007400616`", ",", "78.44579662034555`", 
   ",", "0.2630314632345617`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8801148953583555`*^9, 3.8801301480015354`*^9, 3.8801862892881517`*^9, 
   3.8802129356403008`*^9, {3.8802132560695314`*^9, 3.880213276806959*^9}, 
   3.8802134589371033`*^9, 3.88021377638995*^9, 3.8802141108825207`*^9, 
   3.8887577797083426`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"e2b35e3f-310c-4a6f-a0bf-5fab4ef25a66"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s make life easy by defining a convenience function that \
takes the model and a test set and calculates our four metrics of interest:\
\>", "Text",
 CellChangeTimes->{{3.872771258582221*^9, 3.8727712698874063`*^9}, {
  3.8727742738214483`*^9, 3.872774275156654*^9}, {3.873371097748966*^9, 
  3.873371107039508*^9}},ExpressionUUID->"719925a9-876f-4f15-881b-\
ddc99c38411d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"modelEvaluation", "[", 
   RowBox[{"model_", ",", "testSet_"}], "]"}], ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"properties", "=", 
      RowBox[{"{", 
       RowBox[{
       "\"\<MeanDeviation\>\"", ",", "\"\<MeanSquare\>\"", ",", 
        "\"\<StandardDeviation\>\"", ",", "\"\<RSquared\>\""}], "}"}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AssociationThread", "[", 
     RowBox[{"properties", "->", 
      RowBox[{"PredictorMeasurements", "[", 
       RowBox[{"model", ",", "testSet", ",", "properties"}], "]"}]}], "]"}]}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.8722583473517437`*^9, 3.872258386396242*^9}, {
   3.872258448476935*^9, 3.872258498042356*^9}, {3.872258528566804*^9, 
   3.872258530338586*^9}, {3.872767056769744*^9, 3.872767113913916*^9}, {
   3.87276715342564*^9, 3.872767186105986*^9}, 3.872771238323173*^9},
 CellLabel->"In[99]:=",ExpressionUUID->"008dcec5-e00f-43f6-847e-fef2e72c0f85"],

Cell[TextData[{
 "Now we can store these results in a variable called ",
 StyleBox["metrics",
  FontSlant->"Italic"],
 " and add the results for the simple linear regression and multiple \
regression models. First initialize the empty ",
 StyleBox["metrics",
  FontSlant->"Italic"],
 " variable (only run this code block once):"
}], "Text",
 CellChangeTimes->{{3.8733711194584866`*^9, 3.8733711519043603`*^9}, {
  3.880118856066812*^9, 3.880118865400213*^9}, {3.8801189395784197`*^9, 
  3.880118946169177*^9}, {3.8836753912055964`*^9, 
  3.883675408971242*^9}},ExpressionUUID->"e9a0cbbb-c9ae-42c3-b8e4-\
d2732434a0a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"metrics", "=", 
    RowBox[{"Association", "[", "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "create", " ", "an", " ", "empty", " ", "association", " ", "to", " ", 
    "store", " ", "results"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.872257047056616*^9, 3.8722571487573023`*^9}, {
  3.8722582867384443`*^9, 3.872258345224741*^9}, {3.872258381134124*^9, 
  3.872258403899211*^9}, {3.872767191674727*^9, 3.872767194526393*^9}, {
  3.872771273718987*^9, 3.8727712881584797`*^9}, {3.872952062984873*^9, 
  3.872952069820922*^9}, {3.880118872137652*^9, 3.8801188729803295`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"d49cd77e-f387-495e-8af1-b10a4eb76911"],

Cell[TextData[{
 "Then we can add the results for the models tested to the ",
 StyleBox["metrics",
  FontSlant->"Italic"],
 " variable. (Note that we have to provide the appropriate test dataset for \
each model.)"
}], "Text",
 CellChangeTimes->{{3.880118882408546*^9, 3.8801189769711576`*^9}, {
  3.880119019019823*^9, 3.88011906153087*^9}, {3.880186627188138*^9, 
  3.880186706748713*^9}, {3.8801901131148796`*^9, 3.8801901264974437`*^9}, {
  3.883647068094056*^9, 
  3.8836470687012863`*^9}},ExpressionUUID->"3e244f4c-c5a5-4867-953e-\
f3978885b8b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "calculate", " ", "the", " ", "performance", " ", "metrics", " ", "for", 
     " ", "the", " ", "FractionCarbonSP3", " ", "simple", " ", "linear", " ", 
     "regression", " ", "using", " ", "the", " ", "corresponding", " ", 
     "single"}], "-", 
    RowBox[{"variable", " ", "test", " ", "data"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"metrics", "[", "\"\<Simple LR (FractionCarbonSP3\>\"", "]"}], 
    "=", 
    RowBox[{"modelEvaluation", "[", 
     RowBox[{
      RowBox[{"singleFeatureModels", "[", "featureName", "]"}], ",", 
      RowBox[{"singleFeatureTest", "[", "featureName", "]"}]}], "]"}]}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "calculate", " ", "the", " ", "performance", " ", "metrics", " ", "for", 
     " ", "the", " ", "multiple", " ", "regression", " ", "using", " ", "the",
      " ", "full", " ", "test", " ", "data"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"metrics", "[", "\"\<Multiple LR\>\"", "]"}], "=", 
    RowBox[{"modelEvaluation", "[", 
     RowBox[{"multipleRegression", ",", "test"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8801189094200583`*^9, 3.880118925628496*^9}, {
  3.88011900533515*^9, 3.8801190159173303`*^9}, {3.8801866028573585`*^9, 
  3.8801866079537916`*^9}, {3.8801867095478735`*^9, 3.8801867612296343`*^9}, {
  3.880190101069706*^9, 3.880190101725733*^9}, {3.880195035024621*^9, 
  3.8801950381685905`*^9}, {3.8802127548222027`*^9, 3.8802127638096294`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"1f2fbe7e-9449-44f4-a8f6-3900b2d08e28"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"MeanDeviation\"\>", "\[Rule]", "73.50215332980166`"}], ",", 
   RowBox[{"\<\"MeanSquare\"\>", "\[Rule]", "8587.696523628549`"}], ",", 
   RowBox[{"\<\"StandardDeviation\"\>", "\[Rule]", "92.66982531346733`"}], 
   ",", 
   RowBox[{"\<\"RSquared\"\>", "\[Rule]", 
    RowBox[{"-", "0.028457336224953833`"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.880119071785437*^9, 3.880130148378772*^9, 3.8801863107660847`*^9, 
   3.8801866139483805`*^9, 3.880186771127976*^9, 3.8802129359530635`*^9, {
   3.880213256418974*^9, 3.8802132771448317`*^9}, 3.880213459252781*^9, 
   3.8802137767067585`*^9, 3.880214111196946*^9, 3.8887577799901085`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"12113d51-d86a-495c-b970-9ed16dff0819"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"MeanDeviation\"\>", "\[Rule]", "53.89879446133657`"}], ",", 
   RowBox[{"\<\"MeanSquare\"\>", "\[Rule]", "6153.743007400616`"}], ",", 
   RowBox[{"\<\"StandardDeviation\"\>", "\[Rule]", "78.44579662034555`"}], 
   ",", 
   RowBox[{"\<\"RSquared\"\>", "\[Rule]", "0.2630314632345617`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.880119071785437*^9, 3.880130148378772*^9, 3.8801863107660847`*^9, 
   3.8801866139483805`*^9, 3.880186771127976*^9, 3.8802129359530635`*^9, {
   3.880213256418974*^9, 3.8802132771448317`*^9}, 3.880213459252781*^9, 
   3.8802137767067585`*^9, 3.880214111196946*^9, 3.888757780287238*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"0eb70d6a-548a-41c3-9e2d-5a91f649ed11"]
}, Open  ]],

Cell[TextData[{
 "We can use the ",
 ButtonBox["Dataset",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Dataset.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Dataset.html"],
 " command to organize the metrics into a tabular format:"
}], "Text",
 CellChangeTimes->{{3.873371165802764*^9, 3.873371205432106*^9}, {
  3.883647078144409*^9, 3.883647082735937*^9}, {3.883647728900663*^9, 
  3.883647729032811*^9}, {3.883647780190064*^9, 
  3.88364778019133*^9}},ExpressionUUID->"21aedda3-028f-4bbc-9fd8-\
6419af23fcc1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dataset", "[", "metrics", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"pretty", " ", "print", " ", "the", " ", "results"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.872258412648326*^9, 3.8722584369576817`*^9}, {
  3.872771290686871*^9, 3.8727712959024467`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"f13933c6-601d-479c-903c-57a08dc0c1bb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Simple LR (FractionCarbonSP3" -> <|
        "MeanDeviation" -> 73.50215332980166, "MeanSquare" -> 
         8587.696523628549, "StandardDeviation" -> 92.66982531346733, 
         "RSquared" -> -0.028457336224953833`|>, 
       "Multiple LR" -> <|
        "MeanDeviation" -> 53.89879446133657, "MeanSquare" -> 
         6153.743007400616, "StandardDeviation" -> 78.44579662034555, 
         "RSquared" -> 0.2630314632345617|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "MeanDeviation"} -> 
        1, {All, "MeanSquare"} -> 1, {All, "StandardDeviation"} -> 
        1, {All, "RSquared"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[313.6], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "MeanDeviation" -> TypeSystem`PackageScope`AtomShape[60], 
             "MeanSquare" -> TypeSystem`PackageScope`AtomShape[60], 
             "StandardDeviation" -> TypeSystem`PackageScope`AtomShape[60], 
             "RSquared" -> TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 4, {All}]]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "MeanDeviation", "MeanSquare", "StandardDeviation", "RSquared"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "MeanDeviation"} -> 
        1, {All, "MeanSquare"} -> 1, {All, "StandardDeviation"} -> 
        1, {All, "RSquared"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[313.6], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "MeanDeviation" -> TypeSystem`PackageScope`AtomShape[60], 
             "MeanSquare" -> TypeSystem`PackageScope`AtomShape[60], 
             "StandardDeviation" -> TypeSystem`PackageScope`AtomShape[60], 
             "RSquared" -> TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 4, {All}]]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "MeanDeviation", "MeanSquare", "StandardDeviation", "RSquared"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 4, "DataRowCount" -> 2, "DataColumnCount" -> 4,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}
                    }]}, ImageSize -> 6, BaselinePosition -> Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MeanDeviation", 
                  Style[
                  "MeanDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MeanDeviation"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MeanDeviation"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MeanSquare", 
                  Style[
                  "MeanSquare", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MeanSquare"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MeanSquare"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardDeviation", 
                  Style[
                  "StandardDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "StandardDeviation"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "StandardDeviation"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["RSquared", 
                  Style[
                  "RSquared", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "RSquared"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "RSquared"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Simple LR (FractionCarbonSP3", 
                  Style[
                  "Simple LR (FractionCarbonSP3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Simple LR (FractionCarbonSP3"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Simple LR (FractionCarbonSP3"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["73.5022"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Simple LR (FractionCarbonSP3"], 
                 Key["MeanDeviation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8587.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Simple LR (FractionCarbonSP3"], 
                 Key["MeanSquare"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92.6698"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Simple LR (FractionCarbonSP3"], 
                 Key["StandardDeviation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0284573"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Simple LR (FractionCarbonSP3"], 
                 Key["RSquared"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Multiple LR", 
                  Style[
                  "Multiple LR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Multiple LR"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Multiple LR"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53.8988"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Multiple LR"], 
                 Key["MeanDeviation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6153.74"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Multiple LR"], 
                 Key["MeanSquare"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["78.4458"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Multiple LR"], 
                 Key["StandardDeviation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263031"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Multiple LR"], 
                 Key["RSquared"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{696., {46.134033203125, 51.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{696., {46.134033203125, 51.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8801148961409445`*^9, 3.880119080531172*^9, 3.8801301488921394`*^9, 
   3.880186329832017*^9, 3.880186620433236*^9, 3.880186782659893*^9, 
   3.8802129364456463`*^9, {3.8802132569294753`*^9, 3.8802132777035046`*^9}, 
   3.88021345973768*^9, 3.8802137771716833`*^9, 3.8802141116807065`*^9, 
   3.8887577803181953`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"5b7ffa38-6fe1-4407-9694-e27b1fe9f741"]
}, Open  ]],

Cell[TextData[{
 "When we compare the FractionCarbonSP3 simple linear regression and the \
multiple regression, we can see that multiple regression works better \
according to both the eye test and the quantitative performance metrics.\n\n\
Now add a code block below to calculate these performance metrics for a \
simple linear regression with the single feature that you tested above, add \
them to the ",
 StyleBox["metrics",
  FontSlant->"Italic"],
 " variable, and display the results in table. How did your new model perform?"
}], "Text",
 CellChangeTimes->{{3.872926748105898*^9, 3.872926764107586*^9}, {
  3.8733712114096775`*^9, 3.8733712343997035`*^9}, {3.8801867937535534`*^9, 
  3.8801868298241653`*^9}, {3.8801900627275953`*^9, 3.880190066155918*^9}, {
  3.880190135012829*^9, 3.880190147975577*^9}, {3.880195050816234*^9, 
  3.880195060059703*^9}},ExpressionUUID->"fe70b076-feea-42f2-8ff0-\
fec105a29044"],

Cell[TextData[StyleBox["ADD A CODE BLOCK HERE TO CALCULATE THE PERFORMANCE \
METRICS FOR A SIMPLE LINEAR REGRESSION USING A DIFFERENT VARIABLE AND ADD \
THEM TO THE METRICS TABLE",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8729268630889997`*^9, 3.872926866614791*^9}, {
  3.8801901603531723`*^9, 
  3.8801901658791447`*^9}},ExpressionUUID->"cb8c5f1c-2e67-498a-9e4c-\
a24adeafd5cc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Avoiding Model Overfitting", "Section",
 CellChangeTimes->{{3.87225719097307*^9, 3.872257193943548*^9}, {
  3.872767243025653*^9, 
  3.8727672468897953`*^9}},ExpressionUUID->"7392dc4f-b054-48d9-bb72-\
edad10809c24"],

Cell[TextData[{
 "Overfitting refers to a situation when a model has become too specific to \
the training data and fails to generalize well to new test data. Overfitting \
generally occurs when there are too many variables in the model compared to \
the number of observations (",
 StyleBox["i.e.",
  FontSlant->"Italic"],
 ", the model is overly complicated and/or the training set is too small)."
}], "Text",
 CellChangeTimes->{{3.8729268966323595`*^9, 3.872926934286234*^9}, {
  3.8733784872942533`*^9, 3.873378578399423*^9}, {3.8735600060811343`*^9, 
  3.873560006641949*^9}, {3.8801902102368155`*^9, 
  3.8801902251315727`*^9}},ExpressionUUID->"59aaa868-281b-4fc8-8037-\
a581352d88da"],

Cell["\<\
https://jakevdp.github.io/PythonDataScienceHandbook/05.03-hyperparameters-and-\
model-validation.html#The-Bias-variance-trade-off\
\>", "Item",
 CellChangeTimes->{{3.8733785412036104`*^9, 
  3.8733785519890194`*^9}},ExpressionUUID->"16e7d91f-d991-4892-ad14-\
83ecba0f00c8"],

Cell["https://en.wikipedia.org/wiki/Overfitting", "Item",
 CellChangeTimes->{{3.8733785412036104`*^9, 
  3.8733785512182717`*^9}},ExpressionUUID->"e6c0ba78-9c0a-461d-851d-\
d2a1bfba806c"],

Cell["\<\
There are a few ways to avoid overfitting. We\[CloseCurlyQuote]ll try two \
approaches here:\
\>", "Text",
 CellChangeTimes->{
  3.8729269795247383`*^9},ExpressionUUID->"47140bec-c33b-420c-91a2-\
66e88c3e4b01"],

Cell["Identifying the best correlated feature(s)", "ItemNumbered",
 CellChangeTimes->{{3.8729269971178756`*^9, 
  3.8729269979530244`*^9}},ExpressionUUID->"0f3bf4f6-f0b5-4980-a8ed-\
519dc027d8cf"],

Cell["Using a penalized regression model", "ItemNumbered",
 CellChangeTimes->{{3.8729269971178756`*^9, 
  3.8729270068273215`*^9}},ExpressionUUID->"99e70f25-4ff6-442c-9ac9-\
a8f929325935"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Feature Selection", "Section",
 CellChangeTimes->{{3.87314500534538*^9, 3.8731450071283135`*^9}},
 CellTags->
  "featureSelectionHref",ExpressionUUID->"556598a1-e3f8-48ac-aef2-\
49f23c8627b9"],

Cell["\<\
Feature selection entails choosing better features for the model by \
eliminating some of the available independent variables. Reducing the number \
of features can help the algorithm perform better by eliminating misleading \
variables or preventing overfitting. For an overview, see the following \
article:\
\>", "Text",
 CellChangeTimes->{
  3.8729270244576974`*^9, {3.8801902792242126`*^9, 3.880190332722784*^9}, {
   3.88364712423993*^9, 3.8836471294704733`*^9}, 
   3.88364761990619*^9},ExpressionUUID->"e2aeb52c-8dad-4e8d-b26a-\
f090a1ea3b81"],

Cell["https://en.wikipedia.org/wiki/Feature_selection", "Item",
 CellChangeTimes->{{3.872927037581405*^9, 3.87292704196243*^9}, {
  3.873378600745878*^9, 
  3.873378602125603*^9}},ExpressionUUID->"172a7d62-1810-4e72-b721-\
79dd26ccb31c"],

Cell["\<\
To identify appropriate features for our model, let\[CloseCurlyQuote]s use \
the Pearson Correlation technique.\
\>", "Text",
 CellChangeTimes->{
  3.872927053033386*^9},ExpressionUUID->"12bbb5f1-78b0-4858-b2de-\
92c7e3809be1"],

Cell[CellGroupData[{

Cell["Pearson Correlation", "Subsection",
 CellChangeTimes->{{3.872257204391584*^9, 
  3.872257214575993*^9}},ExpressionUUID->"87dcf77a-99d7-4bc3-a131-\
13bf9d601531"],

Cell["\<\
The Pearson Correlation Coefficient is one way to determine what values are \
relevant for our machine learning model. This value ranges from -1 to 1 and \
can be interpreted as follows:\
\>", "Text",
 CellChangeTimes->{{3.872257323650795*^9, 3.872257324442773*^9}, {
  3.8727672947221518`*^9, 3.872767297457775*^9}, {3.8729270973432245`*^9, 
  3.8729271209727497`*^9}, {3.8801917411281357`*^9, 3.88019174840514*^9}, {
  3.880191778852663*^9, 3.8801917831918926`*^9}, {3.88019347245857*^9, 
  3.8801934742039146`*^9}},ExpressionUUID->"80c6bd28-fd80-4c14-87e0-\
fb102c8fed60"],

Cell["If the value is exactly 0, it means no correlation at all", "Item",
 CellChangeTimes->{{3.872927156619134*^9, 3.8729271590502*^9}, {
  3.8801917623753014`*^9, 
  3.8801917768852625`*^9}},ExpressionUUID->"1de67431-788a-4b4d-a533-\
d0818e0f772c"],

Cell["If the value is closer to 0, it means weaker correlation", "Item",
 CellChangeTimes->{{3.872927156619134*^9, 3.8729271590502*^9}, {
  3.880191764860462*^9, 
  3.8801917649472885`*^9}},ExpressionUUID->"cd6b0ac1-229e-4a1c-b508-\
037768c45f25"],

Cell["\<\
If the value is closer to 1, it means stronger positive correlation\
\>", "Item",
 CellChangeTimes->{{3.872927156619134*^9, 
  3.872927187318858*^9}},ExpressionUUID->"f791fa14-6f5d-4796-b6bd-\
99d555e2c6d4"],

Cell["\<\
If the value is closer to -1, it means stronger negative correlation\
\>", "Item",
 CellChangeTimes->{{3.872927156619134*^9, 
  3.872927191481598*^9}},ExpressionUUID->"91562561-587b-4e9d-a1f2-\
f010fc8a119f"],

Cell["\<\
We are only concerned about the absolute value of the correlation as the \
direction is not relevant for this exercise.\
\>", "Text",
 CellChangeTimes->{{3.872767298621828*^9, 3.872767303025816*^9}, {
  3.872771436310536*^9, 3.872771523490622*^9}, {3.872927075924164*^9, 
  3.87292711731033*^9}, {3.8729271484788*^9, 3.872927163583126*^9}, {
  3.8729271945208993`*^9, 3.8729272023704824`*^9}, {3.873378627430462*^9, 
  3.8733786298720226`*^9}, {3.873378705141339*^9, 
  3.8733787328456883`*^9}},ExpressionUUID->"3469f1be-45f0-4809-b453-\
2d17c95aa6aa"],

Cell["\<\
For more information on correlation, see: \
https://en.wikipedia.org/wiki/Correlation\
\>", "Item",
 CellChangeTimes->{
  3.873378730598691*^9, {3.8836471433049498`*^9, 
   3.883647151154026*^9}},ExpressionUUID->"1db7e209-3bfa-41d7-bb92-\
0a8ba8c39918"],

Cell[TextData[{
 "We can evaluate the Pearson correlation coefficient using the ",
 ButtonBox["Correlation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Correlation.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Correlation.html"],
 " function, which takes two vectors as inputs.\n\nTo get some intuition, let\
\[CloseCurlyQuote]s create a small example and test the results.  What do you \
think the correlation should be between ",
 StyleBox["v1",
  FontSlant->"Italic"],
 " and the subsequent vectors defined below? "
}], "Text",
 CellChangeTimes->{
  3.873378720214852*^9, {3.880190379938409*^9, 3.8801904489333243`*^9}, {
   3.8801934780129385`*^9, 
   3.880193479995733*^9}},ExpressionUUID->"d0029ca9-4a54-4a04-93b1-\
01426b435140"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"v1", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", 
     ",", "80", ",", "90", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v3", "=", 
   RowBox[{"Reverse", "[", "v2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v4", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "10"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.872767304146987*^9, 3.872767315481964*^9}, {
  3.8727673500344667`*^9, 3.87276736935429*^9}, {3.8727715053879557`*^9, 
  3.872771509539205*^9}, {3.872771587271076*^9, 3.872771649923098*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"843012bd-0649-43ff-ab4b-13ab8727cd66"],

Cell["\<\
The first two vectors should be highly correlated, as they correspond to \
merely multiplying by 10:\
\>", "Text",
 CellChangeTimes->{{3.872771525227001*^9, 
  3.8727715472748203`*^9}},ExpressionUUID->"88fb4a3e-8025-4136-b615-\
e24af103e0a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Correlation", "[", 
  RowBox[{"v1", ",", "v2"}], "]"}]], "Input",
 CellChangeTimes->{{3.872767319301176*^9, 3.872767322602091*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"9e086916-372b-4636-9dc5-8f30cebfe23a"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.880114896342454*^9, 3.8801301492265253`*^9, 
  3.880190470433689*^9, 3.8802129366616325`*^9, 3.880213459966321*^9, 
  3.8802137773722167`*^9, 3.880214111876234*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"076aabeb-afc9-4b81-b9ba-293c8baf31d8"]
}, Open  ]],

Cell["The first and third vectors should be anticorrelated:", "Text",
 CellChangeTimes->{{3.87277155001865*^9, 3.872771560434703*^9}, {
  3.880213044628832*^9, 
  3.880213047231615*^9}},ExpressionUUID->"d8c39ed8-41e1-4468-bbf2-\
558788e5b297"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Correlation", "[", 
  RowBox[{"v1", ",", "v3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8727673561304913`*^9, 3.872767358738387*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"7d4c1ef3-5842-4421-b7d6-eb42c5099a3c"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.8801148963609276`*^9, 3.880130149274416*^9, 
  3.880190472100692*^9, 3.8802129366815834`*^9, 3.880213460012199*^9, 
  3.880213777394662*^9, 3.880214111898203*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"383a6162-47da-44e6-afbc-abf6ac0e7a2e"]
}, Open  ]],

Cell["\<\
We don\[CloseCurlyQuote]t quite know what will happen with the fourth vector, \
as it is being drawn randomly. However,  it should approach zero in the limit \
of an infinitely long vector\
\>", "Text",
 CellChangeTimes->{{3.872771568018731*^9, 3.872771583850573*^9}, {
  3.8727716582509623`*^9, 
  3.872771666419888*^9}},ExpressionUUID->"3480e052-4b6d-4670-89b9-\
639c0c0c6b4a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Correlation", "[", 
  RowBox[{"v1", ",", "v4"}], "]"}]], "Input",
 CellChangeTimes->{{3.872767372762656*^9, 3.87276737700242*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"3c11dbce-2763-41e9-b9a3-5c48bd91a4f0"],

Cell[BoxData[
 RowBox[{"-", "0.20375216495623377`"}]], "Output",
 CellChangeTimes->{3.880114896381605*^9, 3.8801301493172445`*^9, 
  3.880190476169397*^9, 3.880212936698535*^9, 3.880213460057064*^9, 
  3.8802137774209557`*^9, 3.8802141119201417`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"24f7f032-885c-4cb2-a4e7-2a90d3359dec"]
}, Open  ]],

Cell["\<\
We can see what the behavior is by plotting the list of pairs of points:\
\>", "Text",
 CellChangeTimes->{{3.872771672826892*^9, 
  3.872771710274824*^9}},ExpressionUUID->"2139ae1b-e122-4f1e-87e9-\
b66b3080f37f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v4"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<v1\>\"", ",", "\"\<v4\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8727716002592077`*^9, 3.87277162185118*^9}, {
  3.8727716824036093`*^9, 3.8727716987155046`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"f1331749-60d0-4953-aaac-96be148a45e1"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{1., 0.5191695758524271}, {2., 0.7872573214277732}, {3., 
     0.16641221303056408`}, {4., 0.11415487818888215`}, {5., 
     0.840555994687471}, {6., 0.4071418558669013}, {7., 
     0.49181046977331433`}, {8., 0.39210045662211535`}, {9., 
     0.04653070886454458}, {10., 0.5622429629918015}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"v1\"", TraditionalForm], 
    FormBox["\"v4\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {0, 0.840555994687471}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.880114896428489*^9, 3.8801301494139843`*^9, 
  3.880190479836065*^9, 3.8802129367768955`*^9, 3.8802134601462207`*^9, 
  3.88021377747792*^9, 3.8802141119789906`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"f6a26b14-f58e-4a56-8a9d-38b9ea7fc1b3"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s define an accessory function to calculate the Pearson \
Correlation Coefficient for all 13 features in our dataset, then perform the \
calculation:\
\>", "Text",
 CellChangeTimes->{{3.872767339666111*^9, 3.872767342162218*^9}, {
  3.872771713947027*^9, 3.872771717698848*^9}, {3.872927248721831*^9, 
  3.8729272995490103`*^9}},ExpressionUUID->"8b99ed2f-f074-414b-820f-\
15de41eaa18d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"featureCorrelation", "[", "data_", "]"}], ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"featureNames", "=", 
       RowBox[{"Keys", "@", 
        RowBox[{"First", "@", 
         RowBox[{"Keys", "[", "data", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"Keys", "[", "data", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"Values", "[", "data", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AssociationMap", "[", " ", 
      RowBox[{
       RowBox[{"Correlation", "[", 
        RowBox[{
         RowBox[{"Lookup", "[", 
          RowBox[{"x", ",", "#"}], "]"}], ",", "y"}], "]"}], "&"}], "]"}], 
     "@", "featureNames"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.872767388602845*^9, 3.872767403615376*^9}, {
   3.872767437218528*^9, 3.872767480887929*^9}, {3.872767524580206*^9, 
   3.87276766743487*^9}, {3.872771727616683*^9, 3.8727717295315533`*^9}, 
   3.872771900656187*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"95499a59-12a1-4a1f-83ae-4c0ae3d7de45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"featureCorrelation", "[", "train", "]"}]], "Input",
 CellChangeTimes->{{3.872767643901888*^9, 3.872767645770392*^9}, {
  3.872771731027705*^9, 3.872771733019064*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"8c531bf2-d014-4e46-8b4f-2048ff2f095f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"AromaticRingCount\"\>", "\[Rule]", "0.35002068702021555`"}], 
   ",", 
   RowBox[{"\<\"HBondDonorCount\"\>", "\[Rule]", 
    RowBox[{"-", "0.15056855598038454`"}]}], ",", 
   RowBox[{"\<\"HBondAcceptorCount\"\>", "\[Rule]", 
    RowBox[{"-", "0.33994077750018387`"}]}], ",", 
   RowBox[{"\<\"FractionCarbonSP3\"\>", "\[Rule]", 
    RowBox[{"-", "0.3946405663953933`"}]}], ",", 
   RowBox[{"\<\"HeteroatomCount\"\>", "\[Rule]", 
    RowBox[{"-", "0.3416441812941855`"}]}], ",", 
   RowBox[{"\<\"HeterocycleCount\"\>", "\[Rule]", 
    RowBox[{"-", "0.024907658587188918`"}]}], ",", 
   RowBox[{"\<\"RotatableBondCount\"\>", "\[Rule]", 
    RowBox[{"-", "0.1791449516852303`"}]}], ",", 
   RowBox[{"\<\"MolecularMass\"\>", "\[Rule]", 
    RowBox[{"-", "0.23140549643838304`"}]}], ",", 
   RowBox[{"\<\"DegreeOfUnsaturation\"\>", "\[Rule]", 
    RowBox[{"-", "0.006026884347991861`"}]}], ",", 
   RowBox[{"\<\"MinEllipsoidLength\"\>", "\[Rule]", "0.26639484642844513`"}], 
   ",", 
   RowBox[{"\<\"MaxDistance\"\>", "\[Rule]", "0.2048685846551031`"}], ",", 
   RowBox[{"\<\"LongestPiChain\"\>", "\[Rule]", "0.392928538530637`"}], ",", 
   RowBox[{"\<\"LinkerLength\"\>", "\[Rule]", "0.4872792746284966`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8801148964700675`*^9, 3.8801301495047817`*^9, 
  3.880190485935177*^9, 3.8802129368637104`*^9, 3.8802134601988797`*^9, 
  3.8802137775256405`*^9, 3.880214112020877*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"7b15e90b-d719-4314-9974-66955410ef98"]
}, Open  ]],

Cell[TextData[{
 "We can visualize the correlations sorted by value in a ",
 ButtonBox["Bar Chart",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/BarChart.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/BarChart.html"],
 ":"
}], "Text",
 CellChangeTimes->{{3.872771988563086*^9, 3.872771991202942*^9}, {
  3.8729273373434005`*^9, 3.8729273531072607`*^9}, {3.883647795092793*^9, 
  3.883647825779768*^9}},ExpressionUUID->"d462593b-e193-4439-9a1a-\
221dd6f82cc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Sort", "@", 
    RowBox[{"featureCorrelation", "[", "train", "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ChartLabels", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BarOrigin", "->", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872771985419251*^9, 3.872771985810965*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"67a4f1cf-730b-48a5-a814-3906d8df32d9"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0., 0.3023255813953489}, {0., 13.440071556350624`}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 0.5599284436493739}, {-0.3946405663953933, 
             1.4400715563506261`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{11.689627869379677`, 164.54158001734527`}, {
            77.82933941911747, 91.28594713263037}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.3946405663953933]& ,
         TagBoxNote->"-0.3946405663953933"],
        StyleBox[
         RowBox[{"-", "0.3946405663953933`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.3946405663953933, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 1.5599284436493739`}, {-0.3416441812941855, 
             2.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{32.1490114565826, 164.54158001734527`}, {
            63.10831561453678, 76.56492332804967}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.3416441812941855]& ,
         TagBoxNote->"-0.3416441812941855"],
        StyleBox[
         RowBox[{"-", "0.3416441812941855`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.3416441812941855, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 2.559928443649374}, {-0.33994077750018387`, 
             3.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{32.806614641381344`, 164.54158001734527`}, {
            48.387291809956075`, 61.84389952346896}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.33994077750018387`]& ,
         TagBoxNote->"-0.33994077750018387"],
        StyleBox[
         RowBox[{"-", "0.33994077750018387`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.33994077750018387`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 3.559928443649374}, {-0.23140549643838304`, 
             4.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{74.70692432755379, 164.54158001734527`}, {
            33.666268005375386`, 47.12287571888827}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.23140549643838304`]& ,
         TagBoxNote->"-0.23140549643838304"],
        StyleBox[
         RowBox[{"-", "0.23140549643838304`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.23140549643838304`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 4.559928443649373}, {-0.1791449516852303, 
             5.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{94.88223495560959, 164.54158001734527`}, {
            18.945244200794676`, 32.40185191430757}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.1791449516852303]& ,
         TagBoxNote->"-0.1791449516852303"],
        StyleBox[
         RowBox[{"-", "0.1791449516852303`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.1791449516852303, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 5.559928443649373}, {-0.15056855598038454`, 
             6.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{105.91422214018102`, 164.54158001734527`}, {
            4.22422039621398, 17.680828109726875`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.15056855598038454`]& ,
         TagBoxNote->"-0.15056855598038454"],
        StyleBox[
         RowBox[{"-", "0.15056855598038454`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.15056855598038454`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 6.559928443649373}, {-0.024907658587188918`, 
             7.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{154.42591773545178`, 
            164.54158001734527`}, {-10.496803408366716`, 
            2.9598043051461644`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.024907658587188918`]& ,
         TagBoxNote->"-0.024907658587188918"],
        StyleBox[
         RowBox[{"-", "0.024907658587188918`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.024907658587188918`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 7.559928443649373}, {-0.006026884347991861, 
             8.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{161.71488663107382`, 
            164.54158001734527`}, {-25.217827212947427`, \
-11.761219499434532`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.006026884347991861]& ,
         TagBoxNote->"-0.006026884347991861"],
        StyleBox[
         RowBox[{"-", "0.006026884347991861`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.006026884347991861, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 8.559928443649373}, {0.2048685846551031, 
             9.440071556350624}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{164.04158001734527`, 
            243.63159625942626`}, {-39.938851017528094`, \
-26.482243304015228`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.2048685846551031]& ,
         TagBoxNote->"0.2048685846551031"],
        StyleBox["0.2048685846551031`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.2048685846551031, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 9.55992844364937}, {0.26639484642844513`, 
             10.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{164.04158001734527`, 
            267.3839595178549}, {-54.659874822108804`, -41.203267108595895`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.26639484642844513`]& ,
         TagBoxNote->"0.26639484642844513"],
        StyleBox["0.26639484642844513`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.26639484642844513`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 10.55992844364937}, {0.35002068702021555`, 
             11.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{164.04158001734527`, 
            299.66791902192153`}, {-69.38089862668951, -55.924290913176605`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.35002068702021555`]& ,
         TagBoxNote->"0.35002068702021555"],
        StyleBox["0.35002068702021555`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.35002068702021555`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 11.55992844364937}, {0.392928538530637, 
             12.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{164.04158001734527`, 
            316.2325996369858}, {-84.1019224312702, -70.64531471775729}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.392928538530637]& ,
         TagBoxNote->"0.392928538530637"],
        StyleBox["0.392928538530637`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.392928538530637, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 12.55992844364937}, {0.4872792746284966, 
             13.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{164.04158001734527`, 
            352.6569311810078}, {-98.8229462358509, -85.366338522338}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.4872792746284966]& ,
         TagBoxNote->"0.4872792746284966"],
        StyleBox["0.4872792746284966`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4872792746284966, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0., 0.3023255813953489}, {0., 13.702826475849731`}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0., 0.5599284436493739}, 
          Offset[{-6., 0.}, {0., 0.5599284436493739}]}], 
        LineBox[{{0., 13.440071556350626`}, 
          Offset[{-6., 0.}, {0., 
           13.440071556350626`}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {
          LineBox[{{0., 1.4400715563506261`}, 
            Offset[{-4., 0.}, {0., 1.4400715563506261`}]}], 
          LineBox[{{0., 1.5599284436493739`}, 
            Offset[{-4., 0.}, {0., 1.5599284436493739`}]}], 
          LineBox[{{0., 2.440071556350626}, 
            Offset[{-4., 0.}, {0., 2.440071556350626}]}], 
          LineBox[{{0., 2.559928443649374}, 
            Offset[{-4., 0.}, {0., 2.559928443649374}]}], 
          LineBox[{{0., 3.440071556350626}, 
            Offset[{-4., 0.}, {0., 3.440071556350626}]}], 
          LineBox[{{0., 3.559928443649374}, 
            Offset[{-4., 0.}, {0., 3.559928443649374}]}], 
          LineBox[{{0., 4.440071556350626}, 
            Offset[{-4., 0.}, {0., 4.440071556350626}]}], 
          LineBox[{{0., 4.559928443649373}, 
            Offset[{-4., 0.}, {0., 4.559928443649373}]}], 
          LineBox[{{0., 5.440071556350626}, 
            Offset[{-4., 0.}, {0., 5.440071556350626}]}], 
          LineBox[{{0., 5.5599284436493726`}, 
            Offset[{-4., 0.}, {0., 5.5599284436493726`}]}], 
          LineBox[{{0., 6.440071556350626}, 
            Offset[{-4., 0.}, {0., 6.440071556350626}]}], 
          LineBox[{{0., 6.5599284436493726`}, 
            Offset[{-4., 0.}, {0., 6.5599284436493726`}]}], 
          LineBox[{{0., 7.440071556350626}, 
            Offset[{-4., 0.}, {0., 7.440071556350626}]}], 
          LineBox[{{0., 7.5599284436493726`}, 
            Offset[{-4., 0.}, {0., 7.5599284436493726`}]}], 
          LineBox[{{0., 8.440071556350626}, 
            Offset[{-4., 0.}, {0., 8.440071556350626}]}], 
          LineBox[{{0., 8.559928443649373}, 
            Offset[{-4., 0.}, {0., 8.559928443649373}]}], 
          LineBox[{{0., 9.440071556350626}, 
            Offset[{-4., 0.}, {0., 9.440071556350626}]}], 
          LineBox[{{0., 9.559928443649373}, 
            Offset[{-4., 0.}, {0., 9.559928443649373}]}], 
          LineBox[{{0., 10.440071556350626`}, 
            Offset[{-4., 0.}, {0., 10.440071556350626`}]}], 
          LineBox[{{0., 10.559928443649373`}, 
            Offset[{-4., 0.}, {0., 10.559928443649373`}]}], 
          LineBox[{{0., 11.440071556350626`}, 
            Offset[{-4., 0.}, {0., 11.440071556350626`}]}], 
          LineBox[{{0., 11.559928443649373`}, 
            Offset[{-4., 0.}, {0., 11.559928443649373`}]}], 
          LineBox[{{0., 12.440071556350626`}, 
            Offset[{-4., 0.}, {0., 12.440071556350626`}]}], 
          LineBox[{{0., 12.559928443649373`}, 
            Offset[{-4., 0.}, {0., 12.559928443649373`}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"FractionCarbonSP3\"\>", Offset[{-2, 0}, {0., 1.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"HeteroatomCount\"\>", Offset[{-2, 0}, {0., 2.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"HBondAcceptorCount\"\>", Offset[{-2, 0}, {0., 3.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"MolecularMass\"\>", 
          Offset[{-2, 0}, {0., 3.9999999999999996}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"RotatableBondCount\"\>", Offset[{-2, 0}, {0., 5.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"HBondDonorCount\"\>", Offset[{-2, 0}, {0., 6.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"HeterocycleCount\"\>", Offset[{-2, 0}, {0., 7.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"DegreeOfUnsaturation\"\>", Offset[{-2, 0}, {0., 8.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"MaxDistance\"\>", Offset[{-2, 0}, {0., 9.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"MinEllipsoidLength\"\>", 
          Offset[{-2, 0}, {0., 9.999999999999998}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"AromaticRingCount\"\>", 
          Offset[{-2, 0}, {0., 10.999999999999998}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"LongestPiChain\"\>", 
          Offset[{-2, 0}, {0., 11.999999999999998}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"LinkerLength\"\>", 
          Offset[{-2, 0}, {0., 12.999999999999998}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}]}, 
        "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.3023255813953489},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{3.8801148968329334`*^9, 3.880130150249778*^9, 
  3.8801904971954136`*^9, 3.880212937494244*^9, 3.880213460690339*^9, 
  3.8802137778706026`*^9, 3.880214112347958*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"69832c50-1bc9-45cb-86ce-d3bea61d0231"]
}, Open  ]],

Cell["\<\
Think about which features show strong positive or negative correlations. \
Does your chemical intuition say that any of these properties might be \
physically meaningful in determining cyanine dye absorption?\
\>", "Text",
 CellChangeTimes->{{3.8729273985550766`*^9, 3.8729274543257236`*^9}, {
  3.873800923445252*^9, 
  3.873800929218112*^9}},ExpressionUUID->"1180aa49-256f-4d71-b096-\
db62abb2ad6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applying Pearson Correlation", "Subsection",
 CellChangeTimes->{{3.872257204391584*^9, 3.872257214575993*^9}, {
  3.8729273825904865`*^9, 
  3.8729273836583796`*^9}},ExpressionUUID->"a570b489-af8f-4efe-99eb-\
94816fafec58"],

Cell["\<\
Now let\[CloseCurlyQuote]s try training a simple linear regression model \
using only the feature with the highest correlation. Add code blocks below to \
train the model, plot the predicted vs. actual wavelengths, and generate \
performance metrics. (Hint: as before, you can do this by copying and modify \
code blocks from above.) How do the results compare to your previous simple \
linear regression models?\
\>", "Text",
 CellChangeTimes->{{3.872257323650795*^9, 3.872257324442773*^9}, {
   3.8727672947221518`*^9, 3.872767297457775*^9}, {3.8729270973432245`*^9, 
   3.8729271209727497`*^9}, 3.8729273910197735`*^9, 3.872927428902238*^9, {
   3.8836754679872885`*^9, 
   3.8836754760881915`*^9}},ExpressionUUID->"ddd33171-90d8-4647-a45c-\
e2853df9921f"],

Cell[TextData[StyleBox["ADD A CODE BLOCK TO PERFORM A SIMPLE LINEAR \
REGRESSION FOR A SINGLE HIGHLY CORRELATED VARIABLE, PLOT THE RESULTS, AND \
CALCULATE PERFORMANCE METRICS",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8727677132496233`*^9, 3.8727677216337233`*^9}, {
  3.8727678408006763`*^9, 3.872767842448318*^9}, {3.8729274898862085`*^9, 
  3.87292750864338*^9}},ExpressionUUID->"1050dfd8-eebf-4b79-93d0-\
a51283785b0a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regularized (or Penalized) Regression", "Section",
 CellChangeTimes->{{3.872257347765011*^9, 3.872257350814156*^9}, {
  3.873018044864685*^9, 3.8730180469562736`*^9}},
 CellTags->
  "penalizedRegressionHref",ExpressionUUID->"3ae17e3c-b934-45dc-a795-\
bc484c1baaf3"],

Cell["\<\
Another approach we can take to prevent overfitting is adding a tuning \
parameter (regularization) that penalizes model complexity. In other words, \
this penalty tends to keep the model coefficients smaller and minimizes the \
effect of extreme values in the training dataset. These types of models are \
referred to as regularized or penalized regression.\
\>", "Text",
 CellChangeTimes->{{3.872257359738714*^9, 3.872257360253676*^9}, {
  3.87276773400147*^9, 3.872767738705893*^9}, {3.872927647889533*^9, 
  3.872927653210908*^9}, {3.8729616145964956`*^9, 3.8729616416391926`*^9}, {
  3.872968062123786*^9, 3.872968065460429*^9}, {3.8729680964917917`*^9, 
  3.872968164002595*^9}, {3.8730180540647926`*^9, 3.873018076619439*^9}, {
  3.8733787767293234`*^9, 3.873378777071443*^9}, {3.8801905997130933`*^9, 
  3.88019061307646*^9}, {3.880190685558214*^9, 
  3.880190720669941*^9}},ExpressionUUID->"85f57e61-c5df-4dc9-bd35-\
2d0098f2d256"],

Cell["\<\
https://jakevdp.github.io/PythonDataScienceHandbook/05.06-linear-regression.\
html#Regularization\
\>", "Item",
 CellChangeTimes->{{3.873378760654842*^9, 
  3.873378767555664*^9}},ExpressionUUID->"e5c9416e-b248-4e7e-aa5c-\
38f2e7be30b1"],

Cell["https://en.wikipedia.org/wiki/Regularization_(mathematics)", "Item",
 CellChangeTimes->{{3.873378760654842*^9, 
  3.8733787742178802`*^9}},ExpressionUUID->"7c71521c-1cde-4786-9c25-\
9dc705f13cc3"],

Cell["\<\
There are several types of regularization penalties that can be applied. Let' \
s test two different types of regularized regression models:\
\>", "Text",
 CellChangeTimes->{{3.872927619988098*^9, 3.872927625409015*^9}, {
   3.8730180802025356`*^9, 3.873018081428237*^9}, {3.8801907272481146`*^9, 
   3.8801907359844217`*^9}, 
   3.8836754895409765`*^9},ExpressionUUID->"89456c1e-69b4-40fc-8d1e-\
e3ab3bf8118b"],

Cell[TextData[{
 "Ridge Regression (",
 StyleBox["a.k.a.",
  FontSlant->"Italic"],
 " L2 regularization)"
}], "ItemNumbered",
 CellChangeTimes->{{3.872927664085682*^9, 
  3.8729277015415993`*^9}},ExpressionUUID->"7e8c22ff-7151-4050-99ce-\
a55979f1a0fb"],

Cell[TextData[{
 "Lasso Regression (",
 StyleBox["a.k.a.",
  FontSlant->"Italic"],
 " L1 regularization)"
}], "ItemNumbered",
 CellChangeTimes->{{3.872927664085682*^9, 3.8729276684167237`*^9}, {
  3.872927711161298*^9, 
  3.8729277125105104`*^9}},ExpressionUUID->"0437c23b-63aa-4583-95b8-\
e46a4ae0f83c"],

Cell[CellGroupData[{

Cell["Ridge Regression", "Subsection",
 CellChangeTimes->{{3.872257352510067*^9, 
  3.872257355258635*^9}},ExpressionUUID->"8da5c946-9317-44bd-b320-\
fc9dbde82a1e"],

Cell["\<\
Ridge Regression uses a penalty given by a regularization parameter (which we\
\[CloseCurlyQuote]ll call alpha) multiplied by the sum of the squared model \
coefficients:\
\>", "Text",
 CellChangeTimes->{{3.872257361608255*^9, 3.872257362170928*^9}, {
   3.872258786886207*^9, 3.872258790912706*^9}, {3.8729277191252565`*^9, 
   3.872927797112623*^9}, {3.873378790065545*^9, 3.8733787985439315`*^9}, {
   3.8801911176221867`*^9, 3.8801911837311106`*^9}, {3.88019121445612*^9, 
   3.8801912929083548`*^9}, 
   3.8801913243768015`*^9},ExpressionUUID->"c7455113-db23-45cb-b00c-\
02526d881216"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{
        StyleBox["P", "TI"], "\[LongEqual]", "\[Alpha]", 
        UnderoverscriptBox["\[Sum]", 
         RowBox[{
           StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
         StyleBox["k", "TI"], LimitsPositioning -> True], 
        SubsuperscriptBox["\[Beta]", 
         StyleBox["i", "TI"], "2"]}], TraditionalForm], "errors" -> {}, 
    "input" -> "P = \\alpha\\sum_{i=1}^{k}\\beta_i^{2}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"15dee082-e2ca-474f-9342-77b9f8185995"]], \
"Text",
 CellChangeTimes->{3.873799338728633*^9},
 TextAlignment->Center,ExpressionUUID->"9af25c6c-76a8-4fd4-bc7a-7ba3c576c95e"],

Cell["\<\
This penalty is then added to the normal RSS term. Addition of this penalty \
term has the effect of shrinking the model coefficients, helping to reduce \
model complexity and prevent overfitting.\
\>", "Text",
 CellChangeTimes->{{3.880191290702391*^9, 3.8801913329745417`*^9}, {
  3.8801918242633686`*^9, 3.880191829641125*^9}, {3.8801927794983764`*^9, 
  3.8801927809817047`*^9}},ExpressionUUID->"9251f432-e3b8-4d60-9074-\
b75a7863dd11"],

Cell["\<\
https://jakevdp.github.io/PythonDataScienceHandbook/05.06-linear-regression.\
html#Ridge-regression-($L_2$-Regularization)\
\>", "Item",
 CellChangeTimes->{{3.873378829396372*^9, 
  3.8733788355492043`*^9}},ExpressionUUID->"07caca55-917f-43a5-8d46-\
208a84cd212e"],

Cell["https://en.wikipedia.org/wiki/Ridge_regression", "Item",
 CellChangeTimes->{{3.873378829396372*^9, 
  3.8733788417131186`*^9}},ExpressionUUID->"8c22a711-f676-49da-be89-\
e4ebd0ed7059"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s look how Ridge Regression performs using all the \
features. Note that you can tune the weight of the penalty by adjusting the ",
 StyleBox["alphaValueRidge",
  FontSlant->"Italic"],
 " parameter in the code below. Reducing alpha to 0 makes the penalty 0 and \
turns this model back into a normal multiple regression.\n\nRun the code \
block below perform Ridge Regression analysis. (Start with the default value \
of alpha, but later you can test how changing alpha affects the results.)"
}], "Text",
 CellChangeTimes->{
  3.8733787923295584`*^9, {3.8733790184615417`*^9, 3.8733790196137114`*^9}, {
   3.8801912244247956`*^9, 
   3.880191229425617*^9}},ExpressionUUID->"177d1001-a6f1-4a74-978b-\
4d09ea8f8cb9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alphaValueRidge", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.8729513015057116`*^9, 3.8729513083340225`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"0d59e6eb-ec06-4c27-9ff0-9b9cec1f5e63"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ridgeRegressor1", "=", 
    RowBox[{"Predict", "[", 
     RowBox[{"train", ",", "\[IndentingNewLine]", 
      RowBox[{"Method", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<LinearRegression\>\"", ",", 
         RowBox[{"\"\<L1Regularization\>\"", "->", "0"}], ",", 
         RowBox[{"\"\<L2Regularization\>\"", "->", "alphaValueRidge"}]}], 
        "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metrics", "[", "\"\<Ridge (1)\>\"", "]"}], "=", 
  RowBox[{"modelEvaluation", "[", 
   RowBox[{"ridgeRegressor1", ",", "test"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.872257402061903*^9, 3.872257420651643*^9}, {
  3.872258553601685*^9, 3.8722585933108387`*^9}, {3.87225870521698*^9, 
  3.872258711548051*^9}, {3.872767759338169*^9, 3.872767768274007*^9}, {
  3.872767948192403*^9, 3.872767949151988*^9}, {3.8729513186851625`*^9, 
  3.8729513215982275`*^9}, {3.880192116839382*^9, 3.8801921193547406`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"0b9d20a1-238e-4edb-9cfe-c518a2d7ee39"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"MeanDeviation\"\>", "\[Rule]", "58.719541788327405`"}], ",", 
   RowBox[{"\<\"MeanSquare\"\>", "\[Rule]", "5027.314095121533`"}], ",", 
   RowBox[{"\<\"StandardDeviation\"\>", "\[Rule]", "70.90355488352846`"}], 
   ",", 
   RowBox[{"\<\"RSquared\"\>", "\[Rule]", "0.3997446905179989`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8801148983239107`*^9, 3.8801301528294897`*^9, 
  3.8801918503078547`*^9, 3.880192124635857*^9, 3.8802129397466135`*^9, 
  3.8802134628025265`*^9, 3.8802137793251524`*^9, 3.8802141137720346`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"6da7bb0c-0801-4508-8249-2e71d37c0cd3"]
}, Open  ]],

Cell["\<\
It is also possible to let Mathematica attempt to automatically determine the \
regularization parameter by setting the value of the parameter to Automatic. \
(By default, if neither regularization option is specified, Mathematica\
\[CloseCurlyQuote]s default to L2Regularization \[RightArrow] Automatic.)

The code block below performs automatic Ridge Regression and displays the \
performance metrics.\
\>", "Text",
 CellChangeTimes->{{3.872258721258106*^9, 3.8722587329176207`*^9}, {
   3.872961657808404*^9, 3.8729616955807343`*^9}, {3.872968193268655*^9, 
   3.872968308987158*^9}, {3.87297014471257*^9, 3.872970150511404*^9}, 
   3.872970657460175*^9, {3.8733788550962753`*^9, 3.8733789516296816`*^9}, {
   3.883647237467917*^9, 
   3.883647244264378*^9}},ExpressionUUID->"ec54f288-8c24-4eec-894f-\
22a3a10b1357"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ridgeRegressorAuto", "=", 
    RowBox[{"Predict", "[", 
     RowBox[{"train", ",", "\[IndentingNewLine]", 
      RowBox[{"Method", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<LinearRegression\>\"", ",", 
         RowBox[{"\"\<L1Regularization\>\"", "->", "0"}], ",", 
         RowBox[{"\"\<L2Regularization\>\"", "->", "Automatic"}]}], "}"}]}]}],
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metrics", "[", "\"\<Ridge (Auto)\>\"", "]"}], "=", 
  RowBox[{"modelEvaluation", "[", 
   RowBox[{"ridgeRegressorAuto", ",", "test"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.872258603456767*^9, 3.872258645161957*^9}, {
  3.8722587164628696`*^9, 3.872258719157493*^9}, {3.872767772289884*^9, 
  3.8727677733626738`*^9}, {3.8727679440649023`*^9, 3.872767959688366*^9}, {
  3.8801921292567797`*^9, 3.8801921546314564`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"6ffeb883-d870-494f-9881-cf0b9e6a7336"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"MeanDeviation\"\>", "\[Rule]", "58.719541788327405`"}], ",", 
   RowBox[{"\<\"MeanSquare\"\>", "\[Rule]", "5027.314095121533`"}], ",", 
   RowBox[{"\<\"StandardDeviation\"\>", "\[Rule]", "70.90355488352846`"}], 
   ",", 
   RowBox[{"\<\"RSquared\"\>", "\[Rule]", "0.3997446905179989`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.880114900561431*^9, 3.8801301556702557`*^9, 3.8801918665734468`*^9, 
   3.8801920921261826`*^9, {3.880192137553119*^9, 3.880192145381737*^9}, 
   3.880212942221249*^9, 3.8802134649750605`*^9, 3.880213781530531*^9, 
   3.880214115932167*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"70e46dd6-add1-48dc-ad10-d6481c5f2ba7"]
}, Open  ]],

Cell[TextData[{
 "Now let\[CloseCurlyQuote]s plot the actual vs. predicted wavelength  for \
the test dataset with the Ridge Regression model with ",
 StyleBox["alphaValueRidge",
  FontSlant->"Italic"],
 " = 1."
}], "Text",
 CellChangeTimes->{{3.873378968668543*^9, 3.87337899399603*^9}, {
  3.880213141331636*^9, 
  3.880213150562295*^9}},ExpressionUUID->"bce5dbe4-190a-42de-88e4-\
8081c6e514b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"ridgeRegressor1", ",", "test", ",", "\"\<ComparisonPlot\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.872767862272895*^9, 3.872767864417753*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"3e399ee7-0413-4eb1-a08d-0535ce81dba0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                AbsoluteThickness[1.], 
                RGBColor[0.34398, 0.49112, 0.89936], 
                CircleBox[{0, 0}, 
                 Offset[{1.8, 1.8}, {0., 0.}]]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[1.6]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAQB2JGIGYC4nDfMvOqv00ODCCwoM0hNFl8VczVRgj/R6MD
751I26dMLRB+RaPDsaTWYNveBgi/o9nh9sxfiV43WiH8gCYHr6PHrB67QM17
0OBQJFt5bNnuZgh/Q4sDY8C/sPSpUPkD9Q7W5YcEP8tA+RwtDnmv972c3FQH
dU+DQ+wWVftvElD7I1odbh3LE9bOgqq3aHb4o7g4b8sHqP0erQ4nTm236Ult
h/Abuh3ciz5N3OgBU9/gIKbPKSPZDXXPjBaHL7X+zLe8oOYHNDssCK1MaumC
msfQ7vCyou9qw916CP9Eo8PZs7d+nP9TC+En1DgsvJfxxtasDcpvdLiTWLD8
mCXM/jaHL5PiGZ02Q+13aHIAACH7dvw=
          "]]}}, {
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{607.6846760980942, 724.}}]}, 
          RowBox[{"{", 
            RowBox[{"607.6846760980942`", ",", "724"}], "}"}]], 
         Annotation[#, {607.6846760980942, 724}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{570.6702462985219, 575.}}]}, 
          RowBox[{"{", 
            RowBox[{"570.6702462985219`", ",", "575"}], "}"}]], 
         Annotation[#, {570.6702462985219, 575}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{640.3619334240226, 559.}}]}, 
          RowBox[{"{", 
            RowBox[{"640.3619334240226`", ",", "559"}], "}"}]], 
         Annotation[#, {640.3619334240226, 559}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{529.6549444599884, 625.}}]}, 
          RowBox[{"{", 
            RowBox[{"529.6549444599884`", ",", "625"}], "}"}]], 
         Annotation[#, {529.6549444599884, 625}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{699.0363196924403, 586.}}]}, 
          RowBox[{"{", 
            RowBox[{"699.0363196924403`", ",", "586"}], "}"}]], 
         Annotation[#, {699.0363196924403, 586}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{584.6109519509275, 540.}}]}, 
          RowBox[{"{", 
            RowBox[{"584.6109519509275`", ",", "540"}], "}"}]], 
         Annotation[#, {584.6109519509275, 540}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{631.4564332449065, 662.}}]}, 
          RowBox[{"{", 
            RowBox[{"631.4564332449065`", ",", "662"}], "}"}]], 
         Annotation[#, {631.4564332449065, 662}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{594.6754588955083, 508.}}]}, 
          RowBox[{"{", 
            RowBox[{"594.6754588955083`", ",", "508"}], "}"}]], 
         Annotation[#, {594.6754588955083, 508}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{579.6186862175595, 641.}}]}, 
          RowBox[{"{", 
            RowBox[{"579.6186862175595`", ",", "641"}], "}"}]], 
         Annotation[#, {579.6186862175595, 641}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{488.16111158922183`, 532.}}]}, 
          RowBox[{"{", 
            RowBox[{"488.16111158922183`", ",", "532"}], "}"}]], 
         Annotation[#, {488.16111158922183`, 532}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{643.1202376313846, 683.}}]}, 
          RowBox[{"{", 
            RowBox[{"643.1202376313846`", ",", "683"}], "}"}]], 
         Annotation[#, {643.1202376313846, 683}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{589.2710331587252, 615.}}]}, 
          RowBox[{"{", 
            RowBox[{"589.2710331587252`", ",", "615"}], "}"}]], 
         Annotation[#, {589.2710331587252, 615}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{702.0881016487833, 681.}}]}, 
          RowBox[{"{", 
            RowBox[{"702.0881016487833`", ",", "681"}], "}"}]], 
         Annotation[#, {702.0881016487833, 681}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{748.6934751852759, 880.}}]}, 
          RowBox[{"{", 
            RowBox[{"748.6934751852759`", ",", "880"}], "}"}]], 
         Annotation[#, {748.6934751852759, 880}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{585.0867041531682, 519.}}]}, 
          RowBox[{"{", 
            RowBox[{"585.0867041531682`", ",", "519"}], "}"}]], 
         Annotation[#, {585.0867041531682, 519}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{625.3872605054373, 659.}}]}, 
          RowBox[{"{", 
            RowBox[{"625.3872605054373`", ",", "659"}], "}"}]], 
         Annotation[#, {625.3872605054373, 659}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{649.3564516268075, 618.}}]}, 
          RowBox[{"{", 
            RowBox[{"649.3564516268075`", ",", "618"}], "}"}]], 
         Annotation[#, {649.3564516268075, 618}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{689.3146409491783, 736.}}]}, 
          RowBox[{"{", 
            RowBox[{"689.3146409491783`", ",", "736"}], "}"}]], 
         Annotation[#, {689.3146409491783, 736}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{509.8439536633801, 569.}}]}, 
          RowBox[{"{", 
            RowBox[{"509.8439536633801`", ",", "569"}], "}"}]], 
         Annotation[#, {509.8439536633801, 569}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{479.80077443571355`, 454.}}]}, 
          RowBox[{"{", 
            RowBox[{"479.80077443571355`", ",", "454"}], "}"}]], 
         Annotation[#, {479.80077443571355`, 454}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{710.7802360718671, 556.}}]}, 
          RowBox[{"{", 
            RowBox[{"710.7802360718671`", ",", "556"}], "}"}]], 
         Annotation[#, {710.7802360718671, 556}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{743.2219990520348, 720.}}]}, 
          RowBox[{"{", 
            RowBox[{"743.2219990520348`", ",", "720"}], "}"}]], 
         Annotation[#, {743.2219990520348, 720}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], 
           PointBox[{{598.4072291819307, 584.}}]}, 
          RowBox[{"{", 
            RowBox[{"598.4072291819307`", ",", "584"}], "}"}]], 
         Annotation[#, {598.4072291819307, 584}, 
          "Tooltip"]& ]}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           GrayLevel[0.2], 
           Opacity[0.5], 
           AbsoluteThickness[1.], 
           AbsoluteDashing[{2, 4}]], 
          LineBox[CompressedData["
1:eJxFxXswE3AAB/DVpZLXdeuhlkc5N12qjdypNIRVExqROIcx85jzSCHMc8Qm
Ls775pZjVx6ZIdX6g7rTta5V46Q7XbRESYcLf3hU//y+f3zuc5iX5M/fSqFQ
fP75P4/uds7RKMuNrM1wzTfBUelKd60Zjh4+wk7Yg2MEBn4tFjhO8TqCysDJ
9MCipas4lx6vUcnw2Di7somVTXaJVIrndDh2R3+nb0wOWRueaHzAQET2KO9p
5NTjReHDSP3pXHJsgktI5Ri+ZdU1yHXKIwfxalPMxFhdMfwkT4vFbzxpWeb5
ZCGPVvdAgMennDslShytfjQh31JADmi9QXe/gl9liAyr63Fo69R22ixOU5c3
BToWktvt7/m8LMReHV/3qz9g/r7s24JDReSW8cRVthALStpMP/XjCk971vIm
Hg0xKmX7icnyUKaQU48lfd3xBbP4o2VOgYdzMbk9tdJhIB83Wa2vR7zH1Mfd
kc9pJeT5MOXn+9F4OswoXa3C/IsditJ1vFXatlTmc4ds+/T7mGsdbl+5OZoz
if3uhs3/ZpSSM82kzXuz8OAsVZikwULdDNf/YBlZptj2biYK/xrJjFOp8Is5
p0bmBl6juk47X5CQA6rll9NqMGOT4x31BdufshR2TmK7uAXpyhS21tW+lXzD
uxV6bu8PvOgrCjb4g/tkSr7CUEru0RUVL+zCXTuDFWeNcVvqxozWFNewvYWr
VJwxr0+9ZInTbAaqqqxwcrCkd8Iaxw4xl1Ns8PUaUWaDHQ7ScBv0R7E/xfbZ
iWOYE69ZGzqO2c0yC5OT+PxICusaA7MMvcLlTHyGZZ730wH/BXQTO50=
           "]]}, Annotation[#, "Charting`Private`Tag$85168#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {432.70000000000095`, 432.70000000000095`}, 
     DisplayFunction :> Identity, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 300, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{432.7, 902.365}, {432.7, 902.365}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}], ",", "Automatic"}], 
                    "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect predictions\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0.2]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.880114901158594*^9, 3.8801301564482603`*^9, 
  3.880212942790718*^9, 3.8802134655265093`*^9, 3.8802137820744143`*^9, 
  3.8802139207290745`*^9, 3.8802141164697437`*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"7536e5ee-4eaf-4cf4-959d-1805bb773fe1"]
}, Open  ]],

Cell["\<\
From the performance metrics, we can see that the Ridge Regression model \
performs slightly better than the the Multiple Linear Regression without a \
penalty in this case.

Now try tuning the value of alpha and see how it affects the results. Add a \
code block below to train new Ridge Regression models and test different \
values of alpha. (Hint: you will need to rename the variable RidgeRegressor1 \
to store the new models):\
\>", "Text",
 CellChangeTimes->{{3.8727678916562777`*^9, 3.8727679017924147`*^9}, {
  3.872771772194703*^9, 3.872771774011085*^9}, {3.8729514211699286`*^9, 
  3.8729514859283037`*^9}, {3.8801918879334936`*^9, 3.880191891713417*^9}, {
  3.8801919225303993`*^9, 
  3.880191930415311*^9}},ExpressionUUID->"4440334d-f836-43eb-8ea5-\
8a31a6b5a742"],

Cell[TextData[StyleBox["Test alpha = 0", "ItemNumbered"]], "ItemNumbered",
 CellChangeTimes->{{3.8729514837380805`*^9, 
  3.87295150869407*^9}},ExpressionUUID->"157ff4bc-c8f7-49e7-b01e-\
bc034592e9b0"],

Cell[TextData[StyleBox["Test a few intermediate values of alpha", \
"ItemNumbered"]], "ItemNumbered",
 CellChangeTimes->{{3.8729514837380805`*^9, 
  3.872951508891507*^9}},ExpressionUUID->"f55e31af-8506-4246-bf07-\
e24a6f05dd12"],

Cell["\<\
Calculate the performance metrics for each model and compare to the results \
for an unpenalized multiple linear regression and the Ridge Regression with \
the highest penalty (alpha = 1). Which model gives the best performance?\
\>", "Text",
 CellChangeTimes->{{3.872951471175906*^9, 
  3.8729515133891*^9}},ExpressionUUID->"a2aafd03-9394-46ad-89ee-bbbc6e211284"],

Cell[TextData[StyleBox["ADD CODE BLOCKS HERE TO PERFORM RIDGE REGRESSION \
ANALYSIS USING DIFFERENT VALUES OF ALPHA. ALSO PLOT THE RESULTS AND CALCULATE \
PERFORMANCE METRICS.",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{3.8729515330167847`*^9, 
  3.8733790299619055`*^9},ExpressionUUID->"3563ad0f-2aa5-40f0-8e4a-\
62b26cd02755"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lasso Regression", "Subsection",
 CellChangeTimes->{{3.8722587731053457`*^9, 3.8722587737406483`*^9}, {
  3.872951544794594*^9, 
  3.8729515459442415`*^9}},ExpressionUUID->"681aaeba-0c02-4d9d-9c25-\
bc3d9b4efc5c"],

Cell["\<\
Lasso Regression uses a penalty given by a regularization parameter (again we\
\[CloseCurlyQuote]ll call it alpha) multiplied by the absolute value of the \
model coefficients:\
\>", "Text",
 CellChangeTimes->{{3.872257361608255*^9, 3.872257362170928*^9}, {
   3.872258786886207*^9, 3.872258790912706*^9}, {3.8729277191252565`*^9, 
   3.872927797112623*^9}, {3.873378790065545*^9, 3.8733787985439315`*^9}, {
   3.8801911176221867`*^9, 3.8801911837311106`*^9}, {3.88019121445612*^9, 
   3.8801912929083548`*^9}, 3.8801913243768015`*^9, {3.880191604821266*^9, 
   3.8801916184793816`*^9}, {3.880191655865185*^9, 3.8801916577188997`*^9}, {
   3.880191945685832*^9, 
   3.880191947656424*^9}},ExpressionUUID->"ff3abbce-eb39-4fb9-9e0c-\
2aef7558d922"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{
        StyleBox["P", "TI"], "\[LongEqual]", "\[Alpha]", 
        UnderoverscriptBox["\[Sum]", 
         RowBox[{
           StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
         StyleBox["k", "TI"], LimitsPositioning -> True], "|", 
        SubscriptBox["\[Beta]", 
         StyleBox["i", "TI"]], "|"}], TraditionalForm], "errors" -> {}, 
    "input" -> "P = \\alpha\\sum_{i=1}^{k}|\\beta_i|", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], 
  TraditionalForm]],ExpressionUUID->"7f332ef1-bbdf-421b-9011-d1c61dae5191"]], \
"Text",
 CellChangeTimes->{
  3.873799338728633*^9, {3.880191680387351*^9, 3.8801916808473377`*^9}},
 TextAlignment->Center,ExpressionUUID->"7869b203-336a-4022-b2eb-40ba25ca48da"],

Cell["\<\
Like for Ridge regression, this penalty term is added to the RSS term and has \
the effect of shrinking the model coefficients.\
\>", "Text",
 CellChangeTimes->{{3.880191290702391*^9, 3.8801913329745417`*^9}, {
  3.8801919834781475`*^9, 3.880192010662013*^9}, {3.880192791718646*^9, 
  3.880192798387982*^9}},ExpressionUUID->"bcaf8d26-bbdc-4867-a5ec-\
c6b21825d64c"],

Cell["\<\
https://jakevdp.github.io/PythonDataScienceHandbook/05.06-linear-regression.\
html#Lasso-regression-($L_1$-regularization)\
\>", "Item",
 CellChangeTimes->{{3.8733790651395655`*^9, 
  3.8733790673635883`*^9}},ExpressionUUID->"6c88b74b-9859-4c56-b1c8-\
2a3680978f1e"],

Cell["https://en.wikipedia.org/wiki/Lasso_(statistics)", "Item",
 CellChangeTimes->{{3.8733790651395655`*^9, 
  3.8733790712961173`*^9}},ExpressionUUID->"5cfbdad2-5e2a-40bf-b634-\
062d1ea26290"],

Cell["\<\
The syntax for Lasso Regression is the same as for Ridge Regression, but this \
time with the \[OpenCurlyDoubleQuote]L1Regularization\[CloseCurlyDoubleQuote] \
parameter as the relevant hyperparameter. Try writing a code block to train a \
Lasso Regression model, plot the predicted vs. true wavelength, and calculate \
the performance metrics. Start with the maximum penalty value (alpha = 1) and \
then test a few different values, as you did for Ridge Regression. (Hint: be \
sure that you set the \[OpenCurlyDoubleQuote]L2Regularization\
\[CloseCurlyDoubleQuote] parameter back to 0.)\
\>", "Text",
 CellChangeTimes->{
  3.873379041310573*^9, {3.883647283172196*^9, 3.883647314790697*^9}, {
   3.883647352094949*^9, 
   3.8836473537067947`*^9}},ExpressionUUID->"4ef18f13-e64d-48c4-89a4-\
9a2893bd98bc"],

Cell[TextData[{
 StyleBox["ADD A CODE BLOCK BELOW TO TRAIN A LASSO REGRESSION MODEL, PLOT THE \
RESULTS, AND CALCULATE PERFORMANCE METRICS. THEN DO THE SAME THING FOR A FEW \
DIFFERENT VALUES OF THE ALPHA PARAMETER.  ADD YOUR RESULTS TO THE ",
  FontWeight->"Bold"],
 StyleBox["metrics",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ASSOCIATION, AS DEMONSTRATED ABOVE.",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{
  3.872951773535174*^9, {3.872968395366102*^9, 3.8729684132377234`*^9}, {
   3.873379091829764*^9, 
   3.873379101310193*^9}},ExpressionUUID->"3ec5b188-efed-4337-87bd-\
6c5e38d7a891"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Model Evaluation", "Subsection"]], "Section",
 CellChangeTimes->{{3.872768048414981*^9, 3.8727680558786*^9}, {
  3.8729518289995565`*^9, 
  3.8729518347854548`*^9}},ExpressionUUID->"e2d13518-2cb1-4b99-9ddd-\
3b37b7ca67ee"],

Cell["\<\
Let\[CloseCurlyQuote]s now review all the developed models to see which \
perform the best. (Remember that these results will vary each time you \
execute the notebook because of the random train/test split of the dataset.)\
\>", "Text",
 CellChangeTimes->{
  3.8729518197187214`*^9, {3.8729519321360807`*^9, 3.872951942113229*^9}, {
   3.880214158221017*^9, 3.880214187572736*^9}, {3.8802143283928905`*^9, 
   3.8802143359560175`*^9}},ExpressionUUID->"f5be6bfa-3b09-473e-8b5e-\
fa1316045f46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", "metrics", "]"}]], "Input",
 CellChangeTimes->{{3.872258865119705*^9, 3.872258871073477*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"b77b2d44-6941-4187-a69b-0c6f81136a47"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Simple LR (FractionCarbonSP3" -> <|
        "MeanDeviation" -> 71.73448143008257, "MeanSquare" -> 
         8612.498289041074, "StandardDeviation" -> 92.803546748177, 
         "RSquared" -> -0.028322028042407243`|>, 
       "Multiple LR" -> <|
        "MeanDeviation" -> 62.68438277266902, "MeanSquare" -> 
         5416.024294935858, "StandardDeviation" -> 73.59364303345676, 
         "RSquared" -> 0.353333156073637|>, 
       "Ridge (1)" -> <|
        "MeanDeviation" -> 58.719541788327405`, "MeanSquare" -> 
         5027.314095121533, "StandardDeviation" -> 70.90355488352846, 
         "RSquared" -> 0.3997446905179989|>, 
       "Ridge (Auto)" -> <|
        "MeanDeviation" -> 58.719541788327405`, "MeanSquare" -> 
         5027.314095121533, "StandardDeviation" -> 70.90355488352846, 
         "RSquared" -> 0.3997446905179989|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "MeanDeviation"} -> 
        1, {All, "MeanSquare"} -> 1, {All, "StandardDeviation"} -> 
        1, {All, "RSquared"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[313.6], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "MeanDeviation" -> TypeSystem`PackageScope`AtomShape[60], 
             "MeanSquare" -> TypeSystem`PackageScope`AtomShape[60], 
             "StandardDeviation" -> TypeSystem`PackageScope`AtomShape[60], 
             "RSquared" -> TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 4, {All}]]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "MeanDeviation", "MeanSquare", "StandardDeviation", "RSquared"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "MeanDeviation"} -> 
        1, {All, "MeanSquare"} -> 1, {All, "StandardDeviation"} -> 
        1, {All, "RSquared"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[313.6], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "MeanDeviation" -> TypeSystem`PackageScope`AtomShape[60], 
             "MeanSquare" -> TypeSystem`PackageScope`AtomShape[60], 
             "StandardDeviation" -> TypeSystem`PackageScope`AtomShape[60], 
             "RSquared" -> TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 4, {All}]]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "MeanDeviation", "MeanSquare", "StandardDeviation", "RSquared"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 4, "DataRowCount" -> 4, "DataColumnCount" -> 4,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MeanDeviation", 
                  Style[
                  "MeanDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MeanDeviation"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MeanDeviation"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MeanSquare", 
                  Style[
                  "MeanSquare", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MeanSquare"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MeanSquare"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardDeviation", 
                  Style[
                  "StandardDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "StandardDeviation"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "StandardDeviation"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["RSquared", 
                  Style[
                  "RSquared", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "RSquared"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "RSquared"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Simple LR (FractionCarbonSP3", 
                  Style[
                  "Simple LR (FractionCarbonSP3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Simple LR (FractionCarbonSP3"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Simple LR (FractionCarbonSP3"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71.7345"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Simple LR (FractionCarbonSP3"], 
                 Key["MeanDeviation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8612.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Simple LR (FractionCarbonSP3"], 
                 Key["MeanSquare"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92.8035"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Simple LR (FractionCarbonSP3"], 
                 Key["StandardDeviation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.028322"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Simple LR (FractionCarbonSP3"], 
                 Key["RSquared"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Multiple LR", 
                  Style[
                  "Multiple LR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Multiple LR"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Multiple LR"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["62.6844"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Multiple LR"], 
                 Key["MeanDeviation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5416.02"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Multiple LR"], 
                 Key["MeanSquare"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["73.5936"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Multiple LR"], 
                 Key["StandardDeviation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.353333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Multiple LR"], 
                 Key["RSquared"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ridge (1)", 
                  Style[
                  "Ridge (1)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ridge (1)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ridge (1)"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["58.7195"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ridge (1)"], 
                 Key["MeanDeviation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5027.31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ridge (1)"], 
                 Key["MeanSquare"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70.9036"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ridge (1)"], 
                 Key["StandardDeviation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.399745"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ridge (1)"], 
                 Key["RSquared"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ridge (Auto)", 
                  Style[
                  "Ridge (Auto)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ridge (Auto)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ridge (Auto)"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["58.7195"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ridge (Auto)"], 
                 Key["MeanDeviation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5027.31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ridge (Auto)"], 
                 Key["MeanSquare"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70.9036"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ridge (Auto)"], 
                 Key["StandardDeviation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.399745"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ridge (Auto)"], 
                 Key["RSquared"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{689., {73.134033203125, 78.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{689., {73.134033203125, 78.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.880114901288246*^9, 3.8801301566134825`*^9, 
  3.880192065570372*^9, 3.880192224784649*^9, 3.880212942933376*^9, 
  3.8802134656547747`*^9, 3.88021378220335*^9, 3.880214116598083*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"b13be131-24d3-42b1-9691-1fb8595db73a"]
}, Open  ]],

Cell[TextData[{
 "Ensure that the table above includes all the models that you tested. If it \
doesn\[CloseCurlyQuote]t, go back and save the missing performance metrics to \
the ",
 StyleBox["metrics",
  FontSlant->"Italic"],
 " variable.\n\nAlthough the model performance isn\[CloseCurlyQuote]t \
perfect, you can see that choosing a well-correlated feature can give better \
results than a poorly-correlated feature, and that using a penalized \
regression model can often improve on the performance of an unpenalized \
multiple regression."
}], "Text",
 CellChangeTimes->{{3.8729519805947623`*^9, 3.8729520268844943`*^9}, 
   3.8729521037966127`*^9, {3.8801922500709867`*^9, 3.8801922997857237`*^9}, {
   3.8802135083458047`*^9, 
   3.880213524096733*^9}},ExpressionUUID->"a794447e-f796-488e-8bde-\
c145c3711217"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Feature Importance", "Section",
 CellChangeTimes->{{3.872768048414981*^9, 3.8727680558786*^9}},
 CellTags->
  "featureImportanceHref",ExpressionUUID->"171a1058-a0a8-4970-93b1-\
dde6c6d99fb1"],

Cell["\<\
In addition to using a regression model to make quantitative predictions of \
our target value, we can also use it to gain insight into the system that we \
are studying. In other words, we can use regression models to generate \
hypotheses about what factors are important for cyanine dye absorption. One \
way to do this is to assess which of the independent variables make the \
largest contribute to determining the predicted result in our regression \
models. We refer to this property as feature importance.\
\>", "Text",
 CellChangeTimes->{{3.872771194406344*^9, 3.872771198318343*^9}, {
  3.8727717777953663`*^9, 3.872771779874847*^9}, {3.872952124895295*^9, 
  3.8729521312137265`*^9}, {3.8729521652427187`*^9, 3.872952165729244*^9}, {
  3.8729522675424414`*^9, 3.8729522687470484`*^9}, {3.8801928979572487`*^9, 
  3.8801931456446447`*^9}},ExpressionUUID->"d174c8f4-735f-488b-9b98-\
9b826d96f6da"],

Cell[CellGroupData[{

Cell["Feature Importance Using Coefficients", "Subsection",
 CellChangeTimes->{{3.8729523955649424`*^9, 
  3.872952399630885*^9}},ExpressionUUID->"bef9533e-aacd-4542-ba5f-\
14b3c92eb70c"],

Cell["\<\
There is a simple approach for interpreting feature importance in linear \
regression models like the ones we\[CloseCurlyQuote]ve used so far. \
Coefficients with larger magnitudes correspond to features that are playing a \
larger role in the model. Run the code blocks below to plot the coefficients \
associated with each feature in the multiple regression model:\
\>", "Text",
 CellChangeTimes->{{3.87295227460213*^9, 3.8729523721528735`*^9}, {
  3.872952484147154*^9, 3.8729525075623956`*^9}, {3.880193154216956*^9, 
  3.880193156887534*^9}, {3.883647395539487*^9, 
  3.883647395830859*^9}},ExpressionUUID->"3c428353-41fb-47e6-85f1-\
dcb349728fc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"extractLinearModelCoefficients", "[", "model_", "]"}], ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"featureNames", "=", 
       RowBox[{
        RowBox[{"model", "[", 
         RowBox[{"[", 
          RowBox[{
          "1", ",", "\"\<Input\>\"", ",", "\"\<Preprocessor\>\"", ",", "2", 
           ",", "\"\<Input\>\""}], "]"}], "]"}], "//", "Keys"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"weights", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Information", "[", " ", 
           RowBox[{
            RowBox[{"model", "[", 
             RowBox[{"[", 
              RowBox[{
              "1", ",", "\"\<Model\>\"", ",", "\"\<MeanFunction\>\""}], "]"}],
              "]"}], ",", " ", "\"\<Arrays\>\""}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"Key", "[", 
            RowBox[{"{", "\"\<Weights\>\"", "}"}], "]"}], "]"}], "]"}], "//", 
         "First"}], "//", "Normal"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AssociationThread", "[", 
     RowBox[{"featureNames", "->", "weights"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.872770270145664*^9, 3.8727702851122303`*^9}, {
   3.87277051080029*^9, 3.872770581816579*^9}, 3.872770614616353*^9, {
   3.872770717240106*^9, 3.872770834559963*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"494a4b12-e12e-466b-8924-2867d8fc0ae8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resultsMR", "=", 
  RowBox[{
  "extractLinearModelCoefficients", "[", "multipleRegression", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.872771093095155*^9, 3.872771098839087*^9}, {
  3.873902195589571*^9, 3.873902198544673*^9}, {3.8801932058323565`*^9, 
  3.880193205889144*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"270a789c-608a-4bb9-8a5b-ed4f1cec0e4e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"AromaticRingCount\"\>", "\[Rule]", "0.07447175681591034`"}], 
   ",", 
   RowBox[{"\<\"HBondDonorCount\"\>", "\[Rule]", "0.7758343815803528`"}], ",", 
   RowBox[{"\<\"HBondAcceptorCount\"\>", "\[Rule]", "1.1504827737808228`"}], 
   ",", 
   RowBox[{"\<\"FractionCarbonSP3\"\>", "\[Rule]", 
    RowBox[{"-", "0.7183685302734375`"}]}], ",", 
   RowBox[{"\<\"HeteroatomCount\"\>", "\[Rule]", 
    RowBox[{"-", "2.732658624649048`"}]}], ",", 
   RowBox[{"\<\"HeterocycleCount\"\>", "\[Rule]", "0.5801600813865662`"}], 
   ",", 
   RowBox[{"\<\"RotatableBondCount\"\>", "\[Rule]", "0.09397517144680023`"}], 
   ",", 
   RowBox[{"\<\"MolecularMass\"\>", "\[Rule]", "0.9617159962654114`"}], ",", 
   RowBox[{"\<\"DegreeOfUnsaturation\"\>", "\[Rule]", 
    "0.34050506353378296`"}], ",", 
   RowBox[{"\<\"MinEllipsoidLength\"\>", "\[Rule]", 
    RowBox[{"-", "0.08324158191680908`"}]}], ",", 
   RowBox[{"\<\"MaxDistance\"\>", "\[Rule]", "0.2153843194246292`"}], ",", 
   RowBox[{"\<\"LongestPiChain\"\>", "\[Rule]", 
    RowBox[{"-", "0.3829843997955322`"}]}], ",", 
   RowBox[{"\<\"LinkerLength\"\>", "\[Rule]", "0.4453982710838318`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.8801149015205956`*^9, 3.880130156964244*^9, {3.8801928215595417`*^9, 
   3.8801928424018264`*^9}, 3.88019316923848*^9, {3.8801932081498485`*^9, 
   3.880193219312065*^9}, 3.880212943329089*^9, 3.880213465903462*^9, 
   3.8802137824327292`*^9, 3.880214116827936*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"d8508ad4-0988-47ea-be1b-e4ba708748c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"resultsMR", ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLabels", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BarOrigin", "->", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872771080230814*^9, 3.872771113742741*^9}, {
  3.880193221418731*^9, 3.880193221490259*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"18a8083b-ecc2-418f-a6ce-43866e00d4a1"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0., 0.3023255813953489}, {0., 13.440071556350624`}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 0.5599284436493739}, {0.07447175681591034, 
             1.4400715563506261`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 257.07091849945675`}, {
            78.62406977516687, 92.23947098683023}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.07447175681591034]& ,
         TagBoxNote->"0.07447175681591034"],
        StyleBox["0.07447175681591034`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.07447175681591034, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 1.5599284436493739`}, {0.7758343815803528, 
             2.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 319.31887452200976`}, {
            63.72262815459814, 77.3380293662615}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.7758343815803528]& ,
         TagBoxNote->"0.7758343815803528"],
        StyleBox["0.7758343815803528`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7758343815803528, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 2.559928443649374}, {1.1504827737808228`, 
             3.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 352.56999999999994`}, {
            48.821186534029415`, 62.43658774569276}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.1504827737808228`]& ,
         TagBoxNote->"1.1504827737808228"],
        StyleBox["1.1504827737808228`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.1504827737808228`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 3.559928443649374}, {-0.7183685302734375, 
             4.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.20405607900568`, 250.46133526887618`}, {
            33.91974491346069, 47.53514612512404}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.7183685302734375]& ,
         TagBoxNote->"-0.7183685302734375"],
        StyleBox[
         RowBox[{"-", "0.7183685302734375`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.7183685302734375, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 4.559928443649373}, {-2.732658624649048, 
             5.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{7.42999999999995, 250.46133526887618`}, {
            19.018303292891957`, 32.63370450455531}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -2.732658624649048]& ,
         TagBoxNote->"-2.732658624649048"],
        StyleBox[
         RowBox[{"-", "2.732658624649048`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-2.732658624649048, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 5.559928443649373}, {0.5801600813865662, 
             6.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 301.9522159589055}, {
            4.116861672323225, 17.73226288398658}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5801600813865662]& ,
         TagBoxNote->"0.5801600813865662"],
        StyleBox["0.5801600813865662`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5801600813865662, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 6.559928443649373}, {0.09397517144680023, 
             7.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 
            258.80190280538693`}, {-10.784579948245494`, 
            2.8308212634178602`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.09397517144680023]& ,
         TagBoxNote->"0.09397517144680023"],
        StyleBox["0.09397517144680023`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.09397517144680023, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 7.559928443649373}, {0.9617159962654114, 
             8.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 
            335.81640399929375`}, {-25.686021568814226`, \
-12.070620357150872`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9617159962654114]& ,
         TagBoxNote->"0.9617159962654114"],
        StyleBox["0.9617159962654114`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9617159962654114, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 8.559928443649373}, {0.34050506353378296`, 
             9.440071556350624}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 
            280.6821418415479}, {-40.587463189382916`, -26.97206197771959}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.34050506353378296`]& ,
         TagBoxNote->"0.34050506353378296"],
        StyleBox["0.34050506353378296`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.34050506353378296`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 9.55992844364937}, {-0.08324158191680908, 
             10.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{242.57340476410263`, 
            250.46133526887618`}, {-55.48890480995165, -41.87350359828828}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.08324158191680908]& ,
         TagBoxNote->"-0.08324158191680908"],
        StyleBox[
         RowBox[{"-", "0.08324158191680908`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.08324158191680908, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 10.55992844364937}, {0.2153843194246292, 
             11.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 
            269.5773148921057}, {-70.39034643052038, -56.77494521885701}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.2153843194246292]& ,
         TagBoxNote->"0.2153843194246292"],
        StyleBox["0.2153843194246292`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.2153843194246292, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 11.55992844364937}, {-0.3829843997955322, 
             12.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{215.97036507167903`, 
            250.46133526887618`}, {-85.29178805108911, -71.67638683942575}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.3829843997955322]& ,
         TagBoxNote->"-0.3829843997955322"],
        StyleBox[
         RowBox[{"-", "0.3829843997955322`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.3829843997955322, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 12.55992844364937}, {0.4453982710838318, 
             13.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 
            289.9917165752071}, {-100.19322967165785`, -86.57782845999448}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.4453982710838318]& ,
         TagBoxNote->"0.4453982710838318"],
        StyleBox["0.4453982710838318`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4453982710838318, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0., 0.3023255813953489}, {0., 13.702826475849731`}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0., 0.5599284436493739}, 
          Offset[{-6., 0.}, {0., 0.5599284436493739}]}], 
        LineBox[{{0., 13.440071556350626`}, 
          Offset[{-6., 0.}, {0., 
           13.440071556350626`}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {
          LineBox[{{0., 1.4400715563506261`}, 
            Offset[{-4., 0.}, {0., 1.4400715563506261`}]}], 
          LineBox[{{0., 1.5599284436493739`}, 
            Offset[{-4., 0.}, {0., 1.5599284436493739`}]}], 
          LineBox[{{0., 2.440071556350626}, 
            Offset[{-4., 0.}, {0., 2.440071556350626}]}], 
          LineBox[{{0., 2.559928443649374}, 
            Offset[{-4., 0.}, {0., 2.559928443649374}]}], 
          LineBox[{{0., 3.440071556350626}, 
            Offset[{-4., 0.}, {0., 3.440071556350626}]}], 
          LineBox[{{0., 3.559928443649374}, 
            Offset[{-4., 0.}, {0., 3.559928443649374}]}], 
          LineBox[{{0., 4.440071556350626}, 
            Offset[{-4., 0.}, {0., 4.440071556350626}]}], 
          LineBox[{{0., 4.559928443649373}, 
            Offset[{-4., 0.}, {0., 4.559928443649373}]}], 
          LineBox[{{0., 5.440071556350626}, 
            Offset[{-4., 0.}, {0., 5.440071556350626}]}], 
          LineBox[{{0., 5.5599284436493726`}, 
            Offset[{-4., 0.}, {0., 5.5599284436493726`}]}], 
          LineBox[{{0., 6.440071556350626}, 
            Offset[{-4., 0.}, {0., 6.440071556350626}]}], 
          LineBox[{{0., 6.5599284436493726`}, 
            Offset[{-4., 0.}, {0., 6.5599284436493726`}]}], 
          LineBox[{{0., 7.440071556350626}, 
            Offset[{-4., 0.}, {0., 7.440071556350626}]}], 
          LineBox[{{0., 7.5599284436493726`}, 
            Offset[{-4., 0.}, {0., 7.5599284436493726`}]}], 
          LineBox[{{0., 8.440071556350626}, 
            Offset[{-4., 0.}, {0., 8.440071556350626}]}], 
          LineBox[{{0., 8.559928443649373}, 
            Offset[{-4., 0.}, {0., 8.559928443649373}]}], 
          LineBox[{{0., 9.440071556350626}, 
            Offset[{-4., 0.}, {0., 9.440071556350626}]}], 
          LineBox[{{0., 9.559928443649373}, 
            Offset[{-4., 0.}, {0., 9.559928443649373}]}], 
          LineBox[{{0., 10.440071556350626`}, 
            Offset[{-4., 0.}, {0., 10.440071556350626`}]}], 
          LineBox[{{0., 10.559928443649373`}, 
            Offset[{-4., 0.}, {0., 10.559928443649373`}]}], 
          LineBox[{{0., 11.440071556350626`}, 
            Offset[{-4., 0.}, {0., 11.440071556350626`}]}], 
          LineBox[{{0., 11.559928443649373`}, 
            Offset[{-4., 0.}, {0., 11.559928443649373`}]}], 
          LineBox[{{0., 12.440071556350626`}, 
            Offset[{-4., 0.}, {0., 12.440071556350626`}]}], 
          LineBox[{{0., 12.559928443649373`}, 
            Offset[{-4., 0.}, {0., 12.559928443649373`}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"AromaticRingCount\"\>", Offset[{-2, 0}, {0., 1.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"HBondDonorCount\"\>", Offset[{-2, 0}, {0., 2.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"HBondAcceptorCount\"\>", Offset[{-2, 0}, {0., 3.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"FractionCarbonSP3\"\>", 
          Offset[{-2, 0}, {0., 3.9999999999999996}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"HeteroatomCount\"\>", Offset[{-2, 0}, {0., 5.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"HeterocycleCount\"\>", Offset[{-2, 0}, {0., 6.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"RotatableBondCount\"\>", Offset[{-2, 0}, {0., 7.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"MolecularMass\"\>", Offset[{-2, 0}, {0., 8.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"DegreeOfUnsaturation\"\>", Offset[{-2, 0}, {0., 9.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"MinEllipsoidLength\"\>", 
          Offset[{-2, 0}, {0., 9.999999999999998}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"MaxDistance\"\>", 
          Offset[{-2, 0}, {0., 10.999999999999998}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"LongestPiChain\"\>", 
          Offset[{-2, 0}, {0., 11.999999999999998}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"LinkerLength\"\>", 
          Offset[{-2, 0}, {0., 12.999999999999998}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}]}, 
        "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.3023255813953489},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{
  3.880114901651246*^9, 3.8801301571307583`*^9, {3.8801928269107075`*^9, 
   3.880192846379901*^9}, 3.880193171839698*^9, 3.880193221951929*^9, 
   3.8802129435291605`*^9, 3.8802134660500126`*^9, 3.880213782566371*^9, 
   3.880214116956112*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"76208859-7876-4ee5-b9ca-d9bf40e4d1ed"]
}, Open  ]],

Cell["\<\
To make the results even clearer, we can sort by coefficient value.\
\>", "Text",
 CellChangeTimes->{{3.8727710853272867`*^9, 3.872771122782662*^9}, {
  3.872952177518093*^9, 
  3.872952209371789*^9}},ExpressionUUID->"ed3f1bf0-48c4-4721-89c9-\
5b6e494e6c21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", " ", 
  RowBox[{
   RowBox[{"Sort", "[", "resultsMR", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLabels", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BarOrigin", "->", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872770793451437*^9, 3.87277079767258*^9}, {
  3.872770848383881*^9, 3.872770870423234*^9}, {3.8727709059677887`*^9, 
  3.8727709082948437`*^9}, {3.872771015280102*^9, 3.872771054231019*^9}, {
  3.872771125919386*^9, 3.872771130742676*^9}, {3.872771810347281*^9, 
  3.872771813475039*^9}, {3.880193226048273*^9, 3.880193226355928*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"162be6cb-1a78-4bbd-9cc1-44f15d34e7fe"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0., 0.3023255813953489}, {0., 13.440071556350624`}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 0.5599284436493739}, {-2.732658624649048, 
             1.4400715563506261`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{7.42999999999995, 250.46133526887618`}, {
            78.62406977516687, 92.23947098683023}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -2.732658624649048]& ,
         TagBoxNote->"-2.732658624649048"],
        StyleBox[
         RowBox[{"-", "2.732658624649048`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-2.732658624649048, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 1.5599284436493739`}, {-0.7183685302734375, 
             2.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.20405607900568`, 250.46133526887618`}, {
            63.72262815459814, 77.3380293662615}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.7183685302734375]& ,
         TagBoxNote->"-0.7183685302734375"],
        StyleBox[
         RowBox[{"-", "0.7183685302734375`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.7183685302734375, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 2.559928443649374}, {-0.3829843997955322, 
             3.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{215.97036507167903`, 250.46133526887618`}, {
            48.821186534029415`, 62.43658774569276}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.3829843997955322]& ,
         TagBoxNote->"-0.3829843997955322"],
        StyleBox[
         RowBox[{"-", "0.3829843997955322`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.3829843997955322, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 3.559928443649374}, {-0.08324158191680908, 
             4.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{242.57340476410263`, 250.46133526887618`}, {
            33.91974491346069, 47.53514612512404}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.08324158191680908]& ,
         TagBoxNote->"-0.08324158191680908"],
        StyleBox[
         RowBox[{"-", "0.08324158191680908`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.08324158191680908, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 4.559928443649373}, {0.07447175681591034, 
             5.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 257.07091849945675`}, {
            19.018303292891957`, 32.63370450455531}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.07447175681591034]& ,
         TagBoxNote->"0.07447175681591034"],
        StyleBox["0.07447175681591034`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.07447175681591034, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 5.559928443649373}, {0.09397517144680023, 
             6.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 258.80190280538693`}, {
            4.116861672323225, 17.73226288398658}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.09397517144680023]& ,
         TagBoxNote->"0.09397517144680023"],
        StyleBox["0.09397517144680023`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.09397517144680023, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 6.559928443649373}, {0.2153843194246292, 
             7.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 
            269.5773148921057}, {-10.784579948245494`, 2.8308212634178602`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.2153843194246292]& ,
         TagBoxNote->"0.2153843194246292"],
        StyleBox["0.2153843194246292`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.2153843194246292, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 7.559928443649373}, {0.34050506353378296`, 
             8.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 
            280.6821418415479}, {-25.686021568814226`, -12.070620357150872`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.34050506353378296`]& ,
         TagBoxNote->"0.34050506353378296"],
        StyleBox["0.34050506353378296`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.34050506353378296`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 8.559928443649373}, {0.4453982710838318, 
             9.440071556350624}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 
            289.9917165752071}, {-40.587463189382916`, -26.97206197771959}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.4453982710838318]& ,
         TagBoxNote->"0.4453982710838318"],
        StyleBox["0.4453982710838318`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4453982710838318, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 9.55992844364937}, {0.5801600813865662, 
             10.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 
            301.9522159589055}, {-55.48890480995165, -41.87350359828828}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5801600813865662]& ,
         TagBoxNote->"0.5801600813865662"],
        StyleBox["0.5801600813865662`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5801600813865662, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 10.55992844364937}, {0.7758343815803528, 
             11.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 
            319.31887452200976`}, {-70.39034643052038, -56.77494521885701}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.7758343815803528]& ,
         TagBoxNote->"0.7758343815803528"],
        StyleBox["0.7758343815803528`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7758343815803528, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 11.55992844364937}, {0.9617159962654114, 
             12.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 
            335.81640399929375`}, {-85.29178805108911, -71.67638683942575}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9617159962654114]& ,
         TagBoxNote->"0.9617159962654114"],
        StyleBox["0.9617159962654114`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9617159962654114, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 12.55992844364937}, {1.1504827737808228`, 
             13.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{249.96133526887618`, 
            352.56999999999994`}, {-100.19322967165785`, -86.57782845999448}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.1504827737808228`]& ,
         TagBoxNote->"1.1504827737808228"],
        StyleBox["1.1504827737808228`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.1504827737808228`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0., 0.3023255813953489}, {0., 13.702826475849731`}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0., 0.5599284436493739}, 
          Offset[{-6., 0.}, {0., 0.5599284436493739}]}], 
        LineBox[{{0., 13.440071556350626`}, 
          Offset[{-6., 0.}, {0., 
           13.440071556350626`}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {
          LineBox[{{0., 1.4400715563506261`}, 
            Offset[{-4., 0.}, {0., 1.4400715563506261`}]}], 
          LineBox[{{0., 1.5599284436493739`}, 
            Offset[{-4., 0.}, {0., 1.5599284436493739`}]}], 
          LineBox[{{0., 2.440071556350626}, 
            Offset[{-4., 0.}, {0., 2.440071556350626}]}], 
          LineBox[{{0., 2.559928443649374}, 
            Offset[{-4., 0.}, {0., 2.559928443649374}]}], 
          LineBox[{{0., 3.440071556350626}, 
            Offset[{-4., 0.}, {0., 3.440071556350626}]}], 
          LineBox[{{0., 3.559928443649374}, 
            Offset[{-4., 0.}, {0., 3.559928443649374}]}], 
          LineBox[{{0., 4.440071556350626}, 
            Offset[{-4., 0.}, {0., 4.440071556350626}]}], 
          LineBox[{{0., 4.559928443649373}, 
            Offset[{-4., 0.}, {0., 4.559928443649373}]}], 
          LineBox[{{0., 5.440071556350626}, 
            Offset[{-4., 0.}, {0., 5.440071556350626}]}], 
          LineBox[{{0., 5.5599284436493726`}, 
            Offset[{-4., 0.}, {0., 5.5599284436493726`}]}], 
          LineBox[{{0., 6.440071556350626}, 
            Offset[{-4., 0.}, {0., 6.440071556350626}]}], 
          LineBox[{{0., 6.5599284436493726`}, 
            Offset[{-4., 0.}, {0., 6.5599284436493726`}]}], 
          LineBox[{{0., 7.440071556350626}, 
            Offset[{-4., 0.}, {0., 7.440071556350626}]}], 
          LineBox[{{0., 7.5599284436493726`}, 
            Offset[{-4., 0.}, {0., 7.5599284436493726`}]}], 
          LineBox[{{0., 8.440071556350626}, 
            Offset[{-4., 0.}, {0., 8.440071556350626}]}], 
          LineBox[{{0., 8.559928443649373}, 
            Offset[{-4., 0.}, {0., 8.559928443649373}]}], 
          LineBox[{{0., 9.440071556350626}, 
            Offset[{-4., 0.}, {0., 9.440071556350626}]}], 
          LineBox[{{0., 9.559928443649373}, 
            Offset[{-4., 0.}, {0., 9.559928443649373}]}], 
          LineBox[{{0., 10.440071556350626`}, 
            Offset[{-4., 0.}, {0., 10.440071556350626`}]}], 
          LineBox[{{0., 10.559928443649373`}, 
            Offset[{-4., 0.}, {0., 10.559928443649373`}]}], 
          LineBox[{{0., 11.440071556350626`}, 
            Offset[{-4., 0.}, {0., 11.440071556350626`}]}], 
          LineBox[{{0., 11.559928443649373`}, 
            Offset[{-4., 0.}, {0., 11.559928443649373`}]}], 
          LineBox[{{0., 12.440071556350626`}, 
            Offset[{-4., 0.}, {0., 12.440071556350626`}]}], 
          LineBox[{{0., 12.559928443649373`}, 
            Offset[{-4., 0.}, {0., 12.559928443649373`}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"HeteroatomCount\"\>", Offset[{-2, 0}, {0., 1.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"FractionCarbonSP3\"\>", Offset[{-2, 0}, {0., 2.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"LongestPiChain\"\>", Offset[{-2, 0}, {0., 3.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"MinEllipsoidLength\"\>", 
          Offset[{-2, 0}, {0., 3.9999999999999996}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"AromaticRingCount\"\>", Offset[{-2, 0}, {0., 5.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"RotatableBondCount\"\>", Offset[{-2, 0}, {0., 6.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"MaxDistance\"\>", Offset[{-2, 0}, {0., 7.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"DegreeOfUnsaturation\"\>", Offset[{-2, 0}, {0., 8.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"LinkerLength\"\>", Offset[{-2, 0}, {0., 9.}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"HeterocycleCount\"\>", 
          Offset[{-2, 0}, {0., 9.999999999999998}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"HBondDonorCount\"\>", 
          Offset[{-2, 0}, {0., 10.999999999999998}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"MolecularMass\"\>", 
          Offset[{-2, 0}, {0., 11.999999999999998}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}], 
         InsetBox["\<\"HBondAcceptorCount\"\>", 
          Offset[{-2, 0}, {0., 12.999999999999998}], 
          ImageScaled[{1, Rational[1, 2]}], Automatic, {1, 0}]}, 
        "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.3023255813953489},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{
  3.880114901850832*^9, 3.8801301573080473`*^9, {3.880192830716195*^9, 
   3.8801928496452274`*^9}, 3.8801931759852314`*^9, 3.88019323165944*^9, 
   3.880212943730199*^9, 3.880213466272208*^9, 3.8802137828017206`*^9, 
   3.8802141171666007`*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"e740ba2f-6d99-458b-bd53-924e98055ae0"]
}, Open  ]],

Cell["\<\
You might notice that the features with the highest weights are not the same \
as the features that were best correlated with the MaxAbsorbanceWavelength \
according to the Pearson Correlation analysis. That discrepancy can arise \
because the Pearson Correlation analysis looks at the correlation between \
each independent variable and the dependent variable separately, whereas this \
analysis is looking at the contribution of each independent variable to the \
model that includes all 13 independent variables together. This is an \
important caveat, and it means that sometimes feature importance analysis \
based on the coefficients can be misleading.

Now let\[CloseCurlyQuote]s look at the feature importance for the Ridge and \
Lasso Regression models. Modify the code blocks above to generate plots of \
the coefficients for each of those models.\
\>", "Text",
 CellChangeTimes->{{3.872771141198518*^9, 3.872771141694345*^9}, {
  3.8729522296676292`*^9, 3.872952231672674*^9}, {3.880128996227318*^9, 
  3.8801290015596595`*^9}, {3.8801933149067287`*^9, 
  3.8801933445633645`*^9}},ExpressionUUID->"2115cdd5-6dd4-4dcd-8da7-\
266c5dcfc6fd"],

Cell[TextData[StyleBox["ADD A CODE BLOCK BELOW TO PLOT THE FEATURE \
COEFFICIENTS FOR THE RIDGE AND LASSO REGRESSION MODELS WITH ALPHA = 1",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{3.872952541484203*^9, 
  3.873902168278903*^9},ExpressionUUID->"7aaeb365-93e1-461c-8175-\
692d5ee75c2d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gaining Insight from Regression Models", "Section",
 CellChangeTimes->{{3.872771146558547*^9, 
  3.872771176518754*^9}},ExpressionUUID->"63834e50-8412-4017-bb9e-\
27c3a68749bc"],

Cell["\<\
Look back at the results of all the regression models that you\
\[CloseCurlyQuote]ve trained so far. Also consider the Pearson Correlation \
analysis and the feature importance analysis.

None of our 13 features can fully explain the differences in wavelength of \
maximum absorbance for all the cyanine dyes in our dataset. But now, use your \
chemical intuition and try to generate a hypothesis that is grounded in \
quantum chemistry, using any insight that you can take from the regression \
models. (Hint: think about the quantum chemistry models that you\
\[CloseCurlyQuote]ve studied so far in your physical chemistry course.)\
\>", "Text",
 CellChangeTimes->{
  3.8729526087472515`*^9, {3.873145206689577*^9, 3.8731452169383125`*^9}, {
   3.88019335194267*^9, 
   3.880193367557928*^9}},ExpressionUUID->"1b1d8bdb-314e-4c9e-beab-\
5f3edd51b95e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part II ", "Title",
 CellChangeTimes->{{3.8727711784304447`*^9, 
  3.8727711796224403`*^9}},ExpressionUUID->"e8c7acfa-d0ca-4ea1-ba98-\
ca5db73b1671"],

Cell[CellGroupData[{

Cell["Feature Engineering ", "Section",
 CellChangeTimes->{{3.872772027834909*^9, 3.872772030403035*^9}, {
  3.8729596037813263`*^9, 
  3.87295960779191*^9}},ExpressionUUID->"423bcf50-2e7d-477a-b016-\
2928078e0c4d"],

Cell["\<\
So far we\[CloseCurlyQuote]ve only considered the 13 features in our dataset. \
But we can also make combinations of these individual features to try to \
improve model performance. This process of creating new features from the \
ones we already have, either combining them or applying other operations, is \
called feature engineering.\
\>", "Text",
 CellChangeTimes->{{3.8727720570268517`*^9, 3.872772060090994*^9}, {
   3.8729526428737426`*^9, 3.872952675746061*^9}, {3.8729596109487495`*^9, 
   3.8729596117370434`*^9}, 3.8729617576147814`*^9, {3.8733791576311593`*^9, 
   3.873379158135811*^9}, {3.880193405646891*^9, 
   3.8801934070420303`*^9}},ExpressionUUID->"7325ecf6-3e40-4a70-a919-\
b5f839f61ffd"],

Cell["\<\
https://jakevdp.github.io/PythonDataScienceHandbook/05.04-feature-engineering.\
html\
\>", "Item",
 CellChangeTimes->{{3.873379139829521*^9, 
  3.8733791504298887`*^9}},ExpressionUUID->"2e7535a4-e952-40d1-8b6c-\
7a31090cf17f"],

Cell["https://en.wikipedia.org/wiki/Feature_engineering", "Item",
 CellChangeTimes->{{3.873379139829521*^9, 
  3.873379156040101*^9}},ExpressionUUID->"a878a7ac-b29c-4130-bff1-\
90681d06d55e"],

Cell["\<\
Let\[CloseCurlyQuote]s try making a new feature that is the product of the \
number of heteroatoms and the number of heterocycles in the molecules and \
then use that new feature in a model.\
\>", "Text",
 CellChangeTimes->{{3.872772083955091*^9, 3.872772106562817*^9}, 
   3.8729596807602177`*^9},ExpressionUUID->"3210526b-0434-4ba1-922b-\
c317b00aca72"],

Cell[TextData[{
 "The following adds a new feature, named HACxHCC to each row, take the \
current value of the row (represented by the placeholder ",
 ButtonBox["Slot variable #",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/Slot.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/Slot.html"],
 ") , looking up the value of the named columns in each row."
}], "Text",
 CellChangeTimes->{{3.87277293327501*^9, 3.872772938058979*^9}, {
   3.872959683601548*^9, 3.872959686668006*^9}, {3.8729618212534027`*^9, 
   3.8729619749941845`*^9}, {3.87297023043874*^9, 3.8729702807040863`*^9}, {
   3.872970380355246*^9, 3.872970474938607*^9}, {3.8729709864642553`*^9, 
   3.872970987260646*^9}, {3.87301815035913*^9, 3.8730181594413404`*^9}, 
   3.8733792986822233`*^9},ExpressionUUID->"ec19ce3a-530d-40d8-a359-\
7ac836738ee5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expandedDataset", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"All", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{"#", ",", 
        RowBox[{"\"\<HACxHCC\>\"", "->", 
         RowBox[{
          RowBox[{"#", "[", "\"\<HeteroatomCount\>\"", "]"}], "*", 
          RowBox[{"#", "[", "\"\<HeterocycleCount\>\"", "]"}]}]}]}], "|>"}], 
      "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8727725597084846`*^9, 3.8727725866595707`*^9}, {
   3.872772617483858*^9, 3.872772654755371*^9}, 3.872772741755917*^9, 
   3.872772930555875*^9, {3.872970306612988*^9, 3.872970307058422*^9}, {
   3.872970348343933*^9, 3.872970362819376*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"b9a048ba-e0e1-492b-a090-e042373961bd"],

Cell["\<\
Now repeat this process by combining two or more features of your choice (by \
addition, multiplication, subtraction, etc). For example, you could pick two \
of the features with highest correlation in the Pearson analysis, or you \
could pick two features that your chemical intuition says might be important. \
Add a code block below to generate a new feature.\
\>", "Text",
 CellChangeTimes->{{3.8733792520550365`*^9, 
  3.8733793132193637`*^9}},ExpressionUUID->"38b74fe4-6b65-41af-b465-\
f553132dca8c"],

Cell[TextData[StyleBox["ADD A CODE BLOCK BELOW TO CREATE A NEW FEATURE BY \
COMBINING FEATURES FROM THE ORIGINAL DATASET",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{
  3.872952541484203*^9, {3.873379303314228*^9, 3.873379324378559*^9}, 
   3.8733795798531523`*^9},ExpressionUUID->"44bda71e-c72b-4b1a-b8a6-\
519755fd4a33"],

Cell["\<\
Now try running simple linear regression analyses separately with HACxHCC and \
your new feature. You will need to go through the preprocessing data steps \
(separating x and y values, splitting, rescaling, etc) before performing the \
regression.\
\>", "Text",
 CellChangeTimes->{{3.872772982483013*^9, 3.872773016547098*^9}, {
  3.8729618065626173`*^9, 3.8729618071465693`*^9}, {3.8730181379955773`*^9, 
  3.8730181403121696`*^9}, {3.8730181703696637`*^9, 3.8730181952399683`*^9}, {
  3.8733791868565273`*^9, 3.873379237552374*^9}, {3.8733793283249807`*^9, 
  3.873379345150128*^9}, {3.8733794929347243`*^9, 
  3.873379549462469*^9}},ExpressionUUID->"cc18223a-86dc-4e33-b5fd-\
b7e1633b43a6"],

Cell[TextData[StyleBox["ADD A CODE BLOCK BELOW TO REPEAT THE DATA \
PREPROCESSING, PERFORM A SIMPLE LINEAR REGRESSION FOR THE TWO NEW FEATURES, \
VISUALIZE THE RESULTS, AND CALCULATE PERFORMANCE METRICS",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.87337950225708*^9, 3.873379518782818*^9}, {
  3.8733795540747905`*^9, 3.87337958128337*^9}, {3.8733798644299603`*^9, 
  3.8733799093656797`*^9}},ExpressionUUID->"73e1fbfc-f210-41de-b613-\
f22cd3f7b558"],

Cell["How well did HACxHCC and your new feature perform?", "Text",
 CellChangeTimes->{
  3.8733793687271123`*^9, {3.873379488094654*^9, 
   3.8733794891889687`*^9}},ExpressionUUID->"9dff8c53-2f7b-4982-878b-\
78899325e566"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tree Models", "Section",
 CellChangeTimes->{{3.8727730269236927`*^9, 3.872773028123358*^9}},
 CellTags->
  "treeModelsHref",ExpressionUUID->"6a5faae0-f57e-4b21-a9f9-d04ff224d6ce"],

Cell["\<\
Tree models make decisions using a tree-like structure with nodes, branches, \
and leaves. They can be used for either regression or classification analyses.

The most common tree-based models for regression problems are:\
\>", "Text",
 CellChangeTimes->{{3.872959894145397*^9, 3.872959896772546*^9}, {
  3.872960020590821*^9, 3.872960037294549*^9}, {3.872960169944504*^9, 
  3.872960211864704*^9}},ExpressionUUID->"0addd1dc-8122-4b3d-84e3-\
7fd8d0bbcf5c"],

Cell["Decision Tree", "ItemNumbered",
 CellChangeTimes->{{3.8729602250802493`*^9, 
  3.8729602283242507`*^9}},ExpressionUUID->"6f7692d9-c8d9-4415-a416-\
65c497a36893"],

Cell["Random Forest", "ItemNumbered",
 CellChangeTimes->{{3.8729602250802493`*^9, 
  3.872960229889063*^9}},ExpressionUUID->"ae7b1519-28d8-4801-b9a3-\
2fa25d31462e"],

Cell[CellGroupData[{

Cell["Decision Tree Regression", "Subsection",
 CellChangeTimes->{{3.872773033635099*^9, 
  3.8727730364350777`*^9}},ExpressionUUID->"393c525e-17f6-4fb7-9277-\
fbe018893303"],

Cell["\<\
The Decision Tree algorithm uses a single tree to make predictions. It models \
the data in a tree structure in which each leaf node leads to the prediction \
for the dependent variable. Although easy to implement, Decision Tree models \
can be prone to overfitting.\
\>", "Text",
 CellChangeTimes->{{3.8727730428915033`*^9, 3.872773044226859*^9}, {
  3.872960288776902*^9, 3.872960318689319*^9}, {3.872960444568816*^9, 
  3.8729604568432574`*^9}, {3.8729604936802793`*^9, 3.8729605210175447`*^9}, {
  3.872963048547505*^9, 3.872963144293993*^9}, {3.872968488950979*^9, 
  3.872968507515708*^9}, {3.8729704895215387`*^9, 3.872970491646703*^9}, {
  3.873018279433672*^9, 3.873018296046733*^9}, {3.873379633928226*^9, 
  3.873379658158442*^9}},ExpressionUUID->"850445a9-ef68-4028-90e5-\
b7b647d7d458"],

Cell["\<\
https://jakevdp.github.io/PythonDataScienceHandbook/05.08-random-forests.html\
\>", "Item",
 CellChangeTimes->{{3.873379694345158*^9, 
  3.873379708816065*^9}},ExpressionUUID->"64c7f920-7172-46f5-ab7a-\
c2cb04ad2e99"],

Cell["https://en.wikipedia.org/wiki/Decision_tree_learning", "Item",
 CellChangeTimes->{{3.873379694345158*^9, 
  3.873379713732209*^9}},ExpressionUUID->"842f9036-2368-42d4-a7bc-\
bfdc938f0f92"],

Cell["\<\
The code block below trains a Decision Tree model and visualizes the tree \
structure. Run this analysis, then add a code block to plot the predicted vs. \
actual wavelength and to calculate the performance metrics.\
\>", "Text",
 CellChangeTimes->{
  3.8733796553841314`*^9, {3.8733797266705565`*^9, 
   3.873379727737636*^9}},ExpressionUUID->"471afb6b-8392-49ea-b6b0-\
2cddd1da9b9b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decisionT", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"train", ",", 
    RowBox[{"Method", "->", "\"\<DecisionTree\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.872773048851861*^9, 3.872773068131392*^9}, {
  3.873018313430002*^9, 3.873018329235777*^9}, {3.8733800899788094`*^9, 
  3.8733800924403353`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"e4051ce5-b29a-4cf4-ad00-ea7bf86e7da3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DecisionTree\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["92", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[<|
   "ExampleNumber" -> 92, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|
          "AromaticRingCount" -> <|"Type" -> "Numerical"|>, 
           "HBondDonorCount" -> <|"Type" -> "Numerical"|>, 
           "HBondAcceptorCount" -> <|"Type" -> "Numerical"|>, 
           "FractionCarbonSP3" -> <|"Type" -> "Numerical"|>, 
           "HeteroatomCount" -> <|"Type" -> "Numerical"|>, 
           "HeterocycleCount" -> <|"Type" -> "Numerical"|>, 
           "RotatableBondCount" -> <|"Type" -> "Numerical"|>, 
           "MolecularMass" -> <|"Type" -> "Numerical"|>, 
           "DegreeOfUnsaturation" -> <|"Type" -> "Numerical"|>, 
           "MinEllipsoidLength" -> <|"Type" -> "Numerical"|>, 
           "MaxDistance" -> <|"Type" -> "Numerical"|>, 
           "LongestPiChain" -> <|"Type" -> "Numerical"|>, 
           "LinkerLength" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor[
              "FromNamedFeatures", <|
               "FeatureNames" -> {
                 "AromaticRingCount", "HBondDonorCount", "HBondAcceptorCount",
                   "FractionCarbonSP3", "HeteroatomCount", "HeterocycleCount",
                   "RotatableBondCount", "MolecularMass", 
                  "DegreeOfUnsaturation", "MinEllipsoidLength", "MaxDistance",
                   "LongestPiChain", "LinkerLength"}|>], 
              MachineLearning`MLProcessor[
              "Transpose", <|"FeatureNumber" -> 13|>], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {
                 "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical"}, 
                "FeatureKeys" -> {
                 "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", 
                  "f11", "f12", "f13"}, "FeatureWeights" -> Automatic, 
                "ExampleWeights" -> Automatic, "RawExample" -> 
                Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                False|>]}|>], "ScalarFeature" -> False, "Invertibility" -> 
         "Perfect", "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
       "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|
          "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|
          "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
            "Type" -> "NumericalVector", "Weight" -> 13|>|>, "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 92, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical"|>, 
                    "f2" -> <|"Type" -> "Numerical"|>, 
                    "f3" -> <|"Type" -> "Numerical"|>, 
                    "f4" -> <|"Type" -> "Numerical"|>, 
                    "f5" -> <|"Type" -> "Numerical"|>, 
                    "f6" -> <|"Type" -> "Numerical"|>, 
                    "f7" -> <|"Type" -> "Numerical"|>, 
                    "f8" -> <|"Type" -> "Numerical"|>, 
                    "f9" -> <|"Type" -> "Numerical"|>, 
                    "f10" -> <|"Type" -> "Numerical"|>, 
                    "f11" -> <|"Type" -> "Numerical"|>, 
                    "f12" -> <|"Type" -> "Numerical"|>, 
                    "f13" -> <|"Type" -> "Numerical"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "ToVector", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                   "Version" -> {13., 1}, "ID" -> 6010188386713515434|>], 
                "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                Automatic, "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBIQTe+yFib1JlAgAAAA0AAAAKAAAAaJqqsAoy0T+4Q34yDdGkv3Dwji1i
YNA/zUw78Nto5T9VjHhTnYHbv/mGXcSSg9e/7bh4eMkzzT+wSxcxu1abv9Qk
6KCDh7C//g73rVMkxL/9I5bYwMHOv67kcbJEj90/BHnZxGJx5D+347IqrqLP
vzOpY1rIT5M/9Xnkj3YR1L8pM9DLqhBmv/XECoLA1MG/3eOEXPs5xr/Yd1/j
zSnTPxIljC0ZKtm/wPOR9kWbuT8cDksvj8y6v9rdqYeu6cU/UNifQ24huT8z
DLo58oXQPx/yp+37IuE/31tfxRCSlz/pjZWVgWl+v5+jMouvDpa/cuYzYxsY
0r/oUgwK0jajP156YdJtk9K/ayr4DVFG1r+9j+j5vUHPvyNJm4js7tq/75w/
3Ssjlb/+KQkME6q0vyrCG07/wYW/awY2x5QT4r90vNnbxizbv4mW/WBhR8A/
uqm83X1yr7+diVdwBoPIPzeURlZDB3g/TC8iEHlzvz9IynKtxAzYP9akKWhR
Hqk/yhueWwqUuj9T0gQKPnW+P5Fi8UcAerC/vKPb+50/0L9t4sAS32jcvx9b
LzfleUY/ttuIq9hIyL9Wi6ppMdvOv3JuMtW0FaU/dwKXs68L0L+JtG64LNTY
v8OastRf5+M/hwW/MjXZ1b+yCQkEM6Swv8XYbJa0Hp+/hlB1+bWEpD8pk6JS
T9C6v2ttyRfqBMi/PKWoPBKNwL/HuYFZjA2tv4ksXBZCgse/G1Mg3gHLqb+k
iuG6k/zZv5PxapeFP4w/gMIyRhVbmr/HuYJAS6nIP9UlwYV667q/FxDEEEB6
t7+ydy5twsDAvzlYDEB1OXI/6SwT5a+6wj+TDUjL+Fm9vyUxmORtuNO/txil
ux8ror+ObNi1nMexPzyVjIhgXNs/uYiFXiJPwD/dQaKAn6HQPzlpCzmQEeS/
BtWDRiTOyL8D3kMEQEXJv/XFj+6Y2rK/Qa2ruc4Hsb9Mx8a/2NLRv3vbC1Lz
jtI/URun1JQf0b8HgFTSihHkv0+48ggZ5t8/xqiUxgOgsD/xiqkCB5HVv0Vx
4004ppo/l+RB3Wbrob/o5dCmmTjOv5tToHelotW/ZGzviNnewj/pCy6WlDar
vxuUoukzKc6/5d8MUoaLvL93LL4n1u7Gv1PnMPDenOY/hMTyDOpi0T8jDipV
eWbRPwLWeVrtjLe/1Zz5AB2X3L8i8AYiCU7EP/DNazz9spo/ZFGSpsEJ1T/D
KSevL7TRv+gx27D1vbA/DqCKWGak3r/YpQDkjVniPyXjLKSjzLQ/kWGSCGEF
tL8KkiqsNWjhv+MWaD4qhNM/z7hpIUJOtr8mXckCk6fVPyFNmG7Qv6G/xVJX
fa+kzD/ZSxhbQBfEP8VvMvqMueG/Dx/pDeznz79VtysM
                   "], 
                  "Precisions" -> {3.7899503680019513`, 6.481119337729006, 
                   15.53638706038204, 46.11102860799583, 65.1272873135182, 
                   71.85675938052928, 134.7686415688861, 176.85423188358106`, 
                   575.2024207331544, 991.236984247038}, "NoisePrecision" -> 
                  2368.6400544038415`, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Mean" -> {0.45108695652173914`, 0.09782608695652173, 
                    0.15760869565217378`, 0.41425240823442067`, 
                    0.14975845410628005`, 0.4809782608695652, 
                    0.18315217391304348`, 0.17670351680226376`, 
                    0.27355072463768104`, 0.15183160220297676`, 
                    0.395482745452536, 0.5552536231884058, 
                    0.42028985507246425`}, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Version" -> {13., 1}, "ID" -> 8355450516561457018|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 13|>,
                     "Key" -> "(f1f2f3f4f5f6f7f8f9f10f11f12f13)", 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"|>], "Method" -> 
                  "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 10, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Mean" -> {0.45108695652173914`, 0.09782608695652173, 
                    0.15760869565217386`, 0.4142524082344205, 
                    0.14975845410628008`, 0.4809782608695652, 
                    0.18315217391304348`, 0.17670351680226376`, 
                    0.2735507246376812, 0.15183160220297678`, 
                    0.3954827454525361, 0.5552536231884058, 
                    0.42028985507246425`}, 
                    "StandardDeviation" -> {0.1958784922928271, 
                    0.2781844324362984, 0.21674009606244019`, 
                    0.18223204565184964`, 0.2290232138383297, 
                    0.16165623606234633`, 0.18167056512931457`, 
                    0.21216705044766523`, 0.1844359493365852, 
                    0.17398725471175078`, 0.19525095450908977`, 
                    0.198224750264207, 0.23730577953265872`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 13, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    6830220434842910334|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                   "Mean" -> {0.45108695652173914`, 0.09782608695652173, 
                    0.15760869565217386`, 0.4142524082344205, 
                    0.14975845410628008`, 0.4809782608695652, 
                    0.18315217391304348`, 0.17670351680226376`, 
                    0.2735507246376812, 0.15183160220297678`, 
                    0.3954827454525361, 0.5552536231884058, 
                    0.42028985507246425`}, 
                   "StandardDeviation" -> {0.1958784922928271, 
                    0.2781844324362984, 0.21674009606244019`, 
                    0.18223204565184964`, 0.2290232138383297, 
                    0.16165623606234633`, 0.18167056512931457`, 
                    0.21216705044766523`, 0.1844359493365852, 
                    0.17398725471175078`, 0.19525095450908977`, 
                    0.198224750264207, 0.23730577953265872`}, "Method" -> 
                   "NaiveSampler", "VectorLength" -> 13, 
                   "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, "Type" -> 
                   "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                   6830220434842910334|>], "InputDimension" -> 0, 
                "OutputDimension" -> 13, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, 
                    "ID" -> 223830984131347470|>, 
                    "f2" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.}, 
                    "ID" -> 3181086525719607783|>, 
                    "f3" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.35714285714285715`}, "ID" -> 
                    509165656554065290|>, 
                    "f4" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.41612903211241925`}, "ID" -> 
                    1604161506447929441|>, 
                    "f5" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, 
                    "ID" -> 4712557960321622165|>, 
                    "f6" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, 
                    "ID" -> 1736894384284373350|>, 
                    "f7" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.3}, 
                    "ID" -> 6385081267771642384|>, 
                    "f8" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.4810653026665862}, "ID" -> 
                    9050612953462206946|>, 
                    "f9" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.4166666666666667}, "ID" -> 
                    7620751929912453154|>, 
                    "f10" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.08333338541272477}, "ID" -> 
                    7711695143384896275|>, 
                    "f11" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.49829578012882714`}, "ID" -> 
                    6947422922590196435|>, 
                    "f12" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.25}, 
                    "ID" -> 5937810478194738894|>, 
                    "f13" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.1111111111111111}, "ID" -> 
                    6353494181561493803|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.1159396, "MaxTrainingMemory" -> 224648, 
                  "DataMemory" -> 23632, "FunctionMemory" -> 66808, 
                  "LanguageVersion" -> {13., 1}, "Date" -> 
                  DateObject[{
                    2022, 12, 16, 16, 9, 42.9739421`9.385780068961347}, 
                    "Instant", "Gregorian", -5.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows",
                   "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {0.5090566051953506, 0.5090566051953506, 
                    0.8702988472745598, 0.9814870544688202, 1.08380562032128, 
                    1.0987907601939744`, 1.1453792062616392`, 
                    1.1604436166039174`, 1.1682197666738665`, 
                    1.258717904574573, 1.3406735698732268`}, "LeftBoundary" -> 
                   0.8702988472745598, "LeftScale" -> 0.1806211210396046, 
                   "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[-13.801934836873574`, 0.9641923747029385], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|
              "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {13., 1}, 
             "ID" -> 5199739729984741578|>], 
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
             "Version" -> {13., 1}, "ID" -> 6134815762277793920|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
             "Mean" -> {0.45108695652173914`, 0.09782608695652173, 
              0.15760869565217386`, 0.4142524082344205, 0.14975845410628008`, 
              0.4809782608695652, 0.18315217391304348`, 0.17670351680226376`, 
              0.2735507246376812, 0.15183160220297678`, 0.3954827454525361, 
              0.5552536231884058, 0.42028985507246425`}, 
             "StandardDeviation" -> {0.1958784922928271, 0.2781844324362984, 
              0.21674009606244019`, 0.18223204565184964`, 0.2290232138383297, 
              0.16165623606234633`, 0.18167056512931457`, 
              0.21216705044766523`, 0.1844359493365852, 0.17398725471175078`, 
              0.19525095450908977`, 0.198224750264207, 0.23730577953265872`}, 
             "Output" -> <|
              "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
             "Version" -> {13., 1}, "ID" -> 3778842250428737266|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 7708644319899565307|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {591.6847826086956}, 
             "StandardDeviation" -> {96.16244514043704}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 1637828263618835904|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "Version" -> {13., 1}, "ID" -> 7457467337844711562|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> "f1",
              "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
             "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (591.6847826086956 + 
       96.16244514043704 #& ), 
      "ProcessorFunction" -> (-6.152971482210031 + 0.010399070016778228` #& ),
       "Name" -> "value", 
      "Quantiles" -> {-2.1805267358007474`, 2.99821013255481}, "Mean" -> 
      591.6847826086956|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
    0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "Tree" -> MachineLearning`DecisionTree[<|
        "FeatureIndices" -> RawArray["Integer16",{3, 4, 4, 9, 12}], 
         "NumericalThresholds" -> {-0.39677863850251177`, \
-0.35365208403399123`, -0.01803980198768314, 
          0.3303961936444343, -0.7077537150269733}, "NominalSplits" -> {}, 
         "Children" -> 
         RawArray["Integer16",{{-3, -4}, {5, 3}, {-1, -2}, {-5, -6}, {1, 4}}],
          "LeafValues" -> 
         RawArray["Real32",{{-0.18563847243785858`, 
           0.6311913132667542}, {-0.9326383471488953, 
           0.7258819937705994}, {-0.2203020304441452, 
           1.2344082593917847`}, {-1.1718169450759888`, 0.6975368857383728}, {
           0.5466293692588806, 0.704845666885376}, {1.8647115230560303`, 
           0.6945192813873291}}], "RootIndex" -> 2, "NominalDimension" -> 
         0|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Values", <|
        "Info" -> <|
          "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
            "Type" -> "NumericalVector", "Weight" -> 13|>|>, "Invertibility" -> 
         "Perfect", "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
       "Calibrator" -> None, "Method" -> "DecisionTree", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "DistributionSmoothing" -> <|"Value" -> 1, "Options" -> <||>|>, 
        "FeatureFraction" -> <|"Value" -> 1, "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "PanelCell" -> CellObject[167345], "TrainingFunction" -> Predict, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 4.56603889829678, "PreprocessingTime" -> 
      0.2679454`6.879591299112343, "LossName" -> "StandardDeviation", 
      "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[6.140306033265759, 0.13118455464026893`], "StandardDeviation" -> 
         Around[93.3393230478842, 6.064268668598005], "EvaluationTime" -> 
         0.00003644951819970378, "TestSize" -> 216, "ModelMemory" -> 
         6045.538461538462, "ModelUtility" -> -5.242312797420832, 
         "TrainingSize" -> 74, "TrainingTime" -> 0.015412367140385694`, 
         "TrainingMemory" -> 88523.69230769231, "ExperimentCount" -> 12, 
         "MeanCrossEntropyHistory" -> {
           Around[6.6207091954118145`, 0.43071938383292646`], 
           Around[5.972258187283766, 0.3464069194957426], 
           Around[5.998685150303949, 0.2039192169795501], 
           Around[5.783334524348479, 0.15439411648826243`], 
           Around[7.097957852686996, 0.7490742152485517], 
           Around[5.834755059451177, 0.11020102358042747`], 
           Around[5.690918556892575, 0.16897199382796005`], 
           Around[6.384666213030228, 0.3875610335084996], 
           Around[6.006942845250073, 0.2878295389426996], 
           Around[6.345824025445662, 0.44195852556407766`], 
           Around[5.957916692126459, 0.16943459445454384`], 
           Around[5.9897040969579285`, 0.22849063629370991`]}, 
         "StandardDeviationHistory" -> {
           Around[109.5023000822486, 15.23967666734816], 
           Around[85.69378047499832, 19.217508929902095`], 
           Around[91.80617206737075, 12.644560050254157`], 
           Around[81.09652753842337, 11.519150774946272`], 
           Around[130.135932153563, 24.541325683335767`], 
           Around[77.84934475155315, 7.776557801644649], 
           Around[69.3303973268244, 10.940290870671141`], 
           Around[102.89691651590815`, 13.099365980687802`], 
           Around[95.475868041499, 17.94105788482768], 
           Around[109.20857300274686`, 20.733195849205405`], 
           Around[84.38331427562773, 9.44829122824516], 
           Around[82.69275034384708, 10.432350681335135`]}, 
         "Configuration" -> {
          "DecisionTree", "DistributionSmoothing" -> 1, "FeatureFraction" -> 
           1}, "FinalTrainingSize" -> 92|>, 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
          "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
          "TrainingTime", "TrainingMemory", "ExperimentCount", 
          "MeanCrossEntropyHistory", "StandardDeviationHistory", 
          "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 12], 
          TypeSystem`Vector[TypeSystem`AnyType, 12], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], <||>], "Configurations" -> 
      Dataset[<|<|
          "Value" -> "DecisionTree", 
           "Options" -> <|
            "DistributionSmoothing" -> <|"Value" -> 1|>, 
             "FeatureFraction" -> <|"Value" -> 1|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[6.302273532182652, 0.23695161857523614`], 
              "StandardDeviation" -> 
              Around[93.03379762501592, 10.982691269300378`], 
              "EvaluationTime" -> 0.000024332467255718035`, "TestSize" -> 82, 
              "ModelMemory" -> 5952, "ModelUtility" -> -5.2494595022580235`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.03981071705534971, 
              "TrainingMemory" -> 1040328, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[6.302273532182652, 0.16755009630767775`]}, 
              "StandardDeviationHistory" -> {
                Around[93.03379762501592, 7.765935472200588]}|>, <|
             "MeanCrossEntropy" -> 
              Around[6.140306033265759, 0.13118455464026893`], 
              "StandardDeviation" -> 
              Around[93.3393230478842, 6.064268668598005], "EvaluationTime" -> 
              0.00003644951819970378, "TestSize" -> 216, "ModelMemory" -> 
              6045.538461538462, "ModelUtility" -> -5.242312797420832, 
              "TrainingSize" -> 74, "TrainingTime" -> 0.015412367140385694`, 
              "TrainingMemory" -> 88523.69230769231, "ExperimentCount" -> 12, 
              "MeanCrossEntropyHistory" -> {
                Around[6.6207091954118145`, 0.43071938383292646`], 
                Around[5.972258187283766, 0.3464069194957426], 
                Around[5.998685150303949, 0.2039192169795501], 
                Around[5.783334524348479, 0.15439411648826243`], 
                Around[7.097957852686996, 0.7490742152485517], 
                Around[5.834755059451177, 0.11020102358042747`], 
                Around[5.690918556892575, 0.16897199382796005`], 
                Around[6.384666213030228, 0.3875610335084996], 
                Around[6.006942845250073, 0.2878295389426996], 
                Around[6.345824025445662, 0.44195852556407766`], 
                Around[5.957916692126459, 0.16943459445454384`], 
                Around[5.9897040969579285`, 0.22849063629370991`]}, 
              "StandardDeviationHistory" -> {
                Around[109.5023000822486, 15.23967666734816], 
                Around[85.69378047499832, 19.217508929902095`], 
                Around[91.80617206737075, 12.644560050254157`], 
                Around[81.09652753842337, 11.519150774946272`], 
                Around[130.135932153563, 24.541325683335767`], 
                Around[77.84934475155315, 7.776557801644649], 
                Around[69.3303973268244, 10.940290870671141`], 
                Around[102.89691651590815`, 13.099365980687802`], 
                Around[95.475868041499, 17.94105788482768], 
                Around[109.20857300274686`, 20.733195849205405`], 
                Around[84.38331427562773, 9.44829122824516], 
                Around[82.69275034384708, 10.432350681335135`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00003644951819970378, "ModelMemory" -> 
             6045.538461538462, "StandardDeviation" -> 
             Around[93.3393230478842, 6.064268668598005], "TrainingMemory" -> 
             88523.69230769231, "TrainingTime" -> 0.05399009482450455|>, 
           "Index" -> 1|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {
              TypeSystem`Atom[Integer]}], 2]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
              "TrainingTime", "TrainingMemory", "ExperimentCount", 
              "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], <||>], "MaxTrainingSize" -> 92, 
      "PreprocessorEvaluationTime" -> 0.0000123359375, "PreprocessorMemory" -> 
      112072, "InputDimension" -> 13, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.8801957838695249`17.341428628596688*^9, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.07264367203918791, 
          "ElapsedTimes" -> 0.2175159, "ExperimentCounts" -> 1|>, <|
         "TrainingSizes" -> 74, "TimeBudgets" -> 0.36321836019593917`, 
          "ElapsedTimes" -> 0.3642533, "ExperimentCounts" -> 12|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, "ID" -> 
           160786463559880376|>, 
         "f2" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.}, "ID" -> 
           4287842684044921566|>, 
         "f3" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.35714285714285715`}, "ID" -> 3584571402766016900|>, 
         "f4" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.41612903211241925`}, "ID" -> 3999425147071556158|>, 
         "f5" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, "ID" -> 
           2282291538913019799|>, 
         "f6" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, "ID" -> 
           7158108382135739184|>, 
         "f7" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.3}, "ID" -> 
           8419490369520109814|>, 
         "f8" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.4810653026665862}, "ID" -> 2281715898823819937|>, 
         "f9" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.4166666666666667}, "ID" -> 3191500091120879101|>, 
         "f10" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.08333338541272477}, "ID" -> 3882821336254497341|>, 
         "f11" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.49829578012882714`}, "ID" -> 2647614518606905170|>, 
         "f12" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.25}, "ID" -> 
           5889873695267358448|>, 
         "f13" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.1111111111111111}, "ID" -> 
           7623899711093183740|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 1.4563196, 
      "MaxTrainingMemory" -> 1516880, "DataMemory" -> 198048, 
      "FunctionMemory" -> 203352, "LanguageVersion" -> {13., 1}, "Date" -> 
      DateObject[{2022, 12, 16, 16, 9, 44.3006321`9.398984792111756}, 
        "Instant", "Gregorian", -5.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.880114903349606*^9, 3.880130159173857*^9, 
  3.880193563024415*^9, 3.8802129456046305`*^9, 3.880213784354927*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"323062ad-b775-4eec-ae5b-2b8e1add2d9c"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s visualize how well this model fits the training \
data:", "Text",
 CellChangeTimes->{{3.872773095923464*^9, 3.8727731036750813`*^9}, {
  3.873379756802355*^9, 
  3.8733797800359154`*^9}},ExpressionUUID->"3163f39c-4971-4cb8-87bb-\
15179432382a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"decisionT", ",", "train"}], "]"}]], "Input",
 CellChangeTimes->{{3.872773076608974*^9, 3.87277308300362*^9}, {
  3.873380098830345*^9, 3.8733801002236958`*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"42342caf-6d39-415c-ad50-b01b82244be5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Predictor method"], 
                   TextCell["Predictor method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               InterpretationBox[Cell[
                "DecisionTree",ExpressionUUID->
                 "2458543b-febb-41ea-97b6-2fb8904fd248"],
                TextCell["DecisionTree"]]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "92"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Standard deviation"], 
                   TextCell["Standard deviation"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"65.8715967525167940266`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "4.5773344405737894647`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "56.7169278713692150973`3.", "\", \"", 
                   "75.0262656336643658506`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 56.7169278713692150973`3.,
                    ", ", 75.0262656336643658506`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Standard deviation baseline"], 
                    TextCell["Standard deviation baseline"]], 
                    "\"Standard deviation of testset values\"", LabelStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Standard deviation of testset values", 
                    "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"96.1624451404368159046`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "7.608620380452528309`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "80.9452043795317592867`3.", "\", \"", 
                   "111.3796859013418725226`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 80.9452043795317592867`3.,
                    ", ", 111.3796859013418725226`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["R-squared"], 
                   TextCell["R-squared"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.5307704149462243448`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0991760633838956185`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.3324182881784331078`3.", "\", \"", 
                   "0.7291225417140155818`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.3324182881784331078`3., 
                   ", ", 0.7291225417140155818`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Mean cross entropy"], 
                   TextCell["Mean cross entropy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"5.5943516736854492777`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.070761573921166665`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "5.4528285258431159477`3.", "\", \"", 
                   "5.7358748215277826077`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 5.4528285258431159477`3., 
                   ", ", 5.7358748215277826077`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"11.1`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"649.`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                 FractionBox["\"Examples\"", "\"Seconds\""]},
                "Quantity"]},
              {
               ItemBox[
                GraphicsBox[{{{}, {
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.011000000000000001`], AbsoluteThickness[1.6], 
                    GeometricTransformationBox[InsetBox[
                    FormBox[
                    StyleBox[
                    GraphicsBox[
                    {RGBColor[0.34398, 0.49112, 0.89936], AbsoluteThickness[
                    1.], CircleBox[{0, 0}, Offset[{1.8, 1.8}, {0., 0.}]]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.011000000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                    TraditionalForm], {0., 0.}], CompressedData["
1:eJx9VC1Pw1AUfQNEJYIEZPcPMCSVT1YOFIKEhoRkjjnKxuh7/dhKSEgdk3Uj
UwuCICsnKyZAkExOwSSKUrKac5qsyRMn5757z7339DUvrk4ut4UQZ+VplGer
PMev46JohlL8f2+BBCxjxO+R7O48TSZfuuJ95BO6P/Xl48uyKL77a9zSyOcB
5jNCxLGPeEHYoHo26duleiPqZxoST3riQH7uj3+Lc2+NzS7NJ0LsaLyvCC9J
/7PG/IlC3gqk/ii3Na9w2kM+8+TekdkQB3FV72Hz/IRCvR2ebw95l/ZhqVp/
oH9xTfmonkvxHY3+cG6RN2j+iv0TI5/dYP2VqvkB4lPSl9M+W+QH6VH/fdov
9ZN3Sf8d5af5r3zcZz4gvR7ezxTygvZnq83zSAYYP6N+U6o/06ivfU9+9Gt+
h/ynNF8xxPwtl/430mvS/7QgPzjUTxaiXqvOoz+o/x+qb9O8FfnHovuHEcav
yH8jtfn9bA/pveL3Sck/h8EB+g==
                    "]]}, {
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 631.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "631"}], "}"}]],
                    Annotation[#, {644.2499993422044, 631}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 776.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "776"}], "}"}]],
                    Annotation[#, {644.2499993422044, 776}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 699.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "699"}], "}"}]],
                    Annotation[#, {644.2499993422044, 699}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 584.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "584"}], "}"}]],
                    Annotation[#, {573.8333331869355, 584}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 626.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "626"}], "}"}]],
                    Annotation[#, {644.2499993422044, 626}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 598.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "598"}], "}"}]],
                    Annotation[#, {644.2499993422044, 598}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{478.99999991319135`, 554.}}]},
                    RowBox[{"{", 
                    RowBox[{"478.99999991319135`", ",", "554"}], "}"}]],
                    Annotation[#, {478.99999991319135`, 554}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 634.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "634"}], "}"}]],
                    Annotation[#, {644.2499993422044, 634}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 641.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "641"}], "}"}]],
                    Annotation[#, {573.8333331869355, 641}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 593.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "593"}], "}"}]],
                    Annotation[#, {573.8333331869355, 593}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 604.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "604"}], "}"}]],
                    Annotation[#, {573.8333331869355, 604}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 609.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "609"}], "}"}]],
                    Annotation[#, {573.8333331869355, 609}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 681.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "681"}], "}"}]],
                    Annotation[#, {644.2499993422044, 681}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 546.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "546"}], "}"}]],
                    Annotation[#, {573.8333331869355, 546}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 787.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "787"}], "}"}]],
                    Annotation[#, {644.2499993422044, 787}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 662.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "662"}], "}"}]],
                    Annotation[#, {644.2499993422044, 662}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 627.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "627"}], "}"}]],
                    Annotation[#, {644.2499993422044, 627}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 625.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "625"}], "}"}]],
                    Annotation[#, {573.8333331869355, 625}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 418.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "418"}], "}"}]],
                    Annotation[#, {501.9999987151221, 418}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 680.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "680"}], "}"}]],
                    Annotation[#, {644.2499993422044, 680}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 556.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "556"}], "}"}]],
                    Annotation[#, {644.2499993422044, 556}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 560.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "560"}], "}"}]],
                    Annotation[#, {573.8333331869355, 560}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 605.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "605"}], "}"}]],
                    Annotation[#, {573.8333331869355, 605}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 565.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "565"}], "}"}]],
                    Annotation[#, {573.8333331869355, 565}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 530.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "530"}], "}"}]],
                    Annotation[#, {501.9999987151221, 530}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 615.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "615"}], "}"}]],
                    Annotation[#, {573.8333331869355, 615}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{570.5000006917836, 442.}}]},
                    RowBox[{"{", 
                    RowBox[{"570.5000006917836`", ",", "442"}], "}"}]],
                    Annotation[#, {570.5000006917836, 442}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 508.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "508"}], "}"}]],
                    Annotation[#, {573.8333331869355, 508}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{771.000002147312, 880.}}]},
                    RowBox[{"{", 
                    RowBox[{"771.000002147312`", ",", "880"}], "}"}]],
                    Annotation[#, {771.000002147312, 880}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 593.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "593"}], "}"}]],
                    Annotation[#, {573.8333331869355, 593}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 512.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "512"}], "}"}]],
                    Annotation[#, {573.8333331869355, 512}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 590.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "590"}], "}"}]],
                    Annotation[#, {644.2499993422044, 590}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 446.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "446"}], "}"}]],
                    Annotation[#, {573.8333331869355, 446}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 655.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "655"}], "}"}]],
                    Annotation[#, {644.2499993422044, 655}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 519.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "519"}], "}"}]],
                    Annotation[#, {573.8333331869355, 519}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 560.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "560"}], "}"}]],
                    Annotation[#, {573.8333331869355, 560}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 382.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "382"}], "}"}]],
                    Annotation[#, {501.9999987151221, 382}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 540.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "540"}], "}"}]],
                    Annotation[#, {573.8333331869355, 540}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 559.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "559"}], "}"}]],
                    Annotation[#, {644.2499993422044, 559}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 558.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "558"}], "}"}]],
                    Annotation[#, {501.9999987151221, 558}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{478.99999991319135`, 454.}}]},
                    RowBox[{"{", 
                    RowBox[{"478.99999991319135`", ",", "454"}], "}"}]],
                    Annotation[#, {478.99999991319135`, 454}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 609.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "609"}], "}"}]],
                    Annotation[#, {501.9999987151221, 609}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 560.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "560"}], "}"}]],
                    Annotation[#, {501.9999987151221, 560}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 794.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "794"}], "}"}]],
                    Annotation[#, {644.2499993422044, 794}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 412.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "412"}], "}"}]],
                    Annotation[#, {501.9999987151221, 412}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 542.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "542"}], "}"}]],
                    Annotation[#, {573.8333331869355, 542}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 546.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "546"}], "}"}]],
                    Annotation[#, {573.8333331869355, 546}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 532.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "532"}], "}"}]],
                    Annotation[#, {501.9999987151221, 532}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 698.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "698"}], "}"}]],
                    Annotation[#, {644.2499993422044, 698}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 618.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "618"}], "}"}]],
                    Annotation[#, {644.2499993422044, 618}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 500.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "500"}], "}"}]],
                    Annotation[#, {573.8333331869355, 500}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 472.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "472"}], "}"}]],
                    Annotation[#, {573.8333331869355, 472}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 573.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "573"}], "}"}]],
                    Annotation[#, {573.8333331869355, 573}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{478.99999991319135`, 429.}}]},
                    RowBox[{"{", 
                    RowBox[{"478.99999991319135`", ",", "429"}], "}"}]],
                    Annotation[#, {478.99999991319135`, 429}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 488.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "488"}], "}"}]],
                    Annotation[#, {501.9999987151221, 488}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 586.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "586"}], "}"}]],
                    Annotation[#, {644.2499993422044, 586}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 606.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "606"}], "}"}]],
                    Annotation[#, {573.8333331869355, 606}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{771.000002147312, 730.}}]},
                    RowBox[{"{", 
                    RowBox[{"771.000002147312`", ",", "730"}], "}"}]],
                    Annotation[#, {771.000002147312, 730}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 506.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "506"}], "}"}]],
                    Annotation[#, {501.9999987151221, 506}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 536.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "536"}], "}"}]],
                    Annotation[#, {644.2499993422044, 536}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 432.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "432"}], "}"}]],
                    Annotation[#, {501.9999987151221, 432}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 521.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "521"}], "}"}]],
                    Annotation[#, {644.2499993422044, 521}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 542.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "542"}], "}"}]],
                    Annotation[#, {573.8333331869355, 542}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 722.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "722"}], "}"}]],
                    Annotation[#, {573.8333331869355, 722}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 633.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "633"}], "}"}]],
                    Annotation[#, {644.2499993422044, 633}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 724.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "724"}], "}"}]],
                    Annotation[#, {573.8333331869355, 724}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 569.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "569"}], "}"}]],
                    Annotation[#, {501.9999987151221, 569}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{771.000002147312, 813.}}]},
                    RowBox[{"{", 
                    RowBox[{"771.000002147312`", ",", "813"}], "}"}]],
                    Annotation[#, {771.000002147312, 813}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 600.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "600"}], "}"}]],
                    Annotation[#, {573.8333331869355, 600}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 605.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "605"}], "}"}]],
                    Annotation[#, {573.8333331869355, 605}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 683.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "683"}], "}"}]],
                    Annotation[#, {644.2499993422044, 683}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 736.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "736"}], "}"}]],
                    Annotation[#, {644.2499993422044, 736}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 389.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "389"}], "}"}]],
                    Annotation[#, {501.9999987151221, 389}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 516.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "516"}], "}"}]],
                    Annotation[#, {501.9999987151221, 516}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 548.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "548"}], "}"}]],
                    Annotation[#, {573.8333331869355, 548}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 572.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "572"}], "}"}]],
                    Annotation[#, {573.8333331869355, 572}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 716.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "716"}], "}"}]],
                    Annotation[#, {644.2499993422044, 716}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 664.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "664"}], "}"}]],
                    Annotation[#, {644.2499993422044, 664}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{771.000002147312, 711.}}]},
                    RowBox[{"{", 
                    RowBox[{"771.000002147312`", ",", "711"}], "}"}]],
                    Annotation[#, {771.000002147312, 711}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 664.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "664"}], "}"}]],
                    Annotation[#, {644.2499993422044, 664}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 610.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "610"}], "}"}]],
                    Annotation[#, {573.8333331869355, 610}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 543.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "543"}], "}"}]],
                    Annotation[#, {573.8333331869355, 543}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 521.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "521"}], "}"}]],
                    Annotation[#, {573.8333331869355, 521}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 528.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "528"}], "}"}]],
                    Annotation[#, {501.9999987151221, 528}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 615.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "615"}], "}"}]],
                    Annotation[#, {644.2499993422044, 615}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 678.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "678"}], "}"}]],
                    Annotation[#, {573.8333331869355, 678}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 574.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "574"}], "}"}]],
                    Annotation[#, {501.9999987151221, 574}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 531.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "531"}], "}"}]],
                    Annotation[#, {501.9999987151221, 531}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 626.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "626"}], "}"}]],
                    Annotation[#, {644.2499993422044, 626}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 749.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "749"}], "}"}]],
                    Annotation[#, {644.2499993422044, 749}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 630.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "630"}], "}"}]],
                    Annotation[#, {644.2499993422044, 630}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 529.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "529"}], "}"}]],
                    
                    Annotation[#, {573.8333331869355, 529}, 
                    "Tooltip"]& ]}}, {{}, {}}}, {{{}, {}, 
                    TagBox[
                    {GrayLevel[0.2], AbsoluteThickness[1.], Opacity[0.5], 
                    AbsoluteDashing[{2, 4}], LineBox[CompressedData["
1:eJxFxW0w03EcAPCF3Ei3UYkhj7Xm4XArFzG07X+5maetdpVOR5vuJF7UUGti
aGMdmxdDlyPa2jWF46gUReSMnCu7U+ScK52H0WLlWA8v+n1ffO7jnZ6TwrfC
4XDsv/7NyzrzoDZZGPN/Ae9DGosLX6Unk7ZPw0q3uMoLqfDYyLECciaMBbqw
O0Vw2PLkj3ENvDeHy8BbYCMlYNncnYeeNfYxSzLz0bTNYedmpwL0s+eP1xh6
OF6aIiouuI7e2jVBjD16A016P+BRvQwnaIRTRbUidEOoTeMa5yYaP5S037JD
jJ5pINrW6+CJUJ3lJb8QvSKQcGh2t9DFVfW6aQHMTjW9GnwNN7WQg8UuRWjp
VJy38Br8U87KitTDZtLxCLp/MTqIdfFNdRm8gst+2P4JpikziE4RErSrNnw8
WgEHpMfFd32B9RsYO4degjYT/dTrtXCbrVHSY4bv15s8Rjml6AM9BoJOC1M6
tWUjtmXoXuq5U0/Pw3IuNrvaDi8kea5eItxGv5sw8J7wYWaImBHWD2N7bGQV
JClaXNMv88+Fmb9yCfajsOrz9lKXrwyd35ifqC6Cq3YGXZmZhqnGvvl5ajma
33FiNkAB+/xuosYuwPuWaPSGqAq0qmPIEF0HN1uFDLSswkdGZ1qDv8P9qjv3
2kzwXOCisHMD9uSpKS+24LpH7pV6vByt4NqdXfSCvTy7sWwfuPWbgGr0hcfE
Aw6mQ7CDtrB3MxCWbq/72YfDLm+bHeURsEbJseyOhAfJbQbHaNg65XK5KxNW
urvl3cVgn6/DGR4n4RgROcqbBY9jk5SmeDjNsdT5YAK88pFqrUmExeo54+Fk
+A+Nlznx
                    "]]},
                    Annotation[#, "Charting`Private`Tag$93898#1"]& ]}, {}}},
                 Axes->{False, False},
                 AxesLabel->{None, None},
                 AxesOrigin->{357.1000000000008, 357.1000000000008},
                 DisplayFunction->Identity,
                 Frame->{{True, False}, {True, False}},
                 FrameLabel->{{
                    FormBox["\"actual value\"", TraditionalForm], None}, {
                    FormBox["\"predicted value\"", TraditionalForm], None}},
                 FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                 GridLines->{Automatic, Automatic},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]],
                 ImageSize->250,
                 
                 Method->{
                  "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                   True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}},
                 PlotRange->{{357.1, 906.145}, {357.1, 906.145}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{{0, 0}, {0, 0}},
                 Ticks->{Automatic, Automatic}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
           NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  PredictorMeasurementsObject[<|
   "Model" -> PredictorFunction[<|
      "ExampleNumber" -> 92, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|
             "AromaticRingCount" -> <|"Type" -> "Numerical"|>, 
              "HBondDonorCount" -> <|"Type" -> "Numerical"|>, 
              "HBondAcceptorCount" -> <|"Type" -> "Numerical"|>, 
              "FractionCarbonSP3" -> <|"Type" -> "Numerical"|>, 
              "HeteroatomCount" -> <|"Type" -> "Numerical"|>, 
              "HeterocycleCount" -> <|"Type" -> "Numerical"|>, 
              "RotatableBondCount" -> <|"Type" -> "Numerical"|>, 
              "MolecularMass" -> <|"Type" -> "Numerical"|>, 
              "DegreeOfUnsaturation" -> <|"Type" -> "Numerical"|>, 
              "MinEllipsoidLength" -> <|"Type" -> "Numerical"|>, 
              "MaxDistance" -> <|"Type" -> "Numerical"|>, 
              "LongestPiChain" -> <|"Type" -> "Numerical"|>, 
              "LinkerLength" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor[
                 "FromNamedFeatures", <|
                  "FeatureNames" -> {
                    "AromaticRingCount", "HBondDonorCount", 
                    "HBondAcceptorCount", "FractionCarbonSP3", 
                    "HeteroatomCount", "HeterocycleCount", 
                    "RotatableBondCount", "MolecularMass", 
                    "DegreeOfUnsaturation", "MinEllipsoidLength", 
                    "MaxDistance", "LongestPiChain", "LinkerLength"}|>], 
                 MachineLearning`MLProcessor[
                 "Transpose", <|"FeatureNumber" -> 13|>], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 
                   "FeatureKeys" -> {
                    "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", 
                    "f10", "f11", "f12", "f13"}, "FeatureWeights" -> 
                   Automatic, "ExampleWeights" -> Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> False, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|
             "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
               "Type" -> "NumericalVector", "Weight" -> 13|>|>, "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 92, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical"|>, 
                    "f2" -> <|"Type" -> "Numerical"|>, 
                    "f3" -> <|"Type" -> "Numerical"|>, 
                    "f4" -> <|"Type" -> "Numerical"|>, 
                    "f5" -> <|"Type" -> "Numerical"|>, 
                    "f6" -> <|"Type" -> "Numerical"|>, 
                    "f7" -> <|"Type" -> "Numerical"|>, 
                    "f8" -> <|"Type" -> "Numerical"|>, 
                    "f9" -> <|"Type" -> "Numerical"|>, 
                    "f10" -> <|"Type" -> "Numerical"|>, 
                    "f11" -> <|"Type" -> "Numerical"|>, 
                    "f12" -> <|"Type" -> "Numerical"|>, 
                    "f13" -> <|"Type" -> "Numerical"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Version" -> {13., 1}, "ID" -> 6010188386713515434|>], 
                   "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                   Automatic, "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBIQTe+yFib1JlAgAAAA0AAAAKAAAAaJqqsAoy0T+4Q34yDdGkv3Dwji1i
YNA/zUw78Nto5T9VjHhTnYHbv/mGXcSSg9e/7bh4eMkzzT+wSxcxu1abv9Qk
6KCDh7C//g73rVMkxL/9I5bYwMHOv67kcbJEj90/BHnZxGJx5D+347IqrqLP
vzOpY1rIT5M/9Xnkj3YR1L8pM9DLqhBmv/XECoLA1MG/3eOEXPs5xr/Yd1/j
zSnTPxIljC0ZKtm/wPOR9kWbuT8cDksvj8y6v9rdqYeu6cU/UNifQ24huT8z
DLo58oXQPx/yp+37IuE/31tfxRCSlz/pjZWVgWl+v5+jMouvDpa/cuYzYxsY
0r/oUgwK0jajP156YdJtk9K/ayr4DVFG1r+9j+j5vUHPvyNJm4js7tq/75w/
3Ssjlb/+KQkME6q0vyrCG07/wYW/awY2x5QT4r90vNnbxizbv4mW/WBhR8A/
uqm83X1yr7+diVdwBoPIPzeURlZDB3g/TC8iEHlzvz9IynKtxAzYP9akKWhR
Hqk/yhueWwqUuj9T0gQKPnW+P5Fi8UcAerC/vKPb+50/0L9t4sAS32jcvx9b
LzfleUY/ttuIq9hIyL9Wi6ppMdvOv3JuMtW0FaU/dwKXs68L0L+JtG64LNTY
v8OastRf5+M/hwW/MjXZ1b+yCQkEM6Swv8XYbJa0Hp+/hlB1+bWEpD8pk6JS
T9C6v2ttyRfqBMi/PKWoPBKNwL/HuYFZjA2tv4ksXBZCgse/G1Mg3gHLqb+k
iuG6k/zZv5PxapeFP4w/gMIyRhVbmr/HuYJAS6nIP9UlwYV667q/FxDEEEB6
t7+ydy5twsDAvzlYDEB1OXI/6SwT5a+6wj+TDUjL+Fm9vyUxmORtuNO/txil
ux8ror+ObNi1nMexPzyVjIhgXNs/uYiFXiJPwD/dQaKAn6HQPzlpCzmQEeS/
BtWDRiTOyL8D3kMEQEXJv/XFj+6Y2rK/Qa2ruc4Hsb9Mx8a/2NLRv3vbC1Lz
jtI/URun1JQf0b8HgFTSihHkv0+48ggZ5t8/xqiUxgOgsD/xiqkCB5HVv0Vx
4004ppo/l+RB3Wbrob/o5dCmmTjOv5tToHelotW/ZGzviNnewj/pCy6WlDar
vxuUoukzKc6/5d8MUoaLvL93LL4n1u7Gv1PnMPDenOY/hMTyDOpi0T8jDipV
eWbRPwLWeVrtjLe/1Zz5AB2X3L8i8AYiCU7EP/DNazz9spo/ZFGSpsEJ1T/D
KSevL7TRv+gx27D1vbA/DqCKWGak3r/YpQDkjVniPyXjLKSjzLQ/kWGSCGEF
tL8KkiqsNWjhv+MWaD4qhNM/z7hpIUJOtr8mXckCk6fVPyFNmG7Qv6G/xVJX
fa+kzD/ZSxhbQBfEP8VvMvqMueG/Dx/pDeznz79VtysM
                    "], 
                    "Precisions" -> {3.7899503680019513`, 6.481119337729006, 
                    15.53638706038204, 46.11102860799583, 65.1272873135182, 
                    71.85675938052928, 134.7686415688861, 176.85423188358106`,
                     575.2024207331544, 991.236984247038}, "NoisePrecision" -> 
                    2368.6400544038415`, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Mean" -> {0.45108695652173914`, 0.09782608695652173, 
                    0.15760869565217378`, 0.41425240823442067`, 
                    0.14975845410628005`, 0.4809782608695652, 
                    0.18315217391304348`, 0.17670351680226376`, 
                    0.27355072463768104`, 0.15183160220297676`, 
                    0.395482745452536, 0.5552536231884058, 
                    0.42028985507246425`}, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Version" -> {13., 1}, "ID" -> 8355450516561457018|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 13|>,
                     "Key" -> "(f1f2f3f4f5f6f7f8f9f10f11f12f13)", 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"|>], "Method" -> 
                    "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 10, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Mean" -> {0.45108695652173914`, 0.09782608695652173, 
                    0.15760869565217386`, 0.4142524082344205, 
                    0.14975845410628008`, 0.4809782608695652, 
                    0.18315217391304348`, 0.17670351680226376`, 
                    0.2735507246376812, 0.15183160220297678`, 
                    0.3954827454525361, 0.5552536231884058, 
                    0.42028985507246425`}, 
                    "StandardDeviation" -> {0.1958784922928271, 
                    0.2781844324362984, 0.21674009606244019`, 
                    0.18223204565184964`, 0.2290232138383297, 
                    0.16165623606234633`, 0.18167056512931457`, 
                    0.21216705044766523`, 0.1844359493365852, 
                    0.17398725471175078`, 0.19525095450908977`, 
                    0.198224750264207, 0.23730577953265872`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 13, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    6830220434842910334|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Mean" -> {0.45108695652173914`, 0.09782608695652173, 
                    0.15760869565217386`, 0.4142524082344205, 
                    0.14975845410628008`, 0.4809782608695652, 
                    0.18315217391304348`, 0.17670351680226376`, 
                    0.2735507246376812, 0.15183160220297678`, 
                    0.3954827454525361, 0.5552536231884058, 
                    0.42028985507246425`}, 
                    "StandardDeviation" -> {0.1958784922928271, 
                    0.2781844324362984, 0.21674009606244019`, 
                    0.18223204565184964`, 0.2290232138383297, 
                    0.16165623606234633`, 0.18167056512931457`, 
                    0.21216705044766523`, 0.1844359493365852, 
                    0.17398725471175078`, 0.19525095450908977`, 
                    0.198224750264207, 0.23730577953265872`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 13, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    6830220434842910334|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 13, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, 
                    "ID" -> 223830984131347470|>, 
                    "f2" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.}, 
                    "ID" -> 3181086525719607783|>, 
                    "f3" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.35714285714285715`}, "ID" -> 
                    509165656554065290|>, 
                    "f4" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.41612903211241925`}, "ID" -> 
                    1604161506447929441|>, 
                    "f5" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, 
                    "ID" -> 4712557960321622165|>, 
                    "f6" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, 
                    "ID" -> 1736894384284373350|>, 
                    "f7" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.3}, 
                    "ID" -> 6385081267771642384|>, 
                    "f8" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.4810653026665862}, "ID" -> 
                    9050612953462206946|>, 
                    "f9" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.4166666666666667}, "ID" -> 
                    7620751929912453154|>, 
                    "f10" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.08333338541272477}, "ID" -> 
                    7711695143384896275|>, 
                    "f11" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.49829578012882714`}, "ID" -> 
                    6947422922590196435|>, 
                    "f12" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.25}, 
                    "ID" -> 5937810478194738894|>, 
                    "f13" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.1111111111111111}, "ID" -> 
                    6353494181561493803|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.1159396, "MaxTrainingMemory" -> 
                    224648, "DataMemory" -> 23632, "FunctionMemory" -> 66808, 
                    "LanguageVersion" -> {13., 1}, "Date" -> 
                    DateObject[{
                    2022, 12, 16, 16, 9, 42.9739421`9.385780068961347}, 
                    "Instant", "Gregorian", -5.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "Windows", "SystemWordLength" -> 64, 
                    "Evaluations" -> {}|>, "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {0.5090566051953506, 0.5090566051953506, 
                    0.8702988472745598, 0.9814870544688202, 1.08380562032128, 
                    1.0987907601939744`, 1.1453792062616392`, 
                    1.1604436166039174`, 1.1682197666738665`, 
                    1.258717904574573, 1.3406735698732268`}, "LeftBoundary" -> 
                    0.8702988472745598, "LeftScale" -> 0.1806211210396046, 
                    "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                   Around[-13.801934836873574`, 0.9641923747029385], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {13., 1}, 
                "ID" -> 5199739729984741578|>], 
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                   "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                "Version" -> {13., 1}, "ID" -> 6134815762277793920|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                   "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                "Mean" -> {0.45108695652173914`, 0.09782608695652173, 
                 0.15760869565217386`, 0.4142524082344205, 
                 0.14975845410628008`, 0.4809782608695652, 
                 0.18315217391304348`, 0.17670351680226376`, 
                 0.2735507246376812, 0.15183160220297678`, 0.3954827454525361,
                  0.5552536231884058, 0.42028985507246425`}, 
                "StandardDeviation" -> {0.1958784922928271, 
                 0.2781844324362984, 0.21674009606244019`, 
                 0.18223204565184964`, 0.2290232138383297, 
                 0.16165623606234633`, 0.18167056512931457`, 
                 0.21216705044766523`, 0.1844359493365852, 
                 0.17398725471175078`, 0.19525095450908977`, 
                 0.198224750264207, 0.23730577953265872`}, 
                "Output" -> <|
                 "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                   "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                "Version" -> {13., 1}, "ID" -> 3778842250428737266|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13., 1}, "ID" -> 7708644319899565307|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {591.6847826086956}, 
                "StandardDeviation" -> {96.16244514043704}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13., 1}, "ID" -> 1637828263618835904|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Version" -> {13., 1}, "ID" -> 7457467337844711562|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (591.6847826086956 + 
          96.16244514043704 #& ), 
         "ProcessorFunction" -> (-6.152971482210031 + 
          0.010399070016778228` #& ), "Name" -> "value", 
         "Quantiles" -> {-2.1805267358007474`, 2.99821013255481}, "Mean" -> 
         591.6847826086956|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
       0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
       "Model" -> <|
        "Tree" -> MachineLearning`DecisionTree[<|
           "FeatureIndices" -> RawArray["Integer16",{3, 4, 4, 9, 12}], 
            "NumericalThresholds" -> {-0.39677863850251177`, \
-0.35365208403399123`, -0.01803980198768314, 
             0.3303961936444343, -0.7077537150269733}, "NominalSplits" -> {}, 
            "Children" -> 
            RawArray["Integer16",{{-3, -4}, {5, 3}, {-1, -2}, {-5, -6}, {1, 
              4}}], "LeafValues" -> 
            RawArray["Real32",{{-0.18563847243785858`, 
              0.6311913132667542}, {-0.9326383471488953, 
              0.7258819937705994}, {-0.2203020304441452, 
              1.2344082593917847`}, {-1.1718169450759888`, 
              0.6975368857383728}, {0.5466293692588806, 0.704845666885376}, {
              1.8647115230560303`, 0.6945192813873291}}], "RootIndex" -> 2, 
            "NominalDimension" -> 0|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Values", <|
           "Info" -> <|
             "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
               "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
         "DecisionTree", "PostProcessor" -> 
         MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "DistributionSmoothing" -> <|"Value" -> 1, "Options" -> <||>|>, 
           "FeatureFraction" -> <|"Value" -> 1, "Options" -> <||>|>|>|>, 
       "TrainingInformation" -> <|
        "PanelCell" -> CellObject[167345], "TrainingFunction" -> Predict, 
         "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
         "ProcessorEntropyShift" -> 4.56603889829678, "PreprocessingTime" -> 
         0.2679454`6.879591299112343, "LossName" -> "StandardDeviation", 
         "BestModelInformation" -> 
         Dataset[<|
           "MeanCrossEntropy" -> 
            Around[6.140306033265759, 0.13118455464026893`], 
            "StandardDeviation" -> 
            Around[93.3393230478842, 6.064268668598005], "EvaluationTime" -> 
            0.00003644951819970378, "TestSize" -> 216, "ModelMemory" -> 
            6045.538461538462, "ModelUtility" -> -5.242312797420832, 
            "TrainingSize" -> 74, "TrainingTime" -> 0.015412367140385694`, 
            "TrainingMemory" -> 88523.69230769231, "ExperimentCount" -> 12, 
            "MeanCrossEntropyHistory" -> {
              Around[6.6207091954118145`, 0.43071938383292646`], 
              Around[5.972258187283766, 0.3464069194957426], 
              Around[5.998685150303949, 0.2039192169795501], 
              Around[5.783334524348479, 0.15439411648826243`], 
              Around[7.097957852686996, 0.7490742152485517], 
              Around[5.834755059451177, 0.11020102358042747`], 
              Around[5.690918556892575, 0.16897199382796005`], 
              Around[6.384666213030228, 0.3875610335084996], 
              Around[6.006942845250073, 0.2878295389426996], 
              Around[6.345824025445662, 0.44195852556407766`], 
              Around[5.957916692126459, 0.16943459445454384`], 
              Around[5.9897040969579285`, 0.22849063629370991`]}, 
            "StandardDeviationHistory" -> {
              Around[109.5023000822486, 15.23967666734816], 
              Around[85.69378047499832, 19.217508929902095`], 
              Around[91.80617206737075, 12.644560050254157`], 
              Around[81.09652753842337, 11.519150774946272`], 
              Around[130.135932153563, 24.541325683335767`], 
              Around[77.84934475155315, 7.776557801644649], 
              Around[69.3303973268244, 10.940290870671141`], 
              Around[102.89691651590815`, 13.099365980687802`], 
              Around[95.475868041499, 17.94105788482768], 
              Around[109.20857300274686`, 20.733195849205405`], 
              Around[84.38331427562773, 9.44829122824516], 
              Around[82.69275034384708, 10.432350681335135`]}, 
            "Configuration" -> {
             "DecisionTree", "DistributionSmoothing" -> 1, "FeatureFraction" -> 
              1}, "FinalTrainingSize" -> 92|>, 
           
           TypeSystem`Struct[{
            "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
             "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
             "TrainingTime", "TrainingMemory", "ExperimentCount", 
             "MeanCrossEntropyHistory", "StandardDeviationHistory", 
             "Configuration", "FinalTrainingSize"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[TypeSystem`AnyType, 12], 
             TypeSystem`Vector[TypeSystem`AnyType, 12], 
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType}], 
             TypeSystem`Atom[Integer]}], <||>], "Configurations" -> 
         Dataset[<|<|
             "Value" -> "DecisionTree", 
              "Options" -> <|
               "DistributionSmoothing" -> <|"Value" -> 1|>, 
                "FeatureFraction" -> <|"Value" -> 1|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[6.302273532182652, 0.23695161857523614`], 
                 "StandardDeviation" -> 
                 Around[93.03379762501592, 10.982691269300378`], 
                 "EvaluationTime" -> 0.000024332467255718035`, "TestSize" -> 
                 82, "ModelMemory" -> 5952, 
                 "ModelUtility" -> -5.2494595022580235`, "TrainingSize" -> 10,
                  "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
                 1040328, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[6.302273532182652, 0.16755009630767775`]}, 
                 "StandardDeviationHistory" -> {
                   Around[93.03379762501592, 7.765935472200588]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[6.140306033265759, 0.13118455464026893`], 
                 "StandardDeviation" -> 
                 Around[93.3393230478842, 6.064268668598005], 
                 "EvaluationTime" -> 0.00003644951819970378, "TestSize" -> 
                 216, "ModelMemory" -> 6045.538461538462, 
                 "ModelUtility" -> -5.242312797420832, "TrainingSize" -> 74, 
                 "TrainingTime" -> 0.015412367140385694`, "TrainingMemory" -> 
                 88523.69230769231, "ExperimentCount" -> 12, 
                 "MeanCrossEntropyHistory" -> {
                   Around[6.6207091954118145`, 0.43071938383292646`], 
                   Around[5.972258187283766, 0.3464069194957426], 
                   Around[5.998685150303949, 0.2039192169795501], 
                   Around[5.783334524348479, 0.15439411648826243`], 
                   Around[7.097957852686996, 0.7490742152485517], 
                   Around[5.834755059451177, 0.11020102358042747`], 
                   Around[5.690918556892575, 0.16897199382796005`], 
                   Around[6.384666213030228, 0.3875610335084996], 
                   Around[6.006942845250073, 0.2878295389426996], 
                   Around[6.345824025445662, 0.44195852556407766`], 
                   Around[5.957916692126459, 0.16943459445454384`], 
                   Around[5.9897040969579285`, 0.22849063629370991`]}, 
                 "StandardDeviationHistory" -> {
                   Around[109.5023000822486, 15.23967666734816], 
                   Around[85.69378047499832, 19.217508929902095`], 
                   Around[91.80617206737075, 12.644560050254157`], 
                   Around[81.09652753842337, 11.519150774946272`], 
                   Around[130.135932153563, 24.541325683335767`], 
                   Around[77.84934475155315, 7.776557801644649], 
                   Around[69.3303973268244, 10.940290870671141`], 
                   Around[102.89691651590815`, 13.099365980687802`], 
                   Around[95.475868041499, 17.94105788482768], 
                   Around[109.20857300274686`, 20.733195849205405`], 
                   Around[84.38331427562773, 9.44829122824516], 
                   Around[82.69275034384708, 10.432350681335135`]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00003644951819970378, "ModelMemory" -> 
                6045.538461538462, "StandardDeviation" -> 
                Around[93.3393230478842, 6.064268668598005], "TrainingMemory" -> 
                88523.69230769231, "TrainingTime" -> 0.05399009482450455|>, 
              "Index" -> 1|>|>, 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Struct[{"Value"}, {
                 TypeSystem`Atom[Integer]}], 2]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                 "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
                 "TrainingTime", "TrainingMemory", "ExperimentCount", 
                 "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                 TypeSystem`Vector[
                 TypeSystem`AnyType, TypeSystem`AnyLength]}], 2], 
              TypeSystem`Struct[{
               "EvaluationTime", "ModelMemory", "StandardDeviation", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 1], <||>], "MaxTrainingSize" -> 92, 
         "PreprocessorEvaluationTime" -> 0.0000123359375, 
         "PreprocessorMemory" -> 112072, "InputDimension" -> 13, 
         "OutputDimension" -> 1, 
         "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
         True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, 
         "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
         "LastReportingTime" -> 3.8801957838695249`17.341428628596688*^9, 
         "RoundPartitioning" -> 
         Dataset[{<|
            "TrainingSizes" -> 10, "TimeBudgets" -> 0.07264367203918791, 
             "ElapsedTimes" -> 0.2175159, "ExperimentCounts" -> 1|>, <|
            "TrainingSizes" -> 74, "TimeBudgets" -> 0.36321836019593917`, 
             "ElapsedTimes" -> 0.3642533, "ExperimentCounts" -> 12|>}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 2], <||>]|>, "AnomalyDetector" -> 
       None, "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, "ID" -> 
              160786463559880376|>, 
            "f2" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.}, "ID" -> 
              4287842684044921566|>, 
            "f3" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.35714285714285715`}, "ID" -> 
              3584571402766016900|>, 
            "f4" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.41612903211241925`}, "ID" -> 
              3999425147071556158|>, 
            "f5" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, "ID" -> 
              2282291538913019799|>, 
            "f6" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, "ID" -> 
              7158108382135739184|>, 
            "f7" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.3}, "ID" -> 
              8419490369520109814|>, 
            "f8" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.4810653026665862}, "ID" -> 2281715898823819937|>,
             "f9" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.4166666666666667}, "ID" -> 3191500091120879101|>,
             "f10" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.08333338541272477}, "ID" -> 
              3882821336254497341|>, 
            "f11" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.49829578012882714`}, "ID" -> 
              2647614518606905170|>, 
            "f12" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.25}, "ID" -> 
              5889873695267358448|>, 
            "f13" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.1111111111111111}, "ID" -> 
              7623899711093183740|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 1.4563196, 
         "MaxTrainingMemory" -> 1516880, "DataMemory" -> 198048, 
         "FunctionMemory" -> 203352, "LanguageVersion" -> {13., 1}, "Date" -> 
         DateObject[{2022, 12, 16, 16, 9, 44.3006321`9.398984792111756}, 
           "Instant", "Gregorian", -5.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>], 
    "TestSet" -> <|"Input" -> CompressedData["
1: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
       "], "Output" -> CompressedData["
1:eJwt0C1IQ1EYBuCzu4Hapi4MEWXDJP4Vg6DLYhA0iGEOXBEM/oKiQTCYbWIw
GcQhglnBqMUkBlkyWmwmMey53BMe3vNzv++ceyrN7eWtXAihzmESQnc+hCc5
zx4rjHLMKUvUWadFlX41F3KfXa41vJVjTLHGNH1s8Gj/n5181i+wyLO1c9kV
607MB+UkE7zksnPTvQG1V+ZD8Q6ltC+b/Fr/ZM74Xn6zYNygzZ95WT7IniTr
8c4RH8wwrv9qvPsdX5z5viBHmOWNS15jNhlOsp7F+K831NI3iu/5wwG9dABH
3Chi
       "]|>, "Predictions" -> CompressedData["
1:eJxTTMoPSmVkYGCIAeLAbcv//1dscUCnq1imr1r1rhFDvG/Ti///39diqMNF
EzIPXf6u+PJ//+Prccqj0zD1MH7jTaCvriDkRUwVGBkkOoh2FyHzYepg4rDw
gPHR3Y+un1x/otuDrh7mT1z24zIfV/gTCjd083H5E109zFxi4xWX+3CFH7p6
ALvxjQQ=
     "], "Distributions" -> {
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[478.99999991319135`, 67.07685250824758], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[570.5000006917836, 118.70371652466487`], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[771.000002147312, 66.78667229538479], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[478.99999991319135`, 67.07685250824758], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[478.99999991319135`, 67.07685250824758], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[771.000002147312, 66.78667229538479], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[771.000002147312, 66.78667229538479], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[771.000002147312, 66.78667229538479], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466]}, 
    "Modes" -> CompressedData["
1:eJxTTMoPSmVkYGCIAeLAbcv//1dscUCnq1imr1r1rhFDvG/Ti///39diqMNF
EzIPXf6u+PJ//+Prccqj0zD1MH7jTaCvriDkRUwVGBkkOoh2FyHzYepg4rDw
gPHR3Y+un1x/otuDrh7mT1z24zIfV/gTCjd083H5E109zFxi4xWX+3CFH7p6
ALvxjQQ=
     "], "Weights" -> SparseArray[Automatic, {92}, 1., {1, {{0, 0}, {}}, {}}],
     "BatchEvaluationTime" -> 0.0015426641304347826`, "SingleEvaluationTime" -> 
    0.0111693, "Version" -> {13., 1}|>]]], "Output",
 CellChangeTimes->{3.8801149041801357`*^9, 3.8801301602951164`*^9, 
  3.8801935720158644`*^9, 3.8802129465569205`*^9, 3.880213785316462*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"f9d87af1-6ce0-4bd5-8583-14c64b1a9307"]
}, Open  ]],

Cell["\<\
Now let\[CloseCurlyQuote]s visualize how well this model predicts the test \
data:\
\>", "Text",
 CellChangeTimes->{{3.872773106547101*^9, 3.872773115075329*^9}, {
  3.873379786071398*^9, 
  3.8733798000555215`*^9}},ExpressionUUID->"016bf3b7-aa98-450a-8669-\
5545c5fb83d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"decisionT", ",", "test"}], "]"}]], "Input",
 CellChangeTimes->{{3.8727730910195723`*^9, 3.8727730912673264`*^9}, {
  3.873380104080825*^9, 3.8733801056877794`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"0b3c926c-4f46-4965-84aa-e2c55577e97e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Predictor method"], 
                   TextCell["Predictor method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               InterpretationBox[Cell[
                "DecisionTree",ExpressionUUID->
                 "cd6e9373-b150-40b5-ab6c-bf2a63000519"],
                TextCell["DecisionTree"]]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "23"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Standard deviation"], 
                   TextCell["Standard deviation"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"94.7025889434357850405`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "22.5943942037981173598`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "49.5138005358395503208`3.", "\", \"", 
                   "139.8913773510320197602`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 49.5138005358395503208`3.,
                    ", ", 139.8913773510320197602`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Standard deviation baseline"], 
                    TextCell["Standard deviation baseline"]], 
                    "\"Standard deviation of testset values\"", LabelStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Standard deviation of testset values", 
                    "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"93.2815523837531088702`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "12.855311693901107617`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "67.5709289959508936363`3.", "\", \"", 
                   "118.9921757715553241042`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 67.5709289959508936363`3.,
                    ", ", 118.9921757715553241042`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["R-squared"], 
                   TextCell["R-squared"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{
                   RowBox[{"-", "0.0306997567533844329`3."}], 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.570737074375918807`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 TemplateBox[{"\"95% confidence interval: [\"", 
                   RowBox[{"-", "1.1721739055052220468`3."}], "\", \"", 
                   "1.1107743919984531811`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", -1.1721739055052220468`3.,
                    ", ", 1.1107743919984531811`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Mean cross entropy"], 
                   TextCell["Mean cross entropy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"6.1278346361529196784`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.4646406952987769401`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "5.1985532455553657982`3.", "\", \"", 
                   "7.0571160267504735586`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 5.1985532455553657982`3., 
                   ", ", 7.0571160267504735586`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"7.61`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"366.`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                 FractionBox["\"Examples\"", "\"Seconds\""]},
                "Quantity"]},
              {
               ItemBox[
                GraphicsBox[{{{}, {
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.012833333333333334`], AbsoluteThickness[1.6], 
                    GeometricTransformationBox[InsetBox[
                    FormBox[
                    StyleBox[
                    GraphicsBox[
                    {RGBColor[0.34398, 0.49112, 0.89936], AbsoluteThickness[
                    1.], CircleBox[{0, 0}, Offset[{1.8, 1.8}, {0., 0.}]]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                    TraditionalForm], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAQB2JGIGYC4sBty///V2xxYACBGS0OKPyGNlR+QLPDXfHl
//7H10P4BxpQ5R+0ovI5OlH5Bs0OVSzTV6161wjhb2hENe9EM6r6Ay0OfZte
/P//vhbqvg5U/o9GVPUvWlHNf9GEyq9oQlVf0YIqX1CHyl9Qh6p+Bpr7E9pQ
+RPqUfkRTajuNahyAABNxol3
                    "]]}, {
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 659.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "659"}], "}"}]],
                    Annotation[#, {644.2499993422044, 659}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 720.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "720"}], "}"}]],
                    Annotation[#, {644.2499993422044, 720}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 618.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "618"}], "}"}]],
                    Annotation[#, {644.2499993422044, 618}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 536.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "536"}], "}"}]],
                    Annotation[#, {501.9999987151221, 536}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 700.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "700"}], "}"}]],
                    Annotation[#, {644.2499993422044, 700}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 801.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "801"}], "}"}]],
                    Annotation[#, {644.2499993422044, 801}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 614.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "614"}], "}"}]],
                    Annotation[#, {644.2499993422044, 614}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 566.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "566"}], "}"}]],
                    Annotation[#, {573.8333331869355, 566}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{501.9999987151221, 633.}}]},
                    RowBox[{"{", 
                    RowBox[{"501.9999987151221`", ",", "633"}], "}"}]],
                    Annotation[#, {501.9999987151221, 633}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 664.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "664"}], "}"}]],
                    Annotation[#, {644.2499993422044, 664}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{478.99999991319135`, 787.}}]},
                    RowBox[{"{", 
                    RowBox[{"478.99999991319135`", ",", "787"}], "}"}]],
                    Annotation[#, {478.99999991319135`, 787}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{478.99999991319135`, 575.}}]},
                    RowBox[{"{", 
                    RowBox[{"478.99999991319135`", ",", "575"}], "}"}]],
                    Annotation[#, {478.99999991319135`, 575}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 701.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "701"}], "}"}]],
                    Annotation[#, {644.2499993422044, 701}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 605.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "605"}], "}"}]],
                    Annotation[#, {573.8333331869355, 605}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 591.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "591"}], "}"}]],
                    Annotation[#, {573.8333331869355, 591}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 655.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "655"}], "}"}]],
                    Annotation[#, {644.2499993422044, 655}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 487.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "487"}], "}"}]],
                    Annotation[#, {573.8333331869355, 487}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 490.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "490"}], "}"}]],
                    Annotation[#, {573.8333331869355, 490}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{644.2499993422044, 627.}}]},
                    RowBox[{"{", 
                    RowBox[{"644.2499993422044`", ",", "627"}], "}"}]],
                    Annotation[#, {644.2499993422044, 627}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 716.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "716"}], "}"}]],
                    Annotation[#, {573.8333331869355, 716}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 505.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "505"}], "}"}]],
                    Annotation[#, {573.8333331869355, 505}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{573.8333331869355, 587.}}]},
                    RowBox[{"{", 
                    RowBox[{"573.8333331869355`", ",", "587"}], "}"}]],
                    Annotation[#, {573.8333331869355, 587}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{478.99999991319135`, 419.}}]},
                    RowBox[{"{", 
                    RowBox[{"478.99999991319135`", ",", "419"}], "}"}]],
                    
                    Annotation[#, {478.99999991319135`, 419}, 
                    "Tooltip"]& ]}}, {{}, {}}}, {{{}, {}, 
                    TagBox[
                    {GrayLevel[0.2], AbsoluteThickness[1.], Opacity[0.5], 
                    AbsoluteDashing[{2, 4}], LineBox[CompressedData["
1:eJxFxX0s1HEAB+BjK6OikFoYZ9PMW1Iz6WWnErl+l526o5ZTXOeaOH80eb37
ceeO0cnbYRkNqQtncVt1i2xCrmRtUnpZcm3HcpncqpFqbX0/fzx7mBcyuUJb
BoNB/fXvRnHmxbWrrP+/FNjR2YwccoJve5XKFqf2fNRr1+P8Yf6qxRFrl6JK
s72wHdunVcXCgyvTr7RF+Hq8QejknEt+s5LB/6bBnwOkC2HueWSKu6ZtvIOD
n8YZC4Lzyelhzi50P84ICPk9yy4gz0mYnOEXeKCTHhpNKiRv2qdvijVhbyrK
PVAkJav5Rx8HWfH+xA2pUwdk5Pc2nSsdcnzekiv0M2Jmca/MvJEmO1W36sJP
4Qj2L/VoHa4udJSbP+BxKxV737eIHLX1++CICM/r+JRIh41LzLJjS/hazo6G
yT3FZGnemGE5F3f5mtTxj7A9W599eJ2cHN3Xt3uGjQefeDYNVGAx95BH8CSm
lKMn3m1TkF0Y9MmIRGy3vCj0a8HhlWNBvE9Y03HW3tW/hBwq4tVtuYx1l6TW
/m58Zk6QtmrFkZu15TnhSjLv3t2hEhmm6t+OHxnB9M4rZSx7FXl213Di8zhM
z8imG6qxzZQ4yG0S66Idanw8SskNya6dGUn4depMb50Au4m7Df3JuCYrxuiY
gtVF+fPdIqxoM/l9leAsc197ZjHu+UJ3aeTYssjRDyhw+k/zkJMKixw8Tbpy
fC5Q4bNYi2+EcP23a/D0Xq9QVj1OOPggsrIRx3MWkkOacRX3YVpCC57gKSWy
m5gjYMomWnFFikX5ow0/ExnU3rewQ7pKE9OBj0tON0tu4z/CLEIx
                    "]]},
                    Annotation[#, "Charting`Private`Tag$95861#1"]& ]}, {}}},
                 Axes->{False, False},
                 AxesLabel->{None, None},
                 AxesOrigin->{399.9000000000009, 399.9000000000009},
                 DisplayFunction->Identity,
                 Frame->{{True, False}, {True, False}},
                 FrameLabel->{{
                    FormBox["\"actual value\"", TraditionalForm], None}, {
                    FormBox["\"predicted value\"", TraditionalForm], None}},
                 FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                 GridLines->{Automatic, Automatic},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]],
                 ImageSize->250,
                 
                 Method->{
                  "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                   True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}},
                 PlotRange->{{399.9, 821.055}, {399.9, 821.055}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{{0, 0}, {0, 0}},
                 Ticks->{Automatic, Automatic}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
           NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  PredictorMeasurementsObject[<|
   "Model" -> PredictorFunction[<|
      "ExampleNumber" -> 92, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|
             "AromaticRingCount" -> <|"Type" -> "Numerical"|>, 
              "HBondDonorCount" -> <|"Type" -> "Numerical"|>, 
              "HBondAcceptorCount" -> <|"Type" -> "Numerical"|>, 
              "FractionCarbonSP3" -> <|"Type" -> "Numerical"|>, 
              "HeteroatomCount" -> <|"Type" -> "Numerical"|>, 
              "HeterocycleCount" -> <|"Type" -> "Numerical"|>, 
              "RotatableBondCount" -> <|"Type" -> "Numerical"|>, 
              "MolecularMass" -> <|"Type" -> "Numerical"|>, 
              "DegreeOfUnsaturation" -> <|"Type" -> "Numerical"|>, 
              "MinEllipsoidLength" -> <|"Type" -> "Numerical"|>, 
              "MaxDistance" -> <|"Type" -> "Numerical"|>, 
              "LongestPiChain" -> <|"Type" -> "Numerical"|>, 
              "LinkerLength" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor[
                 "FromNamedFeatures", <|
                  "FeatureNames" -> {
                    "AromaticRingCount", "HBondDonorCount", 
                    "HBondAcceptorCount", "FractionCarbonSP3", 
                    "HeteroatomCount", "HeterocycleCount", 
                    "RotatableBondCount", "MolecularMass", 
                    "DegreeOfUnsaturation", "MinEllipsoidLength", 
                    "MaxDistance", "LongestPiChain", "LinkerLength"}|>], 
                 MachineLearning`MLProcessor[
                 "Transpose", <|"FeatureNumber" -> 13|>], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 
                   "FeatureKeys" -> {
                    "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", 
                    "f10", "f11", "f12", "f13"}, "FeatureWeights" -> 
                   Automatic, "ExampleWeights" -> Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> False, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|
             "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
               "Type" -> "NumericalVector", "Weight" -> 13|>|>, "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 92, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical"|>, 
                    "f2" -> <|"Type" -> "Numerical"|>, 
                    "f3" -> <|"Type" -> "Numerical"|>, 
                    "f4" -> <|"Type" -> "Numerical"|>, 
                    "f5" -> <|"Type" -> "Numerical"|>, 
                    "f6" -> <|"Type" -> "Numerical"|>, 
                    "f7" -> <|"Type" -> "Numerical"|>, 
                    "f8" -> <|"Type" -> "Numerical"|>, 
                    "f9" -> <|"Type" -> "Numerical"|>, 
                    "f10" -> <|"Type" -> "Numerical"|>, 
                    "f11" -> <|"Type" -> "Numerical"|>, 
                    "f12" -> <|"Type" -> "Numerical"|>, 
                    "f13" -> <|"Type" -> "Numerical"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Version" -> {13., 1}, "ID" -> 6010188386713515434|>], 
                   "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                   Automatic, "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBIQTe+yFib1JlAgAAAA0AAAAKAAAAaJqqsAoy0T+4Q34yDdGkv3Dwji1i
YNA/zUw78Nto5T9VjHhTnYHbv/mGXcSSg9e/7bh4eMkzzT+wSxcxu1abv9Qk
6KCDh7C//g73rVMkxL/9I5bYwMHOv67kcbJEj90/BHnZxGJx5D+347IqrqLP
vzOpY1rIT5M/9Xnkj3YR1L8pM9DLqhBmv/XECoLA1MG/3eOEXPs5xr/Yd1/j
zSnTPxIljC0ZKtm/wPOR9kWbuT8cDksvj8y6v9rdqYeu6cU/UNifQ24huT8z
DLo58oXQPx/yp+37IuE/31tfxRCSlz/pjZWVgWl+v5+jMouvDpa/cuYzYxsY
0r/oUgwK0jajP156YdJtk9K/ayr4DVFG1r+9j+j5vUHPvyNJm4js7tq/75w/
3Ssjlb/+KQkME6q0vyrCG07/wYW/awY2x5QT4r90vNnbxizbv4mW/WBhR8A/
uqm83X1yr7+diVdwBoPIPzeURlZDB3g/TC8iEHlzvz9IynKtxAzYP9akKWhR
Hqk/yhueWwqUuj9T0gQKPnW+P5Fi8UcAerC/vKPb+50/0L9t4sAS32jcvx9b
LzfleUY/ttuIq9hIyL9Wi6ppMdvOv3JuMtW0FaU/dwKXs68L0L+JtG64LNTY
v8OastRf5+M/hwW/MjXZ1b+yCQkEM6Swv8XYbJa0Hp+/hlB1+bWEpD8pk6JS
T9C6v2ttyRfqBMi/PKWoPBKNwL/HuYFZjA2tv4ksXBZCgse/G1Mg3gHLqb+k
iuG6k/zZv5PxapeFP4w/gMIyRhVbmr/HuYJAS6nIP9UlwYV667q/FxDEEEB6
t7+ydy5twsDAvzlYDEB1OXI/6SwT5a+6wj+TDUjL+Fm9vyUxmORtuNO/txil
ux8ror+ObNi1nMexPzyVjIhgXNs/uYiFXiJPwD/dQaKAn6HQPzlpCzmQEeS/
BtWDRiTOyL8D3kMEQEXJv/XFj+6Y2rK/Qa2ruc4Hsb9Mx8a/2NLRv3vbC1Lz
jtI/URun1JQf0b8HgFTSihHkv0+48ggZ5t8/xqiUxgOgsD/xiqkCB5HVv0Vx
4004ppo/l+RB3Wbrob/o5dCmmTjOv5tToHelotW/ZGzviNnewj/pCy6WlDar
vxuUoukzKc6/5d8MUoaLvL93LL4n1u7Gv1PnMPDenOY/hMTyDOpi0T8jDipV
eWbRPwLWeVrtjLe/1Zz5AB2X3L8i8AYiCU7EP/DNazz9spo/ZFGSpsEJ1T/D
KSevL7TRv+gx27D1vbA/DqCKWGak3r/YpQDkjVniPyXjLKSjzLQ/kWGSCGEF
tL8KkiqsNWjhv+MWaD4qhNM/z7hpIUJOtr8mXckCk6fVPyFNmG7Qv6G/xVJX
fa+kzD/ZSxhbQBfEP8VvMvqMueG/Dx/pDeznz79VtysM
                    "], 
                    "Precisions" -> {3.7899503680019513`, 6.481119337729006, 
                    15.53638706038204, 46.11102860799583, 65.1272873135182, 
                    71.85675938052928, 134.7686415688861, 176.85423188358106`,
                     575.2024207331544, 991.236984247038}, "NoisePrecision" -> 
                    2368.6400544038415`, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Mean" -> {0.45108695652173914`, 0.09782608695652173, 
                    0.15760869565217378`, 0.41425240823442067`, 
                    0.14975845410628005`, 0.4809782608695652, 
                    0.18315217391304348`, 0.17670351680226376`, 
                    0.27355072463768104`, 0.15183160220297676`, 
                    0.395482745452536, 0.5552536231884058, 
                    0.42028985507246425`}, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Version" -> {13., 1}, "ID" -> 8355450516561457018|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 13|>,
                     "Key" -> "(f1f2f3f4f5f6f7f8f9f10f11f12f13)", 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"|>], "Method" -> 
                    "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 10, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Mean" -> {0.45108695652173914`, 0.09782608695652173, 
                    0.15760869565217386`, 0.4142524082344205, 
                    0.14975845410628008`, 0.4809782608695652, 
                    0.18315217391304348`, 0.17670351680226376`, 
                    0.2735507246376812, 0.15183160220297678`, 
                    0.3954827454525361, 0.5552536231884058, 
                    0.42028985507246425`}, 
                    "StandardDeviation" -> {0.1958784922928271, 
                    0.2781844324362984, 0.21674009606244019`, 
                    0.18223204565184964`, 0.2290232138383297, 
                    0.16165623606234633`, 0.18167056512931457`, 
                    0.21216705044766523`, 0.1844359493365852, 
                    0.17398725471175078`, 0.19525095450908977`, 
                    0.198224750264207, 0.23730577953265872`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 13, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    6830220434842910334|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                    "Mean" -> {0.45108695652173914`, 0.09782608695652173, 
                    0.15760869565217386`, 0.4142524082344205, 
                    0.14975845410628008`, 0.4809782608695652, 
                    0.18315217391304348`, 0.17670351680226376`, 
                    0.2735507246376812, 0.15183160220297678`, 
                    0.3954827454525361, 0.5552536231884058, 
                    0.42028985507246425`}, 
                    "StandardDeviation" -> {0.1958784922928271, 
                    0.2781844324362984, 0.21674009606244019`, 
                    0.18223204565184964`, 0.2290232138383297, 
                    0.16165623606234633`, 0.18167056512931457`, 
                    0.21216705044766523`, 0.1844359493365852, 
                    0.17398725471175078`, 0.19525095450908977`, 
                    0.198224750264207, 0.23730577953265872`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 13, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 13|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    6830220434842910334|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 13, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, 
                    "ID" -> 223830984131347470|>, 
                    "f2" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.}, 
                    "ID" -> 3181086525719607783|>, 
                    "f3" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.35714285714285715`}, "ID" -> 
                    509165656554065290|>, 
                    "f4" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.41612903211241925`}, "ID" -> 
                    1604161506447929441|>, 
                    "f5" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, 
                    "ID" -> 4712557960321622165|>, 
                    "f6" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, 
                    "ID" -> 1736894384284373350|>, 
                    "f7" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.3}, 
                    "ID" -> 6385081267771642384|>, 
                    "f8" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.4810653026665862}, "ID" -> 
                    9050612953462206946|>, 
                    "f9" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.4166666666666667}, "ID" -> 
                    7620751929912453154|>, 
                    "f10" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.08333338541272477}, "ID" -> 
                    7711695143384896275|>, 
                    "f11" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.49829578012882714`}, "ID" -> 
                    6947422922590196435|>, 
                    "f12" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.25}, 
                    "ID" -> 5937810478194738894|>, 
                    "f13" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {0.1111111111111111}, "ID" -> 
                    6353494181561493803|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.1159396, "MaxTrainingMemory" -> 
                    224648, "DataMemory" -> 23632, "FunctionMemory" -> 66808, 
                    "LanguageVersion" -> {13., 1}, "Date" -> 
                    DateObject[{
                    2022, 12, 16, 16, 9, 42.9739421`9.385780068961347}, 
                    "Instant", "Gregorian", -5.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "Windows", "SystemWordLength" -> 64, 
                    "Evaluations" -> {}|>, "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {0.5090566051953506, 0.5090566051953506, 
                    0.8702988472745598, 0.9814870544688202, 1.08380562032128, 
                    1.0987907601939744`, 1.1453792062616392`, 
                    1.1604436166039174`, 1.1682197666738665`, 
                    1.258717904574573, 1.3406735698732268`}, "LeftBoundary" -> 
                    0.8702988472745598, "LeftScale" -> 0.1806211210396046, 
                    "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                   Around[-13.801934836873574`, 0.9641923747029385], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {13., 1}, 
                "ID" -> 5199739729984741578|>], 
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                   "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                "Version" -> {13., 1}, "ID" -> 6134815762277793920|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                   "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                "Mean" -> {0.45108695652173914`, 0.09782608695652173, 
                 0.15760869565217386`, 0.4142524082344205, 
                 0.14975845410628008`, 0.4809782608695652, 
                 0.18315217391304348`, 0.17670351680226376`, 
                 0.2735507246376812, 0.15183160220297678`, 0.3954827454525361,
                  0.5552536231884058, 0.42028985507246425`}, 
                "StandardDeviation" -> {0.1958784922928271, 
                 0.2781844324362984, 0.21674009606244019`, 
                 0.18223204565184964`, 0.2290232138383297, 
                 0.16165623606234633`, 0.18167056512931457`, 
                 0.21216705044766523`, 0.1844359493365852, 
                 0.17398725471175078`, 0.19525095450908977`, 
                 0.198224750264207, 0.23730577953265872`}, 
                "Output" -> <|
                 "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
                   "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
                "Version" -> {13., 1}, "ID" -> 3778842250428737266|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13., 1}, "ID" -> 7708644319899565307|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {591.6847826086956}, 
                "StandardDeviation" -> {96.16244514043704}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13., 1}, "ID" -> 1637828263618835904|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Version" -> {13., 1}, "ID" -> 7457467337844711562|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (591.6847826086956 + 
          96.16244514043704 #& ), 
         "ProcessorFunction" -> (-6.152971482210031 + 
          0.010399070016778228` #& ), "Name" -> "value", 
         "Quantiles" -> {-2.1805267358007474`, 2.99821013255481}, "Mean" -> 
         591.6847826086956|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
       0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
       "Model" -> <|
        "Tree" -> MachineLearning`DecisionTree[<|
           "FeatureIndices" -> RawArray["Integer16",{3, 4, 4, 9, 12}], 
            "NumericalThresholds" -> {-0.39677863850251177`, \
-0.35365208403399123`, -0.01803980198768314, 
             0.3303961936444343, -0.7077537150269733}, "NominalSplits" -> {}, 
            "Children" -> 
            RawArray["Integer16",{{-3, -4}, {5, 3}, {-1, -2}, {-5, -6}, {1, 
              4}}], "LeafValues" -> 
            RawArray["Real32",{{-0.18563847243785858`, 
              0.6311913132667542}, {-0.9326383471488953, 
              0.7258819937705994}, {-0.2203020304441452, 
              1.2344082593917847`}, {-1.1718169450759888`, 
              0.6975368857383728}, {0.5466293692588806, 0.704845666885376}, {
              1.8647115230560303`, 0.6945192813873291}}], "RootIndex" -> 2, 
            "NominalDimension" -> 0|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Values", <|
           "Info" -> <|
             "(f1f2f3f4f5f6f7f8f9f10f11f12f13)" -> <|
               "Type" -> "NumericalVector", "Weight" -> 13|>|>, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
         "DecisionTree", "PostProcessor" -> 
         MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "DistributionSmoothing" -> <|"Value" -> 1, "Options" -> <||>|>, 
           "FeatureFraction" -> <|"Value" -> 1, "Options" -> <||>|>|>|>, 
       "TrainingInformation" -> <|
        "PanelCell" -> CellObject[167345], "TrainingFunction" -> Predict, 
         "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
         "ProcessorEntropyShift" -> 4.56603889829678, "PreprocessingTime" -> 
         0.2679454`6.879591299112343, "LossName" -> "StandardDeviation", 
         "BestModelInformation" -> 
         Dataset[<|
           "MeanCrossEntropy" -> 
            Around[6.140306033265759, 0.13118455464026893`], 
            "StandardDeviation" -> 
            Around[93.3393230478842, 6.064268668598005], "EvaluationTime" -> 
            0.00003644951819970378, "TestSize" -> 216, "ModelMemory" -> 
            6045.538461538462, "ModelUtility" -> -5.242312797420832, 
            "TrainingSize" -> 74, "TrainingTime" -> 0.015412367140385694`, 
            "TrainingMemory" -> 88523.69230769231, "ExperimentCount" -> 12, 
            "MeanCrossEntropyHistory" -> {
              Around[6.6207091954118145`, 0.43071938383292646`], 
              Around[5.972258187283766, 0.3464069194957426], 
              Around[5.998685150303949, 0.2039192169795501], 
              Around[5.783334524348479, 0.15439411648826243`], 
              Around[7.097957852686996, 0.7490742152485517], 
              Around[5.834755059451177, 0.11020102358042747`], 
              Around[5.690918556892575, 0.16897199382796005`], 
              Around[6.384666213030228, 0.3875610335084996], 
              Around[6.006942845250073, 0.2878295389426996], 
              Around[6.345824025445662, 0.44195852556407766`], 
              Around[5.957916692126459, 0.16943459445454384`], 
              Around[5.9897040969579285`, 0.22849063629370991`]}, 
            "StandardDeviationHistory" -> {
              Around[109.5023000822486, 15.23967666734816], 
              Around[85.69378047499832, 19.217508929902095`], 
              Around[91.80617206737075, 12.644560050254157`], 
              Around[81.09652753842337, 11.519150774946272`], 
              Around[130.135932153563, 24.541325683335767`], 
              Around[77.84934475155315, 7.776557801644649], 
              Around[69.3303973268244, 10.940290870671141`], 
              Around[102.89691651590815`, 13.099365980687802`], 
              Around[95.475868041499, 17.94105788482768], 
              Around[109.20857300274686`, 20.733195849205405`], 
              Around[84.38331427562773, 9.44829122824516], 
              Around[82.69275034384708, 10.432350681335135`]}, 
            "Configuration" -> {
             "DecisionTree", "DistributionSmoothing" -> 1, "FeatureFraction" -> 
              1}, "FinalTrainingSize" -> 92|>, 
           
           TypeSystem`Struct[{
            "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
             "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
             "TrainingTime", "TrainingMemory", "ExperimentCount", 
             "MeanCrossEntropyHistory", "StandardDeviationHistory", 
             "Configuration", "FinalTrainingSize"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[TypeSystem`AnyType, 12], 
             TypeSystem`Vector[TypeSystem`AnyType, 12], 
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType}], 
             TypeSystem`Atom[Integer]}], <||>], "Configurations" -> 
         Dataset[<|<|
             "Value" -> "DecisionTree", 
              "Options" -> <|
               "DistributionSmoothing" -> <|"Value" -> 1|>, 
                "FeatureFraction" -> <|"Value" -> 1|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[6.302273532182652, 0.23695161857523614`], 
                 "StandardDeviation" -> 
                 Around[93.03379762501592, 10.982691269300378`], 
                 "EvaluationTime" -> 0.000024332467255718035`, "TestSize" -> 
                 82, "ModelMemory" -> 5952, 
                 "ModelUtility" -> -5.2494595022580235`, "TrainingSize" -> 10,
                  "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
                 1040328, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[6.302273532182652, 0.16755009630767775`]}, 
                 "StandardDeviationHistory" -> {
                   Around[93.03379762501592, 7.765935472200588]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[6.140306033265759, 0.13118455464026893`], 
                 "StandardDeviation" -> 
                 Around[93.3393230478842, 6.064268668598005], 
                 "EvaluationTime" -> 0.00003644951819970378, "TestSize" -> 
                 216, "ModelMemory" -> 6045.538461538462, 
                 "ModelUtility" -> -5.242312797420832, "TrainingSize" -> 74, 
                 "TrainingTime" -> 0.015412367140385694`, "TrainingMemory" -> 
                 88523.69230769231, "ExperimentCount" -> 12, 
                 "MeanCrossEntropyHistory" -> {
                   Around[6.6207091954118145`, 0.43071938383292646`], 
                   Around[5.972258187283766, 0.3464069194957426], 
                   Around[5.998685150303949, 0.2039192169795501], 
                   Around[5.783334524348479, 0.15439411648826243`], 
                   Around[7.097957852686996, 0.7490742152485517], 
                   Around[5.834755059451177, 0.11020102358042747`], 
                   Around[5.690918556892575, 0.16897199382796005`], 
                   Around[6.384666213030228, 0.3875610335084996], 
                   Around[6.006942845250073, 0.2878295389426996], 
                   Around[6.345824025445662, 0.44195852556407766`], 
                   Around[5.957916692126459, 0.16943459445454384`], 
                   Around[5.9897040969579285`, 0.22849063629370991`]}, 
                 "StandardDeviationHistory" -> {
                   Around[109.5023000822486, 15.23967666734816], 
                   Around[85.69378047499832, 19.217508929902095`], 
                   Around[91.80617206737075, 12.644560050254157`], 
                   Around[81.09652753842337, 11.519150774946272`], 
                   Around[130.135932153563, 24.541325683335767`], 
                   Around[77.84934475155315, 7.776557801644649], 
                   Around[69.3303973268244, 10.940290870671141`], 
                   Around[102.89691651590815`, 13.099365980687802`], 
                   Around[95.475868041499, 17.94105788482768], 
                   Around[109.20857300274686`, 20.733195849205405`], 
                   Around[84.38331427562773, 9.44829122824516], 
                   Around[82.69275034384708, 10.432350681335135`]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00003644951819970378, "ModelMemory" -> 
                6045.538461538462, "StandardDeviation" -> 
                Around[93.3393230478842, 6.064268668598005], "TrainingMemory" -> 
                88523.69230769231, "TrainingTime" -> 0.05399009482450455|>, 
              "Index" -> 1|>|>, 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Struct[{"Value"}, {
                 TypeSystem`Atom[Integer]}], 2]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                 "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
                 "TrainingTime", "TrainingMemory", "ExperimentCount", 
                 "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                 TypeSystem`Vector[
                 TypeSystem`AnyType, TypeSystem`AnyLength]}], 2], 
              TypeSystem`Struct[{
               "EvaluationTime", "ModelMemory", "StandardDeviation", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 1], <||>], "MaxTrainingSize" -> 92, 
         "PreprocessorEvaluationTime" -> 0.0000123359375, 
         "PreprocessorMemory" -> 112072, "InputDimension" -> 13, 
         "OutputDimension" -> 1, 
         "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
         True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, 
         "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
         "LastReportingTime" -> 3.8801957838695249`17.341428628596688*^9, 
         "RoundPartitioning" -> 
         Dataset[{<|
            "TrainingSizes" -> 10, "TimeBudgets" -> 0.07264367203918791, 
             "ElapsedTimes" -> 0.2175159, "ExperimentCounts" -> 1|>, <|
            "TrainingSizes" -> 74, "TimeBudgets" -> 0.36321836019593917`, 
             "ElapsedTimes" -> 0.3642533, "ExperimentCounts" -> 12|>}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 2], <||>]|>, "AnomalyDetector" -> 
       None, "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, "ID" -> 
              160786463559880376|>, 
            "f2" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.}, "ID" -> 
              4287842684044921566|>, 
            "f3" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.35714285714285715`}, "ID" -> 
              3584571402766016900|>, 
            "f4" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.41612903211241925`}, "ID" -> 
              3999425147071556158|>, 
            "f5" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.5}, "ID" -> 
              2282291538913019799|>, 
            "f6" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, "ID" -> 
              7158108382135739184|>, 
            "f7" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.3}, "ID" -> 
              8419490369520109814|>, 
            "f8" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.4810653026665862}, "ID" -> 2281715898823819937|>,
             "f9" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.4166666666666667}, "ID" -> 3191500091120879101|>,
             "f10" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.08333338541272477}, "ID" -> 
              3882821336254497341|>, 
            "f11" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.49829578012882714`}, "ID" -> 
              2647614518606905170|>, 
            "f12" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.25}, "ID" -> 
              5889873695267358448|>, 
            "f13" -> <|
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.1111111111111111}, "ID" -> 
              7623899711093183740|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 1.4563196, 
         "MaxTrainingMemory" -> 1516880, "DataMemory" -> 198048, 
         "FunctionMemory" -> 203352, "LanguageVersion" -> {13., 1}, "Date" -> 
         DateObject[{2022, 12, 16, 16, 9, 44.3006321`9.398984792111756}, 
           "Instant", "Gregorian", -5.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>], 
    "TestSet" -> <|"Input" -> CompressedData["
1:eJxTTMoPSmViYGAQB2JeBhh4YM+ABgpfN02WYLmGJv7AftZMENhpL/DW+W5B
52ao/AX753yTHkxZstd+Wur/I9++XrNfvQoEHtmHgsFVe3R7Jql4AtEh+6pb
h+pmJ12xlzleCER70NRdsN8xYxXrlXMn4OZEpxtP91A6at/oem52/tYXUPG3
UPUfcNizyR7mH4g9a+DqjMHgsH1D6ua9x9wOwO19fXbuklXKR+2rNs42XvP/
NtSep/ZFYAMeooeXw+1tuSBkP/nChEsTit/D1cPsSQODZ/Yxqqm77N49gdtz
SXfFtzsuR+yVjf2Pul95QnS4ofoHEW6Q+DlpX3PlCM/VE8fg9vi/Sl9RMuWi
/dxbLzbLOz6A2vPK3rLvsUXf4xdUC7eFokcvVLhusO/z2f2t9eZdHOFGuX9i
3Q7+//Nqk/21huf1B9feJ+gfGLiq5P7D4N11HOl6pb3BL9u9c98vhLr7qL3t
jph28R8T7P9MvXD0w6cz8HjBnl6R7NntK5W48zmGPTD353xVKp4y4SjcntT/
zV/st+y2l9p6e8+t1LtwdYTsITWfNi1//bDq9BL7kua5KpFTz8PNRU1vH+D0
dnCyRpiPqo6BAR5uF44tDrh3EBoPt+zXik2Ys7Jrm/0EW+lI65bDaOF2Bs0/
CHsyhE/HLjbdZY/Lninrm96ZvzoCt+dBzKuyRxy+9g0bHoXmJtQRHT+khpvw
bIM/Fxz32tdNTlAoUL8Ct59QPj0vqRu52PQWjnS9074gMY3/0IuNUHO22qcG
SslOPbvD3ijDN2dO3VUi7dmEZs8aNHtW2gtcs/wz6coyuD1se+b/eXZ4gX3G
vBDLzyJHCaY3YvPpDoUINua2w4jyINl1gk7DFfv4ZSsXZRs8goq/IFjuwPIp
dv/stGe4fbDm9e+t8Pyjs5Dz77v3G+yZnLO8bj+8SnQ5Sih+LnyWZLU5hgg3
prPsKsltK+3zElRtnI8Snw5ILd9yuTU+3PO9Zr84W/LT64ePiS6vSQ23uq1L
Ys6lbrHXWr6zKHTKdbh6aqc3sa/z+DkzWu15Nm7yeld0Ah5uhNIbqn8Q6mD1
z4eXhowHviD849Ld3ea9cqt9k1D0p+lG9+DpAHu9/QBu3iL5ab8M3h2H2nMH
rg5mT9H82UsCii7AzZvhvtGW50H2fodbXZcXSc7EyD8AGbxXUw==
       "], 
      "Output" -> {659, 720, 618, 536, 700, 801, 614, 566, 633, 664, 787, 575,
        701, 605, 591, 655, 487, 490, 627, 716, 505, 587, 419}|>, 
    "Predictions" -> {644.2499993422044, 644.2499993422044, 644.2499993422044,
      501.9999987151221, 644.2499993422044, 644.2499993422044, 
     644.2499993422044, 573.8333331869355, 501.9999987151221, 
     644.2499993422044, 478.99999991319135`, 478.99999991319135`, 
     644.2499993422044, 573.8333331869355, 573.8333331869355, 
     644.2499993422044, 573.8333331869355, 573.8333331869355, 
     644.2499993422044, 573.8333331869355, 573.8333331869355, 
     573.8333331869355, 478.99999991319135`}, "Distributions" -> {
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[501.9999987151221, 69.80258740439632], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[478.99999991319135`, 67.07685250824758], 
      NormalDistribution[478.99999991319135`, 67.07685250824758], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[644.2499993422044, 67.77968277433973], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[573.8333331869355, 60.69690003513466], 
      NormalDistribution[478.99999991319135`, 67.07685250824758]}, 
    "Modes" -> {644.2499993422044, 644.2499993422044, 644.2499993422044, 
     501.9999987151221, 644.2499993422044, 644.2499993422044, 
     644.2499993422044, 573.8333331869355, 501.9999987151221, 
     644.2499993422044, 478.99999991319135`, 478.99999991319135`, 
     644.2499993422044, 573.8333331869355, 573.8333331869355, 
     644.2499993422044, 573.8333331869355, 573.8333331869355, 
     644.2499993422044, 573.8333331869355, 573.8333331869355, 
     573.8333331869355, 478.99999991319135`}, "Weights" -> 
    SparseArray[Automatic, {23}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.0027332521739130435`, "SingleEvaluationTime" -> 
    0.00761323125, "Version" -> {13., 1}|>]]], "Output",
 CellChangeTimes->{3.8801149048520203`*^9, 3.880130161222133*^9, 
  3.880193576657007*^9, 3.880212947414119*^9, 3.8802137860450835`*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"2ef8940c-bd29-422c-917c-756be3452c64"]
}, Open  ]],

Cell[TextData[{
 "Now add a code block to include the performance metrics for the Decision \
Tree regression in our ",
 StyleBox["metrics",
  FontSlant->"Italic"],
 " Association."
}], "Text",
 CellChangeTimes->{{3.8733798187639685`*^9, 
  3.8733798509212193`*^9}},ExpressionUUID->"773ff85b-8018-4ad7-9cb8-\
caece0c127c0"],

Cell[TextData[StyleBox["ADD A CODE BLOCK HERE TO PLOT THE DECISION TREE \
RESULTS AND CALCULATE PERFORMANCE METRICS",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.872960406229286*^9, 
  3.872960409542653*^9}},ExpressionUUID->"a0a7682d-749e-44ee-903e-\
bd67dbaa0ffa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random Forest Regression", "Subsection",
 CellChangeTimes->{{3.872773033635099*^9, 3.8727730364350777`*^9}, {
  3.8729603869952617`*^9, 
  3.872960389600374*^9}},ExpressionUUID->"2c0b70d5-aae2-4e09-879a-\
37587e647e03"],

Cell["\<\
Random Forest builds a collection of Decision Trees, where each tree is \
trained with a random subset of training instances and a random subset of \
features. The final prediction is determined as the average output among the \
collection of trees. The Random Forest algorithm is less prone to overfitting \
data than the Decision Tree algorithm.\
\>", "Text",
 CellChangeTimes->{{3.8727730428915033`*^9, 3.872773044226859*^9}, {
   3.872960288776902*^9, 3.872960318689319*^9}, 3.8729604370918865`*^9, 
   3.872960579165857*^9, {3.87296308019528*^9, 3.8729630962470913`*^9}, {
   3.8730183047209425`*^9, 3.8730183058430066`*^9}, {3.8730183525151525`*^9, 
   3.873018565286152*^9}, {3.8733799222292876`*^9, 
   3.8733799461783967`*^9}},ExpressionUUID->"75cca9ba-06b9-48b2-9dea-\
03b08fbf6f59"],

Cell["\<\
https://jakevdp.github.io/PythonDataScienceHandbook/05.08-random-forests.html#\
Random-Forest-Regression\
\>", "Item",
 CellChangeTimes->{{3.8733799523250465`*^9, 
  3.873379957425902*^9}},ExpressionUUID->"14a2d590-1745-44f9-a38c-\
60f805693d59"],

Cell["https://en.wikipedia.org/wiki/Random_forest", "Item",
 CellChangeTimes->{{3.8733799523250465`*^9, 
  3.8733799632091446`*^9}},ExpressionUUID->"0dedf8fa-a6c4-488e-8121-\
0654e1ebc60a"],

Cell[TextData[{
 "To train a Random Forest model, you can simply change the \
\[OpenCurlyDoubleQuote]Method\[CloseCurlyDoubleQuote] to \
\[OpenCurlyDoubleQuote]RandomForest\[CloseCurlyDoubleQuote] in the ",
 ButtonBox["Predict",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Predict.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Predict.html"],
 " function. Add a code block below to train a Random Forest model, plot the \
predicted vs. actual wavelength, and calculate the performance metrics."
}], "Text",
 CellChangeTimes->{
  3.873379924706942*^9, {3.8801937498963203`*^9, 
   3.880193800114571*^9}},ExpressionUUID->"09ddaa22-f89e-4b36-84a5-\
400685228a7b"],

Cell[TextData[StyleBox["ADD A CODE BLOCK HERE TO TRAIN A RANDOM FOREST MODEL, \
PLOT THE RESULTS, RESULTS AND CALCULATE PERFORMANCE METRICS ",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.872960616512312*^9, 3.87296062265821*^9}, {
  3.8730185704788685`*^9, 
  3.8730185774155426`*^9}},ExpressionUUID->"86c4612f-d718-41d1-827d-\
c25c02c05ff7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Feature Importance using SHapley Additive \
exPlanations (SHAP)", "Section"]], "Subsection",
 CellChangeTimes->{{3.872773126275247*^9, 
  3.872773136275125*^9}},ExpressionUUID->"cc614a22-1692-4853-9464-\
d4a1340bfb65"],

Cell["\<\
For the linear regression models in Part I of this activity, we used the \
coefficients to determine which features were most important in the model. \
But for non-linear models, like DecisionTree or RandomForest, determining \
feature importance can be more difficult. There are a few model-specific \
approaches that can be used, but here we will implement a general approach \
called SHapley Additive exPlanations (SHAP).

SHAP is a method derived from Game Theory (a topic in Economics) that brings \
interpretability to machine learning models, showing the contribution of each \
feature in a model-agnostic way. For more information see:\
\>", "Text",
 CellChangeTimes->{{3.872773137611163*^9, 3.872773139331484*^9}, {
  3.872773871387892*^9, 3.872773892044042*^9}, {3.8729607129325504`*^9, 
  3.8729607628776875`*^9}, {3.8729607978193693`*^9, 3.872960811505104*^9}, {
  3.873380048387024*^9, 3.8733800491177692`*^9}, {3.8801938173158226`*^9, 
  3.880193848709999*^9}, {3.883647893173605*^9, 
  3.883647901818825*^9}},ExpressionUUID->"3eb140ed-ed95-40a6-99d7-\
fdb9f53966a1"],

Cell["\<\
Original report (\[OpenCurlyDoubleQuote]A Unified Approach to Interpreting \
Model Predictions\[CloseCurlyDoubleQuote] by Scott M. Lundberg and Su-In \
Lee): https://papers.nips.cc/paper/2017/hash/8a20a8621978632d76c43dfd28b67767-\
Abstract.html\
\>", "Item",
 CellChangeTimes->{{3.8733799978551664`*^9, 3.8733800198707123`*^9}, {
  3.880124687667261*^9, 3.8801247168006067`*^9}, {3.8801938619523163`*^9, 
  3.8801938913701954`*^9}},ExpressionUUID->"7887d003-e413-4c72-81c2-\
2ed878f4c8f0"],

Cell["https://shap.readthedocs.io/en/latest/index.html", "Item",
 CellChangeTimes->{{3.8733799978551664`*^9, 3.8733800031706877`*^9}, {
  3.873380051132555*^9, 3.8733800621365886`*^9}, {3.873560025680029*^9, 
  3.8735600437008324`*^9}},ExpressionUUID->"066e0d5a-ae2a-4523-bb46-\
2251b94cb802"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SHAP Analysis for Decision Tree Regression", "Subsection",
 CellChangeTimes->{{3.8733802911819515`*^9, 
  3.8733802970826416`*^9}},ExpressionUUID->"424c011d-4690-4dcb-a3c3-\
21156d720794"],

Cell["\<\
Now let\[CloseCurlyQuote]s try to understand our Decision Tree model using \
the SHAP approach. The code block below performs SHAP analysis on our \
Decision Tree model and displays a plot of feature importance:\
\>", "Text",
 CellChangeTimes->{{3.8729608157962713`*^9, 3.872960881404893*^9}, {
  3.872970510404625*^9, 3.872970513494508*^9}, {3.873380073920251*^9, 
  3.8733800766612315`*^9}, {3.873814226442066*^9, 
  3.8738142370629544`*^9}},ExpressionUUID->"047cdf4e-1be5-403a-be4c-\
d9161d85fdd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"note", ":", " ", 
    RowBox[{
    "the", " ", "\"\<Quiet\>\"", " ", "below", " ", "suppresses", " ", 
     "error", " ", "messages", " ", "that", " ", 
     RowBox[{"aren", "'"}], "t", " ", "important", " ", "for", " ", "the", 
     " ", "results"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"shapPlotDecisionT", "=", 
   RowBox[{
    RowBox[{"PredictorMeasurements", "[", 
     RowBox[{"decisionT", ",", "train", ",", "\"\<SHAPPlots\>\""}], "]"}], "//",
     "Quiet"}]}]}]], "Input",
 CellChangeTimes->{{3.872773148251872*^9, 3.872773166779434*^9}, {
   3.872773382413253*^9, 3.872773386539563*^9}, {3.8727738686633377`*^9, 
   3.87277386955688*^9}, {3.8729608876255407`*^9, 3.872960912622465*^9}, {
   3.8733801677604704`*^9, 3.873380169062379*^9}, 3.880193905082678*^9, {
   3.8801940737400856`*^9, 3.8801940752292604`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"635c5a92-2f4f-4c80-bce7-369505464328"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Opacity[0.05], 
    TagBox[ConicHullRegionBox[{0, 1}, {{1, 0}}],
     "InfiniteLine"], 
    TagBox[ConicHullRegionBox[{0, 2}, {{1, 0}}],
     "InfiniteLine"], 
    TagBox[ConicHullRegionBox[{0, 3}, {{1, 0}}],
     "InfiniteLine"], 
    TagBox[ConicHullRegionBox[{0, 4}, {{1, 0}}],
     "InfiniteLine"], 
    TagBox[ConicHullRegionBox[{0, 5}, {{1, 0}}],
     "InfiniteLine"], 
    TagBox[ConicHullRegionBox[{0, 6}, {{1, 0}}],
     "InfiniteLine"], 
    TagBox[ConicHullRegionBox[{0, 7}, {{1, 0}}],
     "InfiniteLine"], 
    TagBox[ConicHullRegionBox[{0, 8}, {{1, 0}}],
     "InfiniteLine"], 
    TagBox[ConicHullRegionBox[{0, 9}, {{1, 0}}],
     "InfiniteLine"], 
    TagBox[ConicHullRegionBox[{0, 10}, {{1, 0}}],
     "InfiniteLine"], 
    TagBox[ConicHullRegionBox[{0, 11}, {{1, 0}}],
     "InfiniteLine"], 
    TagBox[ConicHullRegionBox[{0, 12}, {{1, 0}}],
     "InfiniteLine"], 
    TagBox[ConicHullRegionBox[{0, 13}, {{1, 0}}],
     "InfiniteLine"]}, 
   {PointSize[0.006944444444444445], 
    PointBox[{{
      8.513101063346245, 1}, {-2.058356085330353, 1}, {-25.21218702950891, 
       1}, {-21.620625398922694`, 1}, {-2.169278157049834, 
      0.9319727891156463}, {-7.059963834425038, 1}, {-18.517451677699885`, 
       1}, {-5.250876928225016, 1}, {
      1.95738556367631, 1}, {-8.550398666200454, 1}, {-19.61513152462806, 
       1}, {-20.140026196344362`, 1}, {2.403789654561521, 1}, {
      2.930722424444614, 1}, {-10.978346516870642`, 1}, {
      26.066948692859675`, 1}, {-0.6256810543698366, 
       1}, {-2.3327485781322324`, 1.0680272108843538`}, {-20.234489596761424`,
       0.9319727891156463}, {-8.95375780202686, 1}, {2.8164699296516216`, 
      0.9319727891156463}, {2.830221383734346, 1.0680272108843538`}, {
      2.4838337929748437`, 0.9319727891156463}, {-5.2199627134949464`, 
      0.9319727891156463}, {
      11.506259168709313`, 1}, {-4.3956355195124805`, 
       1}, {-1.7751191869577632`, 1}, {-4.048194621595038, 
       1}, {-14.623782431829252`, 1}, {-5.17917714010502, 
      1.0680272108843538`}, {4.9024575845781015`, 1}, {
      6.5134127772721815`, 1}, {2.095096103025228, 1.0680272108843538`}, {
      1.0296096630306657`, 1}, {27.10875744531464, 1}, {
      7.6524111632701155`, 1}, {-0.9447403650003353, 
       1}, {-1.2577222108956945`, 
      0.9319727891156463}, {-13.881775389147737`, 1}, {2.4961856038249084`, 
      0.8639455782312926}, {5.2591749463351, 0.9319727891156463}, {
      0.2817813489552227, 1}, {-6.340487207285836, 1}, {-3.819304494174377, 
      0.9319727891156463}, {8.980433478542645, 1}, {3.699301883221556, 1}, {
      1.5318515538070572`, 
      0.9319727891156463}, {-9.738120875119659, 1}, {-16.787839787061824`, 
       1}, {-0.20432175257644813`, 0.9319727891156463}, {-3.849440490400482, 
      1.0680272108843538`}, {11.132258252638747`, 1}, {2.087284928948347, 
      1.1360544217687074`}, {2.5048090054566954`, 
      0.7959183673469388}, {-1.840890284479405, 0.9319727891156463}, {
      5.429168457126339, 1.0680272108843538`}, {
      5.86314000238701, 1}, {-3.6641314080208858`, 1}, {
      4.030594460373716, 1}, {-3.478030131394276, 
      0.9319727891156463}, {-2.1216044691909035`, 0.8639455782312926}, {
      1.3916203402358542`, 0.9319727891156463}, {1.3610321098374287`, 
      1.0680272108843538`}, {-3.087771224663602, 1}, {26.296992448176947`, 
      0.9319727891156463}, {9.287393124046403, 0.9319727891156463}, {
      0.0755736719975289, 1.0680272108843538`}, {1.9788253941094893`, 
      1.0680272108843538`}, {-3.412893225710819, 
      1.0680272108843538`}, {-7.384806355550808, 1}, {-3.686852817044908, 
      0.8639455782312926}, {0.9803215347836453, 
      0.8639455782312926}, {-2.540806198862526, 1.1360544217687074`}, {
      1.371496225302253, 1.1360544217687074`}, {-2.5144500877417597`, 
      0.7959183673469388}, {7.7055518409253505`, 
      0.9319727891156463}, {-1.1259004556387517`, 
      1.0680272108843538`}, {-16.078724426200925`, 1}, {
      12.422250484349679`, 1}, {9.6413655058673, 1}, {2.830870455558402, 
      0.8639455782312926}, {4.791068346903183, 1}, {
      0.3169537671842376, 1}, {-1.3234069675156364`, 0.8639455782312926}, {
      0.2307366146484187, 0.8639455782312926}, {-2.1084954682314874`, 
      1.2040816326530612`}, {12.345705438125593`, 0.9319727891156463}, {
      1.456798566866326, 0.8639455782312926}, {2.5631781122295814`, 
      1.2040816326530612`}, {32.045811260294926`, 1}, {
      31.565366346794423`, 1}, {-0.1297382749126223, 1.1360544217687074`}, {
      17.2207057122959, 2}, {-7.88272321429906, 2}, {
      3.4670621451594545`, 2}, {-0.2684553804447566, 2}, {
      13.225447016451575`, 2}, {
      30.766456683627684`, 2}, {-7.028977941954815, 2}, {
      2.7876230191192493`, 2}, {-6.266970026912893, 2}, {
      5.371519760422201, 2}, {-6.314120401422424, 1.9206349206349207`}, {
      14.568668040406283`, 2}, {4.890034251061517, 2}, {
      10.010367566744774`, 2}, {
      23.970466727469194`, 2}, {-3.4142427312033172`, 2}, {
      4.038150159836935, 2}, {
      6.615438668233183, 2}, {-2.002805810563872, 2}, {
      16.185878633417325`, 2}, {-5.86379922557864, 2}, {4.7519471221598, 
      1.9206349206349207`}, {1.4871156249511586`, 2}, {
      17.711507003529125`, 2}, {-6.211948537363081, 
      2.0793650793650795`}, {-4.181731926082973, 2}, {3.023200294336604, 
      1.9206349206349207`}, {3.619869473208107, 1.9206349206349207`}, {
      2.6703248161770143`, 2.0793650793650795`}, {-6.997869091443221, 
      1.9206349206349207`}, {9.284853057352713, 2}, {-4.097790443908845, 
      1.9206349206349207`}, {6.013878707566859, 2}, {
      27.733759475037978`, 2}, {
      1.0701777209351009`, 2}, {-0.42681400893311944`, 2}, {3.465314490347545,
       2.0793650793650795`}, {-14.676424881025977`, 2}, {
      10.645078439551085`, 2}, {-5.212718126478885, 2}, {
      2.570297246815417, 2}, {
      9.086013329441172, 2}, {-8.491861662214077, 2}, {-1.3169264075449123`, 
       2}, {1.3604504714616037`, 
      1.9206349206349207`}, {-10.35605165481225, 2}, {5.8575424628708666`, 
      1.9206349206349207`}, {-5.279010551280501, 1.9206349206349207`}, {
      7.855009735187921, 2}, {-1.8521363499078747`, 1.9206349206349207`}, {
      16.153143225220663`, 1.9206349206349207`}, {-0.3626279781675744, 
      1.9206349206349207`}, {-11.490920558596962`, 2}, {-6.656490912613015, 
      1.8412698412698414`}, {-4.443435203694797, 2}, {9.792286410016597, 
      1.9206349206349207`}, {0.360012698645194, 2}, {8.399209556063173, 2}, {
      28.511579388645362`, 2}, {1.2143130792475598`, 
      2.0793650793650795`}, {-16.07624853943035, 2}, {8.7644204153284, 
      1.9206349206349207`}, {1.1746257404076677`, 1.8412698412698414`}, {
      5.401845391580419, 1.9206349206349207`}, {-14.308756580420543`, 2}, {
      3.0752712640970397`, 1.8412698412698414`}, {1.4811045158493161`, 
      1.9206349206349207`}, {-16.862130771946838`, 2}, {-3.831124468237342, 
      1.9206349206349207`}, {-15.506365668722369`, 2}, {-0.6360595385790859, 
      2.0793650793650795`}, {4.683565186573529, 
      2.0793650793650795`}, {-4.861347554966091, 1.9206349206349207`}, {
      9.207721572976352, 1.9206349206349207`}, {21.565851999896424`, 2}, {
      8.421898585846028, 1.9206349206349207`}, {-8.092999680538302, 
      1.9206349206349207`}, {-0.6791209576611369, 
      1.8412698412698414`}, {-1.4255870606917764`, 1.9206349206349207`}, {
      10.803350314606783`, 1.9206349206349207`}, {-6.622786502727507, 
      2.1587301587301586`}, {-8.729906170775758, 2}, {-13.999168208665457`, 
      1.9206349206349207`}, {8.286820636207178, 2.0793650793650795`}, {
      9.784349875902492, 2.0793650793650795`}, {16.11648156930609, 
      2.0793650793650795`}, {-6.759706376601663, 
      1.7619047619047619`}, {-9.568378509495053, 2}, {-28.326127572064546`, 
       2}, {-13.693094627384509`, 2}, {6.251437364948399, 
      1.9206349206349207`}, {-7.2655717233355706`, 2.0793650793650795`}, {
      1.7930407167722624`, 3}, {-1.4902441399127098`, 3}, {
      7.686805190090974, 3}, {15.160255415142647`, 3}, {
      5.921406036605276, 3}, {11.16338676378997, 3}, {
      19.689608027262427`, 3}, {-0.2923081811015136, 3}, {15.269962184715055`,
       2.9047619047619047`}, {
      10.09224013321052, 3}, {-0.5465116972334504, 3}, {
      23.454361733317807`, 3}, {-1.2458448359232674`, 3}, {
      0.07817073412450184, 2.9047619047619047`}, {6.8236034256516485`, 3}, {
      16.54378955894813, 3}, {11.802081917121138`, 3}, {7.87467816005982, 
      2.9047619047619047`}, {-10.924499658982914`, 3}, {-7.944738132582061, 
       3}, {6.2708326362959195`, 3}, {
      7.9576205927570385`, 3}, {-10.747001397964102`, 3}, {-9.576974442827554,
        3}, {16.956401184393545`, 3}, {13.551725038951318`, 3}, {
      8.498575334313317, 2.9047619047619047`}, {
      0.9808505356663921, 3}, {-13.530549399174673`, 3}, {-5.048679980733617, 
       3}, {-0.3405400869554362, 2.9047619047619047`}, {
      25.8126200617451, 3}, {8.72515873737682, 3}, {10.955628028859168`, 
      2.9047619047619047`}, {-2.7785073583892657`, 3}, {
      4.594474938914415, 3}, {-5.3754527368259115`, 2.9047619047619047`}, {
      9.749833348073548, 2.9047619047619047`}, {-1.1870489090137761`, 
      2.9047619047619047`}, {3.3843826163585593`, 3}, {6.111835869896137, 
      2.9047619047619047`}, {7.508306543414775, 
      3.0952380952380953`}, {-9.571939529212184, 
      2.9047619047619047`}, {-0.9972516763138688, 3.0952380952380953`}, {
      7.254220497213862, 2.9047619047619047`}, {5.552998429077896, 3}, {
      9.83586981412059, 3.0952380952380953`}, {-12.210963520702773`, 3}, {
      2.081706317722427, 3}, {-9.265956552615341, 
      3.0952380952380953`}, {-13.908773704398254`, 3}, {11.706821147587704`, 
      2.9047619047619047`}, {6.908896116280278, 3.0952380952380953`}, {
      6.844941787371684, 2.8095238095238093`}, {
      0.4992186426828634, 3}, {-19.911242831166415`, 3}, {
      18.46101597149975, 3}, {0.16591030422491587`, 3.0952380952380953`}, {
      4.050371477478643, 3}, {-0.7624633875314571, 
      3.0952380952380953`}, {-5.439333054445864, 3.0952380952380953`}, {
      20.778713506237473`, 3}, {0.7367389712642315, 
      2.9047619047619047`}, {-15.321746362861592`, 3}, {0.6288221539281753, 
      3.0952380952380953`}, {8.880896040487023, 
      2.9047619047619047`}, {-8.85537501940103, 3}, {9.814017011931153, 
      2.8095238095238093`}, {-5.422747536144313, 
      2.8095238095238093`}, {-7.120151022562261, 3}, {-10.854905309889292`, 
      2.9047619047619047`}, {19.824411485004536`, 3}, {8.999304869395463, 
      3.0952380952380953`}, {-10.379877340613596`, 3.0952380952380953`}, {
      2.619725256060738, 2.9047619047619047`}, {-12.157724208497179`, 
      2.9047619047619047`}, {-10.933323021503345`, 
      2.9047619047619047`}, {-32.99071389439377, 3}, {-0.8348910184477866, 
      2.8095238095238093`}, {-0.7719602761123441, 
      3.1904761904761907`}, {-25.909201930426736`, 3}, {-2.374143150857028, 
       3}, {-18.217297127959156`, 3}, {-16.365330566476153`, 
       3}, {-8.697008444101732, 
      2.9047619047619047`}, {-16.951428733786706`, 3}, {-8.454577011790287, 
      2.9047619047619047`}, {-9.253891485456052, 
      2.8095238095238093`}, {-1.6739211531499143`, 
      2.9047619047619047`}, {-11.20349128535039, 
      3.0952380952380953`}, {-5.928703732195484, 3}, {-11.294258722965576`, 
      2.8095238095238093`}, {18.02306133941346, 4}, {-6.067524294131546, 4}, {
      23.495266398530095`, 4}, {32.81455816004064, 4}, {
      66.99165834496252, 4}, {66.15062720087543, 3.931972789115646}, {
      66.67942401488422, 4.068027210884353}, {78.98920666124933, 4}, {
      43.608003583950016`, 4}, {39.46337560913947, 4}, {
      73.24099245992487, 4}, {70.42286076283037, 4}, {33.783066019869025`, 
      3.931972789115646}, {39.77177165418692, 3.931972789115646}, {
      35.74736974677504, 4}, {44.50816339280262, 3.931972789115646}, {
      45.64833439970389, 4}, {72.69148785198784, 4}, {46.50840662139212, 
      3.931972789115646}, {10.527968239317437`, 4}, {44.17545973412223, 
      4.068027210884353}, {58.58912320987865, 4}, {29.59038740450316, 4}, {
      48.36885952823976, 4}, {26.33949296810539, 4}, {
      55.258049230737655`, 4}, {59.556923052160364`, 3.931972789115646}, {
      61.696451481395236`, 4}, {46.85361197549404, 4.068027210884353}, {
      55.88596913190357, 3.931972789115646}, {57.98873395894818, 4}, {
      61.68719808054347, 3.931972789115646}, {58.89046346967948, 
      4.068027210884353}, {54.12768977513187, 4}, {54.14998432542673, 
      3.931972789115646}, {50.7060653144938, 4}, {61.69931758533122, 
      4.068027210884353}, {54.733535080704556`, 
      4.068027210884353}, {-3.8316685917265456`, 4}, {-1.2834610040575618`, 
       4}, {-12.877994708437342`, 4}, {-1.6237017687878255`, 
      3.931972789115646}, {-8.533385221192017, 4}, {-12.842673074316599`, 
      3.931972789115646}, {-5.524100185400712, 
      3.931972789115646}, {-14.483141870342848`, 4}, {-14.696611882063513`, 
      3.931972789115646}, {-4.822382114283398, 4.068027210884353}, {
      7.752086226032442, 4}, {-9.780926313005068, 3.931972789115646}, {
      0.07453303247923236, 4}, {-22.40557371817794, 4}, {
      6.350442276088977, 4}, {-6.478056709463354, 
      3.8639455782312924`}, {-10.226399179566815`, 4}, {-11.40460617704707, 
      3.931972789115646}, {0.5659873089988137, 
      3.931972789115646}, {-1.1323002753343372`, 
      4.068027210884353}, {-12.584710268665644`, 
      4.068027210884353}, {-16.547315018473626`, 4}, {-14.949134539537503`, 
      4.068027210884353}, {-4.659650986013163, 
      4.136054421768708}, {-0.5112115948424653, 4.068027210884353}, {
      5.861910016082615, 3.931972789115646}, {11.328823049788847`, 
      3.931972789115646}, {-8.406673746472977, 
      4.068027210884353}, {-15.382188556877843`, 
      3.8639455782312924`}, {-3.9318356981305116`, 3.931972789115646}, {
      13.218136280348238`, 4}, {19.685221162591326`, 4}, {25.557431253311993`,
       3.931972789115646}, {6.815800286259662, 3.931972789115646}, {
      16.256256527230732`, 4}, {9.251754389870243, 4}, {17.576867525423832`, 
      3.931972789115646}, {-106.30757341076945`, 4}, {-28.973959074785096`, 
       4}, {-44.01290813679545, 4}, {-22.95204631600783, 
      3.931972789115646}, {-55.266137417568835`, 4}, {-52.7104675093724, 
       4}, {-32.42172779033527, 4}, {-13.36297634918311, 
      3.8639455782312924`}, {-12.919924377677322`, 
      4.136054421768708}, {-37.73481219649625, 4}, {-14.146120424917498`, 
      4.136054421768708}, {-32.24657879346922, 
      3.931972789115646}, {-5.092646227447101, 
      3.795918367346939}, {-5.487869117385307, 
      4.204081632653061}, {-3.360355751427118, 
      4.068027210884353}, {-10.38746695278478, 
      4.068027210884353}, {-27.043287279016774`, 4}, {
      5.336239119145932, 5}, {-6.199926994057881, 5}, {
      6.572136014293537, 5}, {16.90056342846776, 5}, {
      17.299216296996104`, 5}, {6.168404374689421, 5}, {
      11.876969574183377`, 5}, {-11.9388715824581, 5}, {
      9.552440730724628, 5}, {
      1.5103810540295544`, 5}, {-3.7883378652032884`, 5}, {
      13.459726546743253`, 5}, {5.31564103980184, 4.920634920634921}, {
      2.2731921671703472`, 5}, {1.8646419433900647`, 5}, {
      12.259816045091048`, 5}, {7.032994355769085, 4.920634920634921}, {
      8.555492504103903, 5}, {4.789873422292357, 5}, {
      3.1865342611659675`, 5}, {0.3059039111062624, 5}, {
      0.6092395798147648, 5}, {2.9669487900485114`, 4.920634920634921}, {
      5.730381777730324, 5.079365079365079}, {
      8.349825336065486, 5}, {-3.172367621082253, 5}, {-3.849647544828872, 
      4.920634920634921}, {2.1430484280953053`, 4.920634920634921}, {
      11.05139081550766, 5}, {8.981471301835668, 
      4.920634920634921}, {-15.08204424093174, 5}, {-3.014611975655953, 
      4.920634920634921}, {-0.687516685088951, 5}, {12.377460734979001`, 
      4.920634920634921}, {-4.759038439896398, 5}, {5.40818405132605, 
      4.841269841269841}, {-2.308506986472092, 5}, {-2.3336074852349515`, 
      4.920634920634921}, {7.747320415074745, 5}, {-4.315614750184411, 5}, {
      2.5354020998394207`, 4.920634920634921}, {5.802175668586712, 
      5.158730158730159}, {2.279597346614029, 
      5.079365079365079}, {-2.382987563170128, 5.079365079365079}, {
      8.095700953900623, 4.920634920634921}, {-6.068417398008224, 
      4.920634920634921}, {13.90957392538881, 4.920634920634921}, {
      7.823425811485872, 5.079365079365079}, {3.29414995477618, 
      5.079365079365079}, {2.838342654053591, 
      4.841269841269841}, {-7.251804043412277, 5}, {-2.0834867763827876`, 
       5}, {8.058593609432886, 4.841269841269841}, {13.710387896715051`, 
      5.079365079365079}, {23.496664777118127`, 5}, {
      3.8197614504544144`, 5}, {8.435517113329176, 
      5.079365079365079}, {-3.7208089351058566`, 
      5.079365079365079}, {-0.5153177419381578, 4.920634920634921}, {
      24.11481416073166, 5}, {-1.1442207176897639`, 5}, {5.034169164405186, 
      4.920634920634921}, {-9.568205267210498, 5}, {-5.287153150778347, 
      4.920634920634921}, {5.261384097992312, 5.079365079365079}, {
      5.827992197796478, 4.761904761904762}, {-1.4326594170009206`, 
      4.920634920634921}, {11.363536690847264`, 
      4.920634920634921}, {-11.27057731200371, 5}, {-16.31978522620658, 5}, {
      0.3587624159981841, 4.920634920634921}, {3.065955975407555, 
      5.158730158730159}, {-2.065881659300376, 4.920634920634921}, {
      10.349281796952084`, 5}, {-3.6707808968575826`, 
      4.841269841269841}, {-1.0306529473633996`, 5.079365079365079}, {
      3.356769249643929, 4.761904761904762}, {0.9102409605557343, 
      5.079365079365079}, {-17.860319444978064`, 5}, {-1.808491673751333, 
      5.079365079365079}, {-18.184111575046767`, 4.920634920634921}, {
      38.997809058002524`, 5}, {-1.1741299999708839`, 
      4.841269841269841}, {-23.21711302703394, 5}, {-6.1601706671119985`, 
      5.079365079365079}, {-18.27067082337491, 
      5.079365079365079}, {-2.753202149345526, 
      4.841269841269841}, {-4.053304327965236, 4.920634920634921}, {
      2.3622154458810587`, 
      4.841269841269841}, {-14.324848479973907`, 5}, {-8.586105735323565, 
       5}, {-11.071149453046905`, 
      4.920634920634921}, {-36.15857270767761, 6}, {
      6.710838873767044, 6}, {-15.945344825298722`, 6}, {
      3.195043459888406, 6}, {-20.219150187811163`, 6}, {
      6.081713154358514, 6}, {4.979308215614635, 6}, {
      9.097050948177076, 6}, {-7.328661427473944, 6}, {-2.5725122234433324`, 
       6}, {-1.1307207836097157`, 6}, {4.767706708028706, 6}, {
      8.042547113535539, 6}, {-0.2994541720912941, 6}, {
      5.961376718013674, 6}, {-4.24088786581837, 6}, {-4.232548597620246, 
      5.940476190476191}, {0.14960083932131726`, 5.940476190476191}, {
      17.371308945630226`, 6}, {-4.04103473804574, 6}, {
      10.46678752566084, 6}, {-0.171037354114452, 
      6.059523809523809}, {-10.306794003258888`, 6}, {3.3139479785626564`, 
      5.940476190476191}, {-6.901373469573193, 5.940476190476191}, {
      6.87241942956829, 5.940476190476191}, {6.188427101805459, 
      5.940476190476191}, {-2.8198254999805044`, 
      5.940476190476191}, {-0.19604904747202603`, 
      5.880952380952381}, {-1.8528485811763769`, 6}, {-1.1848229711113187`, 
      5.940476190476191}, {-30.84562954426132, 6}, {-7.407169239198197, 6}, {
      12.28921446580846, 6}, {-10.958925717472061`, 6}, {0.17783316198065427`,
       6.119047619047619}, {8.18216317242954, 
      5.940476190476191}, {-1.7455992222206713`, 5.940476190476191}, {
      2.1321423067017595`, 6}, {-1.078247601284898, 6.059523809523809}, {
      6.376355798289972, 
      6.059523809523809}, {-18.767965499230076`, 6}, {-0.26204270115255207`, 
      5.821428571428571}, {5.89913933663007, 5.940476190476191}, {
      1.4843982175369776`, 6}, {-2.1335786379045985`, 6.059523809523809}, {
      4.667899790107982, 5.940476190476191}, {-0.001447443976271543, 
      6.178571428571429}, {-12.872878769898527`, 6}, {
      14.706774998934028`, 6}, {10.151070970060895`, 
      5.940476190476191}, {-6.399894117465247, 6}, {0.17162653635991468`, 
      5.761904761904762}, {1.521851334807124, 5.940476190476191}, {
      7.670057520443624, 6}, {-8.305178061442222, 6}, {-13.817106196830787`, 
       6}, {4.816477866789299, 5.940476190476191}, {13.573321641771345`, 6}, {
      5.177513118599771, 6.059523809523809}, {-0.6196187912911055, 6}, {
      7.403037145291544, 5.940476190476191}, {4.917236799695744, 
      5.880952380952381}, {-14.402867908476514`, 6}, {-16.29839827247665, 
       6}, {8.471064991320457, 6.059523809523809}, {1.237064128711331, 
      6.059523809523809}, {-3.7530603045382316`, 
      5.940476190476191}, {-4.182980761658788, 
      6.059523809523809}, {-7.035542124784992, 6.059523809523809}, {
      3.315142978859482, 6.059523809523809}, {0.7602153013728435, 6}, {
      1.1440661984273353`, 5.880952380952381}, {-1.25809964560797, 
      5.880952380952381}, {27.58359672166374, 6}, {0.6971025084959945, 
      5.940476190476191}, {-0.5623906526911193, 
      5.940476190476191}, {-1.280892359182437, 
      6.119047619047619}, {-2.87997927352952, 6}, {-7.456356582503934, 
      5.940476190476191}, {15.44144356693863, 6}, {-0.3854699202790331, 
      6.059523809523809}, {1.6512789160882677`, 5.940476190476191}, {
      8.481594729350634, 5.880952380952381}, {4.792890688615626, 
      6.119047619047619}, {0.9264317841095369, 
      6.059523809523809}, {-6.671920977342662, 
      5.940476190476191}, {-9.380225506818094, 6}, {-1.2949862690939606`, 
      5.821428571428571}, {-8.089020217011447, 
      5.940476190476191}, {-16.99782960321611, 6}, {-15.30391238860834, 6}, {
      10.394027096952206`, 7}, {20.019744486671087`, 7}, {
      4.518524396700034, 7}, {
      11.080232681727036`, 7}, {-8.543196414086443, 7}, {4.3131591304134576`, 
      6.904761904761905}, {6.885081856869879, 7}, {7.839228400384818, 7}, {
      13.7821847523908, 7}, {
      8.125045973299901, 7}, {-8.15791772832619, 7}, {-2.3597339701658213`, 
       7}, {-0.3325732243056949, 7}, {6.551113277640271, 7}, {
      6.532821382073657, 6.904761904761905}, {-10.487207221500844`, 7}, {
      11.486612327632113`, 7}, {9.424391052671119, 7}, {
      1.9364661236607623`, 7}, {6.844097387265209, 
      6.904761904761905}, {-16.342606572856276`, 7}, {-5.7538431406013295`, 
       7}, {6.831502469882729, 
      7.095238095238095}, {-1.313637981993104, 7}, {-5.045062570324976, 7}, {
      4.670241617575745, 7}, {1.7042042951317768`, 
      6.904761904761905}, {-1.3527480151041895`, 
      6.904761904761905}, {-1.8727189064968843`, 7}, {6.555526516790439, 
      7.095238095238095}, {1.7529958698446655`, 7.095238095238095}, {
      12.282746568873817`, 7}, {-12.204790480460929`, 7}, {-4.141137282375603,
        7}, {2.7092942644407616`, 7}, {4.7277828762163985`, 
      6.904761904761905}, {2.551800209134408, 6.904761904761905}, {
      1.9504551209446976`, 6.809523809523809}, {
      0.3621556249247825, 7}, {-1.2786603137911978`, 7.095238095238095}, {
      5.9209075645859945`, 7}, {-6.764161288980983, 7}, {
      4.097448072848852, 7}, {4.104546865244144, 6.904761904761905}, {
      10.724864679037134`, 6.904761904761905}, {-8.637038030429414, 
      6.904761904761905}, {-6.669901533120195, 6.904761904761905}, {
      13.25720192711258, 7}, {-11.35987239776754, 7}, {
      11.841693182601626`, 7}, {-5.934093333160902, 7}, {
      5.901355556516962, 7}, {-4.242199501053212, 7}, {-6.484655660587635, 
      7.095238095238095}, {5.918908781978832, 6.904761904761905}, {
      0.5298199706549219, 6.904761904761905}, {-2.880375319084628, 7}, {
      4.642259077923319, 7.095238095238095}, {4.688648892962719, 
      6.809523809523809}, {-6.491422930958443, 6.809523809523809}, {
      9.139695200884566, 7}, {
      9.996612902961177, 7}, {-4.852243035788537, 7}, {-3.068083433021444, 
      6.904761904761905}, {8.742674951445242, 7}, {-1.5168125314946523`, 
      6.809523809523809}, {-7.929878448679073, 7}, {6.913856036735755, 
      6.809523809523809}, {12.93953153863613, 6.904761904761905}, {
      2.2270042650371344`, 7}, {-1.5348442816012957`, 
      6.904761904761905}, {-11.622931730613844`, 7}, {5.48050223218665, 
      6.904761904761905}, {-5.41872377990545, 6.904761904761905}, {
      14.440160007864703`, 7}, {4.594759870683775, 7.095238095238095}, {
      2.397670803083712, 6.904761904761905}, {1.0797751175530463`, 7}, {
      7.188132217999303, 7.190476190476191}, {2.526061372875429, 
      7.095238095238095}, {-1.1391965590842523`, 
      7.190476190476191}, {-9.858293257165418, 7}, {-17.831573946006767`, 
       7}, {-11.47643575151672, 6.904761904761905}, {0.4625763215478229, 
      7.095238095238095}, {-23.744603789966266`, 7}, {-10.412287297788927`, 
      6.904761904761905}, {-22.64310853022384, 7}, {-1.889192220399211, 
      7.095238095238095}, {2.2566783648192232`, 7.095238095238095}, {
      0.2267919700852531, 
      6.809523809523809}, {-3.6583079104192975`, 7}, {-13.583708622611322`, 
       8}, {-7.624560605206277, 8}, {-6.973542629553184, 8}, {
      12.481051944747813`, 8}, {
      10.92071825225366, 8}, {-4.819244812350744, 8}, {
      14.271997737233423`, 8}, {-13.701758945765011`, 
      7.920634920634921}, {-3.423337241367225, 8}, {-5.755373101045488, 8}, {
      2.514799658395696, 8}, {-9.801810818127462, 8}, {
      6.536283224137897, 8}, {3.473825282199171, 8}, {-8.87673506676333, 8}, {
      0.8601558039675723, 8}, {-5.155700576551998, 8}, {
      25.993558472271957`, 8}, {3.532229026081861, 7.920634920634921}, {
      1.7032429940130767`, 8}, {-5.449633197148115, 
      7.920634920634921}, {-5.44020404804772, 8.079365079365079}, {
      21.86031179560862, 8}, {-20.974196405212815`, 8}, {-8.245054446725089, 
       8}, {-6.837714758071378, 8}, {-8.719539125917294, 
      7.920634920634921}, {-9.006505142367523, 7.920634920634921}, {
      14.357924989150021`, 7.920634920634921}, {6.358194678745358, 
      7.920634920634921}, {-6.646946249339807, 7.920634920634921}, {
      2.8654952046727074`, 8}, {-14.829333317484108`, 8}, {-7.034177390985873,
       7.920634920634921}, {-12.186338800829203`, 8}, {-13.712354739850964`, 
      8.079365079365079}, {-8.918573320608987, 
      8.079365079365079}, {-0.8348361838316309, 8}, {-10.630188563662317`, 
       8}, {-4.005741158072982, 8}, {14.49029778327164, 
      8.079365079365079}, {-22.94887415226061, 8}, {-8.397380024273053, 
      8.079365079365079}, {-18.18151382926399, 8}, {-17.64767890941128, 8}, {
      12.476807100141583`, 
      7.920634920634921}, {-19.049288995969356`, 8}, {-1.6500891910549638`, 
       8}, {-18.328284138345055`, 
      7.920634920634921}, {-19.878254147599705`, 8}, {-14.033912359114154`, 
      7.841269841269841}, {4.387032952346706, 8}, {-7.104948581002442, 
      8.079365079365079}, {-14.708833626572229`, 8}, {
      11.93833464146879, 8}, {-5.396365974821339, 
      7.841269841269841}, {-2.568053869822417, 8}, {-12.364558826007418`, 
       8}, {-15.895180084743853`, 8}, {12.553927206572965`, 
      8.079365079365079}, {-19.477531471719125`, 
      7.920634920634921}, {-12.023930851674065`, 
      7.920634920634921}, {-18.85154109692834, 8}, {
      8.641941543390212, 8}, {-6.294466698342073, 
      7.920634920634921}, {-0.8908568349756357, 
      7.920634920634921}, {-11.057886360321072`, 
      7.920634920634921}, {-22.693865266035594`, 
      7.920634920634921}, {-13.577745226696083`, 8.158730158730158}, {
      3.580150278965602, 8.079365079365079}, {-9.443966560923158, 
      7.920634920634921}, {34.526151966429694`, 8}, {
      13.150109888461847`, 8}, {-19.743025421981166`, 
      7.920634920634921}, {-4.582769889709534, 
      7.920634920634921}, {-22.364848565979532`, 8}, {
      36.757549906917404`, 8}, {12.549893229361963`, 
      7.841269841269841}, {-13.646342038815648`, 7.761904761904762}, {
      1.7784015933903434`, 
      7.920634920634921}, {-16.50849511814949, 8}, {-17.404334823079864`, 
      7.920634920634921}, {-14.644336512543356`, 
      7.920634920634921}, {-3.548591516778637, 7.920634920634921}, {
      4.572606609674841, 8}, {1.5111597086422697`, 8.079365079365079}, {
      0.3797211169028667, 7.920634920634921}, {-12.55947013261344, 
      7.920634920634921}, {-13.262373253527544`, 8}, {-23.47570162883199, 
       8}, {-14.749184420306214`, 8.079365079365079}, {
      5.521409849630597, 8}, {-21.61179045792841, 9}, {
      11.88867956348349, 9}, {-17.477058349681016`, 9}, {-6.883825430906813, 
       9}, {3.099643318421151, 9}, {-0.8271154264028994, 9}, {
      12.890658736709787`, 9}, {-28.61414831176112, 9}, {-16.684975498694527`,
        9}, {-18.863238071432452`, 
      8.931972789115646}, {-32.623615293335845`, 9}, {-20.50095739123467, 
      8.931972789115646}, {-8.99085022026981, 9}, {-19.978832844388453`, 
       9}, {-5.93006618182668, 9}, {-16.860316269919235`, 
      8.931972789115646}, {-18.12634615388457, 
      9.068027210884354}, {-42.26414696053407, 9}, {
      5.592214263831943, 9}, {-11.482779294990294`, 9}, {-14.182235239113561`,
        9}, {-4.669112541809116, 9}, {-42.291147317814065`, 
      8.931972789115646}, {0.22903242637603, 9}, {
      0.9720196126559618, 9}, {-11.190542335750477`, 9}, {-6.85804593962726, 
      8.931972789115646}, {-17.271076393475937`, 
      9.068027210884354}, {-12.781980484254511`, 
      8.931972789115646}, {-29.482615765808937`, 9}, {-3.69660312557324, 
       9}, {-7.510066815791192, 9.068027210884354}, {-18.86627134969863, 
      8.863945578231293}, {-40.26550519298555, 9}, {-28.80905492522594, 
      8.931972789115646}, {-18.32780363996316, 9.136054421768707}, {
      1.995244418097872, 8.931972789115646}, {-6.312828232080842, 
      8.931972789115646}, {15.578146763407211`, 9}, {-18.661880405682577`, 
      8.795918367346939}, {-15.526254778973385`, 9}, {-12.199721128181798`, 
      9.068027210884354}, {-7.0133640872826, 
      8.863945578231293}, {-3.2984594848064392`, 
      8.931972789115646}, {-12.221964568548417`, 8.863945578231293}, {
      0.8532830567938423, 9.068027210884354}, {1.9839457711004242`, 
      8.863945578231293}, {-17.224448610533855`, 
      8.863945578231293}, {-15.386074911235648`, 
      8.931972789115646}, {-39.13270141440271, 9}, {-42.829375752354935`, 
      9.068027210884354}, {-16.35877777293257, 
      9.136054421768707}, {-8.09785700025416, 
      9.136054421768707}, {-36.06593979500703, 9}, {-17.14051070857553, 
      8.795918367346939}, {-18.57243950117748, 
      9.204081632653061}, {-13.320145260357892`, 
      8.931972789115646}, {-2.914366958029197, 9.068027210884354}, {
      3.2548673437209086`, 8.931972789115646}, {1.6145176371380283`, 
      9.136054421768707}, {-20.767737006788277`, 
      9.068027210884354}, {-20.844076304256223`, 
      8.863945578231293}, {-71.03874688892543, 9}, {-10.45663872295518, 
      8.931972789115646}, {-39.463585319874234`, 
      8.931972789115646}, {-41.699804735153094`, 
      8.863945578231293}, {-34.98848594938185, 9}, {-14.097209105823396`, 
      9.068027210884354}, {-27.803975621230798`, 9}, {-14.70294572830912, 
      9.068027210884354}, {-14.462687628352718`, 
      8.863945578231293}, {-12.926131489964304`, 
      8.863945578231293}, {-22.87386823453697, 9}, {
      7.987246610512828, 9}, {-33.88038178153742, 
      8.931972789115646}, {-21.810599904736456`, 
      9.136054421768707}, {-15.981454720682303`, 9.204081632653061}, {
      39.6199073885875, 9}, {32.02296578409893, 9}, {80.0489138119183, 9}, {
      10.11354802678967, 9}, {70.42606257123343, 9}, {-4.790399193019485, 
      8.931972789115646}, {-10.823707118012937`, 9.068027210884354}, {
      6.740480922492118, 8.931972789115646}, {11.557754102429485`, 
      8.931972789115646}, {-6.401393233502534, 
      9.068027210884354}, {-14.76711490138291, 9.136054421768707}, {
      14.874623213177962`, 8.931972789115646}, {-7.535264495163432, 
      8.795918367346939}, {-2.0920136816521233`, 
      8.931972789115646}, {-6.35392187700543, 
      8.863945578231293}, {-15.37006298382746, 10}, {-0.7851049229967609, 
       10}, {14.127252746885626`, 10}, {-2.6202518445703835`, 
       10}, {-3.33555228940127, 10}, {-13.774273555716416`, 
       10}, {-1.3166966532575661`, 10}, {2.699086772279829, 10}, {
      10.806330360338638`, 10}, {-13.751628721072146`, 
       10}, {-1.745435697796616, 10}, {-0.8394907261463099, 
      9.880952380952381}, {-7.7695712845302225`, 10}, {
      1.4123729699227334`, 10}, {-19.883278440591837`, 10}, {
      7.492692475748215, 10}, {0.554165806643275, 10}, {1.4617423629004413`, 
      9.880952380952381}, {-2.1970642962210727`, 10}, {
      1.5466953470695346`, 10}, {-5.897084900878482, 
       10}, {-13.546082351622342`, 
      9.880952380952381}, {-11.920724598537783`, 10}, {-3.256555939433592, 
      9.880952380952381}, {-3.1314351746688036`, 10}, {
      3.374501846947652, 10}, {-6.910885657543733, 10}, {-9.560489878543471, 
       10}, {-6.709577282039486, 9.880952380952381}, {-2.8731567693186655`, 
      9.880952380952381}, {4.458645675535379, 10}, {
      0.05206465477616724, 10}, {-7.393006957415997, 10}, {-16.20365297504186,
        10}, {4.292945417554771, 
      9.880952380952381}, {-9.839361814501073, 10}, {
      0.3757634021723213, 10}, {7.575691032183687, 
      9.880952380952381}, {-17.200870777294558`, 10}, {-10.48119489305266, 
       10}, {-7.990294112757744, 9.880952380952381}, {
      11.597706605474597`, 10}, {-4.9866070877709765`, 
       10}, {-7.2655057180518945`, 10}, {-0.3798379559826976, 
       10}, {-5.007461592931328, 
      9.880952380952381}, {-18.19226598813346, 10}, {-1.8764699272848337`, 
      9.880952380952381}, {
      12.729537576800722`, 10}, {-8.145130532330327, 10}, {-8.564253442896312,
        10}, {-17.969460319913754`, 
      9.880952380952381}, {-4.416603096312675, 10}, {-11.446228075374497`, 
       10}, {-1.4372784871957287`, 9.880952380952381}, {-15.233753195416337`, 
      9.880952380952381}, {-3.5192810668458123`, 
      10.119047619047619`}, {-4.7928970842656655`, 10}, {-7.80768982705377, 
      10.119047619047619`}, {3.1281482576707216`, 10}, {-8.281457800642677, 
      9.880952380952381}, {7.078967185187162, 10}, {-6.707496204032074, 
      10.119047619047619`}, {-8.286827806396964, 
      10.119047619047619`}, {-1.3305625202648297`, 
      10.119047619047619`}, {-3.137731862520837, 9.880952380952381}, {
      2.5803184968545243`, 9.880952380952381}, {-14.356828961628725`, 10}, {
      3.522577760965636, 9.880952380952381}, {
      5.807424683535113, 10}, {-18.91702723696046, 10}, {-10.599865456302814`,
       9.880952380952381}, {-0.6621482596813739, 10.119047619047619`}, {
      3.500380366287385, 10.119047619047619`}, {-7.295351366203736, 
      9.880952380952381}, {-10.795684877094143`, 10}, {-16.07254254512302, 
       10}, {7.420582655043083, 
      10.119047619047619`}, {-5.346472333538379, 10}, {
      8.717037827816938, 10}, {0.13458770580533974`, 
      9.880952380952381}, {-1.1901935202742393`, 10}, {-4.528395788250435, 
      9.880952380952381}, {-7.9183941653925105`, 9.761904761904763}, {
      4.315829081467011, 10.119047619047619`}, {-0.04089461058901269, 
      10.119047619047619`}, {8.141694529479533, 10}, {-7.060311177612582, 
      10.119047619047619`}, {-0.35458865802167533`, 9.880952380952381}, {
      9.606088789225913, 10}, {10.483736420988345`, 10}, {
      6.436154529836054, 10}, {
      9.412312421558685, 11}, {-28.749854010944464`, 11}, {-5.582200564095437,
        11}, {-0.8357270677587421, 11}, {-7.647239041554415, 
       11}, {-13.338998278009308`, 11}, {-7.522813965809749, 11}, {
      1.373582860896119, 11}, {
      1.9342461346009034`, 11}, {-4.038808406249546, 11}, {-7.280474588176178,
       10.904761904761905`}, {2.6013490178775673`, 11}, {
      0.15594562324146297`, 11}, {-10.311550373240223`, 
       11}, {-0.463476050799167, 11}, {-5.114626337648249, 11}, {
      1.0837960917384137`, 11}, {6.319633683515054, 11}, {
      4.383722442562926, 11}, {7.577522900070118, 11}, {4.224371830497524, 
      10.904761904761905`}, {-0.638754428860266, 10.904761904761905`}, {
      4.828687737854246, 11}, {-1.969956824360099, 11}, {-8.386729233168445, 
       11}, {0.8530849111567552, 10.904761904761905`}, {
      12.213544651164774`, 11}, {-6.729544573684101, 11}, {
      7.037794224771446, 11}, {6.828420882894588, 10.904761904761905`}, {
      21.209268105661053`, 11}, {4.706982995224177, 10.904761904761905`}, {
      1.7073917153532043`, 10.904761904761905`}, {-6.6975742539521965`, 
      10.904761904761905`}, {0.16304467457359206`, 
      10.904761904761905`}, {-4.535736439668353, 11}, {9.380520481155669, 
      10.904761904761905`}, {
      8.275369360535077, 11}, {-9.284624497663852, 11}, {-12.46484405775426, 
       11}, {-0.5970832084654252, 11.095238095238095`}, {1.3362979125137595`, 
      11.095238095238095`}, {
      10.654817731490485`, 11}, {-1.4820821936527082`, 
       11}, {-6.889195224400816, 11.095238095238095`}, {
      10.21535624909712, 11}, {-3.6908475214744807`, 11}, {
      16.91975576089798, 11}, {5.851207444572342, 11}, {-6.781474248398414, 
      10.80952380952381}, {10.459816536216268`, 10.904761904761905`}, {
      15.23323999267396, 11}, {0.30637552997307055`, 11}, {8.589307951200462, 
      10.904761904761905`}, {
      5.183087230804807, 11}, {-6.1986823299929945`, 11}, {2.70354445919678, 
      10.904761904761905`}, {16.028233264560676`, 11}, {
      23.672442988608257`, 11}, {-4.346115214103783, 
      10.904761904761905`}, {-3.723084546361744, 
      10.904761904761905`}, {-15.40034396657372, 11}, {5.070078651606496, 
      10.904761904761905`}, {1.4679864666808409`, 10.80952380952381}, {
      14.73925904124687, 11}, {-16.012521684164597`, 11}, {4.643719548148092, 
      11.095238095238095`}, {14.929351787785636`, 10.904761904761905`}, {
      23.101231106631914`, 11}, {-11.99389677395228, 
       11}, {-14.497119611847214`, 11}, {16.705823311550045`, 
      10.904761904761905`}, {2.5203446505013667`, 11.095238095238095`}, {
      0.4647965077821579, 10.904761904761905`}, {-1.6815011345113975`, 
      10.904761904761905`}, {4.481012306584707, 10.80952380952381}, {
      4.814674882892398, 11.19047619047619}, {15.207001156499778`, 
      10.904761904761905`}, {-0.9149744497218294, 
      10.904761904761905`}, {-6.512671088222653, 10.904761904761905`}, {
      18.14444618868601, 11}, {6.085236553026878, 
      10.904761904761905`}, {-4.311803942312059, 11.095238095238095`}, {
      0.08393925091544871, 11.095238095238095`}, {-11.423357377586273`, 11}, {
      0.6418462768442138, 11.095238095238095`}, {0.17225450239126358`, 
      10.80952380952381}, {-1.319394486177084, 
      11.095238095238095`}, {-0.43573430649161815`, 10.80952380952381}, {
      3.9832404105309185`, 11.095238095238095`}, {-11.989088656207196`, 
      10.904761904761905`}, {-8.003209317592173, 
      10.904761904761905`}, {-10.51329371494228, 12}, {-21.775923993409883`, 
       12}, {-70.54504751328639, 12}, {-20.455100451392397`, 
      11.947089947089948`}, {-7.187424528489787, 12}, {-18.804904767493227`, 
       12}, {-20.813524744823233`, 
      12.052910052910052`}, {-35.83033701631903, 12}, {-10.291626966729755`, 
      11.947089947089948`}, {-9.737155664487139, 
      12.052910052910052`}, {-12.156792446230806`, 12}, {-4.709826260799067, 
       12}, {-24.944103194413227`, 12}, {-23.18424850125766, 
      11.947089947089948`}, {-9.016725568019922, 
      11.894179894179894`}, {-9.739628081851908, 
      12.105820105820106`}, {-3.5942741553770667`, 11.947089947089948`}, {
      8.820138116116276, 12}, {6.890870172009664, 12}, {
      0.7131391894384509, 12}, {5.003484714440838, 12}, {0.6837341761989109, 
      11.947089947089948`}, {168.6757043431268, 12}, {
      37.19462582158557, 12}, {8.136761591024847, 11.947089947089948`}, {
      4.699342064371822, 11.947089947089948`}, {4.139854522442691, 
      12.052910052910052`}, {
      13.974122203210051`, 12}, {-3.013888300708984, 12}, {
      11.579023461001693`, 12}, {-0.48051550380744273`, 
      12.052910052910052`}, {-1.1800507450667812`, 
      11.894179894179894`}, {-3.1911420743651258`, 
      11.947089947089948`}, {-0.08241947202472566, 12.105820105820106`}, {
      9.160439305254194, 11.947089947089948`}, {4.387878974584152, 
      11.894179894179894`}, {6.2539996765781805`, 12.052910052910052`}, {
      16.37212644799353, 12}, {-11.11971863646674, 11.947089947089948`}, {
      16.205166316103256`, 11.947089947089948`}, {13.997495416576342`, 
      11.947089947089948`}, {-0.9338237832457622, 11.841269841269842`}, {
      4.582930030971953, 12.105820105820106`}, {20.066398063365547`, 12}, {
      9.601793645427348, 12.052910052910052`}, {1.256057132129356, 12}, {
      12.06771250944796, 11.947089947089948`}, {7.291391393710061, 
      11.894179894179894`}, {3.5328586269661697`, 
      11.947089947089948`}, {-5.478783609140231, 12.052910052910052`}, {
      9.217419191704556, 11.894179894179894`}, {3.573699166015111, 
      12.052910052910052`}, {-8.325076475417685, 11.947089947089948`}, {
      3.0806104436701816`, 11.894179894179894`}, {-4.596747623548105, 
      11.894179894179894`}, {4.633442976267919, 
      11.841269841269842`}, {-11.439297953762905`, 12.052910052910052`}, {
      14.906617608809164`, 12.052910052910052`}, {12.762225419774227`, 
      12.052910052910052`}, {11.735786079937666`, 11.894179894179894`}, {
      9.173654865651178, 12.105820105820106`}, {7.137456017843513, 
      12.105820105820106`}, {5.264466516658689, 
      12.158730158730158`}, {-10.7281834014272, 11.841269841269842`}, {
      2.6626754667294508`, 12.105820105820106`}, {-5.3202027400216485`, 
      12.105820105820106`}, {12.273064944651392`, 12.105820105820106`}, {
      8.673760809781484, 11.841269841269842`}, {-3.9236516442779514`, 
      11.841269841269842`}, {-2.218020725387314, 
      12.052910052910052`}, {-12.020258557771042`, 11.894179894179894`}, {
      3.6683838624884118`, 11.788359788359788`}, {14.00236419403255, 
      11.894179894179894`}, {-3.6429684336669808`, 12.158730158730158`}, {
      1.1184831097112087`, 12.158730158730158`}, {-3.499077074895923, 
      11.894179894179894`}, {-17.17820008060453, 12}, {2.809718278468282, 
      11.841269841269842`}, {20.708752893505594`, 12}, {-6.502762561461328, 
      12.052910052910052`}, {14.85386214052251, 12.105820105820106`}, {
      4.0534473863022225`, 12.211640211640212`}, {10.177020469310625`, 
      12.158730158730158`}, {22.289387889200874`, 11.947089947089948`}, {
      0.13133708267211866`, 11.788359788359788`}, {
      33.712314563650054`, 12}, {-21.03257133897179, 
      11.894179894179894`}, {-6.67611952103409, 
      11.894179894179894`}, {-5.659357290452999, 11.788359788359788`}, {
      12.288485725353263`, 11.841269841269842`}, {0.6342208867632152, 
      12.211640211640212`}, {-16.105091136847353`, 
      11.947089947089948`}, {-4.237743627037943, 13}, {
      1.1384314855022808`, 13}, {-63.07170899092653, 13}, {-24.12363569448854,
        13}, {-20.104933623087554`, 13}, {-20.730111905636225`, 
       13}, {-16.401268263815496`, 13}, {-14.330621156773148`, 
       13}, {-5.719253797698514, 13}, {-21.800275101224887`, 
       13}, {-10.29162057639956, 13}, {-17.087568665704723`, 
       13}, {-15.568193147819471`, 
      12.904761904761905`}, {-20.212608618802356`, 
      12.904761904761905`}, {-25.245852495342348`, 13}, {-17.41093457883234, 
      12.904761904761905`}, {-5.068951176611165, 13}, {-13.210779265025636`, 
       13}, {-18.51550728209442, 13}, {-22.942721105196576`, 
       13}, {-13.47149027390526, 12.904761904761905`}, {-9.524412793910628, 
      12.904761904761905`}, {
      1.6269136556322223`, 13}, {-6.648128056054922, 
       13}, {-3.3377347290643655`, 13}, {
      8.44974368552694, 13}, {-6.007562864465399, 12.904761904761905`}, {
      3.201206535369696, 13}, {0.6611933956459168, 12.904761904761905`}, {
      8.024551471690955, 12.904761904761905`}, {-7.389947236899861, 
      12.904761904761905`}, {-10.179208664947112`, 
      13.095238095238095`}, {-2.733508781719781, 12.904761904761905`}, {
      3.037211744673087, 12.904761904761905`}, {-6.286811111287754, 
      13.095238095238095`}, {-0.5471337074461147, 13}, {
      4.320188396978043, 13}, {-13.050014777536433`, 
      12.904761904761905`}, {-2.9081462783553462`, 13.095238095238095`}, {
      14.590136373728157`, 13}, {5.67860859031731, 13}, {1.9802671784501769`, 
      12.904761904761905`}, {-4.85437305616238, 
      12.904761904761905`}, {-1.852646821851188, 13}, {
      0.2986321400450258, 13}, {-3.6005080187611824`, 
      12.904761904761905`}, {-10.148422715429916`, 
      12.80952380952381}, {-4.653224775758595, 
      13.095238095238095`}, {-13.592716080117782`, 13.095238095238095`}, {
      1.6903001629026377`, 13.095238095238095`}, {
      4.842367486322615, 13}, {-15.316859354383908`, 13}, {8.135871003487448, 
      13.095238095238095`}, {-24.476778030871827`, 12.904761904761905`}, {
      20.694080413108324`, 13}, {3.9870215763873524`, 12.904761904761905`}, {
      16.70037311289184, 13}, {7.80543048318826, 
      12.80952380952381}, {-6.536849726175525, 
      13.095238095238095`}, {-7.735649599414948, 13}, {8.408938069946828, 
      13.19047619047619}, {14.278757405776133`, 13}, {
      10.047231792242222`, 13}, {-7.820659856685808, 12.904761904761905`}, {
      10.187686020161152`, 12.904761904761905`}, {-3.358480116755988, 
      12.80952380952381}, {4.367014203200171, 
      13.095238095238095`}, {-1.3407799653071635`, 12.904761904761905`}, {
      5.900441298752021, 12.904761904761905`}, {5.4071691758787, 
      12.904761904761905`}, {4.462384990916711, 
      12.80952380952381}, {-1.7018258146064085`, 
      12.904761904761905`}, {-1.3069731350030054`, 
      13.095238095238095`}, {-0.2805717094009381, 12.904761904761905`}, {
      3.2803968385242825`, 13.095238095238095`}, {-1.4312581992284947`, 
      12.80952380952381}, {0.5175831978876602, 
      13.095238095238095`}, {-13.1645192041712, 
      13.095238095238095`}, {-8.901749503257832, 13}, {
      10.667956721998891`, 13}, {
      16.133388074993036`, 13}, {-19.387177634635407`, 12.904761904761905`}, {
      17.91871911041367, 13}, {0.7011325662275283, 12.80952380952381}, {
      36.495899570696224`, 13}, {
      29.947414556485008`, 13}, {-29.345823111827713`, 13}, {
      0.7677327256627251, 13.19047619047619}, {15.27643091387236, 
      12.904761904761905`}, {-4.8639678426840405`, 
      12.80952380952381}, {-18.11245974842251, 13}, {-2.035950406054269, 
      13.095238095238095`}},
     VertexColors->CompressedData["
1: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
XBX+TjjhX8I/9/9LEE64KLioxfe/u/8LLuVV1Q==
      "]]}, InsetBox[
    FormBox[
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
HI/uvenN3HYJXP8ftQJO3g==
        "], {{0, 400.}, {10., 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Real32", ColorSpace -> Automatic, Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{10., 400.},
      PlotRange->{{0, 10.}, {0, 400.}}],
     TraditionalForm], 
    NCache[{202.41084521175216`, Rational[181, 13]}, {202.41084521175216`, 
     13.923076923076923`}], Scaled[{1, 1}], NCache[
    Scaled[{Rational[1, 40], 1}], Scaled[{0.025, 1}]]]},
  AspectRatio->1,
  Axes->{False, True},
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox["\"Feature Impact\"", TraditionalForm], None, None, None},
  FrameTicks->{{{{1, 
       FormBox["\"AromaticRingCount\"", TraditionalForm]}, {2, 
       FormBox["\"HBondDonorCount\"", TraditionalForm]}, {3, 
       FormBox["\"HBondAcceptorCount\"", TraditionalForm]}, {4, 
       FormBox["\"FractionCarbonSP3\"", TraditionalForm]}, {5, 
       FormBox["\"HeteroatomCount\"", TraditionalForm]}, {6, 
       FormBox["\"HeterocycleCount\"", TraditionalForm]}, {7, 
       FormBox["\"RotatableBondCount\"", TraditionalForm]}, {8, 
       FormBox["\"MolecularMass\"", TraditionalForm]}, {9, 
       FormBox["\"DegreeOfUnsaturation\"", TraditionalForm]}, {10, 
       FormBox["\"MinEllipsoidLength\"", TraditionalForm]}, {11, 
       FormBox["\"MaxDistance\"", TraditionalForm]}, {12, 
       FormBox["\"LongestPiChain\"", TraditionalForm]}, {13, 
       FormBox["\"LinkerLength\"", TraditionalForm]}}, {{0, 
       FormBox["\"Low\"", TraditionalForm]}, {7, 
       FormBox["\"Feature Value\"", TraditionalForm]}, {14, 
       FormBox["\"High\"", TraditionalForm]}}}, {Automatic, None}},
  PlotRange->NCache[{All, {
      Rational[1, 13], 
      Rational[181, 13]}}, {All, {0.07692307692307693, 13.923076923076923`}}],
  PlotRangePadding->{{
     Scaled[0.02], 0}, {0, 0}}]], "Output",
 CellChangeTimes->{3.8802138147021165`*^9},
 CellLabel->"Out[125]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
FZ1+fcx5OygSuv1NJJCQeladhMziyNPKOO1EuRNhSC2LS4yNfgKh7+zUSf8V
Z6XRMpLNi83qpe7Y0WCJF1a15WBzrdv1UHPEWlFCGSErVB9zQ5ThDKuxQpWc
Sg6pAetzqWqbM1Ukhkv0EAKRwc9tmvPCAyY0QB3OsViUQuqb8A06jraWq/8a
2Rkw0/gQRxAL53NxBQLPVJR/7CkN+unH8J/Ky4BWAIatLcjUOqaDWVH+jjeQ
QAfq+SXRQYnXBO9BzOtyNtJlsD8USZd1zRL7neCuOthBRgbGslQnTlXL5WlP
G2pkxjeJk2jP7RBOK2XRXpqSO5HtyqC9bYfFs2Rc9f8PltdjwPkW7K1ZBNJJ
Iekffr+/3G6AmQNdGVlx5kuiFMph/ng7kSRJKKX367kJw5N/8EiM/A++qOE/
+qzJy2JL0pFq0tE1jZ0Uzu4c/F/3BhLwf92XgP+GqzK/Doku9J9RdNmlPTEu
QvB1KnaSvaB2evXXb/hbGZBLVi8nNZSHruglip41flQrHgZfKTcacYSsdMv5
WYSMvgmWZ/QtHNW+9NCo9juDIviFPBq679Mzdehui7LD/ZtaH7kQ/ts6b90Z
Sup57OP2xWqPnUhT3gGHqgUD+/DBo286BnsKLBL0+61Xpg7Puuuy4cmr7gGS
j0y59OnhyWf9JMrf8A7+Ls5+fF1x78duGp58ye2QvopbPppVvO/FpeuUdHR9
/ogTiy//do/iq2/sVdxpt/c0gf1QfXfBIH4DJuostt3zE97XF9svfEMvTLe8
NTLloDdG2qb+KirM+CcslgYnHX8LJLGhlj02wI5vuPWop/HN4KTLlw9P/lHf
yJQ7+wEPBDxF7YceNs6Th2azi56fdNJNIP59oIz7jR6HfYkqf/Q6EqhSPYN2
fx5V6hDZGpnlHeg+VWoXWTIN08uCo4FLxGF4/ajCViQTpClDlfo46mzOvd2C
pM1QyFhHvhE0bDfxIlgW707k+zG9LrEWdxhX2h02YSBVQrEhnzjHyURQrOzl
WAO1Orc5jJNixxKo1adYxxKdcO972ur8LkWitG1XaUds27Vt9zZFtcjaAGpO
67yNk666gJajJ39/tI2Kd9wvrtbLlF6w1LNWSV2vOyLhK386hMS9z/685zZF
RVt+8NDpajn7G31/UNeQplYp8w0M8reJDOUpCfGMD609r6LSJGd/+4+Ulb/6
PRB6hr5JL83tuS+X3tg8+14DeFnt/KNs5Nj32Ih9R0WaP/45EkhTPYNG7B5p
ajrTApTkvHIuaY+r7cnSLByySlXE5+IpFaZEvoZCqw2ozpK7lHxPTd9SXmiO
ZDQAz69X2qk64qFH5eLIqMYxskjEG7hxlglZtqflGIqznlAkW4d0PRIIkaaw
n7SGvm5c3aANvUOxwnna8d5OuJQ8ijWiqze3nZMq+0qrL/37fXqmFsyYlxm8
fH1z34krGhJafZg67RtL6pC3t3qXSFPe/gsyM6cNKjru3ffE3aCzgLgKTfnA
urXtyB9oOuHyQbWCDTQdd9XAtKUXjXx9zW0jU/p+ApocnnzV2qGW824cPHD1
8UMvPLnjyCkP9J6uSOq0KQsPHrrt4V0Gr71xXlQ4/CNNz3e8PtRy6p2ANTjp
zOsAe3DSBZcPtZx8t17Vez/ACltsu+n5kSlHvDrcOvNlWnmVSAtdB77rn9h6
rXbDXXiDbtMFZwHOUMvF1+I3VInoFXQhKLdzKjUVuhKU/a0egr2Juu/8ORKo
+86fhx20vog4HPC5xwQH48Fq5JHnPX6YCEYnMHY+NrTEaMz5eRnmu2Twvzy3
kYtIOTcP0fR2eYaEdrL9JNcr95djLSejfHjdFqcLzZLOuTsgWl/y5pNW5mz2
1DUhI/uS2y5AylbFkRPtYRegs6kzG2VZ1iCi1YY66wxyecv+yeWIXk4wmyNb
BEnEMVmlwAe45Y+9cjJMY3TaO5eoVew1EAGBU+JpklbFHPQr/OVA0ykraI01
W1HQE+vuhMYm3oE+9xOQa6yxB13dtQkJdKWeX9Y209lfecYRWmOsZRoOhkQl
xCkM+7HYqI2mvNSCy1MYGU0SdZby85LtlrMqCXtVtpIPVpn84uWkKwsf16GZ
7IsCOPIsN77SzomQw1gpbrwDVLYGla3yjvXr+DoSGcGJNxTyNhXh72PNoEfp
mO+awB0Te+9ajlLNWMe9YtMOAbOWl3giCrFuc+8Jv0Y5W7Z3cCz/1flR/u5X
JJGxQghnxYx/A01nXiCpjBQ+gsywp3TJ7IWHkeeS2d2vIYHM1PPLIjPHo1Ec
TtmqagN5Rk0t80rJJSvPpaQCqDzE0fNygTzTE0ce1O4BKFZrhl1+kYgFUjn9
8mA9OBaTA3lGUB5Vh7hKl4YBfc93FjeDKeNclIXU7O5zLJ+25/xtjcXz3/w2
DavCLqNg1oYJ848CkuCT7tyei6AZ/ApxJ80N1Fco87xPd4uKwA0ZOdz2XWdg
4vQQZ+R5rb0Ugx3DxAoNOML0vOIM3KA/lwfWHVOmpv6nHbeZUf6eV5EwbupZ
zXHTchzIIRXzOgt7WtmRS0vDcwAxFtUYSDtorbrPcj5YpcmWbpKb22pNYGMW
b0YZuVSn2lBArUfv/i85bPe+goRhU89Kw8bN9mO+I8+XrFha02u8HjEOdG+M
1G054fKTYhMlWjH20nmOwboerjS7BvEeXYyQNU3Tz5T01wkuFhXtTaeqEbrv
FSSM0H1lRmjcJscAe//LSACrntUD+8DPkABWPf/twa7fiASw6lkdsNMU2Ic2
IgHsQ1UDO0NtqF9EAlj1rB7Yh19AAlj1rB7YR55HAlj1rCLYQSQCO1hFsI8O
IgHso9UCO12B/clzSACrnlUC2xHlNzyLBLDqGQS7py5uY+vihwQa8vtutn95
MklLuRc1AXhNgbxcIG9ynGdt2qfoPMfDqG57huKxZ5AwFOoZHIqCLu4EVzSS
JNu/0n9mi+Dbt+I9uDqHFBDqPGvyJ5fZOIpCTu6ZeNfBu4zY2L2mHBR/0xMf
Nuo8bpFQIqT4nhK9IrkbXSEKNUqNC9fJu0Ne1WV0R67HCHC8j+IehvaXIryI
9SSvsF1jp0F5VOqE3BLwrMQmRCK7lU/F31odU338rT1xDrU5JMOYK34gf/N1
IEE3bwctH38aCWipnpXQ0gldWBuDtWhpUE2qBTHqvGPVeqwJVqI0P1JxxdjL
oxZv23M8GPa6GPFpbCHcIM8XfWj+NtnuCb3DM3GM54imFJtKbyz9K4IEAdjI
Heiz7H8oKm5Au+Zc6MRRcClShz60kGNHHSd4WVmSayLDYV2Rc2xp+uvwGaP1
kBSOhqBzLF/LRqViEDwDhitm5REAu7LH8+/KmSGPYo5kmaydYPMMsx564fFp
1mB3VMx+4ikkYLZ6VgGz3XKCc/KAsQQuz1iEASuPN+OgHX9Txj+EdfQWns5b
Wt1WxOPAGRkmhcMliz2oDNLE8+cZ1Et7mADqphxQ3tmUPIYLResNhQWWWGta
7CCtGGuP7cuOxbbrIXz1rkZ2G63DEwUQTTvpZYGkw60XP1BsX7Nx8NKbDuDQ
FkYl0JFqbo8K/UPRNwceBu7SdYKj4u1Pn0QC3qpnNfFWGKdZ+x8e6oBtUtq3
qCZn8TLIyt9Lq2bH0iAxZmR1L6bOlkcPeRZcIWpaJUyV5hnSyFueWXk2Er5R
rxixGh87nZsczaY6EBnKxUuhPLRin2GUzpFXaJN+is5zbgwn5plsSjamjXqN
LKqBlkiv/OZbzFLTxHOpeE/dvkdwke7c7gfiDbDZgFLFqF5Aov/S4kVnZkaJ
T58tiB8+/pDlsgZAfR03N9nIOku+q93C0xGcaMptXFdNpWlEdm9KZhs6Ug07
4HcqzsYfnM0WbjIq7L2c1zE9yj/5UyQQoXpWgQgbJQ/lE1DeUPC0MmLLadbD
EVNe1qc8xh0zuZZtJYK+USF6C4Qsqme5mWlf2h/KSBkJ27xRqM2SRdrtBgNi
UcpQmwMmMXZqsyGnPGqTUekdajNX+IUu+XBm/fs6j+9ygWUBXyzTmdm1Icr/
44hi24eHdKR2rNWfT+lrOPxU5v7RA0On02/1PxYL/g2aAl30T+z+gf+Ovx9p
u/oJEjHU3yhnLGk0FcMe9sVHim1P3NOV3W2uXWCblq5Ccfy2p/h0kvPEPVxW
tzLdnVu4F0CMTHnwNhThcTNRz2D7F0NINnI8GEQ1MQdusiiHBkSehjRhoOng
1VH+rD+OTDlxE34PTvrmjwg5FRni/2Lbqe8hD38PtRzzcDJc2X26XZo6n3oC
CdSpnl+IOoX7g3tBnjl2rxZZ8lpFPS81FfbR3VnHtFo3JRW58i4ZXqdGW+/s
/tRQoDQolCazHgXybmvULUStoQaxdRU7EM4S0VVcxU29O2OSiJ0JZp1CbtH8
jlSbVtkcQM9M9+Qjch057arUPfeIXGf7vAzPeld2H8X5G2piGEn4ArKLykB/
E7sEsszcld1jNigCxZBMdnfum1NA7UidmZ1bjazXld2ps7f+4ON51QQFI1Rg
/5CaEbWagspBsojnrPKyTKKUDHUPNp9+g6FuLLpRAWdcLz6C1Ft/+DGqxVgy
M8Oty4iRQPIE+VKuIcbe+m8dxt/01B5yICgdBvgcY4vu3v72CVwEwUJ449qV
ze+D9ZEHesCE/WQKpMXSjk12EZshxqwgNSAihZqgozkdAym/D+gdheTfoPsU
CF9hsmIDWKV763f7PswlkTc8+bhnmUVwzWgFVwHQpt9gF7yac7AvEbOK/6X/
btZ5mpU8/TgSWIl6joWVaDcQfWWt9O/HDy++emGoAw5zsDMHrxOu8sJnJiXS
tSP3eY5o/mKvrTJ1GZ+tOJuxiWbksvpmM9YeMKcag/Qc01LMTUDfUvD3fALG
zE3E+u3Zw2Scc8WEZrUcoUGqB3l9Ru+kG50BzYbD2lpYP5fVHXpAVPjZ+m3t
T/14R0X7+1N2zZqOFROirq35LQvfm7JUMZaob2th22Uft++YUzJ2jQl8Pfnp
E6P8789fM+HcfRnc/sbbeJtiK0d2LcqmKLvu7aufaYne31rYePn6ZuTc1XjO
d6P8K/dvPnj9WbJ40lgnN195SlT46f1vt/ygny2W1xjhYIsSDgxLSW1QLGWb
ESBAfeo5AXmbKcr8fn/d0tb18yh/yX9G+cs+WFW/4HvaPmP1u8x+9lfsSYNv
2axYS1S495WocP/LMRt66rGosOTDbe1L3l1Vf+RRyNumhAmM04am5WfpMgNP
RoUjP4zyZ7+D/zdPXndDQndj4hYjG9w1sf3qjZPOuSrKr/ztNkXZeLtmwl7n
gdK3KCGBRsRcmIMoxPsT3yFmkkFobypvwnoDpoGfkqG+TflaxPd+WwkVgL1R
MZstRghBffgK7xKaA+WW5joOwV+cVilOdFfjosvwN8rpycstFbdQHKnYyo6K
rXCAc1Sna05h0K1Ftmkh9+rtlpZnErewlTa40DOPIYELPfNY2Erb40KaEuiZ
9unBuEo4B8KJhHt/uWeIz1wp4AZh1QBcphKjclwmjMrGccROuLJNvHUvuSrC
4VUTYm5gQ3+YLkjJCj9cndQyOEbT5js/gH/Il8HZKYjuSc8iB45Q/fuHG2zb
KcsxfN1W7V4vQ49gDIx8IVXO+E2gjGqqNBh/IrWq/tvfZE6WOMBlY9sO/Lht
WeeSukpsbEPTjYcwGwMvYivMeR1TU5oSat5epdjYwNbChjP6m5CzoWlFD9jY
tlM3LTOOslkUZzLYYEQe8CyPjYFtGTY2aZWSojZ33XhV1Dt4XTT3zp8hF5++
bW672Nb+bcW2Vv4uWn7/bXctOmHxtvZVr0eFm99hNjYPegrT8o1KorJSluJj
STClRENUOPivb7fMemqZkpAkG9s46Yrl9H/7Kn0lkmFjeG+IeAqzMdw+ABYB
9uCzMf5/g5GH8I3kEz4bo2DrBL5RZ839LCoc8I+oMP1zYiuT9rhns5GFNqjt
VIiLGZEJNc9TQtw2EpkoL72/Eqtkywwj219IUmBkyOUGouHJ+KYFn5E57Ndh
ZM9uQAIjU8+xMDJ94Yx23/KjAmlGlmOmxb7ivmuJ59ognS1YicbndV7chHjb
JJhaxmdq2iVDe9DL4wtUyCQpDcQ5kJG16krEdpmybCVfDOIw5VXo9dLoigOj
sWaSuR3qk+4kTixYM0DSak2MJWeLKm1Rbywdfmt4uX+dKQchk9oVh7caMV2a
/7NdHb6RN1bSyJgDodDGEHaGdmO4Pz2zTenGZFfToixvDrs61N9NU1Nsa6n2
hdgf6goNGBMhWP9Hz9qmOgVm7iK7Z8XuUO1DO/Eb5SlMBmui1X6PNae8EnLe
oOFK0OwMKaGONnOzrlineWZD8epnfsD7O2xa+hp2PZcYGJRIZpNKSiGzdcS2
kz35uApsNbElxf5P/d6tOzfxcD7k4z1h3IWFe3Gk+85MI6w098J7XXwi9K8U
xDahlTZyn4j/u5XcFP+vwcTh68XukF/q4Mwaj5FXbPve++BNw5MPfX5w0oF3
srYIgFEIwFEp73HxPwtpfYqvIRNlDbtDVr+R27CDNBPi3MFoINmw0MAJ9Ztb
l3YbTL25ReepzfZ0+Awggc2p5/YooNiAnfc0LBk4TjFJOnKmAhP9raYMXsUO
H/whB/+Ij5t1MBt2VXMYnDHolhdRMDw2MPdjeTPDYNFHs1EtdUrrS1/SMzqe
rNR5s2lsbJyRDQWSQ3X6dR1Dk+f6DEX2gIlWeC+Fiomz+6zkvsxBY7vJtD8O
RgnnTI1hKQ53y7q4IPKci1gBPnTYuIKeraQPhjy0dtP5Izf/9ITomp+tGtzj
guVsuj900pqTWYukSQIqJMUiVDk+4mHOQ8Kwep/Q4mh2yOyRoKztM6ICaIdb
qcgcShhkE6Xpr1g/gyz5FftKGymBdMhWfztjmiKaR5GIfB4dN/nwQqIdg3Xg
AbnXwTBq+2S9JLEhhu6KxnZ2s0EJDoPJejCO6c+TL2P7c/Rn1nowHCCYDKcp
IkDIUKUowp43vF7x7BPW18TYY7dcwrAKzdDnhrprXB2VMByV10uUx2/bvUQs
GfC7RFL7HjkYbIaIhzHQ5hwrteRwsyl2bC/m3hNliICLSsEkQCzW/J0FKB55
7xxLboMcPNJmJLUD627ZwTqQqYRgJTgZpRNSVsmac1L8z5uF/v1P0z5rpgxg
721wRxEDnyfih/62koQ+ehQTknHyuLw9Aw0dQIJEBh9FAokMjoNEKEgqybL6
aNW6YTOny7jDR4KWMXt0tHrTAjMYuq8gZAhkyjm+Jp7Trwju5gYtKD+VGT56
40TSlmFQfRdd0EbikeKPmK5UAIw1ssDwPv8IEoZXPccyvESeemlybZh2tEMu
+gOCoT7qcjZuqmPhaORqaXOF8Q5Nh/Y7sbej847IXKgh3UrxypsUTbla9yFV
0WSVRUWzEk14F0Z2M3qSHVVSyGjrYhoEEJY5YJGOm6C5ilYvmJAXB5AwIeo5
lgnRsoJegWV8Cz0hepKsMOLtgKg/Bp5zIZFRnkij0iB5GD8gKYbwJQvOJT4e
g5Ntdq5W8ExLtdAWaEuIPK6ORxyn0hAHQBqjj/hDSDTiD1UY8VptD+ng/Ix4
iO3SoflbljfofM0w+y236U/wyn6iwWR5BUFxjiWNGcq4n2g0jltjTw+NG5G8
0gffjNtKe+bUKL9xPRIGRT2rYwcPsC89iASw6lk9sD97EAlgf1ZVsA8gEdgH
qgj25fuRAFY9qwf2lfuQAFY9qwR2RwXsXiQCe28Vwb56DxLAqmd1wM5SYF+7
BwlgX6sq2LuRCOzdVQS76S4kgFXP6oH9+Z1IAKue4wRb6+QlIKZNm9GRmjzF
+fufTnU/RqLqfhyuTst2KeaJMlY7m4aL4wYrcnPkCxmNGX8zd4tPTTJ8Psps
VrhO2GoJjFmXOYQEg9fQ7Z7HqTmhVZ8AIeU1lsRFBBqrpHO+F2HkbE9FcB4f
LjdX7gJk9+Rmqkxv9Ff2jgTe+bHzjgxV7QxOhZbKe88q+EXWybyu7NzdosIj
LxTb73m8p+7Ab/DfQKHPLAbtEOVf/xESMEg9K2GQExpPbBI9LU4u5C3Dv2O7
/Zx0a7AgElojHSti0vJrofHlr0XMP3vI51fs3h/g3pRMQrMWm9jXgGVgP4oR
70FMth84X4upNVLhjh8nhJiZTydyp6dgl6HUpFQuL1AMBdao1HHWPooWS4ce
e0roDdBoVwfI5qHKEGZqFFL7z7p6NgYmsTyuLs3YidTX0H1iEn/A5FbzPfr5
VGLsG+uQgLHqWQWMDcQ3dg02Yh8ge9cvfsvw/4G4NTa2vwzeI/HW+NBJQ395
hBO65DYQ5CcjfcaQ4n2dcXey7CQRnx7LGIaSYMnLJzDlY8VcnVcvz2l4qKTy
iN8JdLLjYI+MvHHQ2mBdVu7/5d2SMibLeNFZHtCj/hA69+m8oZbLV0cP/Ppk
OiuhuCXaqQwvsdOkXeeTv1rSU7fXUUMtJ94fFa77dV9D1xm99Xt/Lypc+rv+
id+42EXpO5AIpe8YL0qXWAg4VlnC1dG6RHoHbPJ+JcdbwIumyHsmh/cKCwTb
hrQ7oDxBydidx14VyQhrcNkJUpGQEf2Ft5BjJZFwWexY8VRQucRF7wxQoJx7
ob1nuiJVs8wwpEixnSg5+j2PBh+xsEef/W13jY/0tPg4aK6Aj/71j537Gg44
Z6TtnJeAgwNNR1032Pyd2/E38iw+7qTw8c1+JOCjen5RfHTs7mrL455jCGSU
mQ6ueQ424oS2xFI4YG3jhk/WdZaNJUxLQRmvm+1ijJ72R3jj2JsleDwc5abX
vy8rMHdFLLvQ9GfRouzwpk2t/dddN9Gq0vtWNOBQh9zKdL930Fh29eMjC+66
qbj5d/Oif22ZFT3w7inR6S9fH6195yyau9Yb7hjqvOjqaO2zF0eLf/RIT92e
Rxfbf/RUVLj71aGWmU8U27/+n8DMYvvyt8AtIc6OtN32wHDrygfAUYGxyE/8
WaLt0O1IQFv1/KJoy0OlbzmNFZVB3HUsA7JaKg3yy5TbAKHUbvCDr8uwX2xT
ynssi8upMB6PJWD89uMxcWRNoVne/wBrpVfBVxRRfgyImwbCRlsVC1SpqdHe
tMyHlhRUnv0UiTs++LPomqHlbD8W7ffkQyygkpBFf986lASCwr7+5rfs68KC
v0aFpX9U7cC71GDz8it0/oM/S+jyKaC0baENLL9TQSHtWiRC37VV47qai9A2
p8auQ+anEibrjZG+ScZiqofN5ZHZOj0J5mdvCWdvbh1wCKVGweJQZPdxYnGN
g8WJWEqiHlaI/v6VIbDhqCiOclT9ufRM7dU5L4N1/DS62p7yZuwzb14m+v3W
wsiT703pbzv1e/0TTzhn8OjeU1HuEIQ/q6tbUrzwnlXRKx8eOXDARccNLr3x
KLzrn9f9/ZG2016OCsvfj/Z78InoyTdPjh546VxgNGG+xfI7N0WFMz+MCqf+
ISpc8puRth8qKrjjlahw9nvahmXxxwal60fazn8G3Dkq3Kfgrng/KnzrE3x3
cf0eJ6O1aIuOPVt/ZiJD7adtH8hjoOms5ZPV9lA7LNOCgmZOxm5xk87bm6jj
rVuQQB3qSViTrEwdGudpDizmBwO16jB2ZGShIYToIuT/4IeqdI4qzbw7OO3F
e5bHjTLeWjmuXiluuu8lKYMzh+ihXNv92Ope20skrfHQg7i8a8z0UBpb/Wzj
kmAE2y2IxKDtSWvnTZ6aih7amqd09KbLCJmNYEzlC/P+Ad78yAuKb0MsoY3a
z78PNCaETmuEdgkB787arJEeBAB+fu2b+v+OzzWv11qLbFRY93pUOOLPbOW1
TGE+rG5T2pAVf7qGrLoxqaW5vfazLya4nhtIyxTlb2IjV1DD2zcjgRrUM2jk
6lEDjZ/WMGflTjHgwR5yDw+RhCOUmg2aHxFZWsSKKhyLE2ENH1rB5GU5jqVB
MkBhQlFiFQwVHPMdIc/Tk0lrUh/rQ9Qylj4FqKVsAHNvVkKaqxDB1BiCIfns
XHqmVvaeWQ9xZ4X6ndAmp3vMKUxNbXv34/bi4x+3D8++9erh1r4fFW998iyU
O16J8y80F+4vtl/zPET1X7Rcvnrk3o2H4d3w929YXjzkhoHommtuHtn5wieL
2vb9rWhO31tR35vnRl3P3UUId/wT10aHXLVek8MVv4wKD20stp/5WlQ4cTgq
7P33kbaTX9GyU9+7xfYLXsYmdqRt+bPF9l03j7TNVeW/8dfDss37orUvqMUD
PoDPq98Zan76BbV24BPoYmanJk9p1Nltat34xdAzLbj4ZHbH1NQmPQD7ZnbK
K1L5IRIRzQ+l4FGWaHTwDX1CEBj/vFQUsMWj9LJnFYW8Y1QG15aqN6Ada/9l
5HxWJzLKMVNmKYpPFoy3MJ9DSIOMWKtXYMULB/L1a5SufGyPKcvinbTUkNVJ
OxVj1CGVfeyzTx65hPD1HBqYT6L8ZdqZBxM6XIbhkLU7kV/Kew5WvC+A4qnT
5NTJlssB4THlw7SQmtBsmPkmNuCibr3eUdQMrLu1YLcM971/PG1Ohj7Zl4Ak
sXgpgLve+IreAV9EnnRYsort170EXSJ/261WDWv+1NrzBMpDpxPvindWWP/O
GiRgvXp+IX05G1WKQO3SIVKa6GjlYyylpdgGVlvz0Ec5x/4kEXNVtrU3Z0DS
GgjZ5ihE3goiNWuxFKU/9w2K9OcZWTljr3SU8mKu2QMfDuNmigK12N/cfF7j
tCzhhTA3A2sj+YnWOyHXysAaD0qz7aUZCBlMA1WLIyULPmSyY9AZormNO6GJ
sZW1i9D/YKGgY8ZrXughjL7vt9qL7M6P26K7/7FTNPPqd4C9I20XvKB3C4+o
35c8Pdx61gYsDvifTn1YRjDaSWjNXYz+5WokYLR6fiGMFrGaMDIcCcQz0WV6
FwflaXmgToNJ8xiXkEfJ3tkuCTQcuEPkWQW2BpOSolmopdY1T5fPcLX8Tlr4
ye9sc72bZ4Q9uFzAQq2Pq43/Srp/eV94UbEYeEhts9xMnrnxlX7qNXDsCilc
Cp0oUqpp6Jg6lY4LAQT+MXg/2Hz+lUAobDGhXIwKl38AzUtnZsqcjtSkdmtJ
iu9TE7UhnoNk796ABCRTzy+EZA3uWNNwmG8d2XVaPES8wIHKvcBLJKqKaNwV
NWABywDWSWHj3VO327GsZsVIWMuAnduj/K+uR8IAqGc1BoBZVzwA5F3Sodso
Xdk4xA8rF5mBovjOGphdSyp3PSPzgDC0ZvJqkZ26wE6+2/frkKjv132xvjea
qmSwol11HuvD6L+OOM9ermAYtLNM7hT4tnz3y1gqoYu/vhYJXVTPYBe1MXgJ
c9xre2p77xok1Kae1TG3mt0W5d+/Gglg1bOKYK9EIrBXVhHsb65AAlj1rB7Y
316OBLDqWSWwUxSwVUgEdlUVwX5wKRLAqmf1wP7nJUgAq55VBLsSicCuDIPt
pae1amdB+HvjrW1Oa5T/3Qok1KaeFWrLcPR9R0RYul1VXoREVV4UrlL7frnu
LttV1fByJFSlnsGqyM2CFoVRKrA3tLsVXIhEFVwYrsBwXrbuka474LLWWN+o
fTiIAquTHN8JI9HwZQvs3sJRkFQxDnnFW0sMofBLsncgZONPeFLx2zVCtxDl
a+FP41xVmK38iVn/IJzZ6Jpj6bI5sfb7xr5iwrfaqRrl+L0w5JDVsAYF4xFb
2dmJEg5vKS4iFDH2fjhuSWhXfqMuSrHioJ8yMeJiDJoc5T/6ARIwSD0rYZDj
EG8wKKCctFZNLLlxgECWZqSMzgIiyxOezYCOP6RPkaX/TELMpiVQ4RwoI3yw
j4MxDXM8KhKx2QTjCgtZ3NJUPNrc0Dhc24TRvkYhKQSPZ4hEzdKTRTshpmVW
bFqXCTVIWsXJrssauQXceKHGGKs1mVQfiYBPDkbdoFs5vGzZsuiKK9bgHfxU
yTfdxcpzkQgrzx0vVuYcrEy4HtHCZIobLNVnoTMaxjISeI0BqpwV3xYK8DjC
nUFkaR7FWj+N3DpPOlz7HnrCiCLDeY5BWKosjAm+EY2zIRvjyASj5ugplzcY
iNvenDuwhPEzb/GkdykPrHduR9O3HbZjdtpDG4Tr6ZltyuVyUV9fHyXgf2vr
JrBFQ3A4upUeokn886lFzpYov/kcJCCneo4TOWt85HTOWTgEguHtMl5sIHyA
69hpzl/YnSGElcFzIXOq6t/7G1AauVGXjIkD53E98hQ2AKNOwvDRUY5FhaHg
YkSQ2bjb3CXGL1uVZ0jBjDAw9CXTUzXLHI18OsJqV9dQtHjxM8Rk6Zi0BkhH
I2K893H0g/9J4jMxgYCjFtzfdRUGIc9GIoQ8+wsjpNO72nLIR2uKeRtCscDB
fdo3xxIwrCEVh8Rh092ULZhzJ5FxRiqpubkO3plLBSV+/7tZbV2pmzjQ3d09
dNhhlw8VCo9B3AfjwSXGyUEb4S7LchySvsy4qR8MTL9OI2uYIg/qIvSpjqli
a/sro85chTq/PxMJqKOe40SdrI86jCb6IvOsDBBXcm1IraZMHu8QDjnja7YE
/rE0CzDmOkbHFiThxfBMxkNvNZCmJz5WuT3J+EGEKdeYA3Lkevwj7cIMYjm2
kF81YpktOVY8m2dDJQmU0F67NVyO3+F//E35+os0v0fq6ezsTGIZVdUuWPAB
mBbwERaCYFgSV2FhAgRlRsdg0oHW1Abyfq3zFNI2K1Q9HYmQ9vQvzO+ck2cd
EqiGZSy/jEQjhqM3H/o76VSCQo5diccZhcG1vSmKsZpPvGvjJtt5TnjEIprj
YXUJr3QCjOmuxuiciNEXeGVMPOw6i58yRmBftoEgcBLlCEuX0jO9X3t7OzDv
097e3rxCzxRlp94y4Qovht1dHeU1fqh2G8UVK66hdXX69A9HzjvvUtp9rFx5
G/1WqMtrLswtCGW/973HNWZDI30fY/GLsMYIILdZoaM5cz6xeVmN8L8wLQJ0
JMOoXzAVfaiYdV4heq1uP/5FqROw1r+n8xYSzv+hBwk4r55Ue7oyzmvvPBtI
qfyWOSXX3kripnM3aRlXGef+HM8hRLovjCHYcpbPQ3xKSsVUIW0FAyDqJAif
Gkr3azVSMJBY65sIWinTfOc4EY2TIqTp5HaZCNKZyQnagm7VwoULeW8zr6mp
SVsJpjh8JiJMJup00W2XXXaZxe3dd9+cNoz88MNfK8FrUAqg9vQ8nEjFESpt
OZ2XljRB0gfgTtIl5qk9vrX3M2FPGQYiWybeY2M/wvZTkAjbTwkb+wWxXZsx
+0bfsU9VaXxeZ9tTHvfTEq+FPlF6Z5midVyUd0XI9F0sgHOelCNuE0jLfXtc
m2W8wZByZqNdbk/lgprggwppBqRJoaE5x+IvEbQKtEo9t8ZQpNBxWyvFdlbO
5VqilhC1pAy1UB90wKBUs1oz+rCvVCJMIq3zvk5x+htWNEPwqKO82q/DFx7h
UVQ+ZPLuuXPn9n/jG9/qmz17KfIR4DCRxNtEZr6S1/GXfdfaegWTEOT4dSYY
ImxuS5aQWh1rG/ITYDAsMiCnoG6JFOeRDFXntpn+e0/n7ZWZOynK//FkJJCQ
elJdX6tMQqModh3vXo47JoUgoxCQMZM5jBkrCxg18BnHquEYhlIzK+3t6K2m
3jqWtRlH2EFIxjUky0CN5NLYMFSUwfH/GgMn+SL7WMCU0JCwYRx90FyNjKaj
bLlqTcBGOV6SjnQnJpcjI9bysh88N0beFyadirnRIXXuVXpWecMJBQXwVS8d
UOwmS9eFQStCpUETRbMEQAU8YhgFoe+fvocE9FXPL3QuoVkXHeizmpuPZ+Lj
qYwcCx4b/hRV8OkPo24cca+eT7bY15uhS6Pz+DoFbXXnRE0QchK7uplyWa4K
BbgeUIcRoywRmZ8AiBoJogRNRxkcL5S7jKXCQaPoP4HGfKYne+qFS7RhwoSd
lA3VyM3k3iZ1IW4Zn1aYaWNUZfoSZl0BXKU7zHg9MjpeHRiXMLKOEZW4bkJf
ajJoJHVgKn9DcD616NqkkPREJELXE78YujbEw2vX9v/Qec7M6XJpqUQXZ6OO
XDRW2yl9PJPGmkZ3SpnR4IMLRd4gdVp+Pped//gEJHRePb+SzmvFQFqyx1hK
SfNKxZLKWPtvzkuJh5m+Y6LtyRT6+sliJPT1k8VV6SsfoozS1xrWhLPcz/GC
tTxFUFP2lmP8zNKwQMZWl1G+16RuoToRmvl/2i5PjAqfdCOpLuNZqct8ki69
vBwOZUzDZLiYxIE6z7koQ98dbs8yJFey7GROAFaI8CsaaeyiuvfnbyGhe+pZ
HTuaXRoVsKORCOzRVQT7lyORAFY9qwS2ISr89TAkgFXPKoI9FInAHlotsBOi
wt++jgSw6lk9sH8/GAlg1bM6YHetj3b4x/5ICiyeVQJbp4Dth0Rg96se2B1H
9kFSYPGsHthPFyABrHpWCWytAjYficDOrx7YqVv2RFJg8QyCJRZFtt+19i9t
Ea9PQB1vB20yrkPCSYbFEdlc2/UYVmxFK95qbzsHfqLEIF1LVdLO3jdgj6Pq
WjD0DTXQ2Or7Jv8hI3jhOcAuU7GXB/7KugWc/gZ8AoSNPGf5dk8J8RNsjWt8
HIqdWxkDcmred0ciDNjdKxfX1lBuwgMuE8K+wumDEIktCGEqYnviORsk43FK
SzRC2Ym2QC5u4GgYI8IhhuexLNoYr/SmeEg9DYyNOsQyjemza+2hRZiAI5K9
yJ3L8nu9R6PvMmx25Hhem+/9yHvI5Fgj5vs6dq7zTxBlXJE4Sh+5Mdg9nGeo
Is8wpY+fDC5sJTXPZoZKiIDIkPB80xCWeiU8e0GXp22TDuiBjV9OSpQsVUo7
CeEK4/lppXjEhSI8JSO4+N0VmJ2RFnAWYbSlXzaktYhN3IK2ZxIcQJVXVigx
d0LtQNNlS/sm9BzO10TLPBLZB9c39+1wzJLB5tNvRCz6rmznrMFJN57enTtw
t76GFRMGm9dPalIbyS2m01nFMKZtmYekGAaeIYaBhtW7fZDDhOH1ED9ULs17
Hd73CBqRUbql/59xS4yHNxScj4Pjl5lBi2DmGMQ5Ns2W/bbWp6ugX7hQH8Qq
v7i7krCChmIBujLKzvJMybVoM5aZMkQ/rzy8QbP6fF12ou8UzGoenhgZApA3
asxJWD0ovfHl4S+X02s5OePz50jSgs70PstV8iaM5zXEnExv5UkFquDehhyL
Zc/41jzZq1iZ6ajmqQWEi7avFpMEAgJeiEt5J4+aqevzR6lnRkeMMk6yAraj
5nCyZcyQa2VQPDkO0lGdy0pLYPaEZWfamNG7Yz7WQIx4B1jl2Ve6t/74g6L8
L25HAlvSEOrBmSj7uPcvotYhikbv4PVR4fZf9NYfdPzw5AdX4v3IlKcugbIL
/tbgZBY8617ByqZ/tiuSYmV4lmNl2mbE0VAzxZC/O5FbrWRDKMYeuUwY4gRg
inT8lXEGmDD4HJnRjUUVOfQVwo7KmWNHA0ksxAc0g85wWQbdIa7YkPTJwra8
Q4B4rS4aYnJcnQ61qNkz+7+5hGTpEzVKvGQ8phZUYHRemGBpG1l67JHiowpp
mOxEVQuZAQgr9dJgCLaolEycFnpnoJJ4JHstF34ywNTcwJzCXNu3PpYhicxA
ycMa/1BHWAn44REDslaJ6Y3jNSkGTYZtFOyTB4O89+PsAF/nLCnUScB+CItA
FLPtYFmjG1tfhod2X9amcan2ZqSRKT+9CtwI8pOG1YhQhsganvUIhUocefuX
Ow91XnLlSNv1D3VmOgokluXfWNfXcNbC4dan5460vaPY/dSUtWSbUKtrmJqy
xo3ZXcG95iIRH5tblo/Vxtjvo5tjzJKIT++lQF5prZRLmLMvMfMkY8KWZ1xu
CM3QiYxmxRm5dbFN8mx8tJetzpPLf/BEXlCUT7GOpZtXzo8vzySV+JqmvRCr
EkjOKCn4iNMjz2C9kkAZmjCHeivwKSegkrAODxniCfj1vnWcw6MSMeeVIc04
kg7DdcKlZd3+Mtdx7upKx3AskiXGxpkc2yUzRrz6yjFynEKETsdHYE1VXgRO
P3baV2Jyfyk9Z3SKqGJ0i+e3XzgVshB2dPhdbN88u9j+cVt37psTi20vrS62
v3YpJCTkES5CrioMmbxfH6D///ib+D8qDH+32H7rc13ZWZ3UdiWS4T3Y2UDT
bW0o0z/xusbEX3T7OrPzaqKOf85BStBfo/ElZ3qMuag8+ucRFvzCGeQKLCmA
vSVU5dhCpN3pTaKQEZgkZVjDPCEwWb5QhpJC1Iv39uTKC0sWDEBI9X0NWV9D
XRUkI4+LSmtFB2U9a0XfqEq0lmxTpAEBRoyjNUnOXJ7l1LIUKY1FWBfHdhv+
5InYa/U++fusx1nPajRGhcQhVtv5PkGSsh2BJjE2VuNEbkwH+hES4YyFPl/2
yJsH7se/g/+GZjQN/l150TUfnkQMRjEVCsVW+GcHGMJg85176D3cB+eazVhD
zGj+eIxmLKos/f/pXP3/nw+KCve80lO3DzkBYR+Iq8Z/cTsCYb26o4a7fpLD
aGb8c2ekBP01GqOR0dq0n0XsMioFSjbAYNyW3KaazMbzVdOB6XQ8T6vZjyfE
IgCvNIFYihXpy7PiDApCdndE/+l6/eW+lMYqSD0pd+i1bkXnOc5SwtqnLBsS
mwp5Zq51yc71vpL1CIsJ6QOscSUbknVirbDVm/jm0nIsTATODM+Zw2d0vzLS
NDQ+VUDrTccZCcbDbCqFr5V4bSfEC4ks5bOvjLsYzQ9eoRwVOTdJ+IBAlrnm
Jr1r4vR1xD3uWVLXWzj0KLAG+jIxC8rr4q0fzSze+s4B0b8+mTNw5PlqB/Xj
H/c3XrFTse3la4rtbyyD6NK38Jz5Q6seXlic/dxVI22PnVxsf+gyGo/2ly4q
tr/yPcV9Zg213P4tbNqK7U9fW2z/1dFR/qk7iu3H/bKvYbfTsTPrbzy/u9g+
cMdw64qbByetPm5kyqtH9jdeML+3/sz6ZlhbpalNZD4E0yH67yOdtxe41Mx/
7oSUoL80gSR5EMtyKY2f9MxJTx1GfxmswSCzNI4pdcofF4OK8U5jt2t4YziS
7+IQcolkFVgFupO4Vp4PZUJOObp1X9Okpw+skZFyzeRZu+SfPFrkHcuGS/c5
w2o9Z7MSknj4xlJTnqeq/FyMuq9yh1dX4lywIaZdM1q9P5Y3CYkxlrbljA6+
e8hY2JDjdGzKONsrAUe6mThz7LGv7YlEvT1sqNTN5Eya+cyRiu1ISWdN34oG
Hd050bSjuISWVdD7Z3bYCW+PVNsktZU6nSSaa1Sia1o+mRPtBwlHpfyHJ2mh
Jht9pgQfClatdlr5J54AGEJerbwmecjowVkOigqHDEf5p++j/zKcp2WuNVB2
a2+YNGJSsznyUsWVPjKeJzWKGc365ywkBVI9NX9JWdeTeCpSTDyaQPTJmo1O
loi3ZWREqynLkZjFBlrqoKu5ZZOORa7Tkm6Ps9Hhq7SltJVyMUMabLBhg0e3
2ys0ldLu11Dr14h9CfGJ2JfmjlaQEizGBhL0Akk7y3yFpqIZHIjPp5XQcZRU
F3HQvkqbXCeSiKdMZuQpp9K2MxBSrIWMCMzNyFaFRePnlpNuN347eErcoSwR
QQO6RnsxB7O3kBedo54ug8jjYW/y6i/ngKICe4PaFOVI8FtGz8wuHVPtNSlI
S3DNT5Le1RcUZ+N3xZ6H+7a1r35pl1RzO97it5KQfkBc7LRP5ypUVXwN/OeD
vTRno70eeFJN9IriXYB/2gfnRYWHnmfWBmnL7AdrosJHR2v+pi//i/Iv/zgq
7PmXKL/2SQsHeYbfUZnCP/bE10tyuJqI2pzeJZWayj4W+Psjyk4trJmXjXb6
fCaSAoQnEVSKx5VvjBFnWgajstLfQLqRmRnyNTS8d5QLUOhYaYzsbrzx9sX+
z73RwnA8R1nmST/SkKeUvpPjZ3wlUprmINpPw7dsc7jWqLosJ3SvZRZGsSTN
DOS4OZTqGWXpTSXZiFFVzXLXLS3spZuLjEgjjRSYudvwD3E94rjRHnjyysog
uKzwkQwaNPjR6ZGJKuUpm49vWtlApe1dwDx1vpEAM1zAqdC2OmlwZo3aEzFH
4/nRxbMs/VsrqYRWy5tI476YKGLDp2U0qdjzza5a+pA5gKNevDA5r2xQUq7h
nrGOXoBiQ09XzbRMl1WcU9MMHQimYFRli2h4M5HXmZmX6Ug1tiEQMvwROtSX
HalCHe0/215a3ZXdddfOltkteN+7+ITp0Wd/2XPkgrvPp6Zt/mjWyM0bu6LP
thaGfvz4tMHmu+cU2z/Yra/hrF2K7ateG2m78NmubPt8fRDZ2gq/n87MxJ1x
zTSOEFEXDiWNdaeqfbPuTyd45ezPZyApXolnOVWavmekzqdk5jtyfmnnSWM3
wY8i72OYpNR4w5qTS7FPa3EEpYmV+CWmn41jWBRl+Umunk5EL7MTD5yzu57+
qRhDmfxjnLcghfXVWLlo6Koth/TlZQoO6Y9uFBbauKLVPNjGNjMtN/y0+Gma
keYuzB/jfb3zVZxdIxUY0hQkFnTdMx+56upVSMORcf+5Fd46lmb2ZqlZf+oo
MBJBNZ0bD9WAkyZ/MbgcRbkWaC01u7FWMid3TFysFFpwUpz9uWGG0gpH9E16
FeJnPF7nboNTUnGYGOttAhVNt9K4K4OkwT/8kTAsRTdmpKP/WwmZMz5u08r/
Xx+fhJSo5sDo/+mHjbbAoOZ83oGkGBSelY220tKKWIxzYK+QlsxHYLLsdHxD
hXU6cHlQWZmNkd2sOHLDUDqPKSl48jlMQFvrin4GT32yClDV2BRtIeGwBDo1
+GsYAOI4o7Mdh9yEJT7+xzv8FoyW+IwUYHgNEByL+XoiSS2t9SNfSENPPgRh
MZWN+Lh6uQOT04t6uIxQcIXudieYJd3xbD4lt3EMZoSMK4dFCPc5fseiJ/ef
Tf0ycTH/ldTHeWZV8jiUjdzc2LAZH6LccbDFntAi2sjyPBHccGNK6DdOWMyz
cGB9Qkaxcx9queM82LWznTtOCoZeeHzayMpHTyWiGVzfPHzTwJHD729q7V91
3USo7HGIqDjVrsOtKx8c2fO2mzvq2xrZzj2n+Mwun09HUnwGz3J8xjBkOVfC
sFVOo0HPBjki+PG1YvxeTjNH+Sk3omzhie+Fq78/YTSUde68i2M3VxkusFlS
iMT+kBjjOCQJacnrSphKzK68Av/g1ZBGoSHQDON562iuGtzuST2gQ8DebR6S
SB0yma7zAsZDabl5Amzvc+Le4/NSTw0/p9bNP6l1k9Z4A++M/qbooa0F/E5I
rN1163QkhbV4lsPaDrejNJg7xXNl1W3Cm9vutCcEBr1NzBstCfqG5DTrEnjb
2PjlTpgWsel83j3yYKOc0MSZlU0emZNlst4oowhPnjXtqcIEDl6wvhkTiN/O
BO62dRqSmkA8AxMY66o0y9b6HHnsnZjidlNOrxM8ucYdPm0KMcr01saSqt39
NcbTZblTQ4xOVsGxndNKNWZiGdSyl9B0ioXZetgI+dUKBwLdrTl+hTnsnDsv
03vKmfVyDnEhUe83z6yni4l4DmvnZaI9tk5FUnOIZ8U51NJZPKb+HPL4UZ9N
m6X9ubxzjHeFo86hDkHkWpd0xvVZVp0L5Jm54fVeQ4rhWZyY4ZajfHMWxCsV
r1bUjvmBsa/ku4px7lTj3Enj3Bke59pARynyBLkj1Nq/JgQaawZsvF7Vdapd
e2/dEUm1C8+qOGsD7H4K7H4Edr9qga1XYBdt3QFJgcWzamAPVGAPJLAHVgvs
BAX2IAX2IAJ7UDXBfv2/dkBSYPGsCtgGBfbQ/yogKbB4Vg3s4Qrs4QT28GqB
bVRgj1JgjyKwR1UT7LEK7LEE9thqgZ2owHYrsN0Etns8YC82IDK7TuipPb69
CaF5GytU1aSqWqyqWkxVLS5X1SF4JEVAdxZs9X9l8+wOF9yf/fjE8Q6/Fpst
kuk5SJr8xFiZyddWty02j35teMHeg+I8CsXEuUDGb6hWSmrGbvfO5of/F04Z
dvMgnHL8PKezOo/0nWwTa1fChNa+eE0sGUsun678OheYfrqvCGHsG9NR/tMu
pL4JvR2jYcoShSlLCFOWVMSU4B0DaXmcEm+JCYp3DXZOCkdY9KXqqpxDifDs
lMXl596tLDVSgmZTM7tFFPCkUoh37xxpTmi+M/6d9jriBXL0fS8Z/lgeJUiP
OquPEyhjZX+TxzpsadwRGgjZOfwt6/bNZF3PPe3d5tjGjLVcSMg0PKnY/t4x
QLTu3GGTWfjqzOw405ZLBb5l2SVVaOzMzNFiI9tGAyNP/K88ksJIPMeLkTyU
vC0yDl0ORibcOJaxes6JpOmf3MTun3Z3LMYxzRo3ntvQYaapRToM8j5IHgQH
FLwxxBofIx1XKrE55EkVxDVGfExLv934XKvEOIjPwXW0jrjR0tki5LMlhsG5
KCUR3wwSn5im/WIh1Zpmfqnu3O4HRIW7Xx5pu/Eha8iYrK0fmbL6kSh/76t9
E445OXQOoA2M00DJqDB8cbH97Qu6sntPZaycpLDyJIWVJxFWnrQdWIk89IGJ
1jArHysdw1RjXelsdj10lJNAVRo3JK6KUZib5Dmj8f7NOQTw2I/ghSWY55jz
eJYc8kRoVLQzvJaPDDiii6CZEtwLKKFtGWmM7hm4ZOVwyveevptGO4Rp5+mm
4vrWhPhpStbXsatkb/3Bi6O5d79UbL/pRcIBKpzjYrjcVv9d0xDl73sViNlb
f+i3TQNRG53FUxF9DUNTMtOo2WsGeAkcRQL7JGh8WXCzQtRTFKKeQoh6SmVE
dS78kUPKopVL/WkfWYXPUYl/UznfC/rfs2gUB0RZeWJe6gzhnimZNdFHSlYi
yEAf/mn59iCnDJPCZ4/8Lmw8pDWS1oDb/ISMTVnB4BjuZCq8C2HmufScPdx6
063F9vUPd2V3ndeZmTktKmwcKLY/dm90yvM/jP6frYWBe/ubmthe7l+f7lS8
774eOuW8/72Tim33bRhpu+dHUeGpnxbbr3lpZMqyjQpFX47yD78QFZ77SfHW
txajLK5f784t2C/K/2SQeA9gHbdl35Epv1w40nbCz4rtx33QmWnapa9h4bKo
0PtR/8SDLzXojQuvo/z654rt964fbj35yWL7sl92ZXfc+xOBwqcpFD6NUPi0
caKwnCQ+FIrX7ayPwvy/wWLfayZkuW/XOx3SPs0nGYz9Brkd7bBn7CqwqtHH
Xlaf+eIpB+sc74JO5bQZW052KWQlagiKrf5ZfmCJ2DHRF3Vxc81E1VjtpPkJ
lEk5ZUJR4DQyp4HIUeGnT/c1HH9Cb/23DksCmxUrev7DI4HLxa0ft3d1LcqS
WbsS8mCwDlT+7O+7E2oWnn1coe1jUeFHr0X5q99PRvlHXkg0RYUXH47+8LcF
KIqDtv7Gk09nTKbP1362O22hChe9ERW++5fu3A6HDrUcvx6YjN8Gk3tq9z4i
yq99i1Jh5XBUWP5Rb/38kxiTWxQmn6Ew+QzC5DMqY3LWx2Q+zjSYyxK+j7kC
DzyfhPFhc0ZHi5K2G9uP1SkHq8XJNW+BWQxKeHZ03DNphu0LK/y/2GdlrbDg
dVNE3eBTTelL58qoVnzgxOoGIRZVLmN2SlnTC/r3XHrOX9d/3cToD3/ZJ1r8
5rXDrdf2j7Sd/3xU+MlzUf6xZ6O9H38kWvfud4urP24fOeT5I6K1b54b/eqj
b0SffbAAHDo69PH7o/yPN0X5O16PCjcrnOz9MCpc+FGUv+7dKH/9O1Fh1a+i
Qx+7P3rgzTOK+9x7X7H9NgX3vleojWsfuiLKP3BblH90XZRf/mG09olLYddS
3DK8U9R71+2PNO1xy7rGpWcNT75u3eLcLgfgmp2RKWc9q775WVR4RpHOra9E
hUP/OgU3L+iohql1Ew9cNdz63acPze6wTyLJefOvHG49/IXFilYSNZSXPTQ7
b5fh1tvWrJt4+vevbzjr4JG2Fy5cnDt4zhv6k31BIGcrAjmbCORsJhBr6Vye
QOSBjEEBn7F5BBJwGqr37aEr+z6UtkLa1Ak/JGuykXBlmDETjNiY29MfoY+z
vRS0bzlHKkw0Tow3M2Jsb8ZtdpcBe7Ygq3dkF29nJ5zN3Dzjvem4LFGjz0bX
ksao6snNxyipQ+Hb6nejwj2vKVY9sDGRiQ5759To3K15StMfHIweeLvHflK4
V8nOqnj+xl9FhXN/n4oKP/g9ss/5Q1RYtlln/+j1JMrBbH/dm1R9YemfKeUv
+V2Uv+K3ILAErx9/ePfgKL//FtSNtLm15yFyR1ISelR44im9+qh6dtqyrK5u
ifa40p1A1dkNTYfcyDfpbFMiEBaPDU373qTlffX6gnP0cvTcY1sULUSF31yz
sfnW775hvJxAD8sUPSwjeljG9ODfrxOgB7lvNOxWskS7OgQNrCkvx9KS3IwH
sIKPkAVnd+2BPEccoSy1/geswh0jcZRsO6WRpR87JiYMY+/onDMnPKJOGNnI
aLa5I/imQt/lNjmwI0nxZl9QTpZjwnMzuIxpvvPayEO8jJCsfy4950Pwhp3Q
0EF3nDLYfNY1g83fuW2o5cLbh1ouuWmo5eKbBzsuOmvo28+0DB25fn70wDs9
0ZPvLI3eff/w4csfOG6g6aRLByedpMqdcL+SVYaj/FW/iQrXvqdJ7uQ/RYXT
/zQ8ueexoZbF9w61rLhlqGX52qGWZetIRvjGOQ9Er7y2pHjh3dcoeefN6Jq3
zx964ac7QnwaOmbJqovq86f3Tfj20sFJF1x5SHZ6Jy4qGGo57q6osH4jlpGR
KWseiPJnfLhPpnlOQu+FUn0N+5w72HzUur0zk+cmkjrvovrZpw42H3j33mrz
kKihvOyCzIzpQy3XX3V63dcPOq3umD0HFckckt1r+hv6k70nK7I5T5HNeUQ2
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
1TsVrd5JtHrneGk1eGeTjBpZExOURJsKMRhC1Cn37YkASK8muUaxJ4qMylaB
/pzImR4/KoufabeV8YDFvmjaSoaGtp5xU8bWY8cx5mV2C2jaVYkO5UiFbBAC
dFgn542vNWQL6YC5w1jI0THpKHMlxxcgxxrsuKLvDq0cWfHyIZ2zFN4qIsL6
ReTD7EWRKfKHbnvG3nqGcHQgx5G2O+8EteoqGnrqjt45yv+uG8tiVDjvnahw
8tvF9te/G+V/fVqU3zIL1Bldoij2PJUu2TJzePrTaklHhYkptMyiO80/PDxa
q2C8svlwXiajfRElSlMwQrlQd1W1I1OeOoU4gyJaLJv4HhTN3+Fvs8UF4SMb
xnkgVr4bB+Iu/v/Y4DSI9y5FvHcR8d41duI1DMsXJWkWyD1KxxyUiChnjGd+
NLKVW3o/ToCsixHb8TPRAexq5KYJGSGidUJJGQxyFtKxEq2Q7FhCl/obqzpK
xnW4h99i45wQP0y9pr0hwh3VWMO017GgNrevys3lOImWsaLSBRYB2Wh0ot3T
oMqeZn3Djw55kR5uvflmEORg88UX9x2/vFUvhzkst3iPpQ0hJkHDTOOdmcw8
s4/pazj+eFpd93j+nq6d95nIMZzU1+AK/RMPuBDWGU8+CfO/ff6iQ4g//CzI
XC+YaaJuWqe3zBpecNeFuv5M31E/mIYNKDcvOp02obAGnBAdihDomqgHbrh0
V6Ka3D56mSeGoYhYycFoSv+SFXsZs8TeU8+sR+9B2wMD/U06O9M9pfWAvovO
toHZO2fMaUw0mwHrUgPGqzcNLH1tomeQDM4/ZmnDa5t/kykH1nCPYg33EGu4
Z7ysoSTgtePRmtbBO5xNTBk8YZL2WYUfr41JIgSfcXUsbXC+MSzEYQ+JyixE
BuxyIkqFvIbMFtqXu7WcELM76/XDRhTGoJ5lA2Y141zqK3EM6qpXHYZNbkO2
Y2kXtg2WS/jmzWW5hFFws+0vHXvsSc/Uhkv6m0CEb2PZ7qC81g1Y7hV5fQRy
3OnZh6OeLTOxJq9W4u4OStwlCl6vJeot978+K9pjwW9B7CfmckfsmmptJdLE
d4aFHIk1O0mwp+2gaJKk8Rc/mR19Y8lzUeH2l1B+S9vlA1va2t6LCgf9KSqs
HIoKr64m8i48+/C29td6NjZfdTrB/carqzcf9/Bi/F1sf+ihLW2HvMwwomve
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
brXFeqxOaW3Ymxww7dQRYv+0mGYZjCwY5Zj8wDDst2OYdu9thwKzccsMdnNr
s48fLoKrIvCp8R81AHArgq8/IoIL14jQuZ9GikbcXT9qdsAtbgLPndhRLaeL
KR9NFa8mQvipWXE/7WOJJV8cLUKfTxShDXeKr77og6rJ32V57SuXiYH7RskZ
YCrG9wxdeXuNv+/Q2uyjT4D9rf9ZB/tb/Y6xmvY5w/BqieHViOHVXcdwrrUO
dKUsmvYwk9SWyf8bhPmLMzzu9AsmtzZuaCU6BsLSHDVgR7QR/cdWT51BNNVT
Cd5xsK3N+84gGwWalU/ew6VMRpHdByRxY970yeGC72BK8LqcCaOjxbde3pg/
9uJoyfEPD/UVDgSp3HhiQ154QlNBlSdYGO2x6KzIRQt7RK+4b0B9YOzU6GV3
jcf054Nv6RstWfjNaMnNc6KXLxiHOPthU0G0ZGw4XDj3qMjRi7pFht0dChee
jSHbIIob8yZdFC4498p9DM2vSjS/imh+tX00F9q9AnkCSfhuvC4bmv+/JTJb
gPuNZ+p24wvGhll+4FjZKWTG2zlEOznHEmd0FtFKwz84xQNHdSZB3ZFHuEcT
xipz8PeQPp7sHuFuQ6+NnHJnz8jxtw+JFM2qD09pGBK9r7k4PGzGyOhw+bfb
gMvqAwNnRgfOmxW5cWFlZOpNoyNF374uWjz3+mjJ1TdFSy6+PTzzyqHRJ5qL
o0PuPjdceNo1kaIxCyKnTZ0eXdZcgpp/yaVNkaKRd4ULa66MFN16Vriw7vxI
2fkN4SlNhRCxEb3hkQGR++/sGV3ZXAIMAmWR8+eNDxfOnBUtuX5uuLByfn0g
MHsPNtszAsC/RoJ/DYJ/TboEtAr8B7nEOoxnyju2C3KcHXJjihabqUOtldQj
jI2vw2AKJhOzjTJXStOm3Swt1YzzDjQj2BOwp1NWeFedPJGdFHCj6bbMDXYF
nDFaZpSXzsZH4HvFPeUrVHLxhwqPnC8mPvh9cYNUNeAz7MUH5SS5E2KnxOJE
UEySn+Me/Y4Izd8gmnacA645YtPeviL4/AqpfSx/QXJ79bPLxC9kMXyWfFwj
Qs8+I0JX73TDARoqGk+EHlsrQtdvFaGWB0Roy80itPEOceLqerErEfIrFwTx
4e7jROiF5eoDnsyhxCS/f/Ru7dsLPLBW8sBa5IG16Xx7FQ/47TxAqow2UHJt
5mAOyE7HAeR0YItEdGICJQ7VcPNjNQ6HCZhPu+UzS9sJhCINPNr5tGeQYcDL
s0e1O61GyZ+N9dop6YATPxiBDbpZ9jNIjJ4x077N3dlMuGDLGdLhotQeapCS
UaosW/MGLjDm4O/+1wd6zUoOuqgl+d1dlckL3xuZrHzo+eTDG2uAMcTlr5yZ
PGVXRbL6/IfXl56xNHnh2tli0xe9xSNbzhTBJauTFZBPddkKEVr8evK5V09D
vpix7dJk5fdWidAlH4mX1k4TP91drRhj8RvJygvejZVdd7cIrb8tXnH/IlEt
n/WEfK5c0Cbf/mAg/v3VrkqXW7mLiFtWzZX1HgZOiVeMaY2VlbW69mC7PccB
m7wm2eQ1ZJPX0h154cAmXNdgTkvkV3Uwm+SnYxO4xZ6qyFJ6VeBJZ7Wk/HS8
AOVk7iY/Odv6xZooaKeDc3vqsTlk3SCzOEXREUm+dHewJ1pep5RMjdxUtNGT
e41xPlFsYqRth6fD3XCZBpcNRg7vPPk08JayhOVZ9l4RXWZNLOacT5zutLdD
Hq30PNpUQLXUyVKoLIreupxz+tWNPDdYd87UgqriHtl6wOpyzxhW5M7LHuob
UFI7aCLOELCfSDb83oN9tadOzMYtRl1We4r8PlBvOe7V9SBc/3WJ9dcR66+3
vyYwsM71dh1vSWnuHJYCaecDcgDU6ji57GOdrq0GstPhHB4B19Qj/E7ZvaHl
3nQtSCVTVzXw90FJwh1g7eSf5CVhQHWdxL+201D+cvbYbMuAZOskYYqNo7Vb
n35jx0euqfQmlS1LDZTddZwM/PoRhl6aflenqDHvqqGieveFFG0U+8GrQ5Bs
yd0XiNC7t7eVLq4TIz8+S2xMqExmSRWujTbydYmQjs0G0zqEbYuPE6Hk1l2V
RQUFbgPGrRLGrQjj1vZh7OMwtkDDjrmmayaG3amNryxyUSX6xNXKL7BLsA0Y
STw1HnlEFNHFOnrfm55HLs5ZZjFVZ+tQ6yneVA+sFqeBr4FJle/Uy2Okrf1o
c0Boy98irxpdzMt52BS/zx59RQNDGFT5WBVrWJs2OWnBV14fuGgQgu+rL3uh
C/xF6xG0kaLvnwvgi5bcc35yyNYzxWp53Qa+5Cu7KsVfFWjBdbfu3Gm5hD6y
qQDw3pDAewOB90YngUdcyHwTfVxns4BX0kkoDVNlHb7EQRYVJ/tWvsM46o0t
mGdqykaGgAtp0ob5p8Y/HPtW5emeV9P9+EBKUcI5qOaE0egYbYkgOf9Uddde
0HvZGL4px/BNHMM3OzmGXG8ltqDemEqWGc2mO0nDrA4ewd8eIwSoA7Y116o2
CzCOf7ZDWdp3oiS2tcqxef+mfTvtOTfBsK6Tw7oOh3Vd+8Pq5cMKTdEShcRh
F0ZUTY9qjjBmq//rEaVN6YyNaD85om/JEX0LR/StdkcUn55t/adUdvgPUzzn
phaDXi77rVpsrWVd6G1dzTHr4X9DzSd0sVttsltt2K22THlDAtn1kux6JLs+
k2Q3SLIbkOyGTJLdKMluRLIbM0W2vyT7tiT7NpJ9O5Nk35Fk30Gy72SS7CZJ
dhOS3ZRJsu9Ksu8i2Xf/A8hulmQ3I9nNmSJ7pCT7Y0n2x0j2x5kk+54k+x6S
fS+TZLdIsluQ7JZ0ZKep6hQggN/Y2ofC0bjpyMqorMryQEJTRnhajZCmCHVp
MU20vCYptV7HaIRUvJeV2Idth9jal0WHMcBzKRu9FajDfEYpzTnZIOg+NZ2p
qdBSHNwsn7rxUKcB0GZI+wBQI9JcJqNFtsPbm6/KanqM9hdl6aAcbfHHjHba
SFAzWF4PqOugjYFWljikF0/KLBtYI10DS8HgkADRyG8MQ0JH2rBsbfYFQMq0
5jPMOy61s6cz16EuYW3rqUkypX1kc60G2kDPpfaRgsvMo3A3wUqnuLHnQHcy
dhk7E7ZUkMzUVMT9TAnp/Dt3eady+EsgUyNmuhk6HdmtXc8jp4WLREMi1Da1
hVxXcsH7EqO7oMew7Nkgr9/WUgoL7eT7cin0SSLUOKch/0uGlK0SKVsRKVsP
ASnkDkYmEWZ2s8bRZWYN5ZZrftiAfrHcYkdDxiMHbFjELR7GmpTDT4eLe43h
NDHk4atUkheGFspa7uTGyGSgkXmc2YQ6CR6nhEBZ3HALBU5Jgyg3uPKk6CRa
FKpy0E/3Un0W+9pEKHZvaxlHCiyWXRwq70uovI9Qeb99qOQYUGGjSFFqPFWs
U1pV4g0+bA4YsjwDiL/oum2kESTavmUcx24TK24YWm1dsadJd3prRp12PBU7
hwKWiN3PYcc75rOaaQtrYLueVtkNupX1swOwv85W8T484HbZk1XJF7f2r79y
dgAC9lzuaH1zsasEvEzC85sK2ta0qOz3azaXJ2dunBKZ+MNekWnhorZxCy9I
PrLzyPAdTYW4b9/re+fVj5bPmN5cEj36wWOjk5tLavtNJDs3TFPhebLqY80l
jd9pyG+8uCEPglM/OhRk+e3IotfpVu56NGPxN5aSGlZWVpqB+Z6lsSun5ye+
ZwN/WSy7CS528Ju5JkZwKejlkAsWn1rTQCvXaTuGxKFDEmEHhGUZZF02UcZM
VvCPkTDMafU5V79MOcOQFRgwBIVgUFIWXo/4Wl76XSKUfAo26sTTiaB8JRsS
QfEzVY49f09+f2ZftVvcA0ZhUf/xiWKlvPRP/bljx1R5621I7ib5/TopmS5s
LSOFo27CtFyxV5bD5wP52ZgI1k2alkNwqpZw2ibhtA3htK19OBXY4cRBwPf9
nPGUdneA0oWkONqIzWdKsBOKeJz6wc4OxilGekOEG2n4a9dZTPguBEkSOl+w
E7LqICQZnlS60WTSwXuzHHQZJwl1iR5Gt7vAKlMyrXdRboGbNFw8k+SvOmu7
21cAKGxraymN79jUM7nroyNib7WWNU68NCQe218lHkt0b/x2Q17yIzmLfZno
gX1+R0Lu/E2XJ6/bPCTe8Fbf+LFPfFc8sGdk8ieyTmJ/7/j4lVfELnxpQPIm
+f3s2BliTqJ73WA5+2nMVZX39MTfkHrVnkQo/uLm8vjTm8urKnt6OOZiEnMx
xFysCyKMT4z6Ydb8aIMcO1QExpoC2NRUmgKaz24G5HGNTmij+mwiSulIfr4U
gLvIvcgGX35OAO0tACi5EmxHmTVEXUCZkWvep+ZBI5eL1pjJmwG3PGbhb+8A
j6cn+NNsLytrDUrE5WHxiA1SQRYvSoCskXKrRQJg/A/uEZEvqlHMffjeuGT1
4h+K0I7vitDa+0TonrVi7qfDxe27jxRjf3SlCH46IVnx0TEvFd91qgh9MlFU
7T4NR2vup/3F8O8tF8EJn+8tH/2j7d2vfFTM+/hocbukee5nw0SvN+4Voa03
idCKRSK4booI7h8RK3txvAg2v/pU0axrpx47MVsKxaB4Qn4WJoLJBbJdf0+E
tr/fWgatvj2/Tj5v/b0vH/3DM8QrkuaLidADM5oKXe9jnzzHAyK3S0RuR0Ru
J0R6O0YkvXDMv6Iu03xDgZE2IUho5FxuTKZsLUblNLFiKo6OsZnSDbn+TqIq
lYfLzaLADDipqynvS0d/NgISD7F1UvsMKzdzEiH/ESigOhqPRqr3tN5oF6nE
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
+HWHvvqN/wXLtOL0\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"7f911512-ad7c-417c-a19a-09796aef31ca"]
}, Open  ]],

Cell["\<\
The plot above can be interpreted by looking at the distance from the Feature \
Impact = 0 line and the displayed color of each point. The distance from the \
0 line reflects how much of an impact the feature had on the model for that \
particular data point. The displayed color shows whether the feature value \
was low/more negative (blue) or high/more positive (yellow) for that point. \
Features with points more distant from the 0 line were more important for the \
model. When points of the same color cluster on one side of the 0 line, it \
indicates that the feature value tended to shift the model prediction in a \
more consistent direction.

It can be simpler to omit the effect direction and just calculate the \
absolute value of the SHAP value for each feature. We can write a convenience \
function to extract the SHAP values for each feature, take the absolute \
values, and calculate the average.\
\>", "Text",
 CellChangeTimes->{{3.873380204903262*^9, 3.8733802320779066`*^9}, {
  3.873814240383162*^9, 3.8738144666122866`*^9}, {3.8738144967418737`*^9, 
  3.8738145142533865`*^9}, {3.8738147062784786`*^9, 
  3.873814735358677*^9}},ExpressionUUID->"9b3f1d6b-9d24-4982-8c98-\
18d873ad7438"],

Cell[BoxData[
 RowBox[{
  RowBox[{"shapSummary", "[", 
   RowBox[{"model_PredictorFunction", ",", "data_"}], "]"}], ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"shapVals", "=", " ", 
      RowBox[{"Dataset", "@", 
       RowBox[{"PredictorMeasurements", "[", 
        RowBox[{"model", ",", "data", ",", "\"\<SHAPValues\>\""}], "]"}]}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"shapVals", "[", "Mean", "]"}], "[", "Abs", "]"}], "//", 
      "Normal"}], "//", "Sort"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.872773512468028*^9, 3.872773650299799*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"282601d6-1e11-4693-8181-d53b2fbc17d9"],

Cell["\<\
Now let\[CloseCurlyQuote]s calculate the mean absolute SHAP values for the \
Decision Tree regression and display them in a bar plot:\
\>", "Text",
 CellChangeTimes->{{3.8733802370779767`*^9, 3.873380247606368*^9}, {
  3.873814470310211*^9, 3.873814481070794*^9}, {3.873814520979724*^9, 
  3.873814525195868*^9}},ExpressionUUID->"896349cc-e1a6-4fce-bca5-\
1ca6f8e7094b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "calculate", " ", "mean", " ", "absolute", " ", "SHAP", " ", "values"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"SHAPresultDecisionT", "=", 
   RowBox[{"shapSummary", "[", 
    RowBox[{"decisionT", ",", "train"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.872773646412388*^9, 3.872773661443429*^9}, {
  3.872773776709008*^9, 3.872773778908493*^9}, {3.873380180345572*^9, 
  3.8733801814130845`*^9}, {3.8738145369658628`*^9, 3.8738145564213357`*^9}, {
  3.8801940528511796`*^9, 3.880194067513174*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"05c9cec2-16ff-42a9-a4d9-9b7fd2283a21"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"AromaticRingCount\"\>", "\[Rule]", "0.18836541842606527`"}], 
   ",", 
   RowBox[{"\<\"LongestPiChain\"\>", "\[Rule]", "0.5022218339849939`"}], ",", 
   RowBox[{"\<\"HeterocycleCount\"\>", "\[Rule]", "0.7185833852577264`"}], 
   ",", 
   RowBox[{"\<\"HeteroatomCount\"\>", "\[Rule]", "0.8087504113284268`"}], ",", 
   RowBox[{"\<\"MolecularMass\"\>", "\[Rule]", "0.8784961204573444`"}], ",", 
   RowBox[{"\<\"HBondAcceptorCount\"\>", "\[Rule]", "1.0066334693418495`"}], 
   ",", 
   RowBox[{"\<\"RotatableBondCount\"\>", "\[Rule]", "1.1268120018666308`"}], 
   ",", 
   RowBox[{"\<\"HBondDonorCount\"\>", "\[Rule]", "2.003905166007059`"}], ",", 
   RowBox[{"\<\"MinEllipsoidLength\"\>", "\[Rule]", "2.0540948861739032`"}], 
   ",", 
   RowBox[{"\<\"LinkerLength\"\>", "\[Rule]", "2.2056220222967506`"}], ",", 
   RowBox[{"\<\"MaxDistance\"\>", "\[Rule]", "2.367679477205877`"}], ",", 
   RowBox[{"\<\"DegreeOfUnsaturation\"\>", "\[Rule]", "7.927602223362489`"}], 
   ",", 
   RowBox[{"\<\"FractionCarbonSP3\"\>", "\[Rule]", "16.576893977872178`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.88011503187022*^9, 3.8801302361047792`*^9, 
  3.880194051180501*^9, 3.8801942576712933`*^9, 3.880213098158303*^9, 
  3.880213904290879*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"ce274530-1abb-4cda-8242-e5e6f04145eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"SHAPresultDecisionT", ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLabels", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BarOrigin", "->", "Left"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{
   "FrameLabel", "->", 
    "\"\<mean(|Shap value|) (average impact on model output \
magnitude)\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8727737544600267`*^9, 3.872773810996188*^9}, {
  3.880194056244484*^9, 3.8801940570297823`*^9}, {3.880194087584125*^9, 
  3.8801940889594584`*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"de0e449b-89b7-426b-9324-d1d9a1a58268"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0., 0.3023255813953489}, {0., 13.440071556350624`}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 0.5599284436493739}, {0.5730145010752763, 
             1.4400715563506261`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.30773437499998`, 129.69690713005488`}, {
            39.955575786378084`, 49.31364451767051}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5730145010752763]& ,
         TagBoxNote->"0.5730145010752763"],
        StyleBox["0.5730145010752763`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5730145010752763, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 1.5599284436493739`}, {0.7203510714875887, 
             2.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.30773437499998`, 135.32516895735677`}, {
            29.89122533761291, 39.249294068905336`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.7203510714875887]& ,
         TagBoxNote->"0.7203510714875887"],
        StyleBox["0.7203510714875887`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7203510714875887, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 2.559928443649374}, {1.0188198797120864`, 
             3.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.30773437499998`, 146.72668723126012`}, {
            19.826874888847733`, 29.18494362014016}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.0188198797120864`]& ,
         TagBoxNote->"1.0188198797120864"],
        StyleBox["1.0188198797120864`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.0188198797120864`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 3.559928443649374}, {1.138320359320838, 
             4.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.30773437499998`, 151.29160947591419`}, {
            9.762524440082558, 19.120593171374985`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.138320359320838]& ,
         TagBoxNote->"1.138320359320838"],
        StyleBox["1.138320359320838`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.138320359320838, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 4.559928443649373}, {1.2939211755899584`, 
             5.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.30773437499998`, 
            157.23556576628891`}, {-0.30182600868261744`, 9.05624272260981}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.2939211755899584`]& ,
         TagBoxNote->"1.2939211755899584"],
        StyleBox["1.2939211755899584`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.2939211755899584`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 5.559928443649373}, {1.369834623404631, 
             6.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.30773437499998`, 
            160.13546196530137`}, {-10.366176457447793`, -1.008107726155366}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.369834623404631]& ,
         TagBoxNote->"1.369834623404631"],
        StyleBox["1.369834623404631`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.369834623404631, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 6.559928443649373}, {1.3740967650931957`, 
             7.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.30773437499998`, 
            160.2982759177449}, {-20.430526906212975`, -11.072458174920541`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.3740967650931957`]& ,
         TagBoxNote->"1.3740967650931957"],
        StyleBox["1.3740967650931957`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.3740967650931957`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 7.559928443649373}, {1.7661323346606166`, 
             8.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.30773437499998`, 
            175.2740475470571}, {-30.494877354978144`, -21.136808623685724`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.7661323346606166`]& ,
         TagBoxNote->"1.7661323346606166"],
        StyleBox["1.7661323346606166`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.7661323346606166`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 8.559928443649373}, {2.0671143758061623`, 
             9.440071556350624}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.30773437499998`, 
            186.77157140106232`}, {-40.55922780374331, -31.201159072450892`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2.0671143758061623`]& ,
         TagBoxNote->"2.0671143758061623"],
        StyleBox["2.0671143758061623`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.0671143758061623`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 9.55992844364937}, {3.311500114891034, 
             10.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.30773437499998`, 
            234.3071474914432}, {-50.62357825250848, -41.265509521216046`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3.311500114891034]& ,
         TagBoxNote->"3.311500114891034"],
        StyleBox["3.311500114891034`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.311500114891034, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 10.55992844364937}, {3.352812777435082, 
             11.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.30773437499998`, 
            235.8852925570585}, {-60.68792870127366, -51.32985996998123}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3.352812777435082]& ,
         TagBoxNote->"3.352812777435082"],
        StyleBox["3.352812777435082`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.352812777435082, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 11.55992844364937}, {4.262122648201037, 
             12.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.30773437499998`, 
            270.62095947599715`}, {-70.75227915003885, -61.39421041874641}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4.262122648201037]& ,
         TagBoxNote->"4.262122648201037"],
        StyleBox["4.262122648201037`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.262122648201037, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 12.55992844364937}, {5.659501025646191, 
             13.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.30773437499998`, 
            324.00085937499995`}, {-80.81662959880403, -71.45856086751158}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5.659501025646191]& ,
         TagBoxNote->"5.659501025646191"],
        StyleBox["5.659501025646191`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5.659501025646191, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.3023255813953489},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {
     FormBox[
     "\"mean(|Shap value|) (average impact on model output magnitude)\"", 
      TraditionalForm], None}},
  FrameTicks->{{{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"MaxDistance\"", TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"HBondAcceptorCount\"", TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"HBondDonorCount\"", TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["\"LinkerLength\"", TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["\"MolecularMass\"", TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["\"HeteroatomCount\"", TraditionalForm], 0}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox["\"MinEllipsoidLength\"", TraditionalForm], 0}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox["\"FractionCarbonSP3\"", TraditionalForm], 0}, {
      8.999999999999998, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      8.999999999999998, 
       FormBox["\"LongestPiChain\"", TraditionalForm], 0}, {9.999999999999996, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      9.999999999999996, 
       FormBox["\"AromaticRingCount\"", TraditionalForm], 0}, {
      10.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      10.999999999999996`, 
       FormBox["\"RotatableBondCount\"", TraditionalForm], 0}, {
      11.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      11.999999999999996`, 
       FormBox["\"DegreeOfUnsaturation\"", TraditionalForm], 0}, {
      12.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      12.999999999999996`, 
       FormBox["\"HeterocycleCount\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      8.999999999999998, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      9.999999999999996, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      10.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      11.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      12.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}, {
    Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{3.8801150319843674`*^9, 3.8801942617314434`*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"c6c6eab3-32e9-4aa3-b936-9d0557177536"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0., 0.3023255813953489}, {0., 13.440071556350624`}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 0.5599284436493739}, {0.06214835350520597, 
             1.4400715563506261`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 108.43236192183791`}, {
            39.95557578637806, 49.3136445176705}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.06214835350520597]& ,
         TagBoxNote->"0.06214835350520597"],
        StyleBox["0.06214835350520597`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.06214835350520597, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 1.5599284436493739`}, {0.4738665279174111, 
             2.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 112.57037200202669`}, {
            29.891225337612884`, 39.249294068905314`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.4738665279174111]& ,
         TagBoxNote->"0.4738665279174111"],
        StyleBox["0.4738665279174111`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4738665279174111, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 2.559928443649374}, {0.7072773398490994, 
             3.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 114.91628809858302`}, {
            19.826874888847705`, 29.184943620140135`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.7072773398490994]& ,
         TagBoxNote->"0.7072773398490994"],
        StyleBox["0.7072773398490994`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7072773398490994, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 3.559928443649374}, {1.0993923589072128`, 
             4.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 118.85727492475941`}, {
            9.76252444008253, 19.120593171374956`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.0993923589072128`]& ,
         TagBoxNote->"1.0993923589072128"],
        StyleBox["1.0993923589072128`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.0993923589072128`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 4.559928443649373}, {1.2070621773754013`, 
             5.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            119.93941999836355`}, {-0.30182600868265297`, 9.056242722609781}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.2070621773754013`]& ,
         TagBoxNote->"1.2070621773754013"],
        StyleBox["1.2070621773754013`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.2070621773754013`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 5.559928443649373}, {1.7461089854828098`, 
             6.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            125.35715782066535`}, {-10.366176457447835`, \
-1.0081077261554015`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.7461089854828098`]& ,
         TagBoxNote->"1.7461089854828098"],
        StyleBox["1.7461089854828098`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.7461089854828098`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 6.559928443649373}, {1.9448485847330532`, 
             7.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            127.35460781471595`}, {-20.430526906213018`, \
-11.072458174920584`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.9448485847330532`]& ,
         TagBoxNote->"1.9448485847330532"],
        StyleBox["1.9448485847330532`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9448485847330532`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 7.559928443649373}, {1.9869335247602147`, 
             8.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            127.77758624238716`}, {-30.4948773549782, -21.136808623685766`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.9869335247602147`]& ,
         TagBoxNote->"1.9869335247602147"],
        StyleBox["1.9869335247602147`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9869335247602147`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 8.559928443649373}, {2.2353246732532535`, 
             9.440071556350624}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            130.27406354208685`}, {-40.559227803743354`, \
-31.201159072450935`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2.2353246732532535`]& ,
         TagBoxNote->"2.2353246732532535"],
        StyleBox["2.2353246732532535`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.2353246732532535`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 9.55992844364937}, {2.2367382104491726`, 
             10.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            130.2882704232229}, {-50.62357825250854, -41.2655095212161}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2.2367382104491726`]& ,
         TagBoxNote->"2.2367382104491726"],
        StyleBox["2.2367382104491726`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.2367382104491726`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 10.55992844364937}, {2.5777216971412504`, 
             11.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            133.71535524191998`}, {-60.68792870127372, -51.329859969981285`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2.5777216971412504`]& ,
         TagBoxNote->"2.5777216971412504"],
        StyleBox["2.5777216971412504`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.5777216971412504`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 11.55992844364937}, {3.060270697268264, 
             12.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            138.5652568270549}, {-70.7522791500389, -61.394210418746454`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3.060270697268264]& ,
         TagBoxNote->"3.060270697268264"],
        StyleBox["3.060270697268264`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.060270697268264, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 12.55992844364937}, {21.510493454720805`, 
             13.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            324.000859375}, {-80.81662959880407, -71.45856086751164}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 21.510493454720805`]& ,
         TagBoxNote->"21.510493454720805"],
        StyleBox["21.510493454720805`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[21.510493454720805`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.3023255813953489},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {
     FormBox[
     "\"mean(|Shap value|) (average impact on model output magnitude)\"", 
      TraditionalForm], None}},
  FrameTicks->{{{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"RotatableBondCount\"", TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"MolecularMass\"", TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"AromaticRingCount\"", TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["\"DegreeOfUnsaturation\"", TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["\"HeteroatomCount\"", TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["\"LinkerLength\"", TraditionalForm], 0}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox["\"HBondAcceptorCount\"", TraditionalForm], 0}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox["\"HeterocycleCount\"", TraditionalForm], 0}, {
      8.999999999999998, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      8.999999999999998, 
       FormBox["\"LongestPiChain\"", TraditionalForm], 0}, {9.999999999999996, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      9.999999999999996, 
       FormBox["\"MinEllipsoidLength\"", TraditionalForm], 0}, {
      10.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      10.999999999999996`, 
       FormBox["\"HBondDonorCount\"", TraditionalForm], 0}, {
      11.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      11.999999999999996`, 
       FormBox["\"MaxDistance\"", TraditionalForm], 0}, {12.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      12.999999999999996`, 
       FormBox["\"FractionCarbonSP3\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      8.999999999999998, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      9.999999999999996, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      10.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      11.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      12.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}, {
    Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{3.880130178784939*^9, 3.8801939401121426`*^9, 
  3.88019411598643*^9, 3.880213098343093*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"4b523937-33fa-4eb7-b54f-d39e7994e4bc"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0., 0.3023255813953489}, {0., 13.440071556350624`}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 0.5599284436493739}, {0.18836541842606527`, 
             1.4400715563506261`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 110.26436518326985`}, {
            39.95557578637808, 49.31364451767051}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.18836541842606527`]& ,
         TagBoxNote->"0.18836541842606527"],
        StyleBox["0.18836541842606527`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.18836541842606527`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 1.5599284436493739`}, {0.5022218339849939, 
             2.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 114.35762893771977`}, {
            29.891225337612894`, 39.24929406890533}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5022218339849939]& ,
         TagBoxNote->"0.5022218339849939"],
        StyleBox["0.5022218339849939`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5022218339849939, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 2.559928443649374}, {0.7185833852577264, 
             3.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 117.17938070629228`}, {
            19.826874888847712`, 29.184943620140146`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.7185833852577264]& ,
         TagBoxNote->"0.7185833852577264"],
        StyleBox["0.7185833852577264`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7185833852577264, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 3.559928443649374}, {0.8087504113284268, 
             4.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 118.35532423130982`}, {
            9.762524440082537, 19.120593171374964`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.8087504113284268]& ,
         TagBoxNote->"0.8087504113284268"],
        StyleBox["0.8087504113284268`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.8087504113284268, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 4.559928443649373}, {0.8784961204573444, 
             5.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            119.26493629929128`}, {-0.30182600868264586`, 9.056242722609788}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.8784961204573444]& ,
         TagBoxNote->"0.8784961204573444"],
        StyleBox["0.8784961204573444`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.8784961204573444, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 5.559928443649373}, {1.0066334693418495`, 
             6.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            120.93608252979352`}, {-10.366176457447835`, \
-1.0081077261553943`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.0066334693418495`]& ,
         TagBoxNote->"1.0066334693418495"],
        StyleBox["1.0066334693418495`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.0066334693418495`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 6.559928443649373}, {1.1268120018666308`, 
             7.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            122.50343118625044`}, {-20.430526906213018`, \
-11.072458174920584`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.1268120018666308`]& ,
         TagBoxNote->"1.1268120018666308"],
        StyleBox["1.1268120018666308`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.1268120018666308`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 7.559928443649373}, {2.003905166007059, 
             8.440071556350626}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            133.9423359849887}, {-30.4948773549782, -21.136808623685766`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2.003905166007059]& ,
         TagBoxNote->"2.003905166007059"],
        StyleBox["2.003905166007059`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.003905166007059, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 8.559928443649373}, {2.0540948861739032`, 
             9.440071556350624}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            134.59690206113237`}, {-40.559227803743354`, \
-31.201159072450935`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2.0540948861739032`]& ,
         TagBoxNote->"2.0540948861739032"],
        StyleBox["2.0540948861739032`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.0540948861739032`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 9.55992844364937}, {2.2056220222967506`, 
             10.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            136.5730940500796}, {-50.62357825250854, -41.2655095212161}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2.2056220222967506`]& ,
         TagBoxNote->"2.2056220222967506"],
        StyleBox["2.2056220222967506`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.2056220222967506`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 10.55992844364937}, {2.367679477205877, 
             11.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            138.68662072480637`}, {-60.68792870127372, -51.329859969981285`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2.367679477205877]& ,
         TagBoxNote->"2.367679477205877"],
        StyleBox["2.367679477205877`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.367679477205877, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 11.55992844364937}, {7.927602223362489, 
             12.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            211.19821878742917`}, {-70.7522791500389, -61.39421041874647}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 7.927602223362489]& ,
         TagBoxNote->"7.927602223362489"],
        StyleBox["7.927602223362489`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7.927602223362489, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.609], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 12.55992844364937}, {16.576893977872178`, 
             13.440071556350624`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.307734375, 
            324.000859375}, {-80.81662959880408, -71.45856086751165}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 16.576893977872178`]& ,
         TagBoxNote->"16.576893977872178"],
        StyleBox["16.576893977872178`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[16.576893977872178`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.3023255813953489},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {
     FormBox[
     "\"mean(|Shap value|) (average impact on model output magnitude)\"", 
      TraditionalForm], None}},
  FrameTicks->{{{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"AromaticRingCount\"", TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"LongestPiChain\"", TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"HeterocycleCount\"", TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["\"HeteroatomCount\"", TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["\"MolecularMass\"", TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["\"HBondAcceptorCount\"", TraditionalForm], 0}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox["\"RotatableBondCount\"", TraditionalForm], 0}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox["\"HBondDonorCount\"", TraditionalForm], 0}, {
      8.999999999999998, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      8.999999999999998, 
       FormBox["\"MinEllipsoidLength\"", TraditionalForm], 0}, {
      9.999999999999996, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      9.999999999999996, 
       FormBox["\"LinkerLength\"", TraditionalForm], 0}, {10.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      10.999999999999996`, 
       FormBox["\"MaxDistance\"", TraditionalForm], 0}, {11.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      11.999999999999996`, 
       FormBox["\"DegreeOfUnsaturation\"", TraditionalForm], 0}, {
      12.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      12.999999999999996`, 
       FormBox["\"FractionCarbonSP3\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      8.999999999999998, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      9.999999999999996, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      10.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      11.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
      12.999999999999996`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}, {
    Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{3.8802129796664357`*^9, 3.880213904458*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"f2a74887-9cc2-430c-87cf-9181dd38e1b4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SHAP Analysis for Random Forest Regression", "Subsection",
 CellChangeTimes->{{3.8733802911819515`*^9, 3.8733802970826416`*^9}, {
  3.8801940948606176`*^9, 
  3.880194096637848*^9}},ExpressionUUID->"4cf9ade7-daec-411a-864c-\
c20e6a9a5386"],

Cell["\<\
Now follow the same approach to interpret our Random Forest model using the \
SHAP approach. Add a code block below to perform SHAP analysis and plot the \
results.\
\>", "Text",
 CellChangeTimes->{{3.873380510691733*^9, 3.8733805143320117`*^9}, {
  3.873380546367629*^9, 
  3.8733805483137536`*^9}},ExpressionUUID->"e8869b6d-bf56-4a4f-8813-\
7a7b430cd254"],

Cell[TextData[StyleBox["ADD A CODE BLOCK HERE TO PERFORM SHAP ANALYSIS FOR \
THE RANDOM FOREST MODEL AND GENERATE PLOTS OF FEATURE IMPORTANCE",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8733805390107565`*^9, 
  3.8733805432374287`*^9}},ExpressionUUID->"0f59491f-be9c-470d-ab69-\
9e969cc9f904"],

Cell["\<\
Are these tree models relying on the same features as the linear regression \
models above?\
\>", "Text",
 CellChangeTimes->{{3.873380562761944*^9, 
  3.873380564868203*^9}},ExpressionUUID->"a444e8bc-580d-4d3a-8dfb-\
2e47c882a26d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion", "Title",
 CellChangeTimes->{{3.873380581312546*^9, 
  3.873380582654478*^9}},ExpressionUUID->"5cfc28c8-2ab8-4680-82b7-\
4e0edec359f7"],

Cell["\<\
This exercise is just one example of how machine learning regression analysis \
can be applied to chemistry. As you continue in your chemistry studies or \
research, look for other opportunities to make predictions or generate \
hypotheses using these types of models!\
\>", "Text",
 CellChangeTimes->{
  3.8733805937088337`*^9},ExpressionUUID->"ef7c50dd-8223-4d27-88de-\
9bbd577342c6"]
}, Open  ]]
},
WindowSize->{949, 467},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e5da989f-1c5a-4a18-ac9d-6eb3c21d8a4f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "assocHref"->{
  Cell[41757, 990, 934, 18, 81, "Text",ExpressionUUID->"53b37954-8871-4f58-a3a5-587149ae0751",
   CellTags->"assocHref"]},
 "splithref"->{
  Cell[2610705, 46136, 238, 3, 54, "Subsection",ExpressionUUID->"5e105410-b066-4c5f-b81b-c04a8a06d8b6",
   CellTags->"splithref"]},
 "modeEvalHref"->{
  Cell[2907779, 52046, 222, 3, 64, "Subsection",ExpressionUUID->"c3fa0085-d290-411b-8963-da6560275fc2",
   CellTags->"modeEvalHref"]},
 "featureSelectionHref"->{
  Cell[2972197, 53369, 198, 4, 67, "Section",ExpressionUUID->"556598a1-e3f8-48ac-aef2-49f23c8627b9",
   CellTags->"featureSelectionHref"]},
 "penalizedRegressionHref"->{
  Cell[3008757, 54298, 271, 5, 67, "Section",ExpressionUUID->"3ae17e3c-b934-45dc-a795-bc484c1baaf3",
   CellTags->"penalizedRegressionHref"]},
 "featureImportanceHref"->{
  Cell[3092545, 56057, 197, 4, 67, "Section",ExpressionUUID->"171a1058-a0a8-4970-93b1-dde6c6d99fb1",
   CellTags->"featureImportanceHref"]},
 "treeModelsHref"->{
  Cell[3146333, 57361, 185, 3, 67, "Section",ExpressionUUID->"6a5faae0-f57e-4b21-a9f9-d04ff224d6ce",
   CellTags->"treeModelsHref"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"assocHref", 3552560, 65184},
 {"splithref", 3552699, 65187},
 {"modeEvalHref", 3552850, 65190},
 {"featureSelectionHref", 3553012, 65193},
 {"penalizedRegressionHref", 3553182, 65196},
 {"featureImportanceHref", 3553353, 65199},
 {"treeModelsHref", 3553515, 65202}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 599, 9, 35, "Text",ExpressionUUID->"418c2fce-ad73-40c0-8f91-700a63a02cd2"],
Cell[CellGroupData[{
Cell[1182, 33, 215, 3, 160, "Title",ExpressionUUID->"e78cea1c-9510-4ff1-b7da-1e06c990e6c5"],
Cell[1400, 38, 179, 3, 98, "Title",ExpressionUUID->"e4bc22fc-ce52-463f-b9ef-47c19cad53f4"],
Cell[CellGroupData[{
Cell[1604, 45, 173, 4, 67, "Section",ExpressionUUID->"82a53d30-79e3-41e7-90ff-5b5600ac9493"],
Cell[1780, 51, 377, 8, 32, "Item",ExpressionUUID->"5845d42f-156c-4dc9-98eb-7668f1b86f39"],
Cell[2160, 61, 381, 7, 53, "Item",ExpressionUUID->"7f6147b8-9a0d-446f-b45e-50bfb8ca387b"],
Cell[2544, 70, 386, 8, 32, "Item",ExpressionUUID->"163625f1-74fb-45fa-948c-8f0bb7d0b1d5"],
Cell[2933, 80, 499, 9, 53, "Item",ExpressionUUID->"2f697c54-758b-4d1a-baf4-5be606cb27f4"],
Cell[3435, 91, 383, 8, 32, "Item",ExpressionUUID->"d1baa35a-be51-4558-b477-5805d3503148"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3855, 104, 185, 3, 67, "Section",ExpressionUUID->"426ecedc-3f25-4457-b7bf-48bdc37e1e02"],
Cell[4043, 109, 887, 17, 74, "Item",ExpressionUUID->"a0d22247-f172-4b29-80a3-6a06412b3a3f"],
Cell[4933, 128, 822, 19, 53, "Item",ExpressionUUID->"ca4f4368-3d17-4bfe-8245-80bd9741ca73"],
Cell[5758, 149, 373, 8, 58, "Text",ExpressionUUID->"cbe30ff3-81ac-4389-a928-6550567b9974"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6168, 162, 167, 3, 67, "Section",ExpressionUUID->"a7615bac-c2cf-489b-aa3c-865be226f48e"],
Cell[CellGroupData[{
Cell[6360, 169, 159, 3, 54, "Subsection",ExpressionUUID->"7eae000f-7f0f-4b8a-80f5-e46b9a61e7ba"],
Cell[6522, 174, 564, 10, 58, "Text",ExpressionUUID->"4b1ac693-939e-4969-9400-2cafa31ce268"],
Cell[CellGroupData[{
Cell[7111, 188, 493, 7, 28, "Input",ExpressionUUID->"a69a7eb4-0588-42ff-9e6d-f459edf5ef6e"],
Cell[7607, 197, 275, 4, 32, "Output",ExpressionUUID->"e9820155-50b2-4627-95cb-1e30a07c358c"]
}, Open  ]],
Cell[7897, 204, 188, 3, 35, "Text",ExpressionUUID->"5419f0fb-f9ee-489d-b812-cc09e315c320"],
Cell[CellGroupData[{
Cell[8110, 211, 483, 7, 48, "Input",ExpressionUUID->"56488ee7-ec40-4a2a-9773-9df13e487dd6"],
Cell[8596, 220, 276, 4, 32, "Output",ExpressionUUID->"ba7be460-76dd-4097-bbe3-aeaadf17c45c"],
Cell[8875, 226, 275, 4, 32, "Output",ExpressionUUID->"3643dd89-26fa-4a11-aee0-8174149b7775"]
}, Open  ]],
Cell[9165, 233, 232, 4, 35, "Text",ExpressionUUID->"67cdca8b-f77b-4eb7-aae0-5e6357c270f0"],
Cell[CellGroupData[{
Cell[9422, 241, 336, 8, 28, "Input",ExpressionUUID->"6bc22c94-d3df-4b19-8dee-dae36d5074a6"],
Cell[9761, 251, 273, 4, 32, "Output",ExpressionUUID->"53a2be64-f2c0-458d-bfdb-1e598ca72265"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10083, 261, 157, 3, 54, "Subsection",ExpressionUUID->"2bba8de4-c060-445a-bfbb-4dc0c973df8c"],
Cell[10243, 266, 872, 19, 127, "Text",ExpressionUUID->"848c2029-db7e-450f-bea1-0afc2f9784ac"],
Cell[11118, 287, 1371, 28, 105, "Input",ExpressionUUID->"8ce4830f-282b-4bd0-a088-3375a6080990"],
Cell[12492, 317, 238, 6, 35, "Text",ExpressionUUID->"2ee95303-b3d6-461d-ba62-c69016a7b165"],
Cell[CellGroupData[{
Cell[12755, 327, 457, 7, 28, "Input",ExpressionUUID->"8ac5098f-3d1b-4165-a804-1ab828bf636e"],
Cell[13215, 336, 271, 4, 32, "Output",ExpressionUUID->"f6ff6737-77c3-4a79-b74e-78578006804c"]
}, Open  ]],
Cell[13501, 343, 174, 3, 35, "Text",ExpressionUUID->"96fab1d4-f8d4-4731-895d-5c2a296859bc"],
Cell[CellGroupData[{
Cell[13700, 350, 229, 4, 28, "Input",ExpressionUUID->"e2925dda-2f6f-4a69-8a09-83b13cba73fa"],
Cell[13932, 356, 267, 4, 32, "Output",ExpressionUUID->"8ede5e61-0fc4-4de9-bb4c-d77e0c08e68f"]
}, Open  ]],
Cell[14214, 363, 346, 5, 35, "Text",ExpressionUUID->"ace56d17-9d17-4adb-a4a5-a4b7d49b14bb"],
Cell[CellGroupData[{
Cell[14585, 372, 283, 5, 28, "Input",ExpressionUUID->"f7895eac-a2f5-430c-acd5-4c435b4f3ca9"],
Cell[14871, 379, 270, 4, 32, "Output",ExpressionUUID->"c5d863e9-2f04-4672-905f-fe5d1496fe03"]
}, Open  ]],
Cell[15156, 386, 354, 7, 35, "Text",ExpressionUUID->"48eb0b2c-5b90-4fdf-9efc-41c0b5e94ba1"],
Cell[CellGroupData[{
Cell[15535, 397, 359, 8, 28, "Input",ExpressionUUID->"b736d4f1-1914-4074-ba32-670ae3513301"],
Cell[15897, 407, 287, 4, 32, "Output",ExpressionUUID->"a08f76fa-7d94-413f-9145-a4bf4cbb1ad8"]
}, Open  ]],
Cell[16199, 414, 345, 7, 35, "Text",ExpressionUUID->"eab0bbe8-71ca-4af1-ba6f-599a5fdfc63c"],
Cell[CellGroupData[{
Cell[16569, 425, 328, 7, 28, "Input",ExpressionUUID->"a7ac1285-4c7b-468e-acc6-b250fd2b7b68"],
Cell[16900, 434, 291, 4, 32, "Output",ExpressionUUID->"77ee777a-995d-4cd7-b4d6-ce37bb80ddde"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17240, 444, 163, 3, 54, "Subsection",ExpressionUUID->"7dafd19e-ceb7-47c3-8e1e-c67bae0a806e"],
Cell[17406, 449, 380, 10, 58, "Text",ExpressionUUID->"65337ce9-5b2a-45e9-9d02-f5a57ed78cc2"],
Cell[CellGroupData[{
Cell[17811, 463, 685, 13, 32, "ItemNumbered",ExpressionUUID->"06c255ac-c48f-4fa6-a388-0de08730de9f"],
Cell[CellGroupData[{
Cell[18521, 480, 1328, 32, 124, "Input",ExpressionUUID->"fe5775a6-677f-422f-80cb-181f3b2d3bc9"],
Cell[19852, 514, 272, 4, 32, "Output",ExpressionUUID->"f34614ed-4c7d-4ed3-aacd-4b4fe512a814"],
Cell[20127, 520, 273, 4, 32, "Output",ExpressionUUID->"863ada20-2255-4b32-ba4b-6e58f22f9f92"],
Cell[20403, 526, 275, 4, 32, "Output",ExpressionUUID->"cd636eff-3861-42c4-bf10-2b042f1aef7c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20727, 536, 986, 21, 53, "ItemNumbered",ExpressionUUID->"6cd00602-91c4-4c46-a367-a5d4a8067005"],
Cell[CellGroupData[{
Cell[21738, 561, 1030, 24, 48, "Input",ExpressionUUID->"d0d468f9-12dc-4fdf-bae2-59dbe4ad3caa"],
Cell[22771, 587, 417, 9, 32, "Output",ExpressionUUID->"70eb1e73-0790-44d8-9225-266fa9d9173e"],
Cell[23191, 598, 274, 4, 32, "Output",ExpressionUUID->"ee40178f-6835-4159-854a-17d0ba914b44"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23514, 608, 797, 16, 53, "ItemNumbered",ExpressionUUID->"85601fc7-a619-466c-a066-8ed09f2195a2"],
Cell[CellGroupData[{
Cell[24336, 628, 1555, 30, 67, "Input",ExpressionUUID->"ad7bdd12-8b89-4dc5-b450-fbec4be0d88b"],
Cell[25894, 660, 365, 7, 32, "Output",ExpressionUUID->"26bcccf7-c990-4160-a324-fb1eb79a6e77"],
Cell[26262, 669, 365, 7, 32, "Output",ExpressionUUID->"d6eaaa4a-7282-4ec9-bdd9-0c84475972c6"],
Cell[26630, 678, 363, 7, 32, "Output",ExpressionUUID->"6a8a2ab8-c85a-4b0c-95d6-c85e1c167604"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27042, 691, 1300, 24, 53, "ItemNumbered",ExpressionUUID->"90dc95ac-02da-49aa-ae9a-fce992270823"],
Cell[CellGroupData[{
Cell[28367, 719, 1138, 28, 67, "Input",ExpressionUUID->"27288820-d70f-4f68-a173-9c53ec6c2c10"],
Cell[29508, 749, 316, 6, 32, "Output",ExpressionUUID->"691b0d1b-3069-4a6d-a042-66031d2b9374"],
Cell[29827, 757, 295, 5, 32, "Output",ExpressionUUID->"91fd2b75-0c28-461e-ae48-73551a1610a1"]
}, Open  ]]
}, Open  ]],
Cell[30149, 766, 330, 9, 35, "Text",ExpressionUUID->"b6cf5b94-c872-4ee2-922e-c7c547af0364"],
Cell[CellGroupData[{
Cell[30504, 779, 392, 9, 28, "Input",ExpressionUUID->"dd6bdd6a-9361-4aab-9509-4c97a871a26a"],
Cell[30899, 790, 10843, 197, 230, "Output",ExpressionUUID->"76893dbe-9a3f-4bb6-8823-c644bd536fa3"]
}, Open  ]],
Cell[41757, 990, 934, 18, 81, "Text",ExpressionUUID->"53b37954-8871-4f58-a3a5-587149ae0751",
 CellTags->"assocHref"],
Cell[42694, 1010, 589, 14, 28, "Input",ExpressionUUID->"82409608-e3dd-4f5c-8a6f-6667e1066f57"],
Cell[43286, 1026, 224, 5, 35, "Text",ExpressionUUID->"1edf6e51-b931-4ec8-b7a0-590dcd679882"],
Cell[CellGroupData[{
Cell[43535, 1035, 272, 4, 28, "Input",ExpressionUUID->"8f39ef8b-83de-4ae4-b015-f666e71ef2e0"],
Cell[43810, 1041, 287, 4, 32, "Output",ExpressionUUID->"40eb1ee5-6986-4aa6-a1a7-46eb8d208927"]
}, Open  ]],
Cell[44112, 1048, 305, 7, 35, "Text",ExpressionUUID->"44a806eb-202e-4e45-9b46-52de376f5edd"],
Cell[CellGroupData[{
Cell[44442, 1059, 280, 4, 48, "Input",ExpressionUUID->"7e32a5f0-6d9b-43a1-ae49-1bf77c8decf1"],
Cell[44725, 1065, 341, 6, 32, "Output",ExpressionUUID->"1a04ad34-f182-4fc5-821b-b72de6c90f35"],
Cell[45069, 1073, 346, 6, 32, "Output",ExpressionUUID->"46e4fa08-f13d-4b34-a5cd-27b0e3e90e56"]
}, Open  ]],
Cell[45430, 1082, 377, 7, 58, "Text",ExpressionUUID->"d3e1d44f-8df7-4c1d-bb8e-a3b66d5a1759"],
Cell[CellGroupData[{
Cell[45832, 1093, 1010, 22, 105, "Input",ExpressionUUID->"ae7921ae-1be8-4fba-9a7c-3612442db967"],
Cell[46845, 1117, 1213447, 19904, 199, "Output",ExpressionUUID->"cde9471e-5633-4692-86c0-037d6a85f67e"]
}, Open  ]],
Cell[1260307, 21024, 335, 8, 58, "Text",ExpressionUUID->"589ca580-a120-4938-9aee-c8f9c749a530"],
Cell[CellGroupData[{
Cell[1260667, 21036, 306, 5, 67, "Input",ExpressionUUID->"8e5b797e-cdba-403b-93f2-0afecb0dee7d"],
Cell[1260976, 21043, 304, 5, 32, "Output",ExpressionUUID->"4e1f1ea7-2665-4fb5-a2ed-7693275ffdd1"],
Cell[1261283, 21050, 325, 6, 32, "Output",ExpressionUUID->"528d15c1-b1c7-4035-bf0b-0eb347e1236a"],
Cell[1261611, 21058, 325, 6, 32, "Output",ExpressionUUID->"b230b273-6eda-4808-8f81-eedde2434d5f"]
}, Open  ]],
Cell[1261951, 21067, 998, 24, 81, "Text",ExpressionUUID->"3b2362d4-671c-4c8d-a243-dbcc4ce087fb"],
Cell[CellGroupData[{
Cell[1262974, 21095, 826, 17, 67, "Input",ExpressionUUID->"6038a2e0-0fdc-4bfa-8e0a-fbbf555b7704"],
Cell[1263803, 21114, 222692, 3660, 274, "Output",ExpressionUUID->"3a1d5a07-8bf0-46e9-acff-10d1b4b0e258"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1486556, 24781, 324, 5, 67, "Section",ExpressionUUID->"b3fd0f3c-1e3b-4be1-beb4-d9d9ffb6a74e"],
Cell[1486883, 24788, 863, 19, 58, "Text",ExpressionUUID->"7072bdf1-536a-4fae-a541-c466db339ce4"],
Cell[CellGroupData[{
Cell[1487771, 24811, 3044, 63, 390, "Input",ExpressionUUID->"2b6b6293-1ee3-4ad3-93bb-74804bbda6f9"],
Cell[1490818, 24876, 554, 12, 46, "Message",ExpressionUUID->"f93fd050-f7aa-4658-a6f1-1c503dbff59c"],
Cell[1491375, 24890, 554, 12, 46, "Message",ExpressionUUID->"0f5b37f0-44c7-4975-8bbf-8fc29c0988db"],
Cell[1491932, 24904, 554, 12, 46, "Message",ExpressionUUID->"fd8f60df-eca0-4ffb-9766-46f782722334"],
Cell[1492489, 24918, 447, 10, 28, "Message",ExpressionUUID->"b6d51cfc-0ac1-4496-bbda-476522b1fe76"],
Cell[1492939, 24930, 431, 10, 28, "Message",ExpressionUUID->"13a6a9ed-588e-4b8d-9600-a16a523fcc72"]
}, Open  ]],
Cell[1493385, 24943, 866, 21, 104, "Text",ExpressionUUID->"a926d07b-5745-4550-84c5-0e4d0157879f"],
Cell[CellGroupData[{
Cell[1494276, 24968, 543, 10, 28, "Input",ExpressionUUID->"c7eceeb2-6a89-46ba-86ff-e4809b7035cb"],
Cell[1494822, 24980, 248161, 4509, 690, "Output",ExpressionUUID->"5a20b6ce-edbc-4f74-aa34-96b61fe15623"]
}, Open  ]],
Cell[1742998, 29492, 323, 7, 58, "Text",ExpressionUUID->"e8527a4f-df4a-4300-827c-94fd8ba1ff38"],
Cell[1743324, 29501, 188, 3, 32, "Item",ExpressionUUID->"2216b9fa-170c-4b1e-b0b4-1d969c54badd"],
Cell[1743515, 29506, 276, 6, 32, "Item",ExpressionUUID->"e5aad24a-7b27-4507-8a2c-03ea1dad2ccf"],
Cell[1743794, 29514, 281, 6, 32, "Item",ExpressionUUID->"2ea6cd70-999f-4306-be1c-545a92547dba"],
Cell[1744078, 29522, 548, 10, 53, "Item",ExpressionUUID->"8c07e5ca-2d75-4387-a6a0-5a5e574933e6"],
Cell[1744629, 29534, 562, 10, 53, "Item",ExpressionUUID->"fd192e07-8dcc-4365-b9cf-eca1aff3c394"],
Cell[1745194, 29546, 396, 10, 58, "Text",ExpressionUUID->"ad58c7bc-5596-41e1-994d-7f43caee7f39"],
Cell[1745593, 29558, 203, 3, 32, "Item",ExpressionUUID->"1d104842-c982-4ea2-8ac4-3e98f18e9ad0"],
Cell[1745799, 29563, 215, 5, 32, "Item",ExpressionUUID->"78bed1c2-9aef-46eb-b8fd-f6384f4c4bfb"],
Cell[1746017, 29570, 221, 5, 32, "Item",ExpressionUUID->"42d91439-c943-481f-b4e9-9cd1c6691af7"],
Cell[1746241, 29577, 235, 6, 32, "Item",ExpressionUUID->"e927f10b-7ed2-41b1-b981-d5d12740d6ac"],
Cell[1746479, 29585, 310, 8, 32, "Item",ExpressionUUID->"464842d3-6351-4e1f-af39-4130b98c2e35"],
Cell[1746792, 29595, 319, 8, 32, "Item",ExpressionUUID->"99e074fe-2a23-47f3-a6c7-fadcfa34aaa2"],
Cell[1747114, 29605, 316, 8, 32, "Item",ExpressionUUID->"2590f5f2-2117-445c-a8f0-793ae96b22fa"],
Cell[1747433, 29615, 179, 3, 32, "Item",ExpressionUUID->"b558e433-68ff-4169-8ab3-dba37d5a64fd"],
Cell[1747615, 29620, 226, 5, 32, "Item",ExpressionUUID->"09b72a7d-b6bc-4020-baef-2a4f6df81a01"],
Cell[1747844, 29627, 260, 6, 32, "Item",ExpressionUUID->"0233a284-d162-4631-bc28-94aabb4bc425"],
Cell[1748107, 29635, 227, 5, 32, "Item",ExpressionUUID->"70c25c2a-ee80-41f7-a11f-f94b4c56f5c0"],
Cell[1748337, 29642, 216, 5, 32, "Item",ExpressionUUID->"c6ad8d4b-bb8a-4586-ae90-1d8af94e300b"],
Cell[1748556, 29649, 275, 6, 32, "Item",ExpressionUUID->"01ee17b9-0c9a-4637-af00-062b6f642e69"],
Cell[1748834, 29657, 845, 16, 104, "Text",ExpressionUUID->"534a778f-ba2a-4535-a749-e62c29e03d49"],
Cell[1749682, 29675, 234, 4, 32, "Item",ExpressionUUID->"cee1334a-7793-454f-94f5-3f2f2c00a2d3"],
Cell[1749919, 29681, 866, 19, 58, "Text",ExpressionUUID->"62fce50f-3d01-49ca-97fc-ce0c1946f204"],
Cell[CellGroupData[{
Cell[1750810, 29704, 604, 11, 67, "Input",ExpressionUUID->"24aa2a75-7347-4cfa-b8e7-1013b36ab1df"],
Cell[1751417, 29717, 10106, 302, 238, "Output",ExpressionUUID->"006b42aa-161b-46fc-a7ff-0894b01491c6"]
}, Open  ]],
Cell[1761538, 30022, 622, 13, 58, "Text",ExpressionUUID->"4835dcec-f2b5-49b6-9205-b4439c9300fd"],
Cell[CellGroupData[{
Cell[1762185, 30039, 350, 6, 28, "Input",ExpressionUUID->"b47b2894-cfe1-4bd2-90c3-d139ebca0f61"],
Cell[1762538, 30047, 243248, 4434, 643, "Output",ExpressionUUID->"b83c0d8a-5360-4917-bc28-69e50c851ebf"]
}, Open  ]],
Cell[2005801, 34484, 1068, 24, 58, "Text",ExpressionUUID->"ab07599e-d074-406b-8295-ae0fbeb4164f"],
Cell[CellGroupData[{
Cell[2006894, 34512, 505, 10, 67, "Input",ExpressionUUID->"226308c3-4cd0-4a0a-b5f5-3ff0937f6b6a"],
Cell[2007402, 34524, 8831, 258, 240, "Output",ExpressionUUID->"0a1186ae-f32c-4413-a8bc-6d88731ece2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2016270, 34787, 189, 3, 54, "Subsection",ExpressionUUID->"a4dbb9f8-d8e5-450b-b14e-c4fd2d4b678f"],
Cell[2016462, 34792, 683, 14, 58, "Text",ExpressionUUID->"f369088d-439c-4768-ae4b-9f5b4531d086"],
Cell[CellGroupData[{
Cell[2017170, 34810, 322, 7, 28, "Input",ExpressionUUID->"e3e2283b-0261-4e6c-a2fe-16690d8e555a"],
Cell[2017495, 34819, 410, 7, 79, "Output",ExpressionUUID->"f203283e-a24d-48fb-ba94-7e6b24135d89"]
}, Open  ]],
Cell[2017920, 34829, 398, 8, 58, "Text",ExpressionUUID->"142181a7-de72-4e99-840b-57b9549fa1ec"],
Cell[CellGroupData[{
Cell[2018343, 34841, 200, 3, 28, "Input",ExpressionUUID->"0f837ee5-347c-45fb-b0cc-3bc46d420f27"],
Cell[2018546, 34846, 13522, 316, 120, "Output",ExpressionUUID->"b185cd00-c6a7-4c4e-9881-03a3205854dd"]
}, Open  ]],
Cell[2032083, 35165, 340, 8, 58, "Text",ExpressionUUID->"a395e22c-f560-4c99-aff7-cf5419f86f74"],
Cell[CellGroupData[{
Cell[2032448, 35177, 420, 9, 32, "Item",ExpressionUUID->"f8467064-a3f3-4608-a3df-125f415b3365"],
Cell[2032871, 35188, 355, 7, 45, "Subitem",ExpressionUUID->"a5286a8d-ea02-4ad8-8184-c230f740af52"]
}, Open  ]],
Cell[2033241, 35198, 349, 9, 32, "Item",ExpressionUUID->"165057d2-4e9e-462e-89b7-a5ba63475291"],
Cell[2033593, 35209, 384, 7, 32, "Item",ExpressionUUID->"ee900886-576d-4edd-b7ee-78b1c6ef6840"],
Cell[2033980, 35218, 425, 10, 32, "Item",ExpressionUUID->"8e131fae-fed0-481a-aebf-32c6a93f2202"],
Cell[2034408, 35230, 355, 7, 32, "Item",ExpressionUUID->"1522bf95-2871-44ec-b209-202cb2f7f349"],
Cell[2034766, 35239, 130, 3, 35, "Text",ExpressionUUID->"470e91b1-d5fd-4537-9947-164a66e83f21"],
Cell[2034899, 35244, 352, 8, 32, "Item",ExpressionUUID->"d30a26d8-cd1b-4b9e-b971-cedecd08d70c"],
Cell[2035254, 35254, 351, 8, 32, "Item",ExpressionUUID->"418ef362-2638-4c6d-98f8-e2029ad32777"],
Cell[2035608, 35264, 363, 8, 32, "Item",ExpressionUUID->"d5ed92a1-fe4e-4297-b99c-3ce969f2f3d2"],
Cell[2035974, 35274, 221, 5, 35, "Text",ExpressionUUID->"c506b615-8af8-47ce-a8ac-55955b3e9adb"],
Cell[CellGroupData[{
Cell[2036220, 35283, 598, 14, 28, "Input",ExpressionUUID->"f691a4d8-286f-4272-ad6b-8a4ec042e59e"],
Cell[2036821, 35299, 59449, 1086, 490, "Output",ExpressionUUID->"bb0a1568-5f9c-4187-8ed7-222dde49d88d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2096307, 36390, 620, 14, 28, "Input",ExpressionUUID->"9e4ce3d9-c9fe-4b8d-b272-7a7277c12007"],
Cell[2096930, 36406, 357, 5, 32, "Output",ExpressionUUID->"f25d7f76-fc62-4025-a33e-677c795e9ac8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2097324, 36416, 592, 15, 28, "Input",ExpressionUUID->"96e79342-33e3-455b-8fb1-16ca0bbac6e9"],
Cell[2097919, 36433, 859, 16, 28, "Message",ExpressionUUID->"d4f1dd57-0912-489b-8a59-b61617e3436b"],
Cell[2098781, 36451, 782, 17, 32, "Output",ExpressionUUID->"1b02a7d1-e676-43e0-b1f0-fc6e18962744"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2099600, 36473, 672, 15, 48, "Input",ExpressionUUID->"e8763933-77d2-4e0c-8d42-6cc902ff954e"],
Cell[2100275, 36490, 859, 16, 28, "Message",ExpressionUUID->"9f133cff-8757-40f6-9d54-67bdae105d4f"],
Cell[2101137, 36508, 785, 17, 32, "Output",ExpressionUUID->"311bfb96-c9bf-42be-a4dd-25b6156541b6"]
}, Open  ]],
Cell[2101937, 36528, 263, 6, 35, "Text",ExpressionUUID->"67f18ed1-2f06-4e52-8a39-526d415d1a2e"],
Cell[CellGroupData[{
Cell[2102225, 36538, 339, 7, 28, "Input",ExpressionUUID->"4f9e27c8-5a28-4985-8cc7-316fd0ee0b81"],
Cell[2102567, 36547, 857, 16, 28, "Message",ExpressionUUID->"364ab829-b87c-4b31-96ee-9db25170840e"],
Cell[2103427, 36565, 772, 17, 32, "Output",ExpressionUUID->"2d33cfd2-b1fd-4306-9eaa-ec29b204807f"]
}, Open  ]],
Cell[2104214, 36585, 245, 6, 35, "Text",ExpressionUUID->"d6713763-bd9d-4272-89ce-84165f24090e"],
Cell[CellGroupData[{
Cell[2104484, 36595, 497, 12, 28, "Input",ExpressionUUID->"e8011728-cbbd-4fd1-bb1e-992b6e31d780"],
Cell[2104984, 36609, 857, 16, 28, "Message",ExpressionUUID->"6933893d-a22a-4a59-9ec7-5e3f5cee7df2"],
Cell[2105844, 36627, 884, 19, 52, "Output",ExpressionUUID->"5a2ce2a0-e2e9-4973-887b-33b3234606e5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2106777, 36652, 279, 4, 54, "Subsection",ExpressionUUID->"def53aa9-b486-4e59-b4fc-3c7aae82815f"],
Cell[2107059, 36658, 1572, 35, 81, "Text",ExpressionUUID->"99ec7554-c192-40bf-abde-8d461e746548"],
Cell[CellGroupData[{
Cell[2108656, 36697, 305, 5, 28, "Input",ExpressionUUID->"b9d8ee84-b330-427c-9349-bc0f137eb20e"],
Cell[2108964, 36704, 27232, 553, 68, "Output",ExpressionUUID->"c00260e5-b3b7-4c52-9d7e-05b12def086c"]
}, Open  ]],
Cell[2136211, 37260, 523, 12, 35, "Text",ExpressionUUID->"2dd8dcfb-0037-47fc-975a-69051713573b"],
Cell[CellGroupData[{
Cell[2136759, 37276, 261, 4, 28, "Input",ExpressionUUID->"c81d5410-8cff-48fe-affb-76c43e572785"],
Cell[2137023, 37282, 6600, 140, 178, "Output",ExpressionUUID->"60e4ad9a-ff04-4c40-8529-cc755331f665"]
}, Open  ]],
Cell[2143638, 37425, 671, 16, 35, "Text",ExpressionUUID->"9f3b5f93-d2a5-4ed2-be45-87b536320f37"],
Cell[CellGroupData[{
Cell[2144334, 37445, 267, 4, 28, "Input",ExpressionUUID->"fab79c80-4a14-475d-97d5-224e09951b03"],
Cell[2144604, 37451, 188550, 3096, 271, 5413, 93, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"57cc1306-0e48-49b5-af28-e77676850a0b"]
}, Open  ]],
Cell[2333169, 40550, 1098, 21, 150, "Text",ExpressionUUID->"d6682da8-7a65-435a-8dff-eca03e823709"],
Cell[CellGroupData[{
Cell[2334292, 40575, 1010, 23, 67, "Input",ExpressionUUID->"aa859fab-497d-4e8d-9bdf-b0fe5001af6f"],
Cell[2335305, 40600, 11767, 270, 334, "Output",ExpressionUUID->"1e2c1796-0cd8-45f9-9379-8ae3a272a8fd"]
}, Open  ]],
Cell[2347087, 40873, 518, 10, 58, "Text",ExpressionUUID->"510628dd-f643-4749-9e06-b2099c99c700"],
Cell[2347608, 40885, 689, 14, 48, "Input",ExpressionUUID->"01bc5a84-a261-4cf8-b903-3b901b058126"],
Cell[CellGroupData[{
Cell[2348322, 40903, 602, 16, 48, "Input",ExpressionUUID->"8deeff9e-3920-44fa-b132-f1f53986c12a"],
Cell[2348927, 40921, 253622, 5041, 464, "Output",ExpressionUUID->"15a6bd5f-c8b5-4f72-80ee-5df7999c5852"]
}, Open  ]],
Cell[2602564, 45965, 571, 10, 81, "Text",ExpressionUUID->"2f56c57c-c217-4f6b-a739-9b37b03c16cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2603172, 45980, 381, 5, 54, "Subsection",ExpressionUUID->"69fd5042-9ba6-41ee-a806-699169ceb939"],
Cell[2603556, 45987, 629, 11, 81, "Text",ExpressionUUID->"22e2c23d-2937-44b1-83d2-ab25b8c03c45"],
Cell[2604188, 46000, 361, 6, 32, "Item",ExpressionUUID->"7c8df0f1-df71-4f7f-80b5-d184da2b5181"],
Cell[2604552, 46008, 369, 5, 32, "Item",ExpressionUUID->"b0fdf1d9-4ad0-4f62-afdb-4b62c5eef0a5"],
Cell[2604924, 46015, 949, 20, 81, "Text",ExpressionUUID->"213f01a9-5ac6-4d86-a36e-f554a5b537e1"],
Cell[2605876, 46037, 1332, 26, 86, "Input",ExpressionUUID->"0da29227-5ff1-4f11-a4eb-a8cf62090d58"],
Cell[2607211, 46065, 312, 7, 35, "Text",ExpressionUUID->"0e6d87f7-d65e-4a5c-98d8-4d66c1812ef2"],
Cell[CellGroupData[{
Cell[2607548, 46076, 700, 11, 28, "Input",ExpressionUUID->"f78608e5-6411-4fca-ac2e-dfa8f89e4578"],
Cell[2608251, 46089, 2405, 41, 147, "Output",ExpressionUUID->"a54d60b5-3f20-404c-a831-af5d61255e82"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2610705, 46136, 238, 3, 54, "Subsection",ExpressionUUID->"5e105410-b066-4c5f-b81b-c04a8a06d8b6",
 CellTags->"splithref"],
Cell[2610946, 46141, 1164, 18, 104, "Text",ExpressionUUID->"8d1dcba8-5145-45b4-9094-daafe36098f8"],
Cell[2612113, 46161, 642, 13, 28, "Input",ExpressionUUID->"30657f04-13e4-4e73-aac3-289a8efcbdff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2612792, 46179, 159, 3, 54, "Subsection",ExpressionUUID->"c016aab2-4218-40fd-904b-ff2d8691f804"],
Cell[2612954, 46184, 793, 13, 81, "Text",ExpressionUUID->"28e5c5af-bf9a-4df2-9a85-fcafbb75af96"],
Cell[2613750, 46199, 187, 3, 32, "Item",ExpressionUUID->"53e4cb0e-b7d3-405b-ac99-8ded7c52b29f"],
Cell[2613940, 46204, 252, 6, 35, "Text",ExpressionUUID->"6c2e66e3-6796-4e90-b258-ee615b625342"],
Cell[2614195, 46212, 365, 9, 32, "Item",ExpressionUUID->"760b96bd-16d6-4c5f-b77c-c6937cb27d04"],
Cell[2614563, 46223, 224, 5, 32, "Item",ExpressionUUID->"0667ec56-45bf-450d-a2fd-17b9efc204ef"],
Cell[2614790, 46230, 673, 16, 58, "Text",ExpressionUUID->"d7f43391-ed43-4a3b-8191-83fac739149d"],
Cell[2615466, 46248, 1901, 49, 178, "Input",ExpressionUUID->"f5d6a6f2-d5ff-4355-954d-cbd5d9e20b0c",
 InitializationCell->True],
Cell[2617370, 46299, 216, 5, 35, "Text",ExpressionUUID->"2524932a-7ce3-4057-a040-44a728d63127"],
Cell[CellGroupData[{
Cell[2617611, 46308, 368, 6, 28, "Input",ExpressionUUID->"1f90197b-a8bd-4ed2-83d4-c753d4c5a2dc"],
Cell[2617982, 46316, 1979, 46, 109, "Output",ExpressionUUID->"5f4a38fd-f3a1-49d2-bf94-e909993aaea6"]
}, Open  ]],
Cell[2619976, 46365, 1037, 25, 81, "Text",ExpressionUUID->"e30785e0-b54e-49af-b923-2a495af03335"],
Cell[2621016, 46392, 536, 14, 48, "Input",ExpressionUUID->"9f8c50b1-41f1-4752-a926-889cb86dbe4d"],
Cell[CellGroupData[{
Cell[2621577, 46410, 457, 11, 28, "Input",ExpressionUUID->"273090b1-a844-447a-8be9-c3062e6c8feb"],
Cell[2622037, 46423, 2715, 52, 166, "Output",ExpressionUUID->"6307d585-a7d6-41e3-9f06-fe3e4a3721bd"]
}, Open  ]],
Cell[2624767, 46478, 356, 7, 35, "Text",ExpressionUUID->"f5c97b6d-3113-4e72-89a5-d4e73b705fad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2625172, 46491, 171, 3, 67, "Section",ExpressionUUID->"1a98574f-933a-4714-8e01-a56708a1fe66"],
Cell[2625346, 46496, 1832, 42, 150, "Text",ExpressionUUID->"712ec36e-fc92-4fb0-8e25-a3c6bad15568"],
Cell[CellGroupData[{
Cell[2627203, 46542, 150, 3, 54, "Subsection",ExpressionUUID->"b983b0b1-aca7-48cb-beba-cb3ac6654b10"],
Cell[2627356, 46547, 519, 10, 58, "Text",ExpressionUUID->"a48ec159-1aa1-4aa2-991b-e2461b338972"],
Cell[2627878, 46559, 198, 3, 32, "Item",ExpressionUUID->"ef22add8-94f4-4643-ae26-0125f0a09c4f"],
Cell[2628079, 46564, 232, 6, 32, "Item",ExpressionUUID->"ce52fdcd-e0b9-45cb-958f-13470a8c9b37"],
Cell[2628314, 46572, 252, 6, 35, "Text",ExpressionUUID->"4b665aed-0810-4c07-9cb0-34771acc9800"],
Cell[2628569, 46580, 587, 13, 33, "Text",ExpressionUUID->"e961629e-b917-4561-a3ca-5566660b9fca"],
Cell[2629159, 46595, 203, 4, 35, "Text",ExpressionUUID->"290086bd-98ea-4830-950c-b1920f944301"],
Cell[2629365, 46601, 705, 17, 104, "Text",ExpressionUUID->"370a9d34-c8f7-47e8-b091-5eac0a42cdca"],
Cell[2630073, 46620, 1051, 27, 60, "Text",ExpressionUUID->"2d16106c-2ae5-4181-81e1-50c844556b8e"],
Cell[2631127, 46649, 998, 22, 58, "Text",ExpressionUUID->"4be60eb4-9b7f-4e61-8668-216a564cfab1"],
Cell[2632128, 46673, 219, 3, 32, "Item",ExpressionUUID->"e3558a00-d462-4cf4-97a0-7b7f0a0abf45"],
Cell[2632350, 46678, 213, 2, 32, "Item",ExpressionUUID->"5fb79673-958d-474f-a169-0d8a69d0e44f"],
Cell[2632566, 46682, 887, 16, 150, "Text",ExpressionUUID->"a0d6aa08-b235-4f36-9a5e-e4d8085d25b1"],
Cell[2633456, 46700, 1787, 44, 197, "Input",ExpressionUUID->"4358bf76-31ec-4525-a0f6-1a2bedd670ce",
 InitializationCell->True],
Cell[2635246, 46746, 881, 19, 81, "Text",ExpressionUUID->"375d9bcc-fa37-4499-ab96-a9152054ff1a"],
Cell[2636130, 46767, 1471, 32, 105, "Input",ExpressionUUID->"684719a9-71f3-4808-b585-8913d1c65389"],
Cell[2637604, 46801, 902, 17, 81, "Text",ExpressionUUID->"3596caae-21de-449f-8eb5-fcea71f23e94"],
Cell[CellGroupData[{
Cell[2638531, 46822, 2287, 48, 181, "Input",ExpressionUUID->"d35daaad-a3ee-4a8a-8927-6ee0c03585df"],
Cell[2640821, 46872, 55366, 997, 64, "Output",ExpressionUUID->"75af3f3d-3766-4b8b-a2a6-1245a6a209bd"]
}, Open  ]],
Cell[2696202, 47872, 1137, 22, 81, "Text",ExpressionUUID->"53a4b30e-cf69-48fe-b33e-75e55d646b0b"],
Cell[CellGroupData[{
Cell[2697364, 47898, 605, 10, 28, "Input",ExpressionUUID->"78558bb8-c70b-434e-ad5a-2cc5880eca56"],
Cell[2697972, 47910, 101700, 1888, 513, "Output",ExpressionUUID->"5b0b89af-8426-4c9c-8392-fbcc785aac4e"]
}, Open  ]],
Cell[2799687, 49801, 867, 16, 127, "Text",ExpressionUUID->"40494868-0701-4efe-b0dc-1d47d7fb6db2"],
Cell[CellGroupData[{
Cell[2800579, 49821, 2022, 42, 181, "Input",ExpressionUUID->"938e493b-03c3-4e4e-b00f-fc92255c3b12"],
Cell[2802604, 49865, 4807, 98, 248, "Output",ExpressionUUID->"e42bd2ea-7fc3-41cc-a532-b69d7daed7c5"]
}, Open  ]],
Cell[2807426, 49966, 1140, 21, 219, "Text",ExpressionUUID->"96c65c73-58d1-47fc-9a23-d1d1835e4746"],
Cell[CellGroupData[{
Cell[2808591, 49991, 752, 14, 67, "Input",ExpressionUUID->"f63d6a64-740f-4a33-8949-07d407f9e534"],
Cell[2809346, 50007, 18689, 430, 329, "Output",ExpressionUUID->"872f2e29-4624-419d-abcd-147ade04de5a"]
}, Open  ]],
Cell[2828050, 50440, 1281, 21, 173, "Text",ExpressionUUID->"eb6e26e9-6c67-479d-b306-80d48cba988a"],
Cell[2829334, 50463, 247, 5, 35, "Text",ExpressionUUID->"61602891-1751-4552-b5af-0c633f6cee4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2829618, 50473, 168, 3, 54, "Subsection",ExpressionUUID->"874fe596-ee56-434e-a4e9-e097b492e93d"],
Cell[2829789, 50478, 458, 9, 58, "Text",ExpressionUUID->"ead7751f-2f61-48f4-8ce5-3a565a600708"],
Cell[2830250, 50489, 235, 6, 32, "Item",ExpressionUUID->"f57cdc32-a1f7-4950-9679-750baf759a6f"],
Cell[2830488, 50497, 226, 5, 35, "Text",ExpressionUUID->"64ae3b0a-633b-4fd8-bbc0-5299872215c5"],
Cell[2830717, 50504, 943, 23, 33, "Text",ExpressionUUID->"6021c4d6-f682-42ed-8d23-860bb125720e"],
Cell[2831663, 50529, 201, 4, 35, "Text",ExpressionUUID->"c43043e4-1852-4f20-9bda-73c3a5d520d2"],
Cell[2831867, 50535, 1317, 30, 173, "Text",ExpressionUUID->"82a14b9f-ceb4-4111-a7cb-c9052798ed68"],
Cell[CellGroupData[{
Cell[2833209, 50569, 930, 21, 67, "Input",ExpressionUUID->"c83ae3c8-bd0e-47f2-9d22-38ff9c03c03a"],
Cell[2834142, 50592, 53703, 989, 64, "Output",ExpressionUUID->"49d8c351-0e70-41ea-bb08-a2bef04f0cea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2887882, 51586, 345, 6, 28, "Input",ExpressionUUID->"5394e4dd-d574-4704-adbb-14b4b0bff701"],
Cell[2888230, 51594, 18695, 431, 314, "Output",ExpressionUUID->"6a451f21-af0e-441b-9375-70ea0bd61bae"]
}, Open  ]],
Cell[2906940, 52028, 802, 13, 104, "Text",ExpressionUUID->"2a7c865b-d5c4-4eb9-a34f-5745c943f4a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2907779, 52046, 222, 3, 64, "Subsection",ExpressionUUID->"c3fa0085-d290-411b-8963-da6560275fc2",
 CellTags->"modeEvalHref"],
Cell[2908004, 52051, 1947, 36, 127, "Text",ExpressionUUID->"08f602d1-d5ad-4168-a8d5-dcdc93549912"],
Cell[2909954, 52089, 696, 12, 74, "ItemNumbered",ExpressionUUID->"85524f0d-149c-4407-ae6a-03491821b104"],
Cell[2910653, 52103, 1061, 27, 60, "Text",ExpressionUUID->"4789ebf4-0396-4577-b77a-9d53b30bf7f7"],
Cell[2911717, 52132, 666, 11, 74, "ItemNumbered",ExpressionUUID->"d9a4f453-9f92-4e2d-addd-b8a2a6d5b631"],
Cell[2912386, 52145, 1126, 30, 60, "Text",ExpressionUUID->"983be94f-64aa-43aa-a100-46800e1e99a9"],
Cell[2913515, 52177, 628, 12, 74, "ItemNumbered",ExpressionUUID->"efa9b1bd-734e-4512-9c77-2c3e28308807"],
Cell[2914146, 52191, 1251, 32, 68, "Text",ExpressionUUID->"eb7350f5-4ae4-4f6d-abe0-daced19476de"],
Cell[2915400, 52225, 1158, 24, 116, "ItemNumbered",ExpressionUUID->"2e9ebfa9-9479-451b-986c-d2f118139f78"],
Cell[2916561, 52251, 1675, 43, 61, "Text",ExpressionUUID->"07d3cbb6-f760-46ed-9984-a207533bc4a9"],
Cell[2918239, 52296, 1011, 17, 127, "Text",ExpressionUUID->"e706cddb-e98f-44e1-96b6-b055336db3b1"],
Cell[CellGroupData[{
Cell[2919275, 52317, 294, 5, 28, "Input",ExpressionUUID->"b5f3f1c4-496e-47af-8d8a-130c2a01eff7"],
Cell[2919572, 52324, 1488, 24, 109, "Output",ExpressionUUID->"ff5cf85c-2504-4ade-a9d7-0b92da17d82e"]
}, Open  ]],
Cell[2921075, 52351, 298, 4, 35, "Text",ExpressionUUID->"8ecee30d-7fe5-4684-a840-a619f295c513"],
Cell[CellGroupData[{
Cell[2921398, 52359, 294, 5, 28, "Input",ExpressionUUID->"294163f5-dc0a-4caf-b2ac-31bf279771e5"],
Cell[2921695, 52366, 391, 6, 32, "Output",ExpressionUUID->"3ea9e906-3885-44b1-b9e5-64f2db9f336a"]
}, Open  ]],
Cell[2922101, 52375, 248, 4, 35, "Text",ExpressionUUID->"13936d19-f491-470b-b093-fc6b6c870428"],
Cell[CellGroupData[{
Cell[2922374, 52383, 407, 9, 28, "Input",ExpressionUUID->"a212aa3a-4ae0-4c96-838f-4c5600b8f121"],
Cell[2922784, 52394, 520, 10, 32, "Output",ExpressionUUID->"e2b35e3f-310c-4a6f-a0bf-5fab4ef25a66"]
}, Open  ]],
Cell[2923319, 52407, 404, 7, 58, "Text",ExpressionUUID->"719925a9-876f-4f15-881b-ddc99c38411d"],
Cell[2923726, 52416, 1022, 22, 67, "Input",ExpressionUUID->"008dcec5-e00f-43f6-847e-fef2e72c0f85"],
Cell[2924751, 52440, 618, 14, 58, "Text",ExpressionUUID->"e9a0cbbb-c9ae-42c3-b8e4-d2732434a0a6"],
Cell[2925372, 52456, 716, 15, 28, "Input",ExpressionUUID->"d49cd77e-f387-495e-8af1-b10a4eb76911"],
Cell[2926091, 52473, 552, 12, 58, "Text",ExpressionUUID->"3e244f4c-c5a5-4867-953e-f3978885b8b9"],
Cell[CellGroupData[{
Cell[2926668, 52489, 1673, 35, 143, "Input",ExpressionUUID->"1f2fbe7e-9449-44f4-a8f6-3900b2d08e28"],
Cell[2928344, 52526, 818, 16, 32, "Output",ExpressionUUID->"12113d51-d86a-495c-b970-9ed16dff0819"],
Cell[2929165, 52544, 794, 15, 32, "Output",ExpressionUUID->"0eb70d6a-548a-41c3-9e2d-5a91f649ed11"]
}, Open  ]],
Cell[2929974, 52562, 586, 13, 35, "Text",ExpressionUUID->"21aedda3-028f-4bbc-9fd8-6419af23fcc1"],
Cell[CellGroupData[{
Cell[2930585, 52579, 381, 9, 28, "Input",ExpressionUUID->"f13933c6-601d-479c-903c-57a08dc0c1bb"],
Cell[2930969, 52590, 37809, 690, 117, "Output",ExpressionUUID->"5b7ffa38-6fe1-4407-9694-e27b1fe9f741"]
}, Open  ]],
Cell[2968793, 53283, 919, 16, 127, "Text",ExpressionUUID->"fe70b076-feea-42f2-8ff0-fec105a29044"],
Cell[2969715, 53301, 392, 7, 58, "Text",ExpressionUUID->"cb8c5f1c-2e67-498a-9e4c-a24adeafd5cc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2970156, 53314, 221, 4, 67, "Section",ExpressionUUID->"7392dc4f-b054-48d9-bb72-edad10809c24"],
Cell[2970380, 53320, 691, 13, 81, "Text",ExpressionUUID->"59aaa868-281b-4fc8-8037-a581352d88da"],
Cell[2971074, 53335, 283, 6, 53, "Item",ExpressionUUID->"16e7d91f-d991-4892-ad14-83ecba0f00c8"],
Cell[2971360, 53343, 187, 3, 32, "Item",ExpressionUUID->"e6c0ba78-9c0a-461d-851d-d2a1bfba806c"],
Cell[2971550, 53348, 220, 6, 35, "Text",ExpressionUUID->"47140bec-c33b-420c-91a2-66e88c3e4b01"],
Cell[2971773, 53356, 196, 3, 32, "ItemNumbered",ExpressionUUID->"0f3bf4f6-f0b5-4980-a8ed-519dc027d8cf"],
Cell[2971972, 53361, 188, 3, 32, "ItemNumbered",ExpressionUUID->"99e70f25-4ff6-442c-9ac9-a8f929325935"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2972197, 53369, 198, 4, 67, "Section",ExpressionUUID->"556598a1-e3f8-48ac-aef2-49f23c8627b9",
 CellTags->"featureSelectionHref"],
Cell[2972398, 53375, 561, 11, 81, "Text",ExpressionUUID->"e2aeb52c-8dad-4e8d-b26a-f090a1ea3b81"],
Cell[2972962, 53388, 237, 4, 32, "Item",ExpressionUUID->"172a7d62-1810-4e72-b721-79dd26ccb31c"],
Cell[2973202, 53394, 237, 6, 35, "Text",ExpressionUUID->"12bbb5f1-78b0-4858-b2de-92c7e3809be1"],
Cell[CellGroupData[{
Cell[2973464, 53404, 167, 3, 54, "Subsection",ExpressionUUID->"87dcf77a-99d7-4bc3-a131-13bf9d601531"],
Cell[2973634, 53409, 585, 10, 58, "Text",ExpressionUUID->"80c6bd28-fd80-4c14-87e0-fb102c8fed60"],
Cell[2974222, 53421, 250, 4, 32, "Item",ExpressionUUID->"1de67431-788a-4b4d-a533-d0818e0f772c"],
Cell[2974475, 53427, 247, 4, 32, "Item",ExpressionUUID->"cd6b0ac1-229e-4a1c-b508-037768c45f25"],
Cell[2974725, 53433, 217, 5, 32, "Item",ExpressionUUID->"f791fa14-6f5d-4796-b6bd-99d555e2c6d4"],
Cell[2974945, 53440, 218, 5, 32, "Item",ExpressionUUID->"91562561-587b-4e9d-a1f2-f010fc8a119f"],
Cell[2975166, 53447, 562, 10, 35, "Text",ExpressionUUID->"3469f1be-45f0-4809-b453-2d17c95aa6aa"],
Cell[2975731, 53459, 263, 7, 32, "Item",ExpressionUUID->"1db7e209-3bfa-41d7-bb92-0a8ba8c39918"],
Cell[2975997, 53468, 814, 18, 104, "Text",ExpressionUUID->"d0029ca9-4a54-4a04-93b1-01426b435140"],
Cell[2976814, 53488, 1027, 26, 86, "Input",ExpressionUUID->"843012bd-0649-43ff-ab4b-13ab8727cd66"],
Cell[2977844, 53516, 252, 6, 35, "Text",ExpressionUUID->"88fb4a3e-8025-4136-b615-e24af103e0a4"],
Cell[CellGroupData[{
Cell[2978121, 53526, 238, 5, 28, "Input",ExpressionUUID->"9e086916-372b-4636-9dc5-8f30cebfe23a"],
Cell[2978362, 53533, 297, 5, 32, "Output",ExpressionUUID->"076aabeb-afc9-4b81-b9ba-293c8baf31d8"]
}, Open  ]],
Cell[2978674, 53541, 243, 4, 35, "Text",ExpressionUUID->"d8c39ed8-41e1-4468-bbf2-558788e5b297"],
Cell[CellGroupData[{
Cell[2978942, 53549, 240, 5, 28, "Input",ExpressionUUID->"7d4c1ef3-5842-4421-b7d6-eb42c5099a3c"],
Cell[2979185, 53556, 312, 6, 32, "Output",ExpressionUUID->"383a6162-47da-44e6-afbc-abf6ac0e7a2e"]
}, Open  ]],
Cell[2979512, 53565, 389, 8, 58, "Text",ExpressionUUID->"3480e052-4b6d-4670-89b9-639c0c0c6b4a"],
Cell[CellGroupData[{
Cell[2979926, 53577, 237, 5, 28, "Input",ExpressionUUID->"3c11dbce-2763-41e9-b9a3-5c48bd91a4f0"],
Cell[2980166, 53584, 333, 6, 32, "Output",ExpressionUUID->"24f7f032-885c-4cb2-a4e7-2a90d3359dec"]
}, Open  ]],
Cell[2980514, 53593, 222, 5, 35, "Text",ExpressionUUID->"2139ae1b-e122-4f1e-87e9-b66b3080f37f"],
Cell[CellGroupData[{
Cell[2980761, 53602, 502, 12, 48, "Input",ExpressionUUID->"f1331749-60d0-4953-aaac-96be148a45e1"],
Cell[2981266, 53616, 1757, 45, 248, "Output",ExpressionUUID->"f6a26b14-f58e-4a56-8a9d-38b9ea7fc1b3"]
}, Open  ]],
Cell[2983038, 53664, 417, 8, 58, "Text",ExpressionUUID->"8b99ed2f-f074-414b-820f-15de41eaa18d"],
Cell[2983458, 53674, 1190, 29, 121, "Input",ExpressionUUID->"95499a59-12a1-4a1f-83ae-4c0ae3d7de45",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2984673, 53707, 273, 5, 28, "Input",ExpressionUUID->"8c531bf2-d014-4e46-8b4f-2048ff2f095f"],
Cell[2984949, 53714, 1589, 31, 90, "Output",ExpressionUUID->"7b15e90b-d719-4314-9974-66955410ef98"]
}, Open  ]],
Cell[2986553, 53748, 534, 12, 35, "Text",ExpressionUUID->"d462593b-e193-4439-9a1a-221dd6f82cc8"],
Cell[CellGroupData[{
Cell[2987112, 53764, 455, 10, 67, "Input",ExpressionUUID->"67a4f1cf-730b-48a5-a814-3906d8df32d9"],
Cell[2987570, 53776, 19234, 472, 239, "Output",ExpressionUUID->"69832c50-1bc9-45cb-86ce-d3bea61d0231"]
}, Open  ]],
Cell[3006819, 54251, 412, 8, 58, "Text",ExpressionUUID->"1180aa49-256f-4d71-b096-db62abb2ad6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3007268, 54264, 229, 4, 54, "Subsection",ExpressionUUID->"a570b489-af8f-4efe-99eb-94816fafec58"],
Cell[3007500, 54270, 769, 13, 81, "Text",ExpressionUUID->"ddd33171-90d8-4647-a45c-e2853df9921f"],
Cell[3008272, 54285, 436, 7, 58, "Text",ExpressionUUID->"1050dfd8-eebf-4b79-93d0-a51283785b0a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3008757, 54298, 271, 5, 67, "Section",ExpressionUUID->"3ae17e3c-b934-45dc-a795-bc484c1baaf3",
 CellTags->"penalizedRegressionHref"],
Cell[3009031, 54305, 950, 15, 81, "Text",ExpressionUUID->"85f57e61-c5df-4dc9-bd35-2d0098f2d256"],
Cell[3009984, 54322, 247, 6, 32, "Item",ExpressionUUID->"e5c9416e-b248-4e7e-aa5c-38f2e7be30b1"],
Cell[3010234, 54330, 202, 3, 32, "Item",ExpressionUUID->"7c71521c-1cde-4786-9c25-9dc705f13cc3"],
Cell[3010439, 54335, 421, 8, 35, "Text",ExpressionUUID->"89456c1e-69b4-40fc-8d1e-e3ab3bf8118b"],
Cell[3010863, 54345, 253, 8, 32, "ItemNumbered",ExpressionUUID->"7e8c22ff-7151-4050-99ce-a55979f1a0fb"],
Cell[3011119, 54355, 304, 9, 32, "ItemNumbered",ExpressionUUID->"0437c23b-63aa-4583-95b8-e46a4ae0f83c"],
Cell[CellGroupData[{
Cell[3011448, 54368, 164, 3, 54, "Subsection",ExpressionUUID->"8da5c946-9317-44bd-b320-fc9dbde82a1e"],
Cell[3011615, 54373, 600, 11, 58, "Text",ExpressionUUID->"c7455113-db23-45cb-b00c-02526d881216"],
Cell[3012218, 54386, 745, 16, 63, "Text",ExpressionUUID->"9af25c6c-76a8-4fd4-bc7a-7ba3c576c95e"],
Cell[3012966, 54404, 449, 8, 58, "Text",ExpressionUUID->"9251f432-e3b8-4d60-9074-b75a7863dd11"],
Cell[3013418, 54414, 274, 6, 32, "Item",ExpressionUUID->"07caca55-917f-43a5-8d46-208a84cd212e"],
Cell[3013695, 54422, 190, 3, 32, "Item",ExpressionUUID->"8c22a711-f676-49da-be89-e4ebd0ed7059"],
Cell[3013888, 54427, 752, 14, 150, "Text",ExpressionUUID->"177d1001-a6f1-4a74-978b-4d09ea8f8cb9"],
Cell[3014643, 54443, 234, 5, 28, "Input",ExpressionUUID->"0d59e6eb-ec06-4c27-9ff0-9b9cec1f5e63"],
Cell[CellGroupData[{
Cell[3014902, 54452, 1093, 23, 86, "Input",ExpressionUUID->"0b9d20a1-238e-4edb-9cfe-c518a2d7ee39"],
Cell[3015998, 54477, 700, 13, 32, "Output",ExpressionUUID->"6da7bb0c-0801-4508-8249-2e71d37c0cd3"]
}, Open  ]],
Cell[3016713, 54493, 829, 15, 127, "Text",ExpressionUUID->"ec54f288-8c24-4eec-894f-22a3a10b1357"],
Cell[CellGroupData[{
Cell[3017567, 54512, 998, 21, 86, "Input",ExpressionUUID->"6ffeb883-d870-494f-9881-cf0b9e6a7336"],
Cell[3018568, 54535, 749, 15, 32, "Output",ExpressionUUID->"70e46dd6-add1-48dc-ad10-d6481c5f2ba7"]
}, Open  ]],
Cell[3019332, 54553, 397, 10, 35, "Text",ExpressionUUID->"bce5dbe4-190a-42de-88e4-8081c6e514b2"],
Cell[CellGroupData[{
Cell[3019754, 54567, 297, 6, 28, "Input",ExpressionUUID->"3e399ee7-0413-4eb1-a08d-0535ce81dba0"],
Cell[3020054, 54575, 18636, 430, 311, "Output",ExpressionUUID->"7536e5ee-4eaf-4cf4-959d-1805bb773fe1"]
}, Open  ]],
Cell[3038705, 55008, 787, 15, 127, "Text",ExpressionUUID->"4440334d-f836-43eb-8ea5-8a31a6b5a742"],
Cell[3039495, 55025, 201, 3, 32, "ItemNumbered",ExpressionUUID->"157ff4bc-c8f7-49e7-b01e-bc034592e9b0"],
Cell[3039699, 55030, 229, 4, 32, "ItemNumbered",ExpressionUUID->"f55e31af-8506-4246-bf07-e24a6f05dd12"],
Cell[3039931, 55036, 374, 6, 58, "Text",ExpressionUUID->"a2aafd03-9394-46ad-89ee-bbbc6e211284"],
Cell[3040308, 55044, 336, 6, 58, "Text",ExpressionUUID->"3563ad0f-2aa5-40f0-8e4a-62b26cd02755"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3040681, 55055, 219, 4, 54, "Subsection",ExpressionUUID->"681aaeba-0c02-4d9d-9c25-bc3d9b4efc5c"],
Cell[3040903, 55061, 756, 13, 58, "Text",ExpressionUUID->"ff3abbce-eb39-4fb9-9e0c-2aef7558d922"],
Cell[3041662, 55076, 794, 17, 63, "Text",ExpressionUUID->"7869b203-336a-4022-b2eb-40ba25ca48da"],
Cell[3042459, 55095, 376, 7, 35, "Text",ExpressionUUID->"bcaf8d26-bbdc-4867-a5ec-c6b21825d64c"],
Cell[3042838, 55104, 276, 6, 32, "Item",ExpressionUUID->"6c88b74b-9859-4c56-b1c8-2a3680978f1e"],
Cell[3043117, 55112, 194, 3, 32, "Item",ExpressionUUID->"5cfbdad2-5e2a-40bf-b634-062d1ea26290"],
Cell[3043314, 55117, 816, 14, 104, "Text",ExpressionUUID->"4ef18f13-e64d-48c4-89a4-9a2893bd98bc"],
Cell[3044133, 55133, 621, 15, 81, "Text",ExpressionUUID->"3ec5b188-efed-4337-87bd-6c5e38d7a891"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3044803, 55154, 246, 4, 57, "Section",ExpressionUUID->"e2d13518-2cb1-4b99-9ddd-3b37b7ca67ee"],
Cell[3045052, 55160, 503, 9, 58, "Text",ExpressionUUID->"f5be6bfa-3b09-473e-8b5e-fa1316045f46"],
Cell[CellGroupData[{
Cell[3045580, 55173, 215, 4, 28, "Input",ExpressionUUID->"b77b2d44-6941-4187-a69b-0c6f81136a47"],
Cell[3045798, 55179, 45878, 854, 171, "Output",ExpressionUUID->"b13be131-24d3-42b1-9691-1fb8595db73a"]
}, Open  ]],
Cell[3091691, 56036, 817, 16, 150, "Text",ExpressionUUID->"a794447e-f796-488e-8bde-c145c3711217"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3092545, 56057, 197, 4, 67, "Section",ExpressionUUID->"171a1058-a0a8-4970-93b1-dde6c6d99fb1",
 CellTags->"featureImportanceHref"],
Cell[3092745, 56063, 916, 14, 104, "Text",ExpressionUUID->"d174c8f4-735f-488b-9b98-9b826d96f6da"],
Cell[CellGroupData[{
Cell[3093686, 56081, 187, 3, 54, "Subsection",ExpressionUUID->"bef9533e-aacd-4542-ba5f-14b3c92eb70c"],
Cell[3093876, 56086, 663, 11, 81, "Text",ExpressionUUID->"3c428353-41fb-47e6-85f1-dcb349728fc9"],
Cell[3094542, 56099, 1516, 37, 121, "Input",ExpressionUUID->"494a4b12-e12e-466b-8924-2867d8fc0ae8",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3096083, 56140, 387, 9, 28, "Input",ExpressionUUID->"270a789c-608a-4bb9-8a5b-ed4f1cec0e4e"],
Cell[3096473, 56151, 1617, 32, 90, "Output",ExpressionUUID->"d8508ad4-0988-47ea-be1b-e4ba708748c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3098127, 56188, 407, 8, 48, "Input",ExpressionUUID->"18a8083b-ecc2-418f-a6ce-43866e00d4a1"],
Cell[3098537, 56198, 19154, 469, 241, "Output",ExpressionUUID->"76208859-7876-4ee5-b9ca-d9bf40e4d1ed"]
}, Open  ]],
Cell[3117706, 56670, 268, 6, 35, "Text",ExpressionUUID->"ed3f1bf0-48c4-4721-89c9-5b6e494e6c21"],
Cell[CellGroupData[{
Cell[3117999, 56680, 686, 12, 48, "Input",ExpressionUUID->"162be6cb-1a78-4bbd-9cc1-44f15d34e7fe"],
Cell[3118688, 56694, 19140, 467, 241, "Output",ExpressionUUID->"e740ba2f-6d99-458b-bd53-924e98055ae0"]
}, Open  ]],
Cell[3137843, 57164, 1159, 19, 219, "Text",ExpressionUUID->"2115cdd5-6dd4-4dcd-8da7-266c5dcfc6fd"],
Cell[3139005, 57185, 295, 5, 58, "Text",ExpressionUUID->"7aaeb365-93e1-461c-8175-692d5ee75c2d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3139349, 57196, 183, 3, 67, "Section",ExpressionUUID->"63834e50-8412-4017-bb9e-27c3a68749bc"],
Cell[3139535, 57201, 862, 16, 173, "Text",ExpressionUUID->"1b1d8bdb-314e-4c9e-beab-5f3edd51b95e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3140446, 57223, 155, 3, 98, "Title",ExpressionUUID->"e8c7acfa-d0ca-4ea1-ba98-ca5db73b1671"],
Cell[CellGroupData[{
Cell[3140626, 57230, 215, 4, 67, "Section",ExpressionUUID->"423bcf50-2e7d-477a-b016-2928078e0c4d"],
Cell[3140844, 57236, 720, 12, 81, "Text",ExpressionUUID->"7325ecf6-3e40-4a70-a919-b5f839f61ffd"],
Cell[3141567, 57250, 236, 6, 32, "Item",ExpressionUUID->"2e7535a4-e952-40d1-8b6c-7a31090cf17f"],
Cell[3141806, 57258, 191, 3, 32, "Item",ExpressionUUID->"a878a7ac-b29c-4130-bff1-90681d06d55e"],
Cell[3142000, 57263, 365, 7, 58, "Text",ExpressionUUID->"3210526b-0434-4ba1-922b-c317b00aca72"],
Cell[3142368, 57272, 886, 16, 58, "Text",ExpressionUUID->"ec19ce3a-530d-40d8-a359-7ac836738ee5"],
Cell[3143257, 57290, 794, 18, 48, "Input",ExpressionUUID->"b9a048ba-e0e1-492b-a090-e042373961bd"],
Cell[3144054, 57310, 516, 9, 81, "Text",ExpressionUUID->"38b74fe4-6b65-41af-b465-f553132dca8c"],
Cell[3144573, 57321, 329, 6, 35, "Text",ExpressionUUID->"44bda71e-c72b-4b1a-b8a6-519755fd4a33"],
Cell[3144905, 57329, 703, 12, 58, "Text",ExpressionUUID->"cc18223a-86dc-4e33-b5fd-b7e1633b43a6"],
Cell[3145611, 57343, 460, 7, 58, "Text",ExpressionUUID->"73e1fbfc-f210-41de-b613-f22cd3f7b558"],
Cell[3146074, 57352, 222, 4, 35, "Text",ExpressionUUID->"9dff8c53-2f7b-4982-878b-78899325e566"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3146333, 57361, 185, 3, 67, "Section",ExpressionUUID->"6a5faae0-f57e-4b21-a9f9-d04ff224d6ce",
 CellTags->"treeModelsHref"],
Cell[3146521, 57366, 466, 9, 104, "Text",ExpressionUUID->"0addd1dc-8122-4b3d-84e3-7fd8d0bbcf5c"],
Cell[3146990, 57377, 167, 3, 32, "ItemNumbered",ExpressionUUID->"6f7692d9-c8d9-4415-a416-65c497a36893"],
Cell[3147160, 57382, 165, 3, 32, "ItemNumbered",ExpressionUUID->"ae7b1519-28d8-4801-b9a3-2fa25d31462e"],
Cell[CellGroupData[{
Cell[3147350, 57389, 174, 3, 54, "Subsection",ExpressionUUID->"393c525e-17f6-4fb7-9277-fbe018893303"],
Cell[3147527, 57394, 809, 13, 58, "Text",ExpressionUUID->"850445a9-ef68-4028-90e5-b7b647d7d458"],
Cell[3148339, 57409, 227, 5, 32, "Item",ExpressionUUID->"64c7f920-7172-46f5-ab7a-c2cb04ad2e99"],
Cell[3148569, 57416, 194, 3, 32, "Item",ExpressionUUID->"842f9036-2368-42d4-a7bc-bfdc938f0f92"],
Cell[3148766, 57421, 395, 8, 58, "Text",ExpressionUUID->"471afb6b-8392-49ea-b6b0-2cddd1da9b9b"],
Cell[CellGroupData[{
Cell[3149186, 57433, 420, 9, 28, "Input",ExpressionUUID->"e4051ce5-b29a-4cf4-ad00-ea7bf86e7da3"],
Cell[3149609, 57444, 52377, 961, 64, "Output",ExpressionUUID->"323062ad-b775-4eec-ae5b-2b8e1add2d9c"]
}, Open  ]],
Cell[3202001, 58408, 273, 5, 35, "Text",ExpressionUUID->"3163f39c-4971-4cb8-87bb-15179432382a"],
Cell[CellGroupData[{
Cell[3202299, 58417, 308, 6, 28, "Input",ExpressionUUID->"42342caf-6d39-415c-ad50-b01b82244be5"],
Cell[3202610, 58425, 98829, 1848, 513, "Output",ExpressionUUID->"f9d87af1-6ce0-4bd5-8583-14c64b1a9307"]
}, Open  ]],
Cell[3301454, 60276, 283, 7, 35, "Text",ExpressionUUID->"016bf3b7-aa98-450a-8669-5545c5fb83d9"],
Cell[CellGroupData[{
Cell[3301762, 60287, 312, 6, 28, "Input",ExpressionUUID->"0b3c926c-4f46-4965-84aa-e2c55577e97e"],
Cell[3302077, 60295, 70024, 1317, 517, "Output",ExpressionUUID->"2ef8940c-bd29-422c-917c-756be3452c64"]
}, Open  ]],
Cell[3372116, 61615, 322, 9, 35, "Text",ExpressionUUID->"773ff85b-8018-4ad7-9cb8-caece0c127c0"],
Cell[3372441, 61626, 274, 5, 35, "Text",ExpressionUUID->"a0a7682d-749e-44ee-903e-bd67dbaa0ffa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3372752, 61636, 225, 4, 54, "Subsection",ExpressionUUID->"2c0b70d5-aae2-4e09-879a-37587e647e03"],
Cell[3372980, 61642, 803, 13, 81, "Text",ExpressionUUID->"75cca9ba-06b9-48b2-9dea-03b08fbf6f59"],
Cell[3373786, 61657, 256, 6, 32, "Item",ExpressionUUID->"14a2d590-1745-44f9-a38c-60f805693d59"],
Cell[3374045, 61665, 189, 3, 32, "Item",ExpressionUUID->"0dedf8fa-a6c4-488e-8121-0654e1ebc60a"],
Cell[3374237, 61670, 737, 15, 58, "Text",ExpressionUUID->"09ddaa22-f89e-4b36-84a5-400685228a7b"],
Cell[3374977, 61687, 351, 6, 58, "Text",ExpressionUUID->"86c4612f-d718-41d1-827d-c25c02c05ff7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3375365, 61698, 242, 4, 64, "Subsection",ExpressionUUID->"cc614a22-1692-4853-9464-d4a1340bfb65"],
Cell[3375610, 61704, 1091, 18, 173, "Text",ExpressionUUID->"3eb140ed-ed95-40a6-99d7-fdb9f53966a1"],
Cell[3376704, 61724, 500, 9, 53, "Item",ExpressionUUID->"7887d003-e413-4c72-81c2-2ed878f4c8f0"],
Cell[3377207, 61735, 293, 4, 32, "Item",ExpressionUUID->"066e0d5a-ae2a-4523-bb46-2251b94cb802"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3377537, 61744, 194, 3, 54, "Subsection",ExpressionUUID->"424c011d-4690-4dcb-a3c3-21156d720794"],
Cell[3377734, 61749, 511, 9, 58, "Text",ExpressionUUID->"047cdf4e-1be5-403a-be4c-d9161d85fdd8"],
Cell[CellGroupData[{
Cell[3378270, 61762, 967, 20, 48, "Input",ExpressionUUID->"635c5a92-2f4f-4c80-bce7-369505464328"],
Cell[3379240, 61784, 114210, 1872, 240, 57376, 939, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"7f911512-ad7c-417c-a19a-09796aef31ca"]
}, Open  ]],
Cell[3493465, 63659, 1218, 20, 196, "Text",ExpressionUUID->"9b3f1d6b-9d24-4982-8c98-18d873ad7438"],
Cell[3494686, 63681, 774, 19, 83, "Input",ExpressionUUID->"282601d6-1e11-4693-8181-d53b2fbc17d9",
 InitializationCell->True],
Cell[3495463, 63702, 380, 7, 35, "Text",ExpressionUUID->"896349cc-e1a6-4fce-bca5-1ca6f8e7094b"],
Cell[CellGroupData[{
Cell[3495868, 63713, 647, 14, 48, "Input",ExpressionUUID->"05c9cec2-16ff-42a9-a4d9-9b7fd2283a21"],
Cell[3496518, 63729, 1406, 27, 90, "Output",ExpressionUUID->"ce274530-1abb-4cda-8242-e5e6f04145eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3497961, 63761, 660, 14, 67, "Input",ExpressionUUID->"de0e449b-89b7-426b-9324-d1d9a1a58268"],
Cell[3498624, 63777, 17264, 443, 188, "Output",ExpressionUUID->"c6c6eab3-32e9-4aa3-b936-9d0557177536"],
Cell[3515891, 64222, 17271, 446, 188, "Output",ExpressionUUID->"4b523937-33fa-4eb7-b54f-d39e7994e4bc"],
Cell[3533165, 64670, 17201, 445, 188, "Output",ExpressionUUID->"f2a74887-9cc2-430c-87cf-9181dd38e1b4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3550415, 65121, 245, 4, 54, "Subsection",ExpressionUUID->"4cf9ade7-daec-411a-864c-c20e6a9a5386"],
Cell[3550663, 65127, 367, 8, 58, "Text",ExpressionUUID->"e8869b6d-bf56-4a4f-8813-7a7b430cd254"],
Cell[3551033, 65137, 304, 5, 58, "Text",ExpressionUUID->"0f59491f-be9c-470d-ab69-9e969cc9f904"],
Cell[3551340, 65144, 241, 6, 35, "Text",ExpressionUUID->"a444e8bc-580d-4d3a-8dfb-2e47c882a26d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3551642, 65157, 153, 3, 98, "Title",ExpressionUUID->"5cfc28c8-2ab8-4680-82b7-4e0edec359f7"],
Cell[3551798, 65162, 396, 8, 58, "Text",ExpressionUUID->"ef7c50dd-8223-4d27-88de-9bbd577342c6"]
}, Open  ]]
}
]
*)

